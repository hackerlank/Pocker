// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef PROTOBUF_msg_2eproto__INCLUDED
#define PROTOBUF_msg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace msg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_2eproto();
void protobuf_AssignDesc_msg_2eproto();
void protobuf_ShutdownFile_msg_2eproto();

class ClientRequestHead;
class ClientResponseHead;
class ServerMessageHead;
class Response;
class RoomResponse;
class ClientInfo;
class UserLoginInfo;
class UserDetailInfo;
class Processor_1_VersionCheck;
class Processor_10_LoginCoreServer;
class Processor_10_LoginCore;
class Processor_11_CONSOLEHEARTJUMP;
class Processor_30_UploadFile;
class Processor_31_DownloadFile_UP;
class Processor_31_DownloadFile_DOWN;
class Processor_97_SendVerificationByUserID;
class Processor_98_ResetPassword;
class Processor_99_Login_UP;
class Processor_99_Login_DOWN;
class Processor_100_LoginResource;
class Processor_100_LoginResource_Down;
class RoomInfomation;
class Property;
class IntValue;
class EnumValue;
class EnumItem;
class Processor_103_FeedBack;
class Processor_104_Register;
class Processor_105_Device;
class Processor_106_ReceiveIOSPayReceipt;
class Processor_106_ReceiveIOSPayReceipt_Down;
class GoodInfo;
class Processor_107_GetGoodsInfo;
class Processor_108_BuyGood;
class Processor_109_AndroidPay;
class Processor_109_AndroidPayDown;
class FeedBack;
class UserGameSetting;
class UserGameSettings;
class Processor_111_GetUserSetting;
class Processor_112_ChangeUserSetting;
class Processor_113_GetUserPermission_UP;
class Processor_113_GetUserPermission_DOWN;
class Processor_114_ChangePermission;
class GroupPermission;
class Processor_115_GetGroupSetting_UP;
class Processor_115_GetGroupSetting_DOWN;
class Processor_116_ChangeGroupSetting;
class Processor_118_SendVerification;
class Processor_119_BindPhone;
class GroupSetting;
class FriendInfo;
class Processor_120_GetFriendList;
class Processor_121_SearchUser_UP;
class Processor_121_SearchUser_DOWN;
class Processor_122_SendRequest;
class Processor_123_ReceiveRequestList;
class Invitation;
class Request;
class Processor_124_DealRequest;
class Processor_124_DealRequest_DOWN;
class Processor_125_DeleteFriend;
class Processor_126_Set_MomentBlock;
class Processor_127_SearchFriendByPhoneNumber_UP;
class FriendByPhoneNumber;
class Processor_127_SearchFriendByPhoneNumber_DOWN;
class Processor_128_GetMomentBlockUsers_DOWN;
class Processor_130_Send_Diamond;
class ChatMessage;
class MessageInfo;
class TextMessageInfo;
class PicMessageInfo;
class VoiceMessageInfo;
class CreateRoomMessageInfo;
class GroupNoticeMessageInfo;
class InviteIntoGroup;
class OutGroup;
class IntoGroup;
class GroupInfo;
class Processor_140_CreateGroup;
class Processor_140_CreateGroup_Down;
class Processor_141_EditGroup;
class Processor_142_SearchGroup_UP;
class Processor_142_SearchGroup_DOWN;
class Processor_144_KickUserFromGroup;
class Processor_145_GetGroupInfo_UP;
class Processor_145_GetGroupInfo_DOWN;
class Processor_146_GetGroupDetailInfo_UP;
class GroupUserInfo;
class GroupManageSetting;
class Processor_146_GetGroupDetailInfo_DOWN;
class Processor_147_SetGroupManageSetting;
class Processor_148_SetGroupAdmin;
class RoomTypeInfo;
class RoomInfo;
class Processor_150_GetRoomInfo_UP;
class Processor_150_GetRoomInfo_DOWN;
class CreateRoomInfo;
class BlindLevel;
class TournamentLevel;
class PrizeLevel;
class TournamentPrize;
class TournamentInfo;
class RoomProp;
class Processor_151_GetRoomInfomation;
class Processor_152_CreateRoom;
class Processor_152_CreateRoom_down;
class Processor_154_CancelTournament;
class Processor_160_SendChatMessage;
class Processor_160_SendChatMessage_Down;
class Processor_161_ReceiveChatMessage;
class Processor_161_ReceiveChatMessage_UP;
class Processor_170_GetHistoryScore_Up;
class HistoryScore;
class Processor_170_GetHistoryScore_Down;
class Processor_171_GetGroupUserRank_UP;
class Processor_171_GetGroupUserRank_DOWN;
class Processor_181_JoinTournament;
class Processor_182_TournamentStart;
class Processor_190_ReceiveMessage;
class Processor_190_ReceiveMessage_UP;
class Processor_191_NotifyChange;
class Moment;
class CommentInfos;
class MomentInfo;
class NormalMomentInfo;
class Processor_200_PublishMoment;
class Processor_201_GetMoment_UP;
class Processor_201_GetMoment_DOWN;
class Processor_202_DeleteMoment;
class CommentInfo;
class Processor_203_PublishComment;
class Processor_204_GetComment_UP;
class Processor_204_GetComment_DOWN;
class Processor_205_DeleteMoment;
class Processor_400_LoginRoom_UP;
class Processor_400_LoginRoom_DOWN;
class Processor_410_EnterRoom;
class Processor_410_EnterRoom_DOWN;
class Processor_411_SendSeatInfo;
class Processor_411_SendSeatInfo_Down;
class PlayerSitStatus;
class Processor_412_ReceiveSeatInfo;
class Processor_413_ReceiveGameStart;
class Processor_414_ReceiveGameEnd;
class Processor_415_DisableAutoAction;
class ActionRequest;
class Processor_417_ReceiveOtherPlayerAction;
class Processor_420_PokerGetScore_UP;
class PlayerScore;
class PlayerScores;
class Processor_420_PokerGetScore_DOWN;
class Processor_430_SendGameVoice;
class Processor_431_ReceiveGameVoice;
class Processor_440_SetGameStatus;
class Processor_441_KickPlayer;
class Processor_442_ReceiveGameStatus;
class Processor_490_ReceiveRoomClose;
class Processor_491_ReceiveRoomMessage;
class Processor_495_ReceiveRequest;
class Processor_496_ReplyRequest;
class CommonRoomInfo;
class CommonPlayerInfo;
class Processor_500_PokerRefreshAll;
class PokerPlayerSetting;
class PokerPlayerInfo;
class TableInfo;
class TableAndUserUpdate;
class PokerActionRequest;
class Processor_501_PokerRequestAction;
class Processor_502_PokerSendAction;
class Processor_503_PokerReceivePropUpdate;
class Processor_510_PokerAddChips;
class Processor_511_PokerReceiveNeedChip;
class Processor_512_PokerRequestChoice;
class Processor_513_PokerReplyChoice;
class Processor_514_PokerReceiveTableNote;
class Processor_515_PokerSendSetting;
class Processor_516_PokerReceiveSettingChange;
class Processor_517_PokerSendShowCard;
class PlayerWin;
class PlayerHandResult;
class Pot;
class HandResultInfo;
class Processor_520_PokerReceiveHandResult;
class Processor_530_PokerGetTourmentStatus_UP;
class Processor_530_PokerGetTourmentStatus_DOWN;
class TourmentTableInfo;
class Processor_531_PokerTourmentChangeTable;
class Processor_532_PokerTournamentRequestAddon;
class Processor_533_PokerTournamentAddon;
class OFCPlayerInfo;
class OFCPlayerSetting;
class OFCPropUpdate;
class OFCResult;
class Processor_600_OFCRefreshAll;
class Processor_601_OFCReceivePropUpdate;
class OFCPlayerCard;
class Processor_602_OFCSendPlayerCard;
class UserCompare;
class OFCPlayerHandResult;
class Processor_610_OFCReceiveResult;
class Processor_615_OFCSendSetting;
class Processor_616_OFCReceiveSettingChange;
class MahjongPlayerInfo;
class MahjongFu;
class MahjongScoreChange;
class MahjongPlayerSetting;
class MahjongPropUpdate;
class MahjongTing;
class MahjongPossibleTing;
class MahjongActionRequest;
class Processor_700_MahjongRefreshAll;
class Processor_701_MahjongReceivePropUpdate;
class Processor_702_MahjongSendPlayerChoice;
class MahjongAction;
class MahjongTestAllWinCardAndType;
class MahjongWinCardAndType;
class Processor_703_MahjongReceivePlayerAction;
class Processor_715_MahjongSendSetting;
class Processor_716_MahjongReceiveSettingChange;
class Processor_300_PokerGetHandHistory_UP;
class PokerStep;
class PokerBlinds;
class PokerBlind;
class PokerPlayerActionInfo;
class OFCStep;
class OFCPlayerActionInfo;
class MahjongStep;
class ReplayStep;
class ReplaySteps;
class ReplayPlayers;
class ReplayPlayer;
class HandBaseInfo;
class Processor_300_PokerGetHandHistory_DOWN;
class Processor_1000_RegisterServer_OtherToCore;
class Processor_1000_RegisterServer_CoreToOther;
class ServerInfo;
class ServerInfos;
class Processor_HTMLRegister;
class Processor_HTMLRegisterEnterRoom;
class Processor_1003_ChangeUserInfo_ResToCore;
class Processor_1004_ChangeUserInfo_CoreToOther;
class Processor_1005_OnlineInfo_OtherToCore;
class ServerRoomInfo;
class Processor_1006_RoomInfo;
class Processor_1009_CreateRoom_ResToCore;
class Processor_1010_CreateRoom_CoreToRoom;
class Processor_1011_ChangeServerProp;
class Parameter;
class Processor_1012_WXPayMsg;
class Processor_1100_ShutDown_ConsoleToCore;
class Processor_1101_ShutDown_CoreToOther;
class Processor_1105_ServerInformation_CoreToConsole;
class Processor_1107_SERVER_RESET_TOURMENT_CREDIT;
class Processor_1108_SEARCH_CREDIT_RANK_UP;
class Processor_1108_SEARCH_CREDIT_RANK_DOWN;
class Processor_1109_PUBLISH_SYS_MESSAGE;
class Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE;
class UserTourCreditInfo;
class ChatMessages;
class InvitationsForSave;
class ChatMessageForSave;
class OldChatMessageForSave;
class GameRecord;
class GameRecordForSave;
class CreateRoomInfoForSave;
class ClientUserSetting;

enum Language {
  ZHCN = 1,
  ENUS = 2,
  ZHTW = 3
};
bool Language_IsValid(int value);
const Language Language_MIN = ZHCN;
const Language Language_MAX = ZHTW;
const int Language_ARRAYSIZE = Language_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* Language_descriptor();
inline const ::std::string& Language_Name(Language value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    Language_descriptor(), value);
}
inline bool Language_Parse(
    const ::std::string& name, Language* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<Language>(
    Language_descriptor(), name, value);
}
enum Platform {
  IOS = 1,
  ANDORID = 2
};
bool Platform_IsValid(int value);
const Platform Platform_MIN = IOS;
const Platform Platform_MAX = ANDORID;
const int Platform_ARRAYSIZE = Platform_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* Platform_descriptor();
inline const ::std::string& Platform_Name(Platform value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    Platform_descriptor(), value);
}
inline bool Platform_Parse(
    const ::std::string& name, Platform* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<Platform>(
    Platform_descriptor(), name, value);
}
enum Game_Tool_Type {
  THROW_EGG = 1,
  FLOWER = 2,
  GIFT = 3,
  KISS = 4,
  PRAISE = 5,
  CATCH_THE_CHICKEN = 6,
  DIAMOND_RING = 7
};
bool Game_Tool_Type_IsValid(int value);
const Game_Tool_Type Game_Tool_Type_MIN = THROW_EGG;
const Game_Tool_Type Game_Tool_Type_MAX = DIAMOND_RING;
const int Game_Tool_Type_ARRAYSIZE = Game_Tool_Type_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* Game_Tool_Type_descriptor();
inline const ::std::string& Game_Tool_Type_Name(Game_Tool_Type value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    Game_Tool_Type_descriptor(), value);
}
inline bool Game_Tool_Type_Parse(
    const ::std::string& name, Game_Tool_Type* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<Game_Tool_Type>(
    Game_Tool_Type_descriptor(), name, value);
}
enum Status {
  SUCCESS = 0,
  FAILED = 1
};
bool Status_IsValid(int value);
const Status Status_MIN = SUCCESS;
const Status Status_MAX = FAILED;
const int Status_ARRAYSIZE = Status_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* Status_descriptor();
inline const ::std::string& Status_Name(Status value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    Status_descriptor(), value);
}
inline bool Status_Parse(
    const ::std::string& name, Status* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
enum Sex {
  MALE = 0,
  FEMALE = 1
};
bool Sex_IsValid(int value);
const Sex Sex_MIN = MALE;
const Sex Sex_MAX = FEMALE;
const int Sex_ARRAYSIZE = Sex_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* Sex_descriptor();
inline const ::std::string& Sex_Name(Sex value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    Sex_descriptor(), value);
}
inline bool Sex_Parse(
    const ::std::string& name, Sex* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<Sex>(
    Sex_descriptor(), name, value);
}
enum VersionStatus {
  NoNewVersion = 0,
  HasNewVersion = 1,
  NeedUpdate = 2
};
bool VersionStatus_IsValid(int value);
const VersionStatus VersionStatus_MIN = NoNewVersion;
const VersionStatus VersionStatus_MAX = NeedUpdate;
const int VersionStatus_ARRAYSIZE = VersionStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* VersionStatus_descriptor();
inline const ::std::string& VersionStatus_Name(VersionStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    VersionStatus_descriptor(), value);
}
inline bool VersionStatus_Parse(
    const ::std::string& name, VersionStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<VersionStatus>(
    VersionStatus_descriptor(), name, value);
}
enum PropertyType {
  INT = 0,
  BOOL = 1,
  STRING = 2,
  ENUM = 3
};
bool PropertyType_IsValid(int value);
const PropertyType PropertyType_MIN = INT;
const PropertyType PropertyType_MAX = ENUM;
const int PropertyType_ARRAYSIZE = PropertyType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* PropertyType_descriptor();
inline const ::std::string& PropertyType_Name(PropertyType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    PropertyType_descriptor(), value);
}
inline bool PropertyType_Parse(
    const ::std::string& name, PropertyType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<PropertyType>(
    PropertyType_descriptor(), name, value);
}
enum VerificationType {
  VERIFICATIONfAIL = 0,
  VERIFICATIONREPEAT = 1
};
bool VerificationType_IsValid(int value);
const VerificationType VerificationType_MIN = VERIFICATIONfAIL;
const VerificationType VerificationType_MAX = VERIFICATIONREPEAT;
const int VerificationType_ARRAYSIZE = VerificationType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* VerificationType_descriptor();
inline const ::std::string& VerificationType_Name(VerificationType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    VerificationType_descriptor(), value);
}
inline bool VerificationType_Parse(
    const ::std::string& name, VerificationType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<VerificationType>(
    VerificationType_descriptor(), name, value);
}
enum RequestType {
  ADDFRIEND = 1,
  ENTERGROUP = 2,
  INVITETOGROUP = 3
};
bool RequestType_IsValid(int value);
const RequestType RequestType_MIN = ADDFRIEND;
const RequestType RequestType_MAX = INVITETOGROUP;
const int RequestType_ARRAYSIZE = RequestType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* RequestType_descriptor();
inline const ::std::string& RequestType_Name(RequestType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    RequestType_descriptor(), value);
}
inline bool RequestType_Parse(
    const ::std::string& name, RequestType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<RequestType>(
    RequestType_descriptor(), name, value);
}
enum MessageType {
  Text = 1,
  Voice = 2,
  Picture = 3,
  CreateRoom = 4,
  GroupNotice = 5
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = Text;
const MessageType MessageType_MAX = GroupNotice;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
enum MessageStatus {
  Success = 1,
  Sending = 2,
  Failed = 3
};
bool MessageStatus_IsValid(int value);
const MessageStatus MessageStatus_MIN = Success;
const MessageStatus MessageStatus_MAX = Failed;
const int MessageStatus_ARRAYSIZE = MessageStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MessageStatus_descriptor();
inline const ::std::string& MessageStatus_Name(MessageStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MessageStatus_descriptor(), value);
}
inline bool MessageStatus_Parse(
    const ::std::string& name, MessageStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MessageStatus>(
    MessageStatus_descriptor(), name, value);
}
enum InvitationStatus {
  Accepted = 1,
  Refused = 2,
  Waiting = 3
};
bool InvitationStatus_IsValid(int value);
const InvitationStatus InvitationStatus_MIN = Accepted;
const InvitationStatus InvitationStatus_MAX = Waiting;
const int InvitationStatus_ARRAYSIZE = InvitationStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* InvitationStatus_descriptor();
inline const ::std::string& InvitationStatus_Name(InvitationStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    InvitationStatus_descriptor(), value);
}
inline bool InvitationStatus_Parse(
    const ::std::string& name, InvitationStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<InvitationStatus>(
    InvitationStatus_descriptor(), name, value);
}
enum GroupType {
  NORMALGROUP = 0,
  OFFICALGROUP = 2,
  RECOMMANDGROUP = 3,
  OFFLINETOURGROUP = 4
};
bool GroupType_IsValid(int value);
const GroupType GroupType_MIN = NORMALGROUP;
const GroupType GroupType_MAX = OFFLINETOURGROUP;
const int GroupType_ARRAYSIZE = GroupType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* GroupType_descriptor();
inline const ::std::string& GroupType_Name(GroupType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    GroupType_descriptor(), value);
}
inline bool GroupType_Parse(
    const ::std::string& name, GroupType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<GroupType>(
    GroupType_descriptor(), name, value);
}
enum GroupUserStatus {
  GROUP_OWNER = 1,
  GROUP_ADMIN = 2,
  GROUP_MEMBER = 3,
  NOT_GROUP_MEMBER = 4
};
bool GroupUserStatus_IsValid(int value);
const GroupUserStatus GroupUserStatus_MIN = GROUP_OWNER;
const GroupUserStatus GroupUserStatus_MAX = NOT_GROUP_MEMBER;
const int GroupUserStatus_ARRAYSIZE = GroupUserStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* GroupUserStatus_descriptor();
inline const ::std::string& GroupUserStatus_Name(GroupUserStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    GroupUserStatus_descriptor(), value);
}
inline bool GroupUserStatus_Parse(
    const ::std::string& name, GroupUserStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<GroupUserStatus>(
    GroupUserStatus_descriptor(), name, value);
}
enum GroupSearchType {
  SEARCHMINE = 0,
  SEARCHALL = 1,
  SEARCHBYNAME = 2,
  SEARCHRECOMMAND = 3
};
bool GroupSearchType_IsValid(int value);
const GroupSearchType GroupSearchType_MIN = SEARCHMINE;
const GroupSearchType GroupSearchType_MAX = SEARCHRECOMMAND;
const int GroupSearchType_ARRAYSIZE = GroupSearchType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* GroupSearchType_descriptor();
inline const ::std::string& GroupSearchType_Name(GroupSearchType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    GroupSearchType_descriptor(), value);
}
inline bool GroupSearchType_Parse(
    const ::std::string& name, GroupSearchType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<GroupSearchType>(
    GroupSearchType_descriptor(), name, value);
}
enum RoomType {
  ALL = 0,
  NLHOLDEM = 1,
  OFC3 = 2,
  PLO = 3,
  PLOHILO = 4,
  OFC4 = 5,
  SIChUANMahjong = 6
};
bool RoomType_IsValid(int value);
const RoomType RoomType_MIN = ALL;
const RoomType RoomType_MAX = SIChUANMahjong;
const int RoomType_ARRAYSIZE = RoomType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* RoomType_descriptor();
inline const ::std::string& RoomType_Name(RoomType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    RoomType_descriptor(), value);
}
inline bool RoomType_Parse(
    const ::std::string& name, RoomType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<RoomType>(
    RoomType_descriptor(), name, value);
}
enum MomentDisplayType {
  SQUARE = 1,
  RECOMMEND = 2,
  FRIEND = 3,
  MINE = 4
};
bool MomentDisplayType_IsValid(int value);
const MomentDisplayType MomentDisplayType_MIN = SQUARE;
const MomentDisplayType MomentDisplayType_MAX = MINE;
const int MomentDisplayType_ARRAYSIZE = MomentDisplayType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MomentDisplayType_descriptor();
inline const ::std::string& MomentDisplayType_Name(MomentDisplayType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MomentDisplayType_descriptor(), value);
}
inline bool MomentDisplayType_Parse(
    const ::std::string& name, MomentDisplayType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MomentDisplayType>(
    MomentDisplayType_descriptor(), name, value);
}
enum CommentType {
  COMMENT = 1,
  LIKE = 2,
  RESPOND = 3
};
bool CommentType_IsValid(int value);
const CommentType CommentType_MIN = COMMENT;
const CommentType CommentType_MAX = RESPOND;
const int CommentType_ARRAYSIZE = CommentType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* CommentType_descriptor();
inline const ::std::string& CommentType_Name(CommentType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    CommentType_descriptor(), value);
}
inline bool CommentType_Parse(
    const ::std::string& name, CommentType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<CommentType>(
    CommentType_descriptor(), name, value);
}
enum SittingStatus {
  PLAYING = 0,
  SITOUT = 1,
  OBSERVER = 2,
  LEAVE = 3,
  SITDOWN = 4,
  WANTTOLEAVE = 5
};
bool SittingStatus_IsValid(int value);
const SittingStatus SittingStatus_MIN = PLAYING;
const SittingStatus SittingStatus_MAX = WANTTOLEAVE;
const int SittingStatus_ARRAYSIZE = SittingStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* SittingStatus_descriptor();
inline const ::std::string& SittingStatus_Name(SittingStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    SittingStatus_descriptor(), value);
}
inline bool SittingStatus_Parse(
    const ::std::string& name, SittingStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<SittingStatus>(
    SittingStatus_descriptor(), name, value);
}
enum GameStatus {
  PAUSED = 1,
  RUNNING = 2
};
bool GameStatus_IsValid(int value);
const GameStatus GameStatus_MIN = PAUSED;
const GameStatus GameStatus_MAX = RUNNING;
const int GameStatus_ARRAYSIZE = GameStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* GameStatus_descriptor();
inline const ::std::string& GameStatus_Name(GameStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    GameStatus_descriptor(), value);
}
inline bool GameStatus_Parse(
    const ::std::string& name, GameStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<GameStatus>(
    GameStatus_descriptor(), name, value);
}
enum ActionChoice {
  FOLD_CHECK_BET = 1,
  FOLD_CHECK_ALLIN = 2,
  FOLD_CALL_RAISE = 3,
  FOLD_CALL_ALLIN = 4,
  FOLD_ALLIN = 5,
  FOLD_CALL = 6,
  FOLD_CHECK_RAISE = 7
};
bool ActionChoice_IsValid(int value);
const ActionChoice ActionChoice_MIN = FOLD_CHECK_BET;
const ActionChoice ActionChoice_MAX = FOLD_CHECK_RAISE;
const int ActionChoice_ARRAYSIZE = ActionChoice_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* ActionChoice_descriptor();
inline const ::std::string& ActionChoice_Name(ActionChoice value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    ActionChoice_descriptor(), value);
}
inline bool ActionChoice_Parse(
    const ::std::string& name, ActionChoice* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<ActionChoice>(
    ActionChoice_descriptor(), name, value);
}
enum ActionStatus {
  NORMAL = 0,
  FOLD = 1,
  CHECK = 2,
  BET = 3,
  CALL = 4,
  RAISE = 5,
  ALLIN = 6
};
bool ActionStatus_IsValid(int value);
const ActionStatus ActionStatus_MIN = NORMAL;
const ActionStatus ActionStatus_MAX = ALLIN;
const int ActionStatus_ARRAYSIZE = ActionStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* ActionStatus_descriptor();
inline const ::std::string& ActionStatus_Name(ActionStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    ActionStatus_descriptor(), value);
}
inline bool ActionStatus_Parse(
    const ::std::string& name, ActionStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<ActionStatus>(
    ActionStatus_descriptor(), name, value);
}
enum ChoiceType {
  CloseChoice = 0,
  MuckCard = 1,
  AskRunTwice = 2,
  ReplyRunTwice = 3
};
bool ChoiceType_IsValid(int value);
const ChoiceType ChoiceType_MIN = CloseChoice;
const ChoiceType ChoiceType_MAX = ReplyRunTwice;
const int ChoiceType_ARRAYSIZE = ChoiceType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* ChoiceType_descriptor();
inline const ::std::string& ChoiceType_Name(ChoiceType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    ChoiceType_descriptor(), value);
}
inline bool ChoiceType_Parse(
    const ::std::string& name, ChoiceType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<ChoiceType>(
    ChoiceType_descriptor(), name, value);
}
enum TournamentStatus {
  TOURNAMENT_NORMAL = 1,
  TOURNAMENT_RESTING = 2,
  TOURNAMENT_WAITINGTOSTART = 3
};
bool TournamentStatus_IsValid(int value);
const TournamentStatus TournamentStatus_MIN = TOURNAMENT_NORMAL;
const TournamentStatus TournamentStatus_MAX = TOURNAMENT_WAITINGTOSTART;
const int TournamentStatus_ARRAYSIZE = TournamentStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* TournamentStatus_descriptor();
inline const ::std::string& TournamentStatus_Name(TournamentStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    TournamentStatus_descriptor(), value);
}
inline bool TournamentStatus_Parse(
    const ::std::string& name, TournamentStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<TournamentStatus>(
    TournamentStatus_descriptor(), name, value);
}
enum OFCRule {
  OFCRuleNone = 1,
  OFCRuleBloody = 2,
  OFCRuleBloodyRefantasy = 3
};
bool OFCRule_IsValid(int value);
const OFCRule OFCRule_MIN = OFCRuleNone;
const OFCRule OFCRule_MAX = OFCRuleBloodyRefantasy;
const int OFCRule_ARRAYSIZE = OFCRule_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* OFCRule_descriptor();
inline const ::std::string& OFCRule_Name(OFCRule value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    OFCRule_descriptor(), value);
}
inline bool OFCRule_Parse(
    const ::std::string& name, OFCRule* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<OFCRule>(
    OFCRule_descriptor(), name, value);
}
enum OFCCardType {
  HIGH_CARDS = 0,
  ONE_PAIR = 1,
  TWO_PAIRS = 2,
  THREE_OF_A_KIND = 3,
  STRAIGHT = 4,
  FLUSH = 5,
  FULL_HOUSE = 6,
  FOUR_OF_A_KIND = 7,
  STRAIGHT_FLUSH = 8,
  ROYAL_STRAIGHT_FLUSH = 9,
  TYPE_NORMAL = 10,
  TYPE_INVALID = 11,
  TYPE_FOLD = 12,
  NO_TYPE = 13
};
bool OFCCardType_IsValid(int value);
const OFCCardType OFCCardType_MIN = HIGH_CARDS;
const OFCCardType OFCCardType_MAX = NO_TYPE;
const int OFCCardType_ARRAYSIZE = OFCCardType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* OFCCardType_descriptor();
inline const ::std::string& OFCCardType_Name(OFCCardType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    OFCCardType_descriptor(), value);
}
inline bool OFCCardType_Parse(
    const ::std::string& name, OFCCardType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<OFCCardType>(
    OFCCardType_descriptor(), name, value);
}
enum OFCActionStatus {
  WAITING = 0,
  CHOOSING = 1,
  FANTASY = 2
};
bool OFCActionStatus_IsValid(int value);
const OFCActionStatus OFCActionStatus_MIN = WAITING;
const OFCActionStatus OFCActionStatus_MAX = FANTASY;
const int OFCActionStatus_ARRAYSIZE = OFCActionStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* OFCActionStatus_descriptor();
inline const ::std::string& OFCActionStatus_Name(OFCActionStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    OFCActionStatus_descriptor(), value);
}
inline bool OFCActionStatus_Parse(
    const ::std::string& name, OFCActionStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<OFCActionStatus>(
    OFCActionStatus_descriptor(), name, value);
}
enum OFCCardLocation {
  DISCARD = 0,
  FIRST = 1,
  MIDDLE = 2,
  LAST = 3
};
bool OFCCardLocation_IsValid(int value);
const OFCCardLocation OFCCardLocation_MIN = DISCARD;
const OFCCardLocation OFCCardLocation_MAX = LAST;
const int OFCCardLocation_ARRAYSIZE = OFCCardLocation_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* OFCCardLocation_descriptor();
inline const ::std::string& OFCCardLocation_Name(OFCCardLocation value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    OFCCardLocation_descriptor(), value);
}
inline bool OFCCardLocation_Parse(
    const ::std::string& name, OFCCardLocation* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<OFCCardLocation>(
    OFCCardLocation_descriptor(), name, value);
}
enum MahjongFuType {
  NONE = 0,
  SHUN = 1,
  KE = 2,
  MINGGANG = 3,
  ANGANG = 4,
  BUGANG = 5,
  JIANG = 6
};
bool MahjongFuType_IsValid(int value);
const MahjongFuType MahjongFuType_MIN = NONE;
const MahjongFuType MahjongFuType_MAX = JIANG;
const int MahjongFuType_ARRAYSIZE = MahjongFuType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MahjongFuType_descriptor();
inline const ::std::string& MahjongFuType_Name(MahjongFuType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MahjongFuType_descriptor(), value);
}
inline bool MahjongFuType_Parse(
    const ::std::string& name, MahjongFuType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MahjongFuType>(
    MahjongFuType_descriptor(), name, value);
}
enum MahjongPosition {
  LEFT = 1,
  OPPOSITE = 2,
  RIGHT = 3,
  SELF = 4
};
bool MahjongPosition_IsValid(int value);
const MahjongPosition MahjongPosition_MIN = LEFT;
const MahjongPosition MahjongPosition_MAX = SELF;
const int MahjongPosition_ARRAYSIZE = MahjongPosition_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MahjongPosition_descriptor();
inline const ::std::string& MahjongPosition_Name(MahjongPosition value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MahjongPosition_descriptor(), value);
}
inline bool MahjongPosition_Parse(
    const ::std::string& name, MahjongPosition* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MahjongPosition>(
    MahjongPosition_descriptor(), name, value);
}
enum MahjongCard {
  INVISIBLE = 0,
  TIAO1 = 1,
  TIAO2 = 2,
  TIAO3 = 3,
  TIAO4 = 4,
  TIAO5 = 5,
  TIAO6 = 6,
  TIAO7 = 7,
  TIAO8 = 8,
  TIAO9 = 9,
  BING1 = 11,
  BING2 = 12,
  BING3 = 13,
  BING4 = 14,
  BING5 = 15,
  BING6 = 16,
  BING7 = 17,
  BING8 = 18,
  BING9 = 19,
  WAN1 = 21,
  WAN2 = 22,
  WAN3 = 23,
  WAN4 = 24,
  WAN5 = 25,
  WAN6 = 26,
  WAN7 = 27,
  WAN8 = 28,
  WAN9 = 29,
  EAST = 31,
  SOUTH = 32,
  WEST = 33,
  NORTH = 34,
  ZHONG = 35,
  FA = 36,
  BAI = 37
};
bool MahjongCard_IsValid(int value);
const MahjongCard MahjongCard_MIN = INVISIBLE;
const MahjongCard MahjongCard_MAX = BAI;
const int MahjongCard_ARRAYSIZE = MahjongCard_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MahjongCard_descriptor();
inline const ::std::string& MahjongCard_Name(MahjongCard value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MahjongCard_descriptor(), value);
}
inline bool MahjongCard_Parse(
    const ::std::string& name, MahjongCard* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MahjongCard>(
    MahjongCard_descriptor(), name, value);
}
enum SiChuanMahjongRule {
  SiChuanMahjongBloody = 1,
  SiChuanMahjongRepeatBloody = 2,
  SiChuanMahjongRepeatBloodyWithSwitchCard = 3
};
bool SiChuanMahjongRule_IsValid(int value);
const SiChuanMahjongRule SiChuanMahjongRule_MIN = SiChuanMahjongBloody;
const SiChuanMahjongRule SiChuanMahjongRule_MAX = SiChuanMahjongRepeatBloodyWithSwitchCard;
const int SiChuanMahjongRule_ARRAYSIZE = SiChuanMahjongRule_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* SiChuanMahjongRule_descriptor();
inline const ::std::string& SiChuanMahjongRule_Name(SiChuanMahjongRule value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    SiChuanMahjongRule_descriptor(), value);
}
inline bool SiChuanMahjongRule_Parse(
    const ::std::string& name, SiChuanMahjongRule* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<SiChuanMahjongRule>(
    SiChuanMahjongRule_descriptor(), name, value);
}
enum SiChuanMahjongWinType {
  NoWinType = 0,
  PingHu = 1,
  DuiDuiHu = 2,
  QingYiSe = 3,
  DaiYaoJiu = 4,
  QiDui = 5,
  JinDiaoDiao = 6,
  QingDui = 7,
  JiangDui = 8,
  LongQiDui = 9,
  QingQiDui = 10,
  QingYaoJiu = 11,
  QingJinDiaoDiao = 12,
  JiangJinDiaoDiao = 13,
  TianHu = 14,
  DiHu = 15,
  QingLongQiDui = 16,
  ShiBaLuoHan = 17,
  GangKai = 18,
  GangShangPao = 19,
  Gen = 20,
  QiangGang = 21,
  ZiMo = 22,
  GuaFengMingGang = 23,
  GuaFengBuGang = 24,
  XiaYu = 25,
  HuJiaoZhuanYi = 26,
  TuiShui = 27,
  ChaDaJiao = 28,
  ChaHuaZhu = 29,
  BeiZiMo = 30,
  DianPao = 31,
  BeiGuaFeng = 32,
  BeiXiaYu = 33,
  BeiHuJiaoZhuanYi = 34,
  BeiChaHuaZhu = 35,
  BeiChaDaJiao = 36,
  BeiTuiShui = 37
};
bool SiChuanMahjongWinType_IsValid(int value);
const SiChuanMahjongWinType SiChuanMahjongWinType_MIN = NoWinType;
const SiChuanMahjongWinType SiChuanMahjongWinType_MAX = BeiTuiShui;
const int SiChuanMahjongWinType_ARRAYSIZE = SiChuanMahjongWinType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* SiChuanMahjongWinType_descriptor();
inline const ::std::string& SiChuanMahjongWinType_Name(SiChuanMahjongWinType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    SiChuanMahjongWinType_descriptor(), value);
}
inline bool SiChuanMahjongWinType_Parse(
    const ::std::string& name, SiChuanMahjongWinType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<SiChuanMahjongWinType>(
    SiChuanMahjongWinType_descriptor(), name, value);
}
enum MahjongCardSwitchType {
  SwitchCounterClockwise = 1,
  SwitchWithOpposite = 2,
  SwitchClockwise = 3
};
bool MahjongCardSwitchType_IsValid(int value);
const MahjongCardSwitchType MahjongCardSwitchType_MIN = SwitchCounterClockwise;
const MahjongCardSwitchType MahjongCardSwitchType_MAX = SwitchClockwise;
const int MahjongCardSwitchType_ARRAYSIZE = MahjongCardSwitchType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MahjongCardSwitchType_descriptor();
inline const ::std::string& MahjongCardSwitchType_Name(MahjongCardSwitchType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MahjongCardSwitchType_descriptor(), value);
}
inline bool MahjongCardSwitchType_Parse(
    const ::std::string& name, MahjongCardSwitchType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MahjongCardSwitchType>(
    MahjongCardSwitchType_descriptor(), name, value);
}
enum MahjongCardZone {
  DiscardZone = 1,
  FuZone = 2,
  HuZone = 3
};
bool MahjongCardZone_IsValid(int value);
const MahjongCardZone MahjongCardZone_MIN = DiscardZone;
const MahjongCardZone MahjongCardZone_MAX = HuZone;
const int MahjongCardZone_ARRAYSIZE = MahjongCardZone_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MahjongCardZone_descriptor();
inline const ::std::string& MahjongCardZone_Name(MahjongCardZone value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MahjongCardZone_descriptor(), value);
}
inline bool MahjongCardZone_Parse(
    const ::std::string& name, MahjongCardZone* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MahjongCardZone>(
    MahjongCardZone_descriptor(), name, value);
}
enum MahjongRequestType {
  MahjongChooseDiscard = 1,
  MahjongChooseOtherCard = 2,
  MahjongChooseSwitchCard = 3,
  MahjongChooseBlankSuit = 4
};
bool MahjongRequestType_IsValid(int value);
const MahjongRequestType MahjongRequestType_MIN = MahjongChooseDiscard;
const MahjongRequestType MahjongRequestType_MAX = MahjongChooseBlankSuit;
const int MahjongRequestType_ARRAYSIZE = MahjongRequestType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MahjongRequestType_descriptor();
inline const ::std::string& MahjongRequestType_Name(MahjongRequestType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MahjongRequestType_descriptor(), value);
}
inline bool MahjongRequestType_Parse(
    const ::std::string& name, MahjongRequestType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MahjongRequestType>(
    MahjongRequestType_descriptor(), name, value);
}
enum MahjongActionChoice {
  HU = 1,
  CHI = 2,
  PENG = 3,
  GANG = 4,
  PASS = 5,
  HUJIAOZHUANYI = 6
};
bool MahjongActionChoice_IsValid(int value);
const MahjongActionChoice MahjongActionChoice_MIN = HU;
const MahjongActionChoice MahjongActionChoice_MAX = HUJIAOZHUANYI;
const int MahjongActionChoice_ARRAYSIZE = MahjongActionChoice_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MahjongActionChoice_descriptor();
inline const ::std::string& MahjongActionChoice_Name(MahjongActionChoice value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MahjongActionChoice_descriptor(), value);
}
inline bool MahjongActionChoice_Parse(
    const ::std::string& name, MahjongActionChoice* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MahjongActionChoice>(
    MahjongActionChoice_descriptor(), name, value);
}
enum MahjongSuit {
  SUITNONE = 0,
  TIAO = 1,
  BING = 2,
  WAN = 3,
  FENG = 4,
  OTHER = 5
};
bool MahjongSuit_IsValid(int value);
const MahjongSuit MahjongSuit_MIN = SUITNONE;
const MahjongSuit MahjongSuit_MAX = OTHER;
const int MahjongSuit_ARRAYSIZE = MahjongSuit_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* MahjongSuit_descriptor();
inline const ::std::string& MahjongSuit_Name(MahjongSuit value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    MahjongSuit_descriptor(), value);
}
inline bool MahjongSuit_Parse(
    const ::std::string& name, MahjongSuit* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<MahjongSuit>(
    MahjongSuit_descriptor(), name, value);
}
enum PokerStepType {
  GameStartAndBlinds = 1,
  PlayerAction = 2,
  CommunityChange = 3,
  EndGame = 4
};
bool PokerStepType_IsValid(int value);
const PokerStepType PokerStepType_MIN = GameStartAndBlinds;
const PokerStepType PokerStepType_MAX = EndGame;
const int PokerStepType_ARRAYSIZE = PokerStepType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* PokerStepType_descriptor();
inline const ::std::string& PokerStepType_Name(PokerStepType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    PokerStepType_descriptor(), value);
}
inline bool PokerStepType_Parse(
    const ::std::string& name, PokerStepType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<PokerStepType>(
    PokerStepType_descriptor(), name, value);
}
enum PokerRoundType {
  Preflop = 0,
  Flop = 1,
  Turn = 2,
  River = 3,
  End = 4
};
bool PokerRoundType_IsValid(int value);
const PokerRoundType PokerRoundType_MIN = Preflop;
const PokerRoundType PokerRoundType_MAX = End;
const int PokerRoundType_ARRAYSIZE = PokerRoundType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* PokerRoundType_descriptor();
inline const ::std::string& PokerRoundType_Name(PokerRoundType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    PokerRoundType_descriptor(), value);
}
inline bool PokerRoundType_Parse(
    const ::std::string& name, PokerRoundType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<PokerRoundType>(
    PokerRoundType_descriptor(), name, value);
}
enum BlindType {
  Smallblind = 1,
  Bigblind = 2,
  Ante = 3,
  Straddle = 4
};
bool BlindType_IsValid(int value);
const BlindType BlindType_MIN = Smallblind;
const BlindType BlindType_MAX = Straddle;
const int BlindType_ARRAYSIZE = BlindType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* BlindType_descriptor();
inline const ::std::string& BlindType_Name(BlindType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    BlindType_descriptor(), value);
}
inline bool BlindType_Parse(
    const ::std::string& name, BlindType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<BlindType>(
    BlindType_descriptor(), name, value);
}
enum OFCStepType {
  OFCPlayerAction = 1,
  OFCEndGame = 2
};
bool OFCStepType_IsValid(int value);
const OFCStepType OFCStepType_MIN = OFCPlayerAction;
const OFCStepType OFCStepType_MAX = OFCEndGame;
const int OFCStepType_ARRAYSIZE = OFCStepType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* OFCStepType_descriptor();
inline const ::std::string& OFCStepType_Name(OFCStepType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    OFCStepType_descriptor(), value);
}
inline bool OFCStepType_Parse(
    const ::std::string& name, OFCStepType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<OFCStepType>(
    OFCStepType_descriptor(), name, value);
}
enum HandType {
  Poker = 1,
  OFC = 2,
  Mahjong = 3
};
bool HandType_IsValid(int value);
const HandType HandType_MIN = Poker;
const HandType HandType_MAX = Mahjong;
const int HandType_ARRAYSIZE = HandType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* HandType_descriptor();
inline const ::std::string& HandType_Name(HandType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    HandType_descriptor(), value);
}
inline bool HandType_Parse(
    const ::std::string& name, HandType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<HandType>(
    HandType_descriptor(), name, value);
}
enum ServerType {
  CORE = 0,
  LOGIN = 1,
  RESOURCE = 2,
  ROOM = 3,
  FILE = 4,
  PAY = 5
};
bool ServerType_IsValid(int value);
const ServerType ServerType_MIN = CORE;
const ServerType ServerType_MAX = PAY;
const int ServerType_ARRAYSIZE = ServerType_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* ServerType_descriptor();
inline const ::std::string& ServerType_Name(ServerType value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    ServerType_descriptor(), value);
}
inline bool ServerType_Parse(
    const ::std::string& name, ServerType* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<ServerType>(
    ServerType_descriptor(), name, value);
}
enum RoomStatus {
  OPEN = 0,
  CLOSED = 1,
  WAITINGTOSTART = 2,
  CANCELED = 3
};
bool RoomStatus_IsValid(int value);
const RoomStatus RoomStatus_MIN = OPEN;
const RoomStatus RoomStatus_MAX = CANCELED;
const int RoomStatus_ARRAYSIZE = RoomStatus_MAX + 1;

const ::google_public::protobuf::EnumDescriptor* RoomStatus_descriptor();
inline const ::std::string& RoomStatus_Name(RoomStatus value) {
  return ::google_public::protobuf::internal::NameOfEnum(
    RoomStatus_descriptor(), value);
}
inline bool RoomStatus_Parse(
    const ::std::string& name, RoomStatus* value) {
  return ::google_public::protobuf::internal::ParseNamedEnum<RoomStatus>(
    RoomStatus_descriptor(), name, value);
}
// ===================================================================

class ClientRequestHead : public ::google_public::protobuf::Message {
 public:
  ClientRequestHead();
  virtual ~ClientRequestHead();

  ClientRequestHead(const ClientRequestHead& from);

  inline ClientRequestHead& operator=(const ClientRequestHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ClientRequestHead& default_instance();

  void Swap(ClientRequestHead* other);

  // implements Message ----------------------------------------------

  ClientRequestHead* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ClientRequestHead& from);
  void MergeFrom(const ClientRequestHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional int32 Version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google_public::protobuf::int32 version() const;
  inline void set_version(::google_public::protobuf::int32 value);

  // optional .msg.Language Language = 3;
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 3;
  inline ::msg::Language language() const;
  inline void set_language(::msg::Language value);

  // optional .msg.Platform Platform = 4;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 4;
  inline ::msg::Platform platform() const;
  inline void set_platform(::msg::Platform value);

  // optional int32 TestCode = 5;
  inline bool has_testcode() const;
  inline void clear_testcode();
  static const int kTestCodeFieldNumber = 5;
  inline ::google_public::protobuf::int32 testcode() const;
  inline void set_testcode(::google_public::protobuf::int32 value);

  // optional int64 TimeMark = 6;
  inline bool has_timemark() const;
  inline void clear_timemark();
  static const int kTimeMarkFieldNumber = 6;
  inline ::google_public::protobuf::int64 timemark() const;
  inline void set_timemark(::google_public::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:msg.ClientRequestHead)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_testcode();
  inline void clear_has_testcode();
  inline void set_has_timemark();
  inline void clear_has_timemark();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  ::google_public::protobuf::int32 version_;
  int language_;
  int platform_;
  ::google_public::protobuf::int64 timemark_;
  ::google_public::protobuf::int32 testcode_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ClientRequestHead* default_instance_;
};
// -------------------------------------------------------------------

class ClientResponseHead : public ::google_public::protobuf::Message {
 public:
  ClientResponseHead();
  virtual ~ClientResponseHead();

  ClientResponseHead(const ClientResponseHead& from);

  inline ClientResponseHead& operator=(const ClientResponseHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ClientResponseHead& default_instance();

  void Swap(ClientResponseHead* other);

  // implements Message ----------------------------------------------

  ClientResponseHead* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ClientResponseHead& from);
  void MergeFrom(const ClientResponseHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TestCode = 1;
  inline bool has_testcode() const;
  inline void clear_testcode();
  static const int kTestCodeFieldNumber = 1;
  inline ::google_public::protobuf::int32 testcode() const;
  inline void set_testcode(::google_public::protobuf::int32 value);

  // optional int64 TimeMark = 2;
  inline bool has_timemark() const;
  inline void clear_timemark();
  static const int kTimeMarkFieldNumber = 2;
  inline ::google_public::protobuf::int64 timemark() const;
  inline void set_timemark(::google_public::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:msg.ClientResponseHead)
 private:
  inline void set_has_testcode();
  inline void clear_has_testcode();
  inline void set_has_timemark();
  inline void clear_has_timemark();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int64 timemark_;
  ::google_public::protobuf::int32 testcode_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ClientResponseHead* default_instance_;
};
// -------------------------------------------------------------------

class ServerMessageHead : public ::google_public::protobuf::Message {
 public:
  ServerMessageHead();
  virtual ~ServerMessageHead();

  ServerMessageHead(const ServerMessageHead& from);

  inline ServerMessageHead& operator=(const ServerMessageHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ServerMessageHead& default_instance();

  void Swap(ServerMessageHead* other);

  // implements Message ----------------------------------------------

  ServerMessageHead* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ServerMessageHead& from);
  void MergeFrom(const ServerMessageHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ServerID = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 serverid() const;
  inline void set_serverid(::google_public::protobuf::int32 value);

  // optional int64 TimeMark = 2;
  inline bool has_timemark() const;
  inline void clear_timemark();
  static const int kTimeMarkFieldNumber = 2;
  inline ::google_public::protobuf::int64 timemark() const;
  inline void set_timemark(::google_public::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:msg.ServerMessageHead)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_timemark();
  inline void clear_has_timemark();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int64 timemark_;
  ::google_public::protobuf::int32 serverid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ServerMessageHead* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google_public::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  Response* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Status Status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::msg::Status status() const;
  inline void set_status(::msg::Status value);

  // optional string Message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:msg.Response)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_message();
  inline void clear_has_message();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  int status_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// -------------------------------------------------------------------

class RoomResponse : public ::google_public::protobuf::Message {
 public:
  RoomResponse();
  virtual ~RoomResponse();

  RoomResponse(const RoomResponse& from);

  inline RoomResponse& operator=(const RoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const RoomResponse& default_instance();

  void Swap(RoomResponse* other);

  // implements Message ----------------------------------------------

  RoomResponse* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const RoomResponse& from);
  void MergeFrom(const RoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.Response Response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // @@protoc_insertion_point(class_scope:msg.RoomResponse)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_response();
  inline void clear_has_response();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static RoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class ClientInfo : public ::google_public::protobuf::Message {
 public:
  ClientInfo();
  virtual ~ClientInfo();

  ClientInfo(const ClientInfo& from);

  inline ClientInfo& operator=(const ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ClientInfo& default_instance();

  void Swap(ClientInfo* other);

  // implements Message ----------------------------------------------

  ClientInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ClientInfo& from);
  void MergeFrom(const ClientInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Mac = 1;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 1;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  inline ::std::string* release_mac();
  inline void set_allocated_mac(::std::string* mac);

  // optional string Imsi = 2;
  inline bool has_imsi() const;
  inline void clear_imsi();
  static const int kImsiFieldNumber = 2;
  inline const ::std::string& imsi() const;
  inline void set_imsi(const ::std::string& value);
  inline void set_imsi(const char* value);
  inline void set_imsi(const char* value, size_t size);
  inline ::std::string* mutable_imsi();
  inline ::std::string* release_imsi();
  inline void set_allocated_imsi(::std::string* imsi);

  // optional string screen_height_width = 3;
  inline bool has_screen_height_width() const;
  inline void clear_screen_height_width();
  static const int kScreenHeightWidthFieldNumber = 3;
  inline const ::std::string& screen_height_width() const;
  inline void set_screen_height_width(const ::std::string& value);
  inline void set_screen_height_width(const char* value);
  inline void set_screen_height_width(const char* value, size_t size);
  inline ::std::string* mutable_screen_height_width();
  inline ::std::string* release_screen_height_width();
  inline void set_allocated_screen_height_width(::std::string* screen_height_width);

  // optional string Model = 4;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 4;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const char* value, size_t size);
  inline ::std::string* mutable_model();
  inline ::std::string* release_model();
  inline void set_allocated_model(::std::string* model);

  // optional string SystemVersion = 5;
  inline bool has_systemversion() const;
  inline void clear_systemversion();
  static const int kSystemVersionFieldNumber = 5;
  inline const ::std::string& systemversion() const;
  inline void set_systemversion(const ::std::string& value);
  inline void set_systemversion(const char* value);
  inline void set_systemversion(const char* value, size_t size);
  inline ::std::string* mutable_systemversion();
  inline ::std::string* release_systemversion();
  inline void set_allocated_systemversion(::std::string* systemversion);

  // optional int32 Version = 6;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 6;
  inline ::google_public::protobuf::int32 version() const;
  inline void set_version(::google_public::protobuf::int32 value);

  // optional .msg.Language Language = 7;
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 7;
  inline ::msg::Language language() const;
  inline void set_language(::msg::Language value);

  // optional .msg.Platform Platform = 8;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 8;
  inline ::msg::Platform platform() const;
  inline void set_platform(::msg::Platform value);

  // @@protoc_insertion_point(class_scope:msg.ClientInfo)
 private:
  inline void set_has_mac();
  inline void clear_has_mac();
  inline void set_has_imsi();
  inline void clear_has_imsi();
  inline void set_has_screen_height_width();
  inline void clear_has_screen_height_width();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_systemversion();
  inline void clear_has_systemversion();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_platform();
  inline void clear_has_platform();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* mac_;
  ::std::string* imsi_;
  ::std::string* screen_height_width_;
  ::std::string* model_;
  ::std::string* systemversion_;
  ::google_public::protobuf::int32 version_;
  int language_;
  int platform_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ClientInfo* default_instance_;
};
// -------------------------------------------------------------------

class UserLoginInfo : public ::google_public::protobuf::Message {
 public:
  UserLoginInfo();
  virtual ~UserLoginInfo();

  UserLoginInfo(const UserLoginInfo& from);

  inline UserLoginInfo& operator=(const UserLoginInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const UserLoginInfo& default_instance();

  void Swap(UserLoginInfo* other);

  // implements Message ----------------------------------------------

  UserLoginInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const UserLoginInfo& from);
  void MergeFrom(const UserLoginInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional string PassWord = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPassWordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional string phoneNum = 3;
  inline bool has_phonenum() const;
  inline void clear_phonenum();
  static const int kPhoneNumFieldNumber = 3;
  inline const ::std::string& phonenum() const;
  inline void set_phonenum(const ::std::string& value);
  inline void set_phonenum(const char* value);
  inline void set_phonenum(const char* value, size_t size);
  inline ::std::string* mutable_phonenum();
  inline ::std::string* release_phonenum();
  inline void set_allocated_phonenum(::std::string* phonenum);

  // @@protoc_insertion_point(class_scope:msg.UserLoginInfo)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_phonenum();
  inline void clear_has_phonenum();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::std::string* password_;
  ::std::string* phonenum_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static UserLoginInfo* default_instance_;
};
// -------------------------------------------------------------------

class UserDetailInfo : public ::google_public::protobuf::Message {
 public:
  UserDetailInfo();
  virtual ~UserDetailInfo();

  UserDetailInfo(const UserDetailInfo& from);

  inline UserDetailInfo& operator=(const UserDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const UserDetailInfo& default_instance();

  void Swap(UserDetailInfo* other);

  // implements Message ----------------------------------------------

  UserDetailInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const UserDetailInfo& from);
  void MergeFrom(const UserDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string NickName = 1;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNickNameFieldNumber = 1;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string PicName = 2;
  inline bool has_picname() const;
  inline void clear_picname();
  static const int kPicNameFieldNumber = 2;
  inline const ::std::string& picname() const;
  inline void set_picname(const ::std::string& value);
  inline void set_picname(const char* value);
  inline void set_picname(const char* value, size_t size);
  inline ::std::string* mutable_picname();
  inline ::std::string* release_picname();
  inline void set_allocated_picname(::std::string* picname);

  // optional .msg.Sex Sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::msg::Sex sex() const;
  inline void set_sex(::msg::Sex value);

  // optional int32 UserId = 4;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 4;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.UserDetailInfo)
 private:
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_picname();
  inline void clear_has_picname();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::std::string* picname_;
  int sex_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static UserDetailInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1_VersionCheck : public ::google_public::protobuf::Message {
 public:
  Processor_1_VersionCheck();
  virtual ~Processor_1_VersionCheck();

  Processor_1_VersionCheck(const Processor_1_VersionCheck& from);

  inline Processor_1_VersionCheck& operator=(const Processor_1_VersionCheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1_VersionCheck& default_instance();

  void Swap(Processor_1_VersionCheck* other);

  // implements Message ----------------------------------------------

  Processor_1_VersionCheck* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1_VersionCheck& from);
  void MergeFrom(const Processor_1_VersionCheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional .msg.ServerInfo ResServerInfo = 2;
  inline bool has_resserverinfo() const;
  inline void clear_resserverinfo();
  static const int kResServerInfoFieldNumber = 2;
  inline const ::msg::ServerInfo& resserverinfo() const;
  inline ::msg::ServerInfo* mutable_resserverinfo();
  inline ::msg::ServerInfo* release_resserverinfo();
  inline void set_allocated_resserverinfo(::msg::ServerInfo* resserverinfo);

  // optional .msg.VersionStatus VersionStatus = 3;
  inline bool has_versionstatus() const;
  inline void clear_versionstatus();
  static const int kVersionStatusFieldNumber = 3;
  inline ::msg::VersionStatus versionstatus() const;
  inline void set_versionstatus(::msg::VersionStatus value);

  // optional string VersionCode = 4;
  inline bool has_versioncode() const;
  inline void clear_versioncode();
  static const int kVersionCodeFieldNumber = 4;
  inline const ::std::string& versioncode() const;
  inline void set_versioncode(const ::std::string& value);
  inline void set_versioncode(const char* value);
  inline void set_versioncode(const char* value, size_t size);
  inline ::std::string* mutable_versioncode();
  inline ::std::string* release_versioncode();
  inline void set_allocated_versioncode(::std::string* versioncode);

  // optional string Url = 5;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 5;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional bool IsCheckVersion = 6;
  inline bool has_ischeckversion() const;
  inline void clear_ischeckversion();
  static const int kIsCheckVersionFieldNumber = 6;
  inline bool ischeckversion() const;
  inline void set_ischeckversion(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1_VersionCheck)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_resserverinfo();
  inline void clear_has_resserverinfo();
  inline void set_has_versionstatus();
  inline void clear_has_versionstatus();
  inline void set_has_versioncode();
  inline void clear_has_versioncode();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_ischeckversion();
  inline void clear_has_ischeckversion();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::msg::ServerInfo* resserverinfo_;
  ::std::string* versioncode_;
  int versionstatus_;
  bool ischeckversion_;
  ::std::string* url_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1_VersionCheck* default_instance_;
};
// -------------------------------------------------------------------

class Processor_10_LoginCoreServer : public ::google_public::protobuf::Message {
 public:
  Processor_10_LoginCoreServer();
  virtual ~Processor_10_LoginCoreServer();

  Processor_10_LoginCoreServer(const Processor_10_LoginCoreServer& from);

  inline Processor_10_LoginCoreServer& operator=(const Processor_10_LoginCoreServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_10_LoginCoreServer& default_instance();

  void Swap(Processor_10_LoginCoreServer* other);

  // implements Message ----------------------------------------------

  Processor_10_LoginCoreServer* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_10_LoginCoreServer& from);
  void MergeFrom(const Processor_10_LoginCoreServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional string Password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:msg.Processor_10_LoginCoreServer)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::std::string* password_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_10_LoginCoreServer* default_instance_;
};
// -------------------------------------------------------------------

class Processor_10_LoginCore : public ::google_public::protobuf::Message {
 public:
  Processor_10_LoginCore();
  virtual ~Processor_10_LoginCore();

  Processor_10_LoginCore(const Processor_10_LoginCore& from);

  inline Processor_10_LoginCore& operator=(const Processor_10_LoginCore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_10_LoginCore& default_instance();

  void Swap(Processor_10_LoginCore* other);

  // implements Message ----------------------------------------------

  Processor_10_LoginCore* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_10_LoginCore& from);
  void MergeFrom(const Processor_10_LoginCore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional .msg.Response Response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // @@protoc_insertion_point(class_scope:msg.Processor_10_LoginCore)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_response();
  inline void clear_has_response();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_10_LoginCore* default_instance_;
};
// -------------------------------------------------------------------

class Processor_11_CONSOLEHEARTJUMP : public ::google_public::protobuf::Message {
 public:
  Processor_11_CONSOLEHEARTJUMP();
  virtual ~Processor_11_CONSOLEHEARTJUMP();

  Processor_11_CONSOLEHEARTJUMP(const Processor_11_CONSOLEHEARTJUMP& from);

  inline Processor_11_CONSOLEHEARTJUMP& operator=(const Processor_11_CONSOLEHEARTJUMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_11_CONSOLEHEARTJUMP& default_instance();

  void Swap(Processor_11_CONSOLEHEARTJUMP* other);

  // implements Message ----------------------------------------------

  Processor_11_CONSOLEHEARTJUMP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_11_CONSOLEHEARTJUMP& from);
  void MergeFrom(const Processor_11_CONSOLEHEARTJUMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.Processor_11_CONSOLEHEARTJUMP)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_11_CONSOLEHEARTJUMP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_30_UploadFile : public ::google_public::protobuf::Message {
 public:
  Processor_30_UploadFile();
  virtual ~Processor_30_UploadFile();

  Processor_30_UploadFile(const Processor_30_UploadFile& from);

  inline Processor_30_UploadFile& operator=(const Processor_30_UploadFile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_30_UploadFile& default_instance();

  void Swap(Processor_30_UploadFile* other);

  // implements Message ----------------------------------------------

  Processor_30_UploadFile* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_30_UploadFile& from);
  void MergeFrom(const Processor_30_UploadFile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FileName = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFileNameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional bytes File = 2;
  inline bool has_file() const;
  inline void clear_file();
  static const int kFileFieldNumber = 2;
  inline const ::std::string& file() const;
  inline void set_file(const ::std::string& value);
  inline void set_file(const char* value);
  inline void set_file(const void* value, size_t size);
  inline ::std::string* mutable_file();
  inline ::std::string* release_file();
  inline void set_allocated_file(::std::string* file);

  // optional bool IsCompress = 3;
  inline bool has_iscompress() const;
  inline void clear_iscompress();
  static const int kIsCompressFieldNumber = 3;
  inline bool iscompress() const;
  inline void set_iscompress(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_30_UploadFile)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_file();
  inline void clear_has_file();
  inline void set_has_iscompress();
  inline void clear_has_iscompress();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* filename_;
  ::std::string* file_;
  bool iscompress_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_30_UploadFile* default_instance_;
};
// -------------------------------------------------------------------

class Processor_31_DownloadFile_UP : public ::google_public::protobuf::Message {
 public:
  Processor_31_DownloadFile_UP();
  virtual ~Processor_31_DownloadFile_UP();

  Processor_31_DownloadFile_UP(const Processor_31_DownloadFile_UP& from);

  inline Processor_31_DownloadFile_UP& operator=(const Processor_31_DownloadFile_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_31_DownloadFile_UP& default_instance();

  void Swap(Processor_31_DownloadFile_UP* other);

  // implements Message ----------------------------------------------

  Processor_31_DownloadFile_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_31_DownloadFile_UP& from);
  void MergeFrom(const Processor_31_DownloadFile_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FileName = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFileNameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional bool IsCompress = 2;
  inline bool has_iscompress() const;
  inline void clear_iscompress();
  static const int kIsCompressFieldNumber = 2;
  inline bool iscompress() const;
  inline void set_iscompress(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_31_DownloadFile_UP)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_iscompress();
  inline void clear_has_iscompress();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* filename_;
  bool iscompress_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_31_DownloadFile_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_31_DownloadFile_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_31_DownloadFile_DOWN();
  virtual ~Processor_31_DownloadFile_DOWN();

  Processor_31_DownloadFile_DOWN(const Processor_31_DownloadFile_DOWN& from);

  inline Processor_31_DownloadFile_DOWN& operator=(const Processor_31_DownloadFile_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_31_DownloadFile_DOWN& default_instance();

  void Swap(Processor_31_DownloadFile_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_31_DownloadFile_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_31_DownloadFile_DOWN& from);
  void MergeFrom(const Processor_31_DownloadFile_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional bytes File = 2;
  inline bool has_file() const;
  inline void clear_file();
  static const int kFileFieldNumber = 2;
  inline const ::std::string& file() const;
  inline void set_file(const ::std::string& value);
  inline void set_file(const char* value);
  inline void set_file(const void* value, size_t size);
  inline ::std::string* mutable_file();
  inline ::std::string* release_file();
  inline void set_allocated_file(::std::string* file);

  // optional string FileName = 3;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFileNameFieldNumber = 3;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:msg.Processor_31_DownloadFile_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_file();
  inline void clear_has_file();
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::std::string* file_;
  ::std::string* filename_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_31_DownloadFile_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_97_SendVerificationByUserID : public ::google_public::protobuf::Message {
 public:
  Processor_97_SendVerificationByUserID();
  virtual ~Processor_97_SendVerificationByUserID();

  Processor_97_SendVerificationByUserID(const Processor_97_SendVerificationByUserID& from);

  inline Processor_97_SendVerificationByUserID& operator=(const Processor_97_SendVerificationByUserID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_97_SendVerificationByUserID& default_instance();

  void Swap(Processor_97_SendVerificationByUserID* other);

  // implements Message ----------------------------------------------

  Processor_97_SendVerificationByUserID* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_97_SendVerificationByUserID& from);
  void MergeFrom(const Processor_97_SendVerificationByUserID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:msg.Processor_97_SendVerificationByUserID)
 private:
  inline void set_has_username();
  inline void clear_has_username();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_97_SendVerificationByUserID* default_instance_;
};
// -------------------------------------------------------------------

class Processor_98_ResetPassword : public ::google_public::protobuf::Message {
 public:
  Processor_98_ResetPassword();
  virtual ~Processor_98_ResetPassword();

  Processor_98_ResetPassword(const Processor_98_ResetPassword& from);

  inline Processor_98_ResetPassword& operator=(const Processor_98_ResetPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_98_ResetPassword& default_instance();

  void Swap(Processor_98_ResetPassword* other);

  // implements Message ----------------------------------------------

  Processor_98_ResetPassword* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_98_ResetPassword& from);
  void MergeFrom(const Processor_98_ResetPassword& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserLoginInfo LoginInfo = 1;
  inline bool has_logininfo() const;
  inline void clear_logininfo();
  static const int kLoginInfoFieldNumber = 1;
  inline const ::msg::UserLoginInfo& logininfo() const;
  inline ::msg::UserLoginInfo* mutable_logininfo();
  inline ::msg::UserLoginInfo* release_logininfo();
  inline void set_allocated_logininfo(::msg::UserLoginInfo* logininfo);

  // optional string Verification = 2;
  inline bool has_verification() const;
  inline void clear_verification();
  static const int kVerificationFieldNumber = 2;
  inline const ::std::string& verification() const;
  inline void set_verification(const ::std::string& value);
  inline void set_verification(const char* value);
  inline void set_verification(const char* value, size_t size);
  inline ::std::string* mutable_verification();
  inline ::std::string* release_verification();
  inline void set_allocated_verification(::std::string* verification);

  // @@protoc_insertion_point(class_scope:msg.Processor_98_ResetPassword)
 private:
  inline void set_has_logininfo();
  inline void clear_has_logininfo();
  inline void set_has_verification();
  inline void clear_has_verification();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserLoginInfo* logininfo_;
  ::std::string* verification_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_98_ResetPassword* default_instance_;
};
// -------------------------------------------------------------------

class Processor_99_Login_UP : public ::google_public::protobuf::Message {
 public:
  Processor_99_Login_UP();
  virtual ~Processor_99_Login_UP();

  Processor_99_Login_UP(const Processor_99_Login_UP& from);

  inline Processor_99_Login_UP& operator=(const Processor_99_Login_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_99_Login_UP& default_instance();

  void Swap(Processor_99_Login_UP* other);

  // implements Message ----------------------------------------------

  Processor_99_Login_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_99_Login_UP& from);
  void MergeFrom(const Processor_99_Login_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserLoginInfo LoginInfo = 1;
  inline bool has_logininfo() const;
  inline void clear_logininfo();
  static const int kLoginInfoFieldNumber = 1;
  inline const ::msg::UserLoginInfo& logininfo() const;
  inline ::msg::UserLoginInfo* mutable_logininfo();
  inline ::msg::UserLoginInfo* release_logininfo();
  inline void set_allocated_logininfo(::msg::UserLoginInfo* logininfo);

  // optional .msg.ClientInfo ClientInfo = 2;
  inline bool has_clientinfo() const;
  inline void clear_clientinfo();
  static const int kClientInfoFieldNumber = 2;
  inline const ::msg::ClientInfo& clientinfo() const;
  inline ::msg::ClientInfo* mutable_clientinfo();
  inline ::msg::ClientInfo* release_clientinfo();
  inline void set_allocated_clientinfo(::msg::ClientInfo* clientinfo);

  // @@protoc_insertion_point(class_scope:msg.Processor_99_Login_UP)
 private:
  inline void set_has_logininfo();
  inline void clear_has_logininfo();
  inline void set_has_clientinfo();
  inline void clear_has_clientinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserLoginInfo* logininfo_;
  ::msg::ClientInfo* clientinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_99_Login_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_99_Login_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_99_Login_DOWN();
  virtual ~Processor_99_Login_DOWN();

  Processor_99_Login_DOWN(const Processor_99_Login_DOWN& from);

  inline Processor_99_Login_DOWN& operator=(const Processor_99_Login_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_99_Login_DOWN& default_instance();

  void Swap(Processor_99_Login_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_99_Login_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_99_Login_DOWN& from);
  void MergeFrom(const Processor_99_Login_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional .msg.ServerInfo FileServerInfo = 2;
  inline bool has_fileserverinfo() const;
  inline void clear_fileserverinfo();
  static const int kFileServerInfoFieldNumber = 2;
  inline const ::msg::ServerInfo& fileserverinfo() const;
  inline ::msg::ServerInfo* mutable_fileserverinfo();
  inline ::msg::ServerInfo* release_fileserverinfo();
  inline void set_allocated_fileserverinfo(::msg::ServerInfo* fileserverinfo);

  // optional string Key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional .msg.UserDetailInfo User = 4;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 4;
  inline const ::msg::UserDetailInfo& user() const;
  inline ::msg::UserDetailInfo* mutable_user();
  inline ::msg::UserDetailInfo* release_user();
  inline void set_allocated_user(::msg::UserDetailInfo* user);

  // @@protoc_insertion_point(class_scope:msg.Processor_99_Login_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_fileserverinfo();
  inline void clear_has_fileserverinfo();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_user();
  inline void clear_has_user();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::msg::ServerInfo* fileserverinfo_;
  ::std::string* key_;
  ::msg::UserDetailInfo* user_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_99_Login_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_100_LoginResource : public ::google_public::protobuf::Message {
 public:
  Processor_100_LoginResource();
  virtual ~Processor_100_LoginResource();

  Processor_100_LoginResource(const Processor_100_LoginResource& from);

  inline Processor_100_LoginResource& operator=(const Processor_100_LoginResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_100_LoginResource& default_instance();

  void Swap(Processor_100_LoginResource* other);

  // implements Message ----------------------------------------------

  Processor_100_LoginResource* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_100_LoginResource& from);
  void MergeFrom(const Processor_100_LoginResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:msg.Processor_100_LoginResource)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_100_LoginResource* default_instance_;
};
// -------------------------------------------------------------------

class Processor_100_LoginResource_Down : public ::google_public::protobuf::Message {
 public:
  Processor_100_LoginResource_Down();
  virtual ~Processor_100_LoginResource_Down();

  Processor_100_LoginResource_Down(const Processor_100_LoginResource_Down& from);

  inline Processor_100_LoginResource_Down& operator=(const Processor_100_LoginResource_Down& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_100_LoginResource_Down& default_instance();

  void Swap(Processor_100_LoginResource_Down* other);

  // implements Message ----------------------------------------------

  Processor_100_LoginResource_Down* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_100_LoginResource_Down& from);
  void MergeFrom(const Processor_100_LoginResource_Down& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional .msg.Processor_161_ReceiveChatMessage OfflineMessage = 2;
  inline bool has_offlinemessage() const;
  inline void clear_offlinemessage();
  static const int kOfflineMessageFieldNumber = 2;
  inline const ::msg::Processor_161_ReceiveChatMessage& offlinemessage() const;
  inline ::msg::Processor_161_ReceiveChatMessage* mutable_offlinemessage();
  inline ::msg::Processor_161_ReceiveChatMessage* release_offlinemessage();
  inline void set_allocated_offlinemessage(::msg::Processor_161_ReceiveChatMessage* offlinemessage);

  // optional .msg.Processor_123_ReceiveRequestList OfflineRequest = 3;
  inline bool has_offlinerequest() const;
  inline void clear_offlinerequest();
  static const int kOfflineRequestFieldNumber = 3;
  inline const ::msg::Processor_123_ReceiveRequestList& offlinerequest() const;
  inline ::msg::Processor_123_ReceiveRequestList* mutable_offlinerequest();
  inline ::msg::Processor_123_ReceiveRequestList* release_offlinerequest();
  inline void set_allocated_offlinerequest(::msg::Processor_123_ReceiveRequestList* offlinerequest);

  // optional .msg.ServerInfos RoomServerInfo = 4;
  inline bool has_roomserverinfo() const;
  inline void clear_roomserverinfo();
  static const int kRoomServerInfoFieldNumber = 4;
  inline const ::msg::ServerInfos& roomserverinfo() const;
  inline ::msg::ServerInfos* mutable_roomserverinfo();
  inline ::msg::ServerInfos* release_roomserverinfo();
  inline void set_allocated_roomserverinfo(::msg::ServerInfos* roomserverinfo);

  // optional .msg.RoomInfomation RoomInfomation = 5;
  inline bool has_roominfomation() const;
  inline void clear_roominfomation();
  static const int kRoomInfomationFieldNumber = 5;
  inline const ::msg::RoomInfomation& roominfomation() const;
  inline ::msg::RoomInfomation* mutable_roominfomation();
  inline ::msg::RoomInfomation* release_roominfomation();
  inline void set_allocated_roominfomation(::msg::RoomInfomation* roominfomation);

  // @@protoc_insertion_point(class_scope:msg.Processor_100_LoginResource_Down)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_offlinemessage();
  inline void clear_has_offlinemessage();
  inline void set_has_offlinerequest();
  inline void clear_has_offlinerequest();
  inline void set_has_roomserverinfo();
  inline void clear_has_roomserverinfo();
  inline void set_has_roominfomation();
  inline void clear_has_roominfomation();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::msg::Processor_161_ReceiveChatMessage* offlinemessage_;
  ::msg::Processor_123_ReceiveRequestList* offlinerequest_;
  ::msg::ServerInfos* roomserverinfo_;
  ::msg::RoomInfomation* roominfomation_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_100_LoginResource_Down* default_instance_;
};
// -------------------------------------------------------------------

class RoomInfomation : public ::google_public::protobuf::Message {
 public:
  RoomInfomation();
  virtual ~RoomInfomation();

  RoomInfomation(const RoomInfomation& from);

  inline RoomInfomation& operator=(const RoomInfomation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const RoomInfomation& default_instance();

  void Swap(RoomInfomation* other);

  // implements Message ----------------------------------------------

  RoomInfomation* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const RoomInfomation& from);
  void MergeFrom(const RoomInfomation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.CreateRoomInfo CreateRoomInfo = 1;
  inline int createroominfo_size() const;
  inline void clear_createroominfo();
  static const int kCreateRoomInfoFieldNumber = 1;
  inline const ::msg::CreateRoomInfo& createroominfo(int index) const;
  inline ::msg::CreateRoomInfo* mutable_createroominfo(int index);
  inline ::msg::CreateRoomInfo* add_createroominfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfo >&
      createroominfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfo >*
      mutable_createroominfo();

  // repeated .msg.TournamentInfo TournamentSizeTemplate = 2;
  inline int tournamentsizetemplate_size() const;
  inline void clear_tournamentsizetemplate();
  static const int kTournamentSizeTemplateFieldNumber = 2;
  inline const ::msg::TournamentInfo& tournamentsizetemplate(int index) const;
  inline ::msg::TournamentInfo* mutable_tournamentsizetemplate(int index);
  inline ::msg::TournamentInfo* add_tournamentsizetemplate();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo >&
      tournamentsizetemplate() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo >*
      mutable_tournamentsizetemplate();

  // repeated .msg.TournamentInfo TournamentSpeedTemplate = 3;
  inline int tournamentspeedtemplate_size() const;
  inline void clear_tournamentspeedtemplate();
  static const int kTournamentSpeedTemplateFieldNumber = 3;
  inline const ::msg::TournamentInfo& tournamentspeedtemplate(int index) const;
  inline ::msg::TournamentInfo* mutable_tournamentspeedtemplate(int index);
  inline ::msg::TournamentInfo* add_tournamentspeedtemplate();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo >&
      tournamentspeedtemplate() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo >*
      mutable_tournamentspeedtemplate();

  // optional .msg.Property Blindtime = 4;
  inline bool has_blindtime() const;
  inline void clear_blindtime();
  static const int kBlindtimeFieldNumber = 4;
  inline const ::msg::Property& blindtime() const;
  inline ::msg::Property* mutable_blindtime();
  inline ::msg::Property* release_blindtime();
  inline void set_allocated_blindtime(::msg::Property* blindtime);

  // @@protoc_insertion_point(class_scope:msg.RoomInfomation)
 private:
  inline void set_has_blindtime();
  inline void clear_has_blindtime();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfo > createroominfo_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo > tournamentsizetemplate_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo > tournamentspeedtemplate_;
  ::msg::Property* blindtime_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static RoomInfomation* default_instance_;
};
// -------------------------------------------------------------------

class Property : public ::google_public::protobuf::Message {
 public:
  Property();
  virtual ~Property();

  Property(const Property& from);

  inline Property& operator=(const Property& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Property& default_instance();

  void Swap(Property* other);

  // implements Message ----------------------------------------------

  Property* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Property& from);
  void MergeFrom(const Property& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .msg.IntValue IntValue = 2;
  inline bool has_intvalue() const;
  inline void clear_intvalue();
  static const int kIntValueFieldNumber = 2;
  inline const ::msg::IntValue& intvalue() const;
  inline ::msg::IntValue* mutable_intvalue();
  inline ::msg::IntValue* release_intvalue();
  inline void set_allocated_intvalue(::msg::IntValue* intvalue);

  // optional bool BoolValue = 3;
  inline bool has_boolvalue() const;
  inline void clear_boolvalue();
  static const int kBoolValueFieldNumber = 3;
  inline bool boolvalue() const;
  inline void set_boolvalue(bool value);

  // optional string StringValue = 4;
  inline bool has_stringvalue() const;
  inline void clear_stringvalue();
  static const int kStringValueFieldNumber = 4;
  inline const ::std::string& stringvalue() const;
  inline void set_stringvalue(const ::std::string& value);
  inline void set_stringvalue(const char* value);
  inline void set_stringvalue(const char* value, size_t size);
  inline ::std::string* mutable_stringvalue();
  inline ::std::string* release_stringvalue();
  inline void set_allocated_stringvalue(::std::string* stringvalue);

  // optional string DisplayName = 5;
  inline bool has_displayname() const;
  inline void clear_displayname();
  static const int kDisplayNameFieldNumber = 5;
  inline const ::std::string& displayname() const;
  inline void set_displayname(const ::std::string& value);
  inline void set_displayname(const char* value);
  inline void set_displayname(const char* value, size_t size);
  inline ::std::string* mutable_displayname();
  inline ::std::string* release_displayname();
  inline void set_allocated_displayname(::std::string* displayname);

  // optional .msg.PropertyType Type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::msg::PropertyType type() const;
  inline void set_type(::msg::PropertyType value);

  // optional .msg.EnumValue EnumValue = 7;
  inline bool has_enumvalue() const;
  inline void clear_enumvalue();
  static const int kEnumValueFieldNumber = 7;
  inline const ::msg::EnumValue& enumvalue() const;
  inline ::msg::EnumValue* mutable_enumvalue();
  inline ::msg::EnumValue* release_enumvalue();
  inline void set_allocated_enumvalue(::msg::EnumValue* enumvalue);

  // optional bool Primary = 8;
  inline bool has_primary() const;
  inline void clear_primary();
  static const int kPrimaryFieldNumber = 8;
  inline bool primary() const;
  inline void set_primary(bool value);

  // @@protoc_insertion_point(class_scope:msg.Property)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_intvalue();
  inline void clear_has_intvalue();
  inline void set_has_boolvalue();
  inline void clear_has_boolvalue();
  inline void set_has_stringvalue();
  inline void clear_has_stringvalue();
  inline void set_has_displayname();
  inline void clear_has_displayname();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_enumvalue();
  inline void clear_has_enumvalue();
  inline void set_has_primary();
  inline void clear_has_primary();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::msg::IntValue* intvalue_;
  ::std::string* stringvalue_;
  ::std::string* displayname_;
  bool boolvalue_;
  bool primary_;
  int type_;
  ::msg::EnumValue* enumvalue_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Property* default_instance_;
};
// -------------------------------------------------------------------

class IntValue : public ::google_public::protobuf::Message {
 public:
  IntValue();
  virtual ~IntValue();

  IntValue(const IntValue& from);

  inline IntValue& operator=(const IntValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const IntValue& default_instance();

  void Swap(IntValue* other);

  // implements Message ----------------------------------------------

  IntValue* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const IntValue& from);
  void MergeFrom(const IntValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google_public::protobuf::int32 value() const;
  inline void set_value(::google_public::protobuf::int32 value);

  // optional string Max = 2;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 2;
  inline const ::std::string& max() const;
  inline void set_max(const ::std::string& value);
  inline void set_max(const char* value);
  inline void set_max(const char* value, size_t size);
  inline ::std::string* mutable_max();
  inline ::std::string* release_max();
  inline void set_allocated_max(::std::string* max);

  // optional string Min = 3;
  inline bool has_min() const;
  inline void clear_min();
  static const int kMinFieldNumber = 3;
  inline const ::std::string& min() const;
  inline void set_min(const ::std::string& value);
  inline void set_min(const char* value);
  inline void set_min(const char* value, size_t size);
  inline ::std::string* mutable_min();
  inline ::std::string* release_min();
  inline void set_allocated_min(::std::string* min);

  // repeated int32 DefaultValue = 4;
  inline int defaultvalue_size() const;
  inline void clear_defaultvalue();
  static const int kDefaultValueFieldNumber = 4;
  inline ::google_public::protobuf::int32 defaultvalue(int index) const;
  inline void set_defaultvalue(int index, ::google_public::protobuf::int32 value);
  inline void add_defaultvalue(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      defaultvalue() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_defaultvalue();

  // @@protoc_insertion_point(class_scope:msg.IntValue)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_min();
  inline void clear_has_min();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* max_;
  ::std::string* min_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > defaultvalue_;
  ::google_public::protobuf::int32 value_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static IntValue* default_instance_;
};
// -------------------------------------------------------------------

class EnumValue : public ::google_public::protobuf::Message {
 public:
  EnumValue();
  virtual ~EnumValue();

  EnumValue(const EnumValue& from);

  inline EnumValue& operator=(const EnumValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const EnumValue& default_instance();

  void Swap(EnumValue* other);

  // implements Message ----------------------------------------------

  EnumValue* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const EnumValue& from);
  void MergeFrom(const EnumValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google_public::protobuf::int32 value() const;
  inline void set_value(::google_public::protobuf::int32 value);

  // repeated .msg.EnumItem Items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::msg::EnumItem& items(int index) const;
  inline ::msg::EnumItem* mutable_items(int index);
  inline ::msg::EnumItem* add_items();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::EnumItem >&
      items() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::EnumItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:msg.EnumValue)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::EnumItem > items_;
  ::google_public::protobuf::int32 value_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static EnumValue* default_instance_;
};
// -------------------------------------------------------------------

class EnumItem : public ::google_public::protobuf::Message {
 public:
  EnumItem();
  virtual ~EnumItem();

  EnumItem(const EnumItem& from);

  inline EnumItem& operator=(const EnumItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const EnumItem& default_instance();

  void Swap(EnumItem* other);

  // implements Message ----------------------------------------------

  EnumItem* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const EnumItem& from);
  void MergeFrom(const EnumItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google_public::protobuf::int32 value() const;
  inline void set_value(::google_public::protobuf::int32 value);

  // optional string Text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:msg.EnumItem)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_text();
  inline void clear_has_text();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* text_;
  ::google_public::protobuf::int32 value_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static EnumItem* default_instance_;
};
// -------------------------------------------------------------------

class Processor_103_FeedBack : public ::google_public::protobuf::Message {
 public:
  Processor_103_FeedBack();
  virtual ~Processor_103_FeedBack();

  Processor_103_FeedBack(const Processor_103_FeedBack& from);

  inline Processor_103_FeedBack& operator=(const Processor_103_FeedBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_103_FeedBack& default_instance();

  void Swap(Processor_103_FeedBack* other);

  // implements Message ----------------------------------------------

  Processor_103_FeedBack* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_103_FeedBack& from);
  void MergeFrom(const Processor_103_FeedBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.FeedBack FeedBack = 1;
  inline bool has_feedback() const;
  inline void clear_feedback();
  static const int kFeedBackFieldNumber = 1;
  inline const ::msg::FeedBack& feedback() const;
  inline ::msg::FeedBack* mutable_feedback();
  inline ::msg::FeedBack* release_feedback();
  inline void set_allocated_feedback(::msg::FeedBack* feedback);

  // @@protoc_insertion_point(class_scope:msg.Processor_103_FeedBack)
 private:
  inline void set_has_feedback();
  inline void clear_has_feedback();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::FeedBack* feedback_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_103_FeedBack* default_instance_;
};
// -------------------------------------------------------------------

class Processor_104_Register : public ::google_public::protobuf::Message {
 public:
  Processor_104_Register();
  virtual ~Processor_104_Register();

  Processor_104_Register(const Processor_104_Register& from);

  inline Processor_104_Register& operator=(const Processor_104_Register& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_104_Register& default_instance();

  void Swap(Processor_104_Register* other);

  // implements Message ----------------------------------------------

  Processor_104_Register* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_104_Register& from);
  void MergeFrom(const Processor_104_Register& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserLoginInfo LoginInfo = 1;
  inline bool has_logininfo() const;
  inline void clear_logininfo();
  static const int kLoginInfoFieldNumber = 1;
  inline const ::msg::UserLoginInfo& logininfo() const;
  inline ::msg::UserLoginInfo* mutable_logininfo();
  inline ::msg::UserLoginInfo* release_logininfo();
  inline void set_allocated_logininfo(::msg::UserLoginInfo* logininfo);

  // optional string Referee = 2;
  inline bool has_referee() const;
  inline void clear_referee();
  static const int kRefereeFieldNumber = 2;
  inline const ::std::string& referee() const;
  inline void set_referee(const ::std::string& value);
  inline void set_referee(const char* value);
  inline void set_referee(const char* value, size_t size);
  inline ::std::string* mutable_referee();
  inline ::std::string* release_referee();
  inline void set_allocated_referee(::std::string* referee);

  // optional string PhoneNumber = 3;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhoneNumberFieldNumber = 3;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string Verification = 4;
  inline bool has_verification() const;
  inline void clear_verification();
  static const int kVerificationFieldNumber = 4;
  inline const ::std::string& verification() const;
  inline void set_verification(const ::std::string& value);
  inline void set_verification(const char* value);
  inline void set_verification(const char* value, size_t size);
  inline ::std::string* mutable_verification();
  inline ::std::string* release_verification();
  inline void set_allocated_verification(::std::string* verification);

  // @@protoc_insertion_point(class_scope:msg.Processor_104_Register)
 private:
  inline void set_has_logininfo();
  inline void clear_has_logininfo();
  inline void set_has_referee();
  inline void clear_has_referee();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_verification();
  inline void clear_has_verification();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserLoginInfo* logininfo_;
  ::std::string* referee_;
  ::std::string* phonenumber_;
  ::std::string* verification_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_104_Register* default_instance_;
};
// -------------------------------------------------------------------

class Processor_105_Device : public ::google_public::protobuf::Message {
 public:
  Processor_105_Device();
  virtual ~Processor_105_Device();

  Processor_105_Device(const Processor_105_Device& from);

  inline Processor_105_Device& operator=(const Processor_105_Device& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_105_Device& default_instance();

  void Swap(Processor_105_Device* other);

  // implements Message ----------------------------------------------

  Processor_105_Device* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_105_Device& from);
  void MergeFrom(const Processor_105_Device& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string devicetoken = 1;
  inline bool has_devicetoken() const;
  inline void clear_devicetoken();
  static const int kDevicetokenFieldNumber = 1;
  inline const ::std::string& devicetoken() const;
  inline void set_devicetoken(const ::std::string& value);
  inline void set_devicetoken(const char* value);
  inline void set_devicetoken(const char* value, size_t size);
  inline ::std::string* mutable_devicetoken();
  inline ::std::string* release_devicetoken();
  inline void set_allocated_devicetoken(::std::string* devicetoken);

  // @@protoc_insertion_point(class_scope:msg.Processor_105_Device)
 private:
  inline void set_has_devicetoken();
  inline void clear_has_devicetoken();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* devicetoken_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_105_Device* default_instance_;
};
// -------------------------------------------------------------------

class Processor_106_ReceiveIOSPayReceipt : public ::google_public::protobuf::Message {
 public:
  Processor_106_ReceiveIOSPayReceipt();
  virtual ~Processor_106_ReceiveIOSPayReceipt();

  Processor_106_ReceiveIOSPayReceipt(const Processor_106_ReceiveIOSPayReceipt& from);

  inline Processor_106_ReceiveIOSPayReceipt& operator=(const Processor_106_ReceiveIOSPayReceipt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_106_ReceiveIOSPayReceipt& default_instance();

  void Swap(Processor_106_ReceiveIOSPayReceipt* other);

  // implements Message ----------------------------------------------

  Processor_106_ReceiveIOSPayReceipt* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_106_ReceiveIOSPayReceipt& from);
  void MergeFrom(const Processor_106_ReceiveIOSPayReceipt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Receipt = 1;
  inline bool has_receipt() const;
  inline void clear_receipt();
  static const int kReceiptFieldNumber = 1;
  inline const ::std::string& receipt() const;
  inline void set_receipt(const ::std::string& value);
  inline void set_receipt(const char* value);
  inline void set_receipt(const char* value, size_t size);
  inline ::std::string* mutable_receipt();
  inline ::std::string* release_receipt();
  inline void set_allocated_receipt(::std::string* receipt);

  // optional int32 UserID = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_106_ReceiveIOSPayReceipt)
 private:
  inline void set_has_receipt();
  inline void clear_has_receipt();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* receipt_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_106_ReceiveIOSPayReceipt* default_instance_;
};
// -------------------------------------------------------------------

class Processor_106_ReceiveIOSPayReceipt_Down : public ::google_public::protobuf::Message {
 public:
  Processor_106_ReceiveIOSPayReceipt_Down();
  virtual ~Processor_106_ReceiveIOSPayReceipt_Down();

  Processor_106_ReceiveIOSPayReceipt_Down(const Processor_106_ReceiveIOSPayReceipt_Down& from);

  inline Processor_106_ReceiveIOSPayReceipt_Down& operator=(const Processor_106_ReceiveIOSPayReceipt_Down& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_106_ReceiveIOSPayReceipt_Down& default_instance();

  void Swap(Processor_106_ReceiveIOSPayReceipt_Down* other);

  // implements Message ----------------------------------------------

  Processor_106_ReceiveIOSPayReceipt_Down* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_106_ReceiveIOSPayReceipt_Down& from);
  void MergeFrom(const Processor_106_ReceiveIOSPayReceipt_Down& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional string ReceiptMd5 = 2;
  inline bool has_receiptmd5() const;
  inline void clear_receiptmd5();
  static const int kReceiptMd5FieldNumber = 2;
  inline const ::std::string& receiptmd5() const;
  inline void set_receiptmd5(const ::std::string& value);
  inline void set_receiptmd5(const char* value);
  inline void set_receiptmd5(const char* value, size_t size);
  inline ::std::string* mutable_receiptmd5();
  inline ::std::string* release_receiptmd5();
  inline void set_allocated_receiptmd5(::std::string* receiptmd5);

  // optional .msg.VerificationType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::msg::VerificationType type() const;
  inline void set_type(::msg::VerificationType value);

  // @@protoc_insertion_point(class_scope:msg.Processor_106_ReceiveIOSPayReceipt_Down)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_receiptmd5();
  inline void clear_has_receiptmd5();
  inline void set_has_type();
  inline void clear_has_type();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::std::string* receiptmd5_;
  int type_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_106_ReceiveIOSPayReceipt_Down* default_instance_;
};
// -------------------------------------------------------------------

class GoodInfo : public ::google_public::protobuf::Message {
 public:
  GoodInfo();
  virtual ~GoodInfo();

  GoodInfo(const GoodInfo& from);

  inline GoodInfo& operator=(const GoodInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const GoodInfo& default_instance();

  void Swap(GoodInfo* other);

  // implements Message ----------------------------------------------

  GoodInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const GoodInfo& from);
  void MergeFrom(const GoodInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string Description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional int32 Price = 4;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 4;
  inline ::google_public::protobuf::int32 price() const;
  inline void set_price(::google_public::protobuf::int32 value);

  // optional string PicName = 5;
  inline bool has_picname() const;
  inline void clear_picname();
  static const int kPicNameFieldNumber = 5;
  inline const ::std::string& picname() const;
  inline void set_picname(const ::std::string& value);
  inline void set_picname(const char* value);
  inline void set_picname(const char* value, size_t size);
  inline ::std::string* mutable_picname();
  inline ::std::string* release_picname();
  inline void set_allocated_picname(::std::string* picname);

  // @@protoc_insertion_point(class_scope:msg.GoodInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_picname();
  inline void clear_has_picname();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::std::string* name_;
  ::std::string* description_;
  ::std::string* picname_;
  ::google_public::protobuf::int32 price_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static GoodInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_107_GetGoodsInfo : public ::google_public::protobuf::Message {
 public:
  Processor_107_GetGoodsInfo();
  virtual ~Processor_107_GetGoodsInfo();

  Processor_107_GetGoodsInfo(const Processor_107_GetGoodsInfo& from);

  inline Processor_107_GetGoodsInfo& operator=(const Processor_107_GetGoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_107_GetGoodsInfo& default_instance();

  void Swap(Processor_107_GetGoodsInfo* other);

  // implements Message ----------------------------------------------

  Processor_107_GetGoodsInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_107_GetGoodsInfo& from);
  void MergeFrom(const Processor_107_GetGoodsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.GoodInfo GoodsInfo = 1;
  inline int goodsinfo_size() const;
  inline void clear_goodsinfo();
  static const int kGoodsInfoFieldNumber = 1;
  inline const ::msg::GoodInfo& goodsinfo(int index) const;
  inline ::msg::GoodInfo* mutable_goodsinfo(int index);
  inline ::msg::GoodInfo* add_goodsinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::GoodInfo >&
      goodsinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::GoodInfo >*
      mutable_goodsinfo();

  // @@protoc_insertion_point(class_scope:msg.Processor_107_GetGoodsInfo)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::GoodInfo > goodsinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_107_GetGoodsInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_108_BuyGood : public ::google_public::protobuf::Message {
 public:
  Processor_108_BuyGood();
  virtual ~Processor_108_BuyGood();

  Processor_108_BuyGood(const Processor_108_BuyGood& from);

  inline Processor_108_BuyGood& operator=(const Processor_108_BuyGood& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_108_BuyGood& default_instance();

  void Swap(Processor_108_BuyGood* other);

  // implements Message ----------------------------------------------

  Processor_108_BuyGood* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_108_BuyGood& from);
  void MergeFrom(const Processor_108_BuyGood& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GoodID = 1;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 goodid() const;
  inline void set_goodid(::google_public::protobuf::int32 value);

  // optional int32 UserID = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_108_BuyGood)
 private:
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 goodid_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_108_BuyGood* default_instance_;
};
// -------------------------------------------------------------------

class Processor_109_AndroidPay : public ::google_public::protobuf::Message {
 public:
  Processor_109_AndroidPay();
  virtual ~Processor_109_AndroidPay();

  Processor_109_AndroidPay(const Processor_109_AndroidPay& from);

  inline Processor_109_AndroidPay& operator=(const Processor_109_AndroidPay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_109_AndroidPay& default_instance();

  void Swap(Processor_109_AndroidPay* other);

  // implements Message ----------------------------------------------

  Processor_109_AndroidPay* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_109_AndroidPay& from);
  void MergeFrom(const Processor_109_AndroidPay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional string ProductID = 2;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIDFieldNumber = 2;
  inline const ::std::string& productid() const;
  inline void set_productid(const ::std::string& value);
  inline void set_productid(const char* value);
  inline void set_productid(const char* value, size_t size);
  inline ::std::string* mutable_productid();
  inline ::std::string* release_productid();
  inline void set_allocated_productid(::std::string* productid);

  // @@protoc_insertion_point(class_scope:msg.Processor_109_AndroidPay)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_productid();
  inline void clear_has_productid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* productid_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_109_AndroidPay* default_instance_;
};
// -------------------------------------------------------------------

class Processor_109_AndroidPayDown : public ::google_public::protobuf::Message {
 public:
  Processor_109_AndroidPayDown();
  virtual ~Processor_109_AndroidPayDown();

  Processor_109_AndroidPayDown(const Processor_109_AndroidPayDown& from);

  inline Processor_109_AndroidPayDown& operator=(const Processor_109_AndroidPayDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_109_AndroidPayDown& default_instance();

  void Swap(Processor_109_AndroidPayDown* other);

  // implements Message ----------------------------------------------

  Processor_109_AndroidPayDown* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_109_AndroidPayDown& from);
  void MergeFrom(const Processor_109_AndroidPayDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string appID = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppIDFieldNumber = 1;
  inline const ::std::string& appid() const;
  inline void set_appid(const ::std::string& value);
  inline void set_appid(const char* value);
  inline void set_appid(const char* value, size_t size);
  inline ::std::string* mutable_appid();
  inline ::std::string* release_appid();
  inline void set_allocated_appid(::std::string* appid);

  // optional string partnerID = 2;
  inline bool has_partnerid() const;
  inline void clear_partnerid();
  static const int kPartnerIDFieldNumber = 2;
  inline const ::std::string& partnerid() const;
  inline void set_partnerid(const ::std::string& value);
  inline void set_partnerid(const char* value);
  inline void set_partnerid(const char* value, size_t size);
  inline ::std::string* mutable_partnerid();
  inline ::std::string* release_partnerid();
  inline void set_allocated_partnerid(::std::string* partnerid);

  // optional string prepayId = 3;
  inline bool has_prepayid() const;
  inline void clear_prepayid();
  static const int kPrepayIdFieldNumber = 3;
  inline const ::std::string& prepayid() const;
  inline void set_prepayid(const ::std::string& value);
  inline void set_prepayid(const char* value);
  inline void set_prepayid(const char* value, size_t size);
  inline ::std::string* mutable_prepayid();
  inline ::std::string* release_prepayid();
  inline void set_allocated_prepayid(::std::string* prepayid);

  // optional string nonceStr = 4;
  inline bool has_noncestr() const;
  inline void clear_noncestr();
  static const int kNonceStrFieldNumber = 4;
  inline const ::std::string& noncestr() const;
  inline void set_noncestr(const ::std::string& value);
  inline void set_noncestr(const char* value);
  inline void set_noncestr(const char* value, size_t size);
  inline ::std::string* mutable_noncestr();
  inline ::std::string* release_noncestr();
  inline void set_allocated_noncestr(::std::string* noncestr);

  // optional string timeStamp = 5;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimeStampFieldNumber = 5;
  inline const ::std::string& timestamp() const;
  inline void set_timestamp(const ::std::string& value);
  inline void set_timestamp(const char* value);
  inline void set_timestamp(const char* value, size_t size);
  inline ::std::string* mutable_timestamp();
  inline ::std::string* release_timestamp();
  inline void set_allocated_timestamp(::std::string* timestamp);

  // optional string sign = 6;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 6;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // @@protoc_insertion_point(class_scope:msg.Processor_109_AndroidPayDown)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_partnerid();
  inline void clear_has_partnerid();
  inline void set_has_prepayid();
  inline void clear_has_prepayid();
  inline void set_has_noncestr();
  inline void clear_has_noncestr();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_sign();
  inline void clear_has_sign();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* appid_;
  ::std::string* partnerid_;
  ::std::string* prepayid_;
  ::std::string* noncestr_;
  ::std::string* timestamp_;
  ::std::string* sign_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_109_AndroidPayDown* default_instance_;
};
// -------------------------------------------------------------------

class FeedBack : public ::google_public::protobuf::Message {
 public:
  FeedBack();
  virtual ~FeedBack();

  FeedBack(const FeedBack& from);

  inline FeedBack& operator=(const FeedBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const FeedBack& default_instance();

  void Swap(FeedBack* other);

  // implements Message ----------------------------------------------

  FeedBack* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const FeedBack& from);
  void MergeFrom(const FeedBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Describe = 1;
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 1;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const char* value, size_t size);
  inline ::std::string* mutable_describe();
  inline ::std::string* release_describe();
  inline void set_allocated_describe(::std::string* describe);

  // optional string Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // repeated string PicName = 3;
  inline int picname_size() const;
  inline void clear_picname();
  static const int kPicNameFieldNumber = 3;
  inline const ::std::string& picname(int index) const;
  inline ::std::string* mutable_picname(int index);
  inline void set_picname(int index, const ::std::string& value);
  inline void set_picname(int index, const char* value);
  inline void set_picname(int index, const char* value, size_t size);
  inline ::std::string* add_picname();
  inline void add_picname(const ::std::string& value);
  inline void add_picname(const char* value);
  inline void add_picname(const char* value, size_t size);
  inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>& picname() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::std::string>* mutable_picname();

  // @@protoc_insertion_point(class_scope:msg.FeedBack)
 private:
  inline void set_has_describe();
  inline void clear_has_describe();
  inline void set_has_type();
  inline void clear_has_type();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* describe_;
  ::std::string* type_;
  ::google_public::protobuf::RepeatedPtrField< ::std::string> picname_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static FeedBack* default_instance_;
};
// -------------------------------------------------------------------

class UserGameSetting : public ::google_public::protobuf::Message {
 public:
  UserGameSetting();
  virtual ~UserGameSetting();

  UserGameSetting(const UserGameSetting& from);

  inline UserGameSetting& operator=(const UserGameSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const UserGameSetting& default_instance();

  void Swap(UserGameSetting* other);

  // implements Message ----------------------------------------------

  UserGameSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const UserGameSetting& from);
  void MergeFrom(const UserGameSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GameName = 1;
  inline bool has_gamename() const;
  inline void clear_gamename();
  static const int kGameNameFieldNumber = 1;
  inline const ::std::string& gamename() const;
  inline void set_gamename(const ::std::string& value);
  inline void set_gamename(const char* value);
  inline void set_gamename(const char* value, size_t size);
  inline ::std::string* mutable_gamename();
  inline ::std::string* release_gamename();
  inline void set_allocated_gamename(::std::string* gamename);

  // optional .msg.RoomType GameId = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  inline ::msg::RoomType gameid() const;
  inline void set_gameid(::msg::RoomType value);

  // repeated .msg.Property Property = 3;
  inline int property_size() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 3;
  inline const ::msg::Property& property(int index) const;
  inline ::msg::Property* mutable_property(int index);
  inline ::msg::Property* add_property();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Property >&
      property() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::Property >*
      mutable_property();

  // @@protoc_insertion_point(class_scope:msg.UserGameSetting)
 private:
  inline void set_has_gamename();
  inline void clear_has_gamename();
  inline void set_has_gameid();
  inline void clear_has_gameid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gamename_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::Property > property_;
  int gameid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static UserGameSetting* default_instance_;
};
// -------------------------------------------------------------------

class UserGameSettings : public ::google_public::protobuf::Message {
 public:
  UserGameSettings();
  virtual ~UserGameSettings();

  UserGameSettings(const UserGameSettings& from);

  inline UserGameSettings& operator=(const UserGameSettings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const UserGameSettings& default_instance();

  void Swap(UserGameSettings* other);

  // implements Message ----------------------------------------------

  UserGameSettings* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const UserGameSettings& from);
  void MergeFrom(const UserGameSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.UserGameSetting GameSetting = 1;
  inline int gamesetting_size() const;
  inline void clear_gamesetting();
  static const int kGameSettingFieldNumber = 1;
  inline const ::msg::UserGameSetting& gamesetting(int index) const;
  inline ::msg::UserGameSetting* mutable_gamesetting(int index);
  inline ::msg::UserGameSetting* add_gamesetting();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserGameSetting >&
      gamesetting() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserGameSetting >*
      mutable_gamesetting();

  // @@protoc_insertion_point(class_scope:msg.UserGameSettings)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::UserGameSetting > gamesetting_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static UserGameSettings* default_instance_;
};
// -------------------------------------------------------------------

class Processor_111_GetUserSetting : public ::google_public::protobuf::Message {
 public:
  Processor_111_GetUserSetting();
  virtual ~Processor_111_GetUserSetting();

  Processor_111_GetUserSetting(const Processor_111_GetUserSetting& from);

  inline Processor_111_GetUserSetting& operator=(const Processor_111_GetUserSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_111_GetUserSetting& default_instance();

  void Swap(Processor_111_GetUserSetting* other);

  // implements Message ----------------------------------------------

  Processor_111_GetUserSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_111_GetUserSetting& from);
  void MergeFrom(const Processor_111_GetUserSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional .msg.UserGameSettings GameSettings = 3;
  inline bool has_gamesettings() const;
  inline void clear_gamesettings();
  static const int kGameSettingsFieldNumber = 3;
  inline const ::msg::UserGameSettings& gamesettings() const;
  inline ::msg::UserGameSettings* mutable_gamesettings();
  inline ::msg::UserGameSettings* release_gamesettings();
  inline void set_allocated_gamesettings(::msg::UserGameSettings* gamesettings);

  // optional int32 Diamond = 4;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 4;
  inline ::google_public::protobuf::int32 diamond() const;
  inline void set_diamond(::google_public::protobuf::int32 value);

  // optional int32 HitPoint = 5;
  inline bool has_hitpoint() const;
  inline void clear_hitpoint();
  static const int kHitPointFieldNumber = 5;
  inline ::google_public::protobuf::int32 hitpoint() const;
  inline void set_hitpoint(::google_public::protobuf::int32 value);

  // optional string PhoneNumber = 6;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhoneNumberFieldNumber = 6;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // @@protoc_insertion_point(class_scope:msg.Processor_111_GetUserSetting)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_gamesettings();
  inline void clear_has_gamesettings();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_hitpoint();
  inline void clear_has_hitpoint();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::msg::UserGameSettings* gamesettings_;
  ::google_public::protobuf::int32 diamond_;
  ::google_public::protobuf::int32 hitpoint_;
  ::std::string* phonenumber_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_111_GetUserSetting* default_instance_;
};
// -------------------------------------------------------------------

class Processor_112_ChangeUserSetting : public ::google_public::protobuf::Message {
 public:
  Processor_112_ChangeUserSetting();
  virtual ~Processor_112_ChangeUserSetting();

  Processor_112_ChangeUserSetting(const Processor_112_ChangeUserSetting& from);

  inline Processor_112_ChangeUserSetting& operator=(const Processor_112_ChangeUserSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_112_ChangeUserSetting& default_instance();

  void Swap(Processor_112_ChangeUserSetting* other);

  // implements Message ----------------------------------------------

  Processor_112_ChangeUserSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_112_ChangeUserSetting& from);
  void MergeFrom(const Processor_112_ChangeUserSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo UserDetailInfo = 1;
  inline bool has_userdetailinfo() const;
  inline void clear_userdetailinfo();
  static const int kUserDetailInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userdetailinfo() const;
  inline ::msg::UserDetailInfo* mutable_userdetailinfo();
  inline ::msg::UserDetailInfo* release_userdetailinfo();
  inline void set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo);

  // optional .msg.UserLoginInfo UserLoginInfo = 2;
  inline bool has_userlogininfo() const;
  inline void clear_userlogininfo();
  static const int kUserLoginInfoFieldNumber = 2;
  inline const ::msg::UserLoginInfo& userlogininfo() const;
  inline ::msg::UserLoginInfo* mutable_userlogininfo();
  inline ::msg::UserLoginInfo* release_userlogininfo();
  inline void set_allocated_userlogininfo(::msg::UserLoginInfo* userlogininfo);

  // optional .msg.UserGameSettings GameSettings = 3;
  inline bool has_gamesettings() const;
  inline void clear_gamesettings();
  static const int kGameSettingsFieldNumber = 3;
  inline const ::msg::UserGameSettings& gamesettings() const;
  inline ::msg::UserGameSettings* mutable_gamesettings();
  inline ::msg::UserGameSettings* release_gamesettings();
  inline void set_allocated_gamesettings(::msg::UserGameSettings* gamesettings);

  // @@protoc_insertion_point(class_scope:msg.Processor_112_ChangeUserSetting)
 private:
  inline void set_has_userdetailinfo();
  inline void clear_has_userdetailinfo();
  inline void set_has_userlogininfo();
  inline void clear_has_userlogininfo();
  inline void set_has_gamesettings();
  inline void clear_has_gamesettings();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userdetailinfo_;
  ::msg::UserLoginInfo* userlogininfo_;
  ::msg::UserGameSettings* gamesettings_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_112_ChangeUserSetting* default_instance_;
};
// -------------------------------------------------------------------

class Processor_113_GetUserPermission_UP : public ::google_public::protobuf::Message {
 public:
  Processor_113_GetUserPermission_UP();
  virtual ~Processor_113_GetUserPermission_UP();

  Processor_113_GetUserPermission_UP(const Processor_113_GetUserPermission_UP& from);

  inline Processor_113_GetUserPermission_UP& operator=(const Processor_113_GetUserPermission_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_113_GetUserPermission_UP& default_instance();

  void Swap(Processor_113_GetUserPermission_UP* other);

  // implements Message ----------------------------------------------

  Processor_113_GetUserPermission_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_113_GetUserPermission_UP& from);
  void MergeFrom(const Processor_113_GetUserPermission_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupID = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional int32 UserID = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_113_GetUserPermission_UP)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_113_GetUserPermission_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_113_GetUserPermission_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_113_GetUserPermission_DOWN();
  virtual ~Processor_113_GetUserPermission_DOWN();

  Processor_113_GetUserPermission_DOWN(const Processor_113_GetUserPermission_DOWN& from);

  inline Processor_113_GetUserPermission_DOWN& operator=(const Processor_113_GetUserPermission_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_113_GetUserPermission_DOWN& default_instance();

  void Swap(Processor_113_GetUserPermission_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_113_GetUserPermission_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_113_GetUserPermission_DOWN& from);
  void MergeFrom(const Processor_113_GetUserPermission_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.GroupPermission Permission = 1;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 1;
  inline const ::msg::GroupPermission& permission() const;
  inline ::msg::GroupPermission* mutable_permission();
  inline ::msg::GroupPermission* release_permission();
  inline void set_allocated_permission(::msg::GroupPermission* permission);

  // @@protoc_insertion_point(class_scope:msg.Processor_113_GetUserPermission_DOWN)
 private:
  inline void set_has_permission();
  inline void clear_has_permission();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::GroupPermission* permission_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_113_GetUserPermission_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_114_ChangePermission : public ::google_public::protobuf::Message {
 public:
  Processor_114_ChangePermission();
  virtual ~Processor_114_ChangePermission();

  Processor_114_ChangePermission(const Processor_114_ChangePermission& from);

  inline Processor_114_ChangePermission& operator=(const Processor_114_ChangePermission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_114_ChangePermission& default_instance();

  void Swap(Processor_114_ChangePermission* other);

  // implements Message ----------------------------------------------

  Processor_114_ChangePermission* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_114_ChangePermission& from);
  void MergeFrom(const Processor_114_ChangePermission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional .msg.GroupPermission Permission = 2;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 2;
  inline const ::msg::GroupPermission& permission() const;
  inline ::msg::GroupPermission* mutable_permission();
  inline ::msg::GroupPermission* release_permission();
  inline void set_allocated_permission(::msg::GroupPermission* permission);

  // @@protoc_insertion_point(class_scope:msg.Processor_114_ChangePermission)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_permission();
  inline void clear_has_permission();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::GroupPermission* permission_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_114_ChangePermission* default_instance_;
};
// -------------------------------------------------------------------

class GroupPermission : public ::google_public::protobuf::Message {
 public:
  GroupPermission();
  virtual ~GroupPermission();

  GroupPermission(const GroupPermission& from);

  inline GroupPermission& operator=(const GroupPermission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const GroupPermission& default_instance();

  void Swap(GroupPermission* other);

  // implements Message ----------------------------------------------

  GroupPermission* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const GroupPermission& from);
  void MergeFrom(const GroupPermission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupID = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional int32 Credit = 2;
  inline bool has_credit() const;
  inline void clear_credit();
  static const int kCreditFieldNumber = 2;
  inline ::google_public::protobuf::int32 credit() const;
  inline void set_credit(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.GroupPermission)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_credit();
  inline void clear_has_credit();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  ::google_public::protobuf::int32 credit_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static GroupPermission* default_instance_;
};
// -------------------------------------------------------------------

class Processor_115_GetGroupSetting_UP : public ::google_public::protobuf::Message {
 public:
  Processor_115_GetGroupSetting_UP();
  virtual ~Processor_115_GetGroupSetting_UP();

  Processor_115_GetGroupSetting_UP(const Processor_115_GetGroupSetting_UP& from);

  inline Processor_115_GetGroupSetting_UP& operator=(const Processor_115_GetGroupSetting_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_115_GetGroupSetting_UP& default_instance();

  void Swap(Processor_115_GetGroupSetting_UP* other);

  // implements Message ----------------------------------------------

  Processor_115_GetGroupSetting_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_115_GetGroupSetting_UP& from);
  void MergeFrom(const Processor_115_GetGroupSetting_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupID = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_115_GetGroupSetting_UP)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_115_GetGroupSetting_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_115_GetGroupSetting_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_115_GetGroupSetting_DOWN();
  virtual ~Processor_115_GetGroupSetting_DOWN();

  Processor_115_GetGroupSetting_DOWN(const Processor_115_GetGroupSetting_DOWN& from);

  inline Processor_115_GetGroupSetting_DOWN& operator=(const Processor_115_GetGroupSetting_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_115_GetGroupSetting_DOWN& default_instance();

  void Swap(Processor_115_GetGroupSetting_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_115_GetGroupSetting_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_115_GetGroupSetting_DOWN& from);
  void MergeFrom(const Processor_115_GetGroupSetting_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.GroupSetting Setting = 1;
  inline bool has_setting() const;
  inline void clear_setting();
  static const int kSettingFieldNumber = 1;
  inline const ::msg::GroupSetting& setting() const;
  inline ::msg::GroupSetting* mutable_setting();
  inline ::msg::GroupSetting* release_setting();
  inline void set_allocated_setting(::msg::GroupSetting* setting);

  // @@protoc_insertion_point(class_scope:msg.Processor_115_GetGroupSetting_DOWN)
 private:
  inline void set_has_setting();
  inline void clear_has_setting();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::GroupSetting* setting_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_115_GetGroupSetting_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_116_ChangeGroupSetting : public ::google_public::protobuf::Message {
 public:
  Processor_116_ChangeGroupSetting();
  virtual ~Processor_116_ChangeGroupSetting();

  Processor_116_ChangeGroupSetting(const Processor_116_ChangeGroupSetting& from);

  inline Processor_116_ChangeGroupSetting& operator=(const Processor_116_ChangeGroupSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_116_ChangeGroupSetting& default_instance();

  void Swap(Processor_116_ChangeGroupSetting* other);

  // implements Message ----------------------------------------------

  Processor_116_ChangeGroupSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_116_ChangeGroupSetting& from);
  void MergeFrom(const Processor_116_ChangeGroupSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.GroupSetting Setting = 1;
  inline bool has_setting() const;
  inline void clear_setting();
  static const int kSettingFieldNumber = 1;
  inline const ::msg::GroupSetting& setting() const;
  inline ::msg::GroupSetting* mutable_setting();
  inline ::msg::GroupSetting* release_setting();
  inline void set_allocated_setting(::msg::GroupSetting* setting);

  // @@protoc_insertion_point(class_scope:msg.Processor_116_ChangeGroupSetting)
 private:
  inline void set_has_setting();
  inline void clear_has_setting();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::GroupSetting* setting_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_116_ChangeGroupSetting* default_instance_;
};
// -------------------------------------------------------------------

class Processor_118_SendVerification : public ::google_public::protobuf::Message {
 public:
  Processor_118_SendVerification();
  virtual ~Processor_118_SendVerification();

  Processor_118_SendVerification(const Processor_118_SendVerification& from);

  inline Processor_118_SendVerification& operator=(const Processor_118_SendVerification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_118_SendVerification& default_instance();

  void Swap(Processor_118_SendVerification* other);

  // implements Message ----------------------------------------------

  Processor_118_SendVerification* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_118_SendVerification& from);
  void MergeFrom(const Processor_118_SendVerification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PhoneNumber = 1;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhoneNumberFieldNumber = 1;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // @@protoc_insertion_point(class_scope:msg.Processor_118_SendVerification)
 private:
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* phonenumber_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_118_SendVerification* default_instance_;
};
// -------------------------------------------------------------------

class Processor_119_BindPhone : public ::google_public::protobuf::Message {
 public:
  Processor_119_BindPhone();
  virtual ~Processor_119_BindPhone();

  Processor_119_BindPhone(const Processor_119_BindPhone& from);

  inline Processor_119_BindPhone& operator=(const Processor_119_BindPhone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_119_BindPhone& default_instance();

  void Swap(Processor_119_BindPhone* other);

  // implements Message ----------------------------------------------

  Processor_119_BindPhone* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_119_BindPhone& from);
  void MergeFrom(const Processor_119_BindPhone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PhoneNumber = 1;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhoneNumberFieldNumber = 1;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string Verification = 2;
  inline bool has_verification() const;
  inline void clear_verification();
  static const int kVerificationFieldNumber = 2;
  inline const ::std::string& verification() const;
  inline void set_verification(const ::std::string& value);
  inline void set_verification(const char* value);
  inline void set_verification(const char* value, size_t size);
  inline ::std::string* mutable_verification();
  inline ::std::string* release_verification();
  inline void set_allocated_verification(::std::string* verification);

  // @@protoc_insertion_point(class_scope:msg.Processor_119_BindPhone)
 private:
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_verification();
  inline void clear_has_verification();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* phonenumber_;
  ::std::string* verification_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_119_BindPhone* default_instance_;
};
// -------------------------------------------------------------------

class GroupSetting : public ::google_public::protobuf::Message {
 public:
  GroupSetting();
  virtual ~GroupSetting();

  GroupSetting(const GroupSetting& from);

  inline GroupSetting& operator=(const GroupSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const GroupSetting& default_instance();

  void Swap(GroupSetting* other);

  // implements Message ----------------------------------------------

  GroupSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const GroupSetting& from);
  void MergeFrom(const GroupSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupID = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional bool ReceivePush = 2;
  inline bool has_receivepush() const;
  inline void clear_receivepush();
  static const int kReceivePushFieldNumber = 2;
  inline bool receivepush() const;
  inline void set_receivepush(bool value);

  // @@protoc_insertion_point(class_scope:msg.GroupSetting)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_receivepush();
  inline void clear_has_receivepush();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  bool receivepush_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static GroupSetting* default_instance_;
};
// -------------------------------------------------------------------

class FriendInfo : public ::google_public::protobuf::Message {
 public:
  FriendInfo();
  virtual ~FriendInfo();

  FriendInfo(const FriendInfo& from);

  inline FriendInfo& operator=(const FriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const FriendInfo& default_instance();

  void Swap(FriendInfo* other);

  // implements Message ----------------------------------------------

  FriendInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const FriendInfo& from);
  void MergeFrom(const FriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo UserDetailInfo = 1;
  inline bool has_userdetailinfo() const;
  inline void clear_userdetailinfo();
  static const int kUserDetailInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userdetailinfo() const;
  inline ::msg::UserDetailInfo* mutable_userdetailinfo();
  inline ::msg::UserDetailInfo* release_userdetailinfo();
  inline void set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo);

  // optional bool IsOnline = 2;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsOnlineFieldNumber = 2;
  inline bool isonline() const;
  inline void set_isonline(bool value);

  // @@protoc_insertion_point(class_scope:msg.FriendInfo)
 private:
  inline void set_has_userdetailinfo();
  inline void clear_has_userdetailinfo();
  inline void set_has_isonline();
  inline void clear_has_isonline();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userdetailinfo_;
  bool isonline_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static FriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_120_GetFriendList : public ::google_public::protobuf::Message {
 public:
  Processor_120_GetFriendList();
  virtual ~Processor_120_GetFriendList();

  Processor_120_GetFriendList(const Processor_120_GetFriendList& from);

  inline Processor_120_GetFriendList& operator=(const Processor_120_GetFriendList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_120_GetFriendList& default_instance();

  void Swap(Processor_120_GetFriendList* other);

  // implements Message ----------------------------------------------

  Processor_120_GetFriendList* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_120_GetFriendList& from);
  void MergeFrom(const Processor_120_GetFriendList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // repeated .msg.FriendInfo FriendInfo = 2;
  inline int friendinfo_size() const;
  inline void clear_friendinfo();
  static const int kFriendInfoFieldNumber = 2;
  inline const ::msg::FriendInfo& friendinfo(int index) const;
  inline ::msg::FriendInfo* mutable_friendinfo(int index);
  inline ::msg::FriendInfo* add_friendinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::FriendInfo >&
      friendinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::FriendInfo >*
      mutable_friendinfo();

  // @@protoc_insertion_point(class_scope:msg.Processor_120_GetFriendList)
 private:
  inline void set_has_response();
  inline void clear_has_response();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::FriendInfo > friendinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_120_GetFriendList* default_instance_;
};
// -------------------------------------------------------------------

class Processor_121_SearchUser_UP : public ::google_public::protobuf::Message {
 public:
  Processor_121_SearchUser_UP();
  virtual ~Processor_121_SearchUser_UP();

  Processor_121_SearchUser_UP(const Processor_121_SearchUser_UP& from);

  inline Processor_121_SearchUser_UP& operator=(const Processor_121_SearchUser_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_121_SearchUser_UP& default_instance();

  void Swap(Processor_121_SearchUser_UP* other);

  // implements Message ----------------------------------------------

  Processor_121_SearchUser_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_121_SearchUser_UP& from);
  void MergeFrom(const Processor_121_SearchUser_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string SearchName = 1;
  inline bool has_searchname() const;
  inline void clear_searchname();
  static const int kSearchNameFieldNumber = 1;
  inline const ::std::string& searchname() const;
  inline void set_searchname(const ::std::string& value);
  inline void set_searchname(const char* value);
  inline void set_searchname(const char* value, size_t size);
  inline ::std::string* mutable_searchname();
  inline ::std::string* release_searchname();
  inline void set_allocated_searchname(::std::string* searchname);

  // @@protoc_insertion_point(class_scope:msg.Processor_121_SearchUser_UP)
 private:
  inline void set_has_searchname();
  inline void clear_has_searchname();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* searchname_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_121_SearchUser_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_121_SearchUser_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_121_SearchUser_DOWN();
  virtual ~Processor_121_SearchUser_DOWN();

  Processor_121_SearchUser_DOWN(const Processor_121_SearchUser_DOWN& from);

  inline Processor_121_SearchUser_DOWN& operator=(const Processor_121_SearchUser_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_121_SearchUser_DOWN& default_instance();

  void Swap(Processor_121_SearchUser_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_121_SearchUser_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_121_SearchUser_DOWN& from);
  void MergeFrom(const Processor_121_SearchUser_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // repeated .msg.UserDetailInfo UserDetailInfo = 2;
  inline int userdetailinfo_size() const;
  inline void clear_userdetailinfo();
  static const int kUserDetailInfoFieldNumber = 2;
  inline const ::msg::UserDetailInfo& userdetailinfo(int index) const;
  inline ::msg::UserDetailInfo* mutable_userdetailinfo(int index);
  inline ::msg::UserDetailInfo* add_userdetailinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >&
      userdetailinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >*
      mutable_userdetailinfo();

  // @@protoc_insertion_point(class_scope:msg.Processor_121_SearchUser_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo > userdetailinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_121_SearchUser_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_122_SendRequest : public ::google_public::protobuf::Message {
 public:
  Processor_122_SendRequest();
  virtual ~Processor_122_SendRequest();

  Processor_122_SendRequest(const Processor_122_SendRequest& from);

  inline Processor_122_SendRequest& operator=(const Processor_122_SendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_122_SendRequest& default_instance();

  void Swap(Processor_122_SendRequest* other);

  // implements Message ----------------------------------------------

  Processor_122_SendRequest* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_122_SendRequest& from);
  void MergeFrom(const Processor_122_SendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.Request Request = 1;
  inline int request_size() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::msg::Request& request(int index) const;
  inline ::msg::Request* mutable_request(int index);
  inline ::msg::Request* add_request();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Request >&
      request() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::Request >*
      mutable_request();

  // @@protoc_insertion_point(class_scope:msg.Processor_122_SendRequest)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::Request > request_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_122_SendRequest* default_instance_;
};
// -------------------------------------------------------------------

class Processor_123_ReceiveRequestList : public ::google_public::protobuf::Message {
 public:
  Processor_123_ReceiveRequestList();
  virtual ~Processor_123_ReceiveRequestList();

  Processor_123_ReceiveRequestList(const Processor_123_ReceiveRequestList& from);

  inline Processor_123_ReceiveRequestList& operator=(const Processor_123_ReceiveRequestList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_123_ReceiveRequestList& default_instance();

  void Swap(Processor_123_ReceiveRequestList* other);

  // implements Message ----------------------------------------------

  Processor_123_ReceiveRequestList* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_123_ReceiveRequestList& from);
  void MergeFrom(const Processor_123_ReceiveRequestList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.Request Request = 1;
  inline int request_size() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::msg::Request& request(int index) const;
  inline ::msg::Request* mutable_request(int index);
  inline ::msg::Request* add_request();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Request >&
      request() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::Request >*
      mutable_request();

  // @@protoc_insertion_point(class_scope:msg.Processor_123_ReceiveRequestList)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::Request > request_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_123_ReceiveRequestList* default_instance_;
};
// -------------------------------------------------------------------

class Invitation : public ::google_public::protobuf::Message {
 public:
  Invitation();
  virtual ~Invitation();

  Invitation(const Invitation& from);

  inline Invitation& operator=(const Invitation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Invitation& default_instance();

  void Swap(Invitation* other);

  // implements Message ----------------------------------------------

  Invitation* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Invitation& from);
  void MergeFrom(const Invitation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Request Request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::msg::Request& request() const;
  inline ::msg::Request* mutable_request();
  inline ::msg::Request* release_request();
  inline void set_allocated_request(::msg::Request* request);

  // optional .msg.MessageStatus SendingStatus = 2;
  inline bool has_sendingstatus() const;
  inline void clear_sendingstatus();
  static const int kSendingStatusFieldNumber = 2;
  inline ::msg::MessageStatus sendingstatus() const;
  inline void set_sendingstatus(::msg::MessageStatus value);

  // optional .msg.InvitationStatus Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::msg::InvitationStatus status() const;
  inline void set_status(::msg::InvitationStatus value);

  // @@protoc_insertion_point(class_scope:msg.Invitation)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_sendingstatus();
  inline void clear_has_sendingstatus();
  inline void set_has_status();
  inline void clear_has_status();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Request* request_;
  int sendingstatus_;
  int status_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Invitation* default_instance_;
};
// -------------------------------------------------------------------

class Request : public ::google_public::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  Request* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 id() const;
  inline void set_id(::google_public::protobuf::int32 value);

  // optional .msg.UserDetailInfo UserDetailInfo = 2;
  inline bool has_userdetailinfo() const;
  inline void clear_userdetailinfo();
  static const int kUserDetailInfoFieldNumber = 2;
  inline const ::msg::UserDetailInfo& userdetailinfo() const;
  inline ::msg::UserDetailInfo* mutable_userdetailinfo();
  inline ::msg::UserDetailInfo* release_userdetailinfo();
  inline void set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo);

  // optional int32 ReceiverID = 3;
  inline bool has_receiverid() const;
  inline void clear_receiverid();
  static const int kReceiverIDFieldNumber = 3;
  inline ::google_public::protobuf::int32 receiverid() const;
  inline void set_receiverid(::google_public::protobuf::int32 value);

  // optional .msg.GroupInfo GroupInfo = 4;
  inline bool has_groupinfo() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 4;
  inline const ::msg::GroupInfo& groupinfo() const;
  inline ::msg::GroupInfo* mutable_groupinfo();
  inline ::msg::GroupInfo* release_groupinfo();
  inline void set_allocated_groupinfo(::msg::GroupInfo* groupinfo);

  // optional .msg.RequestType Type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::msg::RequestType type() const;
  inline void set_type(::msg::RequestType value);

  // @@protoc_insertion_point(class_scope:msg.Request)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userdetailinfo();
  inline void clear_has_userdetailinfo();
  inline void set_has_receiverid();
  inline void clear_has_receiverid();
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();
  inline void set_has_type();
  inline void clear_has_type();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userdetailinfo_;
  ::google_public::protobuf::int32 id_;
  ::google_public::protobuf::int32 receiverid_;
  ::msg::GroupInfo* groupinfo_;
  int type_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Processor_124_DealRequest : public ::google_public::protobuf::Message {
 public:
  Processor_124_DealRequest();
  virtual ~Processor_124_DealRequest();

  Processor_124_DealRequest(const Processor_124_DealRequest& from);

  inline Processor_124_DealRequest& operator=(const Processor_124_DealRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_124_DealRequest& default_instance();

  void Swap(Processor_124_DealRequest* other);

  // implements Message ----------------------------------------------

  Processor_124_DealRequest* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_124_DealRequest& from);
  void MergeFrom(const Processor_124_DealRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool Accepted = 1;
  inline bool has_accepted() const;
  inline void clear_accepted();
  static const int kAcceptedFieldNumber = 1;
  inline bool accepted() const;
  inline void set_accepted(bool value);

  // optional int32 RequestID = 2;
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 requestid() const;
  inline void set_requestid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_124_DealRequest)
 private:
  inline void set_has_accepted();
  inline void clear_has_accepted();
  inline void set_has_requestid();
  inline void clear_has_requestid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool accepted_;
  ::google_public::protobuf::int32 requestid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_124_DealRequest* default_instance_;
};
// -------------------------------------------------------------------

class Processor_124_DealRequest_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_124_DealRequest_DOWN();
  virtual ~Processor_124_DealRequest_DOWN();

  Processor_124_DealRequest_DOWN(const Processor_124_DealRequest_DOWN& from);

  inline Processor_124_DealRequest_DOWN& operator=(const Processor_124_DealRequest_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_124_DealRequest_DOWN& default_instance();

  void Swap(Processor_124_DealRequest_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_124_DealRequest_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_124_DealRequest_DOWN& from);
  void MergeFrom(const Processor_124_DealRequest_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional int32 RequestID = 2;
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 requestid() const;
  inline void set_requestid(::google_public::protobuf::int32 value);

  // optional bool Accepted = 3;
  inline bool has_accepted() const;
  inline void clear_accepted();
  static const int kAcceptedFieldNumber = 3;
  inline bool accepted() const;
  inline void set_accepted(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_124_DealRequest_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_accepted();
  inline void clear_has_accepted();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::google_public::protobuf::int32 requestid_;
  bool accepted_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_124_DealRequest_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_125_DeleteFriend : public ::google_public::protobuf::Message {
 public:
  Processor_125_DeleteFriend();
  virtual ~Processor_125_DeleteFriend();

  Processor_125_DeleteFriend(const Processor_125_DeleteFriend& from);

  inline Processor_125_DeleteFriend& operator=(const Processor_125_DeleteFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_125_DeleteFriend& default_instance();

  void Swap(Processor_125_DeleteFriend* other);

  // implements Message ----------------------------------------------

  Processor_125_DeleteFriend* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_125_DeleteFriend& from);
  void MergeFrom(const Processor_125_DeleteFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_125_DeleteFriend)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_125_DeleteFriend* default_instance_;
};
// -------------------------------------------------------------------

class Processor_126_Set_MomentBlock : public ::google_public::protobuf::Message {
 public:
  Processor_126_Set_MomentBlock();
  virtual ~Processor_126_Set_MomentBlock();

  Processor_126_Set_MomentBlock(const Processor_126_Set_MomentBlock& from);

  inline Processor_126_Set_MomentBlock& operator=(const Processor_126_Set_MomentBlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_126_Set_MomentBlock& default_instance();

  void Swap(Processor_126_Set_MomentBlock* other);

  // implements Message ----------------------------------------------

  Processor_126_Set_MomentBlock* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_126_Set_MomentBlock& from);
  void MergeFrom(const Processor_126_Set_MomentBlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional bool IsBlock = 2;
  inline bool has_isblock() const;
  inline void clear_isblock();
  static const int kIsBlockFieldNumber = 2;
  inline bool isblock() const;
  inline void set_isblock(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_126_Set_MomentBlock)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_isblock();
  inline void clear_has_isblock();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  bool isblock_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_126_Set_MomentBlock* default_instance_;
};
// -------------------------------------------------------------------

class Processor_127_SearchFriendByPhoneNumber_UP : public ::google_public::protobuf::Message {
 public:
  Processor_127_SearchFriendByPhoneNumber_UP();
  virtual ~Processor_127_SearchFriendByPhoneNumber_UP();

  Processor_127_SearchFriendByPhoneNumber_UP(const Processor_127_SearchFriendByPhoneNumber_UP& from);

  inline Processor_127_SearchFriendByPhoneNumber_UP& operator=(const Processor_127_SearchFriendByPhoneNumber_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_127_SearchFriendByPhoneNumber_UP& default_instance();

  void Swap(Processor_127_SearchFriendByPhoneNumber_UP* other);

  // implements Message ----------------------------------------------

  Processor_127_SearchFriendByPhoneNumber_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_127_SearchFriendByPhoneNumber_UP& from);
  void MergeFrom(const Processor_127_SearchFriendByPhoneNumber_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string PhoneNumber = 1;
  inline int phonenumber_size() const;
  inline void clear_phonenumber();
  static const int kPhoneNumberFieldNumber = 1;
  inline const ::std::string& phonenumber(int index) const;
  inline ::std::string* mutable_phonenumber(int index);
  inline void set_phonenumber(int index, const ::std::string& value);
  inline void set_phonenumber(int index, const char* value);
  inline void set_phonenumber(int index, const char* value, size_t size);
  inline ::std::string* add_phonenumber();
  inline void add_phonenumber(const ::std::string& value);
  inline void add_phonenumber(const char* value);
  inline void add_phonenumber(const char* value, size_t size);
  inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>& phonenumber() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::std::string>* mutable_phonenumber();

  // @@protoc_insertion_point(class_scope:msg.Processor_127_SearchFriendByPhoneNumber_UP)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::std::string> phonenumber_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_127_SearchFriendByPhoneNumber_UP* default_instance_;
};
// -------------------------------------------------------------------

class FriendByPhoneNumber : public ::google_public::protobuf::Message {
 public:
  FriendByPhoneNumber();
  virtual ~FriendByPhoneNumber();

  FriendByPhoneNumber(const FriendByPhoneNumber& from);

  inline FriendByPhoneNumber& operator=(const FriendByPhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const FriendByPhoneNumber& default_instance();

  void Swap(FriendByPhoneNumber* other);

  // implements Message ----------------------------------------------

  FriendByPhoneNumber* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const FriendByPhoneNumber& from);
  void MergeFrom(const FriendByPhoneNumber& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PhoneNumber = 1;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhoneNumberFieldNumber = 1;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional .msg.UserDetailInfo Users = 2;
  inline bool has_users() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 2;
  inline const ::msg::UserDetailInfo& users() const;
  inline ::msg::UserDetailInfo* mutable_users();
  inline ::msg::UserDetailInfo* release_users();
  inline void set_allocated_users(::msg::UserDetailInfo* users);

  // optional bool IsFriend = 3;
  inline bool has_isfriend() const;
  inline void clear_isfriend();
  static const int kIsFriendFieldNumber = 3;
  inline bool isfriend() const;
  inline void set_isfriend(bool value);

  // @@protoc_insertion_point(class_scope:msg.FriendByPhoneNumber)
 private:
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_users();
  inline void clear_has_users();
  inline void set_has_isfriend();
  inline void clear_has_isfriend();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* phonenumber_;
  ::msg::UserDetailInfo* users_;
  bool isfriend_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static FriendByPhoneNumber* default_instance_;
};
// -------------------------------------------------------------------

class Processor_127_SearchFriendByPhoneNumber_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_127_SearchFriendByPhoneNumber_DOWN();
  virtual ~Processor_127_SearchFriendByPhoneNumber_DOWN();

  Processor_127_SearchFriendByPhoneNumber_DOWN(const Processor_127_SearchFriendByPhoneNumber_DOWN& from);

  inline Processor_127_SearchFriendByPhoneNumber_DOWN& operator=(const Processor_127_SearchFriendByPhoneNumber_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_127_SearchFriendByPhoneNumber_DOWN& default_instance();

  void Swap(Processor_127_SearchFriendByPhoneNumber_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_127_SearchFriendByPhoneNumber_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_127_SearchFriendByPhoneNumber_DOWN& from);
  void MergeFrom(const Processor_127_SearchFriendByPhoneNumber_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.FriendByPhoneNumber Friends = 1;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 1;
  inline const ::msg::FriendByPhoneNumber& friends(int index) const;
  inline ::msg::FriendByPhoneNumber* mutable_friends(int index);
  inline ::msg::FriendByPhoneNumber* add_friends();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::FriendByPhoneNumber >&
      friends() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::FriendByPhoneNumber >*
      mutable_friends();

  // @@protoc_insertion_point(class_scope:msg.Processor_127_SearchFriendByPhoneNumber_DOWN)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::FriendByPhoneNumber > friends_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_127_SearchFriendByPhoneNumber_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_128_GetMomentBlockUsers_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_128_GetMomentBlockUsers_DOWN();
  virtual ~Processor_128_GetMomentBlockUsers_DOWN();

  Processor_128_GetMomentBlockUsers_DOWN(const Processor_128_GetMomentBlockUsers_DOWN& from);

  inline Processor_128_GetMomentBlockUsers_DOWN& operator=(const Processor_128_GetMomentBlockUsers_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_128_GetMomentBlockUsers_DOWN& default_instance();

  void Swap(Processor_128_GetMomentBlockUsers_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_128_GetMomentBlockUsers_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_128_GetMomentBlockUsers_DOWN& from);
  void MergeFrom(const Processor_128_GetMomentBlockUsers_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.UserDetailInfo Users = 1;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 1;
  inline const ::msg::UserDetailInfo& users(int index) const;
  inline ::msg::UserDetailInfo* mutable_users(int index);
  inline ::msg::UserDetailInfo* add_users();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >&
      users() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >*
      mutable_users();

  // @@protoc_insertion_point(class_scope:msg.Processor_128_GetMomentBlockUsers_DOWN)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo > users_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_128_GetMomentBlockUsers_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_130_Send_Diamond : public ::google_public::protobuf::Message {
 public:
  Processor_130_Send_Diamond();
  virtual ~Processor_130_Send_Diamond();

  Processor_130_Send_Diamond(const Processor_130_Send_Diamond& from);

  inline Processor_130_Send_Diamond& operator=(const Processor_130_Send_Diamond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_130_Send_Diamond& default_instance();

  void Swap(Processor_130_Send_Diamond* other);

  // implements Message ----------------------------------------------

  Processor_130_Send_Diamond* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_130_Send_Diamond& from);
  void MergeFrom(const Processor_130_Send_Diamond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional int32 Amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google_public::protobuf::int32 amount() const;
  inline void set_amount(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_130_Send_Diamond)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  ::google_public::protobuf::int32 amount_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_130_Send_Diamond* default_instance_;
};
// -------------------------------------------------------------------

class ChatMessage : public ::google_public::protobuf::Message {
 public:
  ChatMessage();
  virtual ~ChatMessage();

  ChatMessage(const ChatMessage& from);

  inline ChatMessage& operator=(const ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ChatMessage& default_instance();

  void Swap(ChatMessage* other);

  // implements Message ----------------------------------------------

  ChatMessage* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ChatMessage& from);
  void MergeFrom(const ChatMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo UserDetailInfo = 1;
  inline bool has_userdetailinfo() const;
  inline void clear_userdetailinfo();
  static const int kUserDetailInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userdetailinfo() const;
  inline ::msg::UserDetailInfo* mutable_userdetailinfo();
  inline ::msg::UserDetailInfo* release_userdetailinfo();
  inline void set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo);

  // optional int32 GroupID = 2;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional int32 ReceiveUserID = 3;
  inline bool has_receiveuserid() const;
  inline void clear_receiveuserid();
  static const int kReceiveUserIDFieldNumber = 3;
  inline ::google_public::protobuf::int32 receiveuserid() const;
  inline void set_receiveuserid(::google_public::protobuf::int32 value);

  // optional .msg.MessageInfo MessageInfo = 4;
  inline bool has_messageinfo() const;
  inline void clear_messageinfo();
  static const int kMessageInfoFieldNumber = 4;
  inline const ::msg::MessageInfo& messageinfo() const;
  inline ::msg::MessageInfo* mutable_messageinfo();
  inline ::msg::MessageInfo* release_messageinfo();
  inline void set_allocated_messageinfo(::msg::MessageInfo* messageinfo);

  // optional string SubTime = 5;
  inline bool has_subtime() const;
  inline void clear_subtime();
  static const int kSubTimeFieldNumber = 5;
  inline const ::std::string& subtime() const;
  inline void set_subtime(const ::std::string& value);
  inline void set_subtime(const char* value);
  inline void set_subtime(const char* value, size_t size);
  inline ::std::string* mutable_subtime();
  inline ::std::string* release_subtime();
  inline void set_allocated_subtime(::std::string* subtime);

  // optional int32 ID = 6;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 6;
  inline ::google_public::protobuf::int32 id() const;
  inline void set_id(::google_public::protobuf::int32 value);

  // optional .msg.MessageStatus Status = 7;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 7;
  inline ::msg::MessageStatus status() const;
  inline void set_status(::msg::MessageStatus value);

  // @@protoc_insertion_point(class_scope:msg.ChatMessage)
 private:
  inline void set_has_userdetailinfo();
  inline void clear_has_userdetailinfo();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_receiveuserid();
  inline void clear_has_receiveuserid();
  inline void set_has_messageinfo();
  inline void clear_has_messageinfo();
  inline void set_has_subtime();
  inline void clear_has_subtime();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userdetailinfo_;
  ::google_public::protobuf::int32 groupid_;
  ::google_public::protobuf::int32 receiveuserid_;
  ::msg::MessageInfo* messageinfo_;
  ::std::string* subtime_;
  ::google_public::protobuf::int32 id_;
  int status_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ChatMessage* default_instance_;
};
// -------------------------------------------------------------------

class MessageInfo : public ::google_public::protobuf::Message {
 public:
  MessageInfo();
  virtual ~MessageInfo();

  MessageInfo(const MessageInfo& from);

  inline MessageInfo& operator=(const MessageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MessageInfo& default_instance();

  void Swap(MessageInfo* other);

  // implements Message ----------------------------------------------

  MessageInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MessageInfo& from);
  void MergeFrom(const MessageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.MessageType Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::msg::MessageType type() const;
  inline void set_type(::msg::MessageType value);

  // optional .msg.TextMessageInfo TextInfo = 2;
  inline bool has_textinfo() const;
  inline void clear_textinfo();
  static const int kTextInfoFieldNumber = 2;
  inline const ::msg::TextMessageInfo& textinfo() const;
  inline ::msg::TextMessageInfo* mutable_textinfo();
  inline ::msg::TextMessageInfo* release_textinfo();
  inline void set_allocated_textinfo(::msg::TextMessageInfo* textinfo);

  // optional .msg.PicMessageInfo PicInfo = 3;
  inline bool has_picinfo() const;
  inline void clear_picinfo();
  static const int kPicInfoFieldNumber = 3;
  inline const ::msg::PicMessageInfo& picinfo() const;
  inline ::msg::PicMessageInfo* mutable_picinfo();
  inline ::msg::PicMessageInfo* release_picinfo();
  inline void set_allocated_picinfo(::msg::PicMessageInfo* picinfo);

  // optional .msg.VoiceMessageInfo VoiceInfo = 4;
  inline bool has_voiceinfo() const;
  inline void clear_voiceinfo();
  static const int kVoiceInfoFieldNumber = 4;
  inline const ::msg::VoiceMessageInfo& voiceinfo() const;
  inline ::msg::VoiceMessageInfo* mutable_voiceinfo();
  inline ::msg::VoiceMessageInfo* release_voiceinfo();
  inline void set_allocated_voiceinfo(::msg::VoiceMessageInfo* voiceinfo);

  // optional .msg.CreateRoomMessageInfo CreateRoomInfo = 5;
  inline bool has_createroominfo() const;
  inline void clear_createroominfo();
  static const int kCreateRoomInfoFieldNumber = 5;
  inline const ::msg::CreateRoomMessageInfo& createroominfo() const;
  inline ::msg::CreateRoomMessageInfo* mutable_createroominfo();
  inline ::msg::CreateRoomMessageInfo* release_createroominfo();
  inline void set_allocated_createroominfo(::msg::CreateRoomMessageInfo* createroominfo);

  // optional .msg.GroupNoticeMessageInfo GroupNoticeInfo = 6;
  inline bool has_groupnoticeinfo() const;
  inline void clear_groupnoticeinfo();
  static const int kGroupNoticeInfoFieldNumber = 6;
  inline const ::msg::GroupNoticeMessageInfo& groupnoticeinfo() const;
  inline ::msg::GroupNoticeMessageInfo* mutable_groupnoticeinfo();
  inline ::msg::GroupNoticeMessageInfo* release_groupnoticeinfo();
  inline void set_allocated_groupnoticeinfo(::msg::GroupNoticeMessageInfo* groupnoticeinfo);

  // @@protoc_insertion_point(class_scope:msg.MessageInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_textinfo();
  inline void clear_has_textinfo();
  inline void set_has_picinfo();
  inline void clear_has_picinfo();
  inline void set_has_voiceinfo();
  inline void clear_has_voiceinfo();
  inline void set_has_createroominfo();
  inline void clear_has_createroominfo();
  inline void set_has_groupnoticeinfo();
  inline void clear_has_groupnoticeinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::TextMessageInfo* textinfo_;
  ::msg::PicMessageInfo* picinfo_;
  ::msg::VoiceMessageInfo* voiceinfo_;
  ::msg::CreateRoomMessageInfo* createroominfo_;
  ::msg::GroupNoticeMessageInfo* groupnoticeinfo_;
  int type_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MessageInfo* default_instance_;
};
// -------------------------------------------------------------------

class TextMessageInfo : public ::google_public::protobuf::Message {
 public:
  TextMessageInfo();
  virtual ~TextMessageInfo();

  TextMessageInfo(const TextMessageInfo& from);

  inline TextMessageInfo& operator=(const TextMessageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const TextMessageInfo& default_instance();

  void Swap(TextMessageInfo* other);

  // implements Message ----------------------------------------------

  TextMessageInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const TextMessageInfo& from);
  void MergeFrom(const TextMessageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:msg.TextMessageInfo)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* text_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static TextMessageInfo* default_instance_;
};
// -------------------------------------------------------------------

class PicMessageInfo : public ::google_public::protobuf::Message {
 public:
  PicMessageInfo();
  virtual ~PicMessageInfo();

  PicMessageInfo(const PicMessageInfo& from);

  inline PicMessageInfo& operator=(const PicMessageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PicMessageInfo& default_instance();

  void Swap(PicMessageInfo* other);

  // implements Message ----------------------------------------------

  PicMessageInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PicMessageInfo& from);
  void MergeFrom(const PicMessageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PicName = 1;
  inline bool has_picname() const;
  inline void clear_picname();
  static const int kPicNameFieldNumber = 1;
  inline const ::std::string& picname() const;
  inline void set_picname(const ::std::string& value);
  inline void set_picname(const char* value);
  inline void set_picname(const char* value, size_t size);
  inline ::std::string* mutable_picname();
  inline ::std::string* release_picname();
  inline void set_allocated_picname(::std::string* picname);

  // @@protoc_insertion_point(class_scope:msg.PicMessageInfo)
 private:
  inline void set_has_picname();
  inline void clear_has_picname();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* picname_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PicMessageInfo* default_instance_;
};
// -------------------------------------------------------------------

class VoiceMessageInfo : public ::google_public::protobuf::Message {
 public:
  VoiceMessageInfo();
  virtual ~VoiceMessageInfo();

  VoiceMessageInfo(const VoiceMessageInfo& from);

  inline VoiceMessageInfo& operator=(const VoiceMessageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const VoiceMessageInfo& default_instance();

  void Swap(VoiceMessageInfo* other);

  // implements Message ----------------------------------------------

  VoiceMessageInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const VoiceMessageInfo& from);
  void MergeFrom(const VoiceMessageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string VoiceName = 1;
  inline bool has_voicename() const;
  inline void clear_voicename();
  static const int kVoiceNameFieldNumber = 1;
  inline const ::std::string& voicename() const;
  inline void set_voicename(const ::std::string& value);
  inline void set_voicename(const char* value);
  inline void set_voicename(const char* value, size_t size);
  inline ::std::string* mutable_voicename();
  inline ::std::string* release_voicename();
  inline void set_allocated_voicename(::std::string* voicename);

  // optional int32 VoiceTime = 2;
  inline bool has_voicetime() const;
  inline void clear_voicetime();
  static const int kVoiceTimeFieldNumber = 2;
  inline ::google_public::protobuf::int32 voicetime() const;
  inline void set_voicetime(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.VoiceMessageInfo)
 private:
  inline void set_has_voicename();
  inline void clear_has_voicename();
  inline void set_has_voicetime();
  inline void clear_has_voicetime();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* voicename_;
  ::google_public::protobuf::int32 voicetime_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static VoiceMessageInfo* default_instance_;
};
// -------------------------------------------------------------------

class CreateRoomMessageInfo : public ::google_public::protobuf::Message {
 public:
  CreateRoomMessageInfo();
  virtual ~CreateRoomMessageInfo();

  CreateRoomMessageInfo(const CreateRoomMessageInfo& from);

  inline CreateRoomMessageInfo& operator=(const CreateRoomMessageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const CreateRoomMessageInfo& default_instance();

  void Swap(CreateRoomMessageInfo* other);

  // implements Message ----------------------------------------------

  CreateRoomMessageInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const CreateRoomMessageInfo& from);
  void MergeFrom(const CreateRoomMessageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // optional int32 RoomID = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.RoomType Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::msg::RoomType type() const;
  inline void set_type(::msg::RoomType value);

  // optional string RoomName = 5;
  inline bool has_roomname() const;
  inline void clear_roomname();
  static const int kRoomNameFieldNumber = 5;
  inline const ::std::string& roomname() const;
  inline void set_roomname(const ::std::string& value);
  inline void set_roomname(const char* value);
  inline void set_roomname(const char* value, size_t size);
  inline ::std::string* mutable_roomname();
  inline ::std::string* release_roomname();
  inline void set_allocated_roomname(::std::string* roomname);

  // optional .msg.UserDetailInfo Creater = 6;
  inline bool has_creater() const;
  inline void clear_creater();
  static const int kCreaterFieldNumber = 6;
  inline const ::msg::UserDetailInfo& creater() const;
  inline ::msg::UserDetailInfo* mutable_creater();
  inline ::msg::UserDetailInfo* release_creater();
  inline void set_allocated_creater(::msg::UserDetailInfo* creater);

  // @@protoc_insertion_point(class_scope:msg.CreateRoomMessageInfo)
 private:
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_roomname();
  inline void clear_has_roomname();
  inline void set_has_creater();
  inline void clear_has_creater();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* text_;
  ::google_public::protobuf::int32 roomid_;
  int type_;
  ::std::string* roomname_;
  ::msg::UserDetailInfo* creater_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static CreateRoomMessageInfo* default_instance_;
};
// -------------------------------------------------------------------

class GroupNoticeMessageInfo : public ::google_public::protobuf::Message {
 public:
  GroupNoticeMessageInfo();
  virtual ~GroupNoticeMessageInfo();

  GroupNoticeMessageInfo(const GroupNoticeMessageInfo& from);

  inline GroupNoticeMessageInfo& operator=(const GroupNoticeMessageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const GroupNoticeMessageInfo& default_instance();

  void Swap(GroupNoticeMessageInfo* other);

  // implements Message ----------------------------------------------

  GroupNoticeMessageInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const GroupNoticeMessageInfo& from);
  void MergeFrom(const GroupNoticeMessageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.InviteIntoGroup InviteIntoGroup = 1;
  inline bool has_inviteintogroup() const;
  inline void clear_inviteintogroup();
  static const int kInviteIntoGroupFieldNumber = 1;
  inline const ::msg::InviteIntoGroup& inviteintogroup() const;
  inline ::msg::InviteIntoGroup* mutable_inviteintogroup();
  inline ::msg::InviteIntoGroup* release_inviteintogroup();
  inline void set_allocated_inviteintogroup(::msg::InviteIntoGroup* inviteintogroup);

  // optional .msg.IntoGroup IntoGroup = 2;
  inline bool has_intogroup() const;
  inline void clear_intogroup();
  static const int kIntoGroupFieldNumber = 2;
  inline const ::msg::IntoGroup& intogroup() const;
  inline ::msg::IntoGroup* mutable_intogroup();
  inline ::msg::IntoGroup* release_intogroup();
  inline void set_allocated_intogroup(::msg::IntoGroup* intogroup);

  // optional int32 GroupUserNum = 3;
  inline bool has_groupusernum() const;
  inline void clear_groupusernum();
  static const int kGroupUserNumFieldNumber = 3;
  inline ::google_public::protobuf::int32 groupusernum() const;
  inline void set_groupusernum(::google_public::protobuf::int32 value);

  // optional string Text = 4;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 4;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // optional .msg.OutGroup OutGroup = 5;
  inline bool has_outgroup() const;
  inline void clear_outgroup();
  static const int kOutGroupFieldNumber = 5;
  inline const ::msg::OutGroup& outgroup() const;
  inline ::msg::OutGroup* mutable_outgroup();
  inline ::msg::OutGroup* release_outgroup();
  inline void set_allocated_outgroup(::msg::OutGroup* outgroup);

  // @@protoc_insertion_point(class_scope:msg.GroupNoticeMessageInfo)
 private:
  inline void set_has_inviteintogroup();
  inline void clear_has_inviteintogroup();
  inline void set_has_intogroup();
  inline void clear_has_intogroup();
  inline void set_has_groupusernum();
  inline void clear_has_groupusernum();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_outgroup();
  inline void clear_has_outgroup();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::InviteIntoGroup* inviteintogroup_;
  ::msg::IntoGroup* intogroup_;
  ::std::string* text_;
  ::msg::OutGroup* outgroup_;
  ::google_public::protobuf::int32 groupusernum_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static GroupNoticeMessageInfo* default_instance_;
};
// -------------------------------------------------------------------

class InviteIntoGroup : public ::google_public::protobuf::Message {
 public:
  InviteIntoGroup();
  virtual ~InviteIntoGroup();

  InviteIntoGroup(const InviteIntoGroup& from);

  inline InviteIntoGroup& operator=(const InviteIntoGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const InviteIntoGroup& default_instance();

  void Swap(InviteIntoGroup* other);

  // implements Message ----------------------------------------------

  InviteIntoGroup* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const InviteIntoGroup& from);
  void MergeFrom(const InviteIntoGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo Inviter = 1;
  inline bool has_inviter() const;
  inline void clear_inviter();
  static const int kInviterFieldNumber = 1;
  inline const ::msg::UserDetailInfo& inviter() const;
  inline ::msg::UserDetailInfo* mutable_inviter();
  inline ::msg::UserDetailInfo* release_inviter();
  inline void set_allocated_inviter(::msg::UserDetailInfo* inviter);

  // optional .msg.UserDetailInfo Invitee = 2;
  inline bool has_invitee() const;
  inline void clear_invitee();
  static const int kInviteeFieldNumber = 2;
  inline const ::msg::UserDetailInfo& invitee() const;
  inline ::msg::UserDetailInfo* mutable_invitee();
  inline ::msg::UserDetailInfo* release_invitee();
  inline void set_allocated_invitee(::msg::UserDetailInfo* invitee);

  // @@protoc_insertion_point(class_scope:msg.InviteIntoGroup)
 private:
  inline void set_has_inviter();
  inline void clear_has_inviter();
  inline void set_has_invitee();
  inline void clear_has_invitee();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* inviter_;
  ::msg::UserDetailInfo* invitee_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static InviteIntoGroup* default_instance_;
};
// -------------------------------------------------------------------

class OutGroup : public ::google_public::protobuf::Message {
 public:
  OutGroup();
  virtual ~OutGroup();

  OutGroup(const OutGroup& from);

  inline OutGroup& operator=(const OutGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OutGroup& default_instance();

  void Swap(OutGroup* other);

  // implements Message ----------------------------------------------

  OutGroup* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OutGroup& from);
  void MergeFrom(const OutGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo outer = 1;
  inline bool has_outer() const;
  inline void clear_outer();
  static const int kOuterFieldNumber = 1;
  inline const ::msg::UserDetailInfo& outer() const;
  inline ::msg::UserDetailInfo* mutable_outer();
  inline ::msg::UserDetailInfo* release_outer();
  inline void set_allocated_outer(::msg::UserDetailInfo* outer);

  // @@protoc_insertion_point(class_scope:msg.OutGroup)
 private:
  inline void set_has_outer();
  inline void clear_has_outer();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* outer_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OutGroup* default_instance_;
};
// -------------------------------------------------------------------

class IntoGroup : public ::google_public::protobuf::Message {
 public:
  IntoGroup();
  virtual ~IntoGroup();

  IntoGroup(const IntoGroup& from);

  inline IntoGroup& operator=(const IntoGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const IntoGroup& default_instance();

  void Swap(IntoGroup* other);

  // implements Message ----------------------------------------------

  IntoGroup* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const IntoGroup& from);
  void MergeFrom(const IntoGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo IntoGroupUser = 1;
  inline bool has_intogroupuser() const;
  inline void clear_intogroupuser();
  static const int kIntoGroupUserFieldNumber = 1;
  inline const ::msg::UserDetailInfo& intogroupuser() const;
  inline ::msg::UserDetailInfo* mutable_intogroupuser();
  inline ::msg::UserDetailInfo* release_intogroupuser();
  inline void set_allocated_intogroupuser(::msg::UserDetailInfo* intogroupuser);

  // @@protoc_insertion_point(class_scope:msg.IntoGroup)
 private:
  inline void set_has_intogroupuser();
  inline void clear_has_intogroupuser();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* intogroupuser_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static IntoGroup* default_instance_;
};
// -------------------------------------------------------------------

class GroupInfo : public ::google_public::protobuf::Message {
 public:
  GroupInfo();
  virtual ~GroupInfo();

  GroupInfo(const GroupInfo& from);

  inline GroupInfo& operator=(const GroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const GroupInfo& default_instance();

  void Swap(GroupInfo* other);

  // implements Message ----------------------------------------------

  GroupInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const GroupInfo& from);
  void MergeFrom(const GroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupId = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional string GroupName = 2;
  inline bool has_groupname() const;
  inline void clear_groupname();
  static const int kGroupNameFieldNumber = 2;
  inline const ::std::string& groupname() const;
  inline void set_groupname(const ::std::string& value);
  inline void set_groupname(const char* value);
  inline void set_groupname(const char* value, size_t size);
  inline ::std::string* mutable_groupname();
  inline ::std::string* release_groupname();
  inline void set_allocated_groupname(::std::string* groupname);

  // optional string GroupComment = 3;
  inline bool has_groupcomment() const;
  inline void clear_groupcomment();
  static const int kGroupCommentFieldNumber = 3;
  inline const ::std::string& groupcomment() const;
  inline void set_groupcomment(const ::std::string& value);
  inline void set_groupcomment(const char* value);
  inline void set_groupcomment(const char* value, size_t size);
  inline ::std::string* mutable_groupcomment();
  inline ::std::string* release_groupcomment();
  inline void set_allocated_groupcomment(::std::string* groupcomment);

  // optional int32 Hidden = 4;
  inline bool has_hidden() const;
  inline void clear_hidden();
  static const int kHiddenFieldNumber = 4;
  inline ::google_public::protobuf::int32 hidden() const;
  inline void set_hidden(::google_public::protobuf::int32 value);

  // optional string GroupPic = 5;
  inline bool has_grouppic() const;
  inline void clear_grouppic();
  static const int kGroupPicFieldNumber = 5;
  inline const ::std::string& grouppic() const;
  inline void set_grouppic(const ::std::string& value);
  inline void set_grouppic(const char* value);
  inline void set_grouppic(const char* value, size_t size);
  inline ::std::string* mutable_grouppic();
  inline ::std::string* release_grouppic();
  inline void set_allocated_grouppic(::std::string* grouppic);

  // optional .msg.GroupUserStatus UserStatus = 6;
  inline bool has_userstatus() const;
  inline void clear_userstatus();
  static const int kUserStatusFieldNumber = 6;
  inline ::msg::GroupUserStatus userstatus() const;
  inline void set_userstatus(::msg::GroupUserStatus value);

  // optional .msg.GroupType Type = 7;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 7;
  inline ::msg::GroupType type() const;
  inline void set_type(::msg::GroupType value);

  // optional int32 GroupOwnerID = 8;
  inline bool has_groupownerid() const;
  inline void clear_groupownerid();
  static const int kGroupOwnerIDFieldNumber = 8;
  inline ::google_public::protobuf::int32 groupownerid() const;
  inline void set_groupownerid(::google_public::protobuf::int32 value);

  // optional bool RankVisible = 9;
  inline bool has_rankvisible() const;
  inline void clear_rankvisible();
  static const int kRankVisibleFieldNumber = 9;
  inline bool rankvisible() const;
  inline void set_rankvisible(bool value);

  // optional bool AllowCreateRoom = 10;
  inline bool has_allowcreateroom() const;
  inline void clear_allowcreateroom();
  static const int kAllowCreateRoomFieldNumber = 10;
  inline bool allowcreateroom() const;
  inline void set_allowcreateroom(bool value);

  // optional bool AllowChat = 11;
  inline bool has_allowchat() const;
  inline void clear_allowchat();
  static const int kAllowChatFieldNumber = 11;
  inline bool allowchat() const;
  inline void set_allowchat(bool value);

  // @@protoc_insertion_point(class_scope:msg.GroupInfo)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_groupname();
  inline void clear_has_groupname();
  inline void set_has_groupcomment();
  inline void clear_has_groupcomment();
  inline void set_has_hidden();
  inline void clear_has_hidden();
  inline void set_has_grouppic();
  inline void clear_has_grouppic();
  inline void set_has_userstatus();
  inline void clear_has_userstatus();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_groupownerid();
  inline void clear_has_groupownerid();
  inline void set_has_rankvisible();
  inline void clear_has_rankvisible();
  inline void set_has_allowcreateroom();
  inline void clear_has_allowcreateroom();
  inline void set_has_allowchat();
  inline void clear_has_allowchat();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* groupname_;
  ::google_public::protobuf::int32 groupid_;
  ::google_public::protobuf::int32 hidden_;
  ::std::string* groupcomment_;
  ::std::string* grouppic_;
  int userstatus_;
  int type_;
  ::google_public::protobuf::int32 groupownerid_;
  bool rankvisible_;
  bool allowcreateroom_;
  bool allowchat_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static GroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_140_CreateGroup : public ::google_public::protobuf::Message {
 public:
  Processor_140_CreateGroup();
  virtual ~Processor_140_CreateGroup();

  Processor_140_CreateGroup(const Processor_140_CreateGroup& from);

  inline Processor_140_CreateGroup& operator=(const Processor_140_CreateGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_140_CreateGroup& default_instance();

  void Swap(Processor_140_CreateGroup* other);

  // implements Message ----------------------------------------------

  Processor_140_CreateGroup* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_140_CreateGroup& from);
  void MergeFrom(const Processor_140_CreateGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.GroupInfo GroupInfo = 1;
  inline bool has_groupinfo() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 1;
  inline const ::msg::GroupInfo& groupinfo() const;
  inline ::msg::GroupInfo* mutable_groupinfo();
  inline ::msg::GroupInfo* release_groupinfo();
  inline void set_allocated_groupinfo(::msg::GroupInfo* groupinfo);

  // @@protoc_insertion_point(class_scope:msg.Processor_140_CreateGroup)
 private:
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::GroupInfo* groupinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_140_CreateGroup* default_instance_;
};
// -------------------------------------------------------------------

class Processor_140_CreateGroup_Down : public ::google_public::protobuf::Message {
 public:
  Processor_140_CreateGroup_Down();
  virtual ~Processor_140_CreateGroup_Down();

  Processor_140_CreateGroup_Down(const Processor_140_CreateGroup_Down& from);

  inline Processor_140_CreateGroup_Down& operator=(const Processor_140_CreateGroup_Down& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_140_CreateGroup_Down& default_instance();

  void Swap(Processor_140_CreateGroup_Down* other);

  // implements Message ----------------------------------------------

  Processor_140_CreateGroup_Down* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_140_CreateGroup_Down& from);
  void MergeFrom(const Processor_140_CreateGroup_Down& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional .msg.GroupInfo GroupInfo = 2;
  inline bool has_groupinfo() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 2;
  inline const ::msg::GroupInfo& groupinfo() const;
  inline ::msg::GroupInfo* mutable_groupinfo();
  inline ::msg::GroupInfo* release_groupinfo();
  inline void set_allocated_groupinfo(::msg::GroupInfo* groupinfo);

  // @@protoc_insertion_point(class_scope:msg.Processor_140_CreateGroup_Down)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::msg::GroupInfo* groupinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_140_CreateGroup_Down* default_instance_;
};
// -------------------------------------------------------------------

class Processor_141_EditGroup : public ::google_public::protobuf::Message {
 public:
  Processor_141_EditGroup();
  virtual ~Processor_141_EditGroup();

  Processor_141_EditGroup(const Processor_141_EditGroup& from);

  inline Processor_141_EditGroup& operator=(const Processor_141_EditGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_141_EditGroup& default_instance();

  void Swap(Processor_141_EditGroup* other);

  // implements Message ----------------------------------------------

  Processor_141_EditGroup* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_141_EditGroup& from);
  void MergeFrom(const Processor_141_EditGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.GroupInfo GroupInfo = 1;
  inline bool has_groupinfo() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 1;
  inline const ::msg::GroupInfo& groupinfo() const;
  inline ::msg::GroupInfo* mutable_groupinfo();
  inline ::msg::GroupInfo* release_groupinfo();
  inline void set_allocated_groupinfo(::msg::GroupInfo* groupinfo);

  // @@protoc_insertion_point(class_scope:msg.Processor_141_EditGroup)
 private:
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::GroupInfo* groupinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_141_EditGroup* default_instance_;
};
// -------------------------------------------------------------------

class Processor_142_SearchGroup_UP : public ::google_public::protobuf::Message {
 public:
  Processor_142_SearchGroup_UP();
  virtual ~Processor_142_SearchGroup_UP();

  Processor_142_SearchGroup_UP(const Processor_142_SearchGroup_UP& from);

  inline Processor_142_SearchGroup_UP& operator=(const Processor_142_SearchGroup_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_142_SearchGroup_UP& default_instance();

  void Swap(Processor_142_SearchGroup_UP* other);

  // implements Message ----------------------------------------------

  Processor_142_SearchGroup_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_142_SearchGroup_UP& from);
  void MergeFrom(const Processor_142_SearchGroup_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.GroupSearchType Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::msg::GroupSearchType type() const;
  inline void set_type(::msg::GroupSearchType value);

  // optional string SearchName = 2;
  inline bool has_searchname() const;
  inline void clear_searchname();
  static const int kSearchNameFieldNumber = 2;
  inline const ::std::string& searchname() const;
  inline void set_searchname(const ::std::string& value);
  inline void set_searchname(const char* value);
  inline void set_searchname(const char* value, size_t size);
  inline ::std::string* mutable_searchname();
  inline ::std::string* release_searchname();
  inline void set_allocated_searchname(::std::string* searchname);

  // @@protoc_insertion_point(class_scope:msg.Processor_142_SearchGroup_UP)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_searchname();
  inline void clear_has_searchname();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* searchname_;
  int type_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_142_SearchGroup_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_142_SearchGroup_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_142_SearchGroup_DOWN();
  virtual ~Processor_142_SearchGroup_DOWN();

  Processor_142_SearchGroup_DOWN(const Processor_142_SearchGroup_DOWN& from);

  inline Processor_142_SearchGroup_DOWN& operator=(const Processor_142_SearchGroup_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_142_SearchGroup_DOWN& default_instance();

  void Swap(Processor_142_SearchGroup_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_142_SearchGroup_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_142_SearchGroup_DOWN& from);
  void MergeFrom(const Processor_142_SearchGroup_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // repeated .msg.GroupInfo GroupInfo = 2;
  inline int groupinfo_size() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 2;
  inline const ::msg::GroupInfo& groupinfo(int index) const;
  inline ::msg::GroupInfo* mutable_groupinfo(int index);
  inline ::msg::GroupInfo* add_groupinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::GroupInfo >&
      groupinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::GroupInfo >*
      mutable_groupinfo();

  // @@protoc_insertion_point(class_scope:msg.Processor_142_SearchGroup_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::GroupInfo > groupinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_142_SearchGroup_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_144_KickUserFromGroup : public ::google_public::protobuf::Message {
 public:
  Processor_144_KickUserFromGroup();
  virtual ~Processor_144_KickUserFromGroup();

  Processor_144_KickUserFromGroup(const Processor_144_KickUserFromGroup& from);

  inline Processor_144_KickUserFromGroup& operator=(const Processor_144_KickUserFromGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_144_KickUserFromGroup& default_instance();

  void Swap(Processor_144_KickUserFromGroup* other);

  // implements Message ----------------------------------------------

  Processor_144_KickUserFromGroup* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_144_KickUserFromGroup& from);
  void MergeFrom(const Processor_144_KickUserFromGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupId = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional int32 UserID = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_144_KickUserFromGroup)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_144_KickUserFromGroup* default_instance_;
};
// -------------------------------------------------------------------

class Processor_145_GetGroupInfo_UP : public ::google_public::protobuf::Message {
 public:
  Processor_145_GetGroupInfo_UP();
  virtual ~Processor_145_GetGroupInfo_UP();

  Processor_145_GetGroupInfo_UP(const Processor_145_GetGroupInfo_UP& from);

  inline Processor_145_GetGroupInfo_UP& operator=(const Processor_145_GetGroupInfo_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_145_GetGroupInfo_UP& default_instance();

  void Swap(Processor_145_GetGroupInfo_UP* other);

  // implements Message ----------------------------------------------

  Processor_145_GetGroupInfo_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_145_GetGroupInfo_UP& from);
  void MergeFrom(const Processor_145_GetGroupInfo_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupId = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_145_GetGroupInfo_UP)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_145_GetGroupInfo_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_145_GetGroupInfo_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_145_GetGroupInfo_DOWN();
  virtual ~Processor_145_GetGroupInfo_DOWN();

  Processor_145_GetGroupInfo_DOWN(const Processor_145_GetGroupInfo_DOWN& from);

  inline Processor_145_GetGroupInfo_DOWN& operator=(const Processor_145_GetGroupInfo_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_145_GetGroupInfo_DOWN& default_instance();

  void Swap(Processor_145_GetGroupInfo_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_145_GetGroupInfo_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_145_GetGroupInfo_DOWN& from);
  void MergeFrom(const Processor_145_GetGroupInfo_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional .msg.GroupInfo GroupInfo = 2;
  inline bool has_groupinfo() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 2;
  inline const ::msg::GroupInfo& groupinfo() const;
  inline ::msg::GroupInfo* mutable_groupinfo();
  inline ::msg::GroupInfo* release_groupinfo();
  inline void set_allocated_groupinfo(::msg::GroupInfo* groupinfo);

  // optional int32 GroupUserNum = 3;
  inline bool has_groupusernum() const;
  inline void clear_groupusernum();
  static const int kGroupUserNumFieldNumber = 3;
  inline ::google_public::protobuf::int32 groupusernum() const;
  inline void set_groupusernum(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_145_GetGroupInfo_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();
  inline void set_has_groupusernum();
  inline void clear_has_groupusernum();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::msg::GroupInfo* groupinfo_;
  ::google_public::protobuf::int32 groupusernum_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_145_GetGroupInfo_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_146_GetGroupDetailInfo_UP : public ::google_public::protobuf::Message {
 public:
  Processor_146_GetGroupDetailInfo_UP();
  virtual ~Processor_146_GetGroupDetailInfo_UP();

  Processor_146_GetGroupDetailInfo_UP(const Processor_146_GetGroupDetailInfo_UP& from);

  inline Processor_146_GetGroupDetailInfo_UP& operator=(const Processor_146_GetGroupDetailInfo_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_146_GetGroupDetailInfo_UP& default_instance();

  void Swap(Processor_146_GetGroupDetailInfo_UP* other);

  // implements Message ----------------------------------------------

  Processor_146_GetGroupDetailInfo_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_146_GetGroupDetailInfo_UP& from);
  void MergeFrom(const Processor_146_GetGroupDetailInfo_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupID = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_146_GetGroupDetailInfo_UP)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_146_GetGroupDetailInfo_UP* default_instance_;
};
// -------------------------------------------------------------------

class GroupUserInfo : public ::google_public::protobuf::Message {
 public:
  GroupUserInfo();
  virtual ~GroupUserInfo();

  GroupUserInfo(const GroupUserInfo& from);

  inline GroupUserInfo& operator=(const GroupUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const GroupUserInfo& default_instance();

  void Swap(GroupUserInfo* other);

  // implements Message ----------------------------------------------

  GroupUserInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const GroupUserInfo& from);
  void MergeFrom(const GroupUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo UserDetailInfo = 1;
  inline bool has_userdetailinfo() const;
  inline void clear_userdetailinfo();
  static const int kUserDetailInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userdetailinfo() const;
  inline ::msg::UserDetailInfo* mutable_userdetailinfo();
  inline ::msg::UserDetailInfo* release_userdetailinfo();
  inline void set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo);

  // optional .msg.GroupUserStatus UserStatus = 2;
  inline bool has_userstatus() const;
  inline void clear_userstatus();
  static const int kUserStatusFieldNumber = 2;
  inline ::msg::GroupUserStatus userstatus() const;
  inline void set_userstatus(::msg::GroupUserStatus value);

  // @@protoc_insertion_point(class_scope:msg.GroupUserInfo)
 private:
  inline void set_has_userdetailinfo();
  inline void clear_has_userdetailinfo();
  inline void set_has_userstatus();
  inline void clear_has_userstatus();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userdetailinfo_;
  int userstatus_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static GroupUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class GroupManageSetting : public ::google_public::protobuf::Message {
 public:
  GroupManageSetting();
  virtual ~GroupManageSetting();

  GroupManageSetting(const GroupManageSetting& from);

  inline GroupManageSetting& operator=(const GroupManageSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const GroupManageSetting& default_instance();

  void Swap(GroupManageSetting* other);

  // implements Message ----------------------------------------------

  GroupManageSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const GroupManageSetting& from);
  void MergeFrom(const GroupManageSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsClub = 1;
  inline bool has_isclub() const;
  inline void clear_isclub();
  static const int kIsClubFieldNumber = 1;
  inline bool isclub() const;
  inline void set_isclub(bool value);

  // optional bool CreditRefillAfterGame = 2;
  inline bool has_creditrefillaftergame() const;
  inline void clear_creditrefillaftergame();
  static const int kCreditRefillAfterGameFieldNumber = 2;
  inline bool creditrefillaftergame() const;
  inline void set_creditrefillaftergame(bool value);

  // optional bool CanChat = 3;
  inline bool has_canchat() const;
  inline void clear_canchat();
  static const int kCanChatFieldNumber = 3;
  inline bool canchat() const;
  inline void set_canchat(bool value);

  // optional bool CanSeeOtherMember = 4;
  inline bool has_canseeothermember() const;
  inline void clear_canseeothermember();
  static const int kCanSeeOtherMemberFieldNumber = 4;
  inline bool canseeothermember() const;
  inline void set_canseeothermember(bool value);

  // optional int32 RakePercent = 5;
  inline bool has_rakepercent() const;
  inline void clear_rakepercent();
  static const int kRakePercentFieldNumber = 5;
  inline ::google_public::protobuf::int32 rakepercent() const;
  inline void set_rakepercent(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.GroupManageSetting)
 private:
  inline void set_has_isclub();
  inline void clear_has_isclub();
  inline void set_has_creditrefillaftergame();
  inline void clear_has_creditrefillaftergame();
  inline void set_has_canchat();
  inline void clear_has_canchat();
  inline void set_has_canseeothermember();
  inline void clear_has_canseeothermember();
  inline void set_has_rakepercent();
  inline void clear_has_rakepercent();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool isclub_;
  bool creditrefillaftergame_;
  bool canchat_;
  bool canseeothermember_;
  ::google_public::protobuf::int32 rakepercent_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static GroupManageSetting* default_instance_;
};
// -------------------------------------------------------------------

class Processor_146_GetGroupDetailInfo_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_146_GetGroupDetailInfo_DOWN();
  virtual ~Processor_146_GetGroupDetailInfo_DOWN();

  Processor_146_GetGroupDetailInfo_DOWN(const Processor_146_GetGroupDetailInfo_DOWN& from);

  inline Processor_146_GetGroupDetailInfo_DOWN& operator=(const Processor_146_GetGroupDetailInfo_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_146_GetGroupDetailInfo_DOWN& default_instance();

  void Swap(Processor_146_GetGroupDetailInfo_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_146_GetGroupDetailInfo_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_146_GetGroupDetailInfo_DOWN& from);
  void MergeFrom(const Processor_146_GetGroupDetailInfo_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional .msg.GroupInfo GroupInfo = 2;
  inline bool has_groupinfo() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 2;
  inline const ::msg::GroupInfo& groupinfo() const;
  inline ::msg::GroupInfo* mutable_groupinfo();
  inline ::msg::GroupInfo* release_groupinfo();
  inline void set_allocated_groupinfo(::msg::GroupInfo* groupinfo);

  // repeated .msg.GroupUserInfo GroupUserInfo = 3;
  inline int groupuserinfo_size() const;
  inline void clear_groupuserinfo();
  static const int kGroupUserInfoFieldNumber = 3;
  inline const ::msg::GroupUserInfo& groupuserinfo(int index) const;
  inline ::msg::GroupUserInfo* mutable_groupuserinfo(int index);
  inline ::msg::GroupUserInfo* add_groupuserinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::GroupUserInfo >&
      groupuserinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::GroupUserInfo >*
      mutable_groupuserinfo();

  // optional .msg.GroupSetting Setting = 4;
  inline bool has_setting() const;
  inline void clear_setting();
  static const int kSettingFieldNumber = 4;
  inline const ::msg::GroupSetting& setting() const;
  inline ::msg::GroupSetting* mutable_setting();
  inline ::msg::GroupSetting* release_setting();
  inline void set_allocated_setting(::msg::GroupSetting* setting);

  // optional .msg.GroupPermission Permission = 5;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 5;
  inline const ::msg::GroupPermission& permission() const;
  inline ::msg::GroupPermission* mutable_permission();
  inline ::msg::GroupPermission* release_permission();
  inline void set_allocated_permission(::msg::GroupPermission* permission);

  // optional .msg.GroupManageSetting ManageSetting = 6;
  inline bool has_managesetting() const;
  inline void clear_managesetting();
  static const int kManageSettingFieldNumber = 6;
  inline const ::msg::GroupManageSetting& managesetting() const;
  inline ::msg::GroupManageSetting* mutable_managesetting();
  inline ::msg::GroupManageSetting* release_managesetting();
  inline void set_allocated_managesetting(::msg::GroupManageSetting* managesetting);

  // @@protoc_insertion_point(class_scope:msg.Processor_146_GetGroupDetailInfo_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();
  inline void set_has_setting();
  inline void clear_has_setting();
  inline void set_has_permission();
  inline void clear_has_permission();
  inline void set_has_managesetting();
  inline void clear_has_managesetting();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::msg::GroupInfo* groupinfo_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::GroupUserInfo > groupuserinfo_;
  ::msg::GroupSetting* setting_;
  ::msg::GroupPermission* permission_;
  ::msg::GroupManageSetting* managesetting_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_146_GetGroupDetailInfo_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_147_SetGroupManageSetting : public ::google_public::protobuf::Message {
 public:
  Processor_147_SetGroupManageSetting();
  virtual ~Processor_147_SetGroupManageSetting();

  Processor_147_SetGroupManageSetting(const Processor_147_SetGroupManageSetting& from);

  inline Processor_147_SetGroupManageSetting& operator=(const Processor_147_SetGroupManageSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_147_SetGroupManageSetting& default_instance();

  void Swap(Processor_147_SetGroupManageSetting* other);

  // implements Message ----------------------------------------------

  Processor_147_SetGroupManageSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_147_SetGroupManageSetting& from);
  void MergeFrom(const Processor_147_SetGroupManageSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupID = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional .msg.GroupManageSetting Setting = 2;
  inline bool has_setting() const;
  inline void clear_setting();
  static const int kSettingFieldNumber = 2;
  inline const ::msg::GroupManageSetting& setting() const;
  inline ::msg::GroupManageSetting* mutable_setting();
  inline ::msg::GroupManageSetting* release_setting();
  inline void set_allocated_setting(::msg::GroupManageSetting* setting);

  // @@protoc_insertion_point(class_scope:msg.Processor_147_SetGroupManageSetting)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_setting();
  inline void clear_has_setting();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::GroupManageSetting* setting_;
  ::google_public::protobuf::int32 groupid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_147_SetGroupManageSetting* default_instance_;
};
// -------------------------------------------------------------------

class Processor_148_SetGroupAdmin : public ::google_public::protobuf::Message {
 public:
  Processor_148_SetGroupAdmin();
  virtual ~Processor_148_SetGroupAdmin();

  Processor_148_SetGroupAdmin(const Processor_148_SetGroupAdmin& from);

  inline Processor_148_SetGroupAdmin& operator=(const Processor_148_SetGroupAdmin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_148_SetGroupAdmin& default_instance();

  void Swap(Processor_148_SetGroupAdmin* other);

  // implements Message ----------------------------------------------

  Processor_148_SetGroupAdmin* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_148_SetGroupAdmin& from);
  void MergeFrom(const Processor_148_SetGroupAdmin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupId = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional int32 UserID = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional bool IsAdmin = 3;
  inline bool has_isadmin() const;
  inline void clear_isadmin();
  static const int kIsAdminFieldNumber = 3;
  inline bool isadmin() const;
  inline void set_isadmin(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_148_SetGroupAdmin)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_isadmin();
  inline void clear_has_isadmin();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  ::google_public::protobuf::int32 userid_;
  bool isadmin_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_148_SetGroupAdmin* default_instance_;
};
// -------------------------------------------------------------------

class RoomTypeInfo : public ::google_public::protobuf::Message {
 public:
  RoomTypeInfo();
  virtual ~RoomTypeInfo();

  RoomTypeInfo(const RoomTypeInfo& from);

  inline RoomTypeInfo& operator=(const RoomTypeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const RoomTypeInfo& default_instance();

  void Swap(RoomTypeInfo* other);

  // implements Message ----------------------------------------------

  RoomTypeInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const RoomTypeInfo& from);
  void MergeFrom(const RoomTypeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.RoomType RoomType = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 1;
  inline ::msg::RoomType roomtype() const;
  inline void set_roomtype(::msg::RoomType value);

  // optional string RoomTypeName = 2;
  inline bool has_roomtypename() const;
  inline void clear_roomtypename();
  static const int kRoomTypeNameFieldNumber = 2;
  inline const ::std::string& roomtypename() const;
  inline void set_roomtypename(const ::std::string& value);
  inline void set_roomtypename(const char* value);
  inline void set_roomtypename(const char* value, size_t size);
  inline ::std::string* mutable_roomtypename();
  inline ::std::string* release_roomtypename();
  inline void set_allocated_roomtypename(::std::string* roomtypename);

  // @@protoc_insertion_point(class_scope:msg.RoomTypeInfo)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_roomtypename();
  inline void clear_has_roomtypename();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* roomtypename_;
  int roomtype_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static RoomTypeInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoomInfo : public ::google_public::protobuf::Message {
 public:
  RoomInfo();
  virtual ~RoomInfo();

  RoomInfo(const RoomInfo& from);

  inline RoomInfo& operator=(const RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const RoomInfo& default_instance();

  void Swap(RoomInfo* other);

  // implements Message ----------------------------------------------

  RoomInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const RoomInfo& from);
  void MergeFrom(const RoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.RoomStatus RoomStatus = 2;
  inline bool has_roomstatus() const;
  inline void clear_roomstatus();
  static const int kRoomStatusFieldNumber = 2;
  inline ::msg::RoomStatus roomstatus() const;
  inline void set_roomstatus(::msg::RoomStatus value);

  // optional string RoomName = 3;
  inline bool has_roomname() const;
  inline void clear_roomname();
  static const int kRoomNameFieldNumber = 3;
  inline const ::std::string& roomname() const;
  inline void set_roomname(const ::std::string& value);
  inline void set_roomname(const char* value);
  inline void set_roomname(const char* value, size_t size);
  inline ::std::string* mutable_roomname();
  inline ::std::string* release_roomname();
  inline void set_allocated_roomname(::std::string* roomname);

  // optional .msg.RoomTypeInfo RoomType = 4;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 4;
  inline const ::msg::RoomTypeInfo& roomtype() const;
  inline ::msg::RoomTypeInfo* mutable_roomtype();
  inline ::msg::RoomTypeInfo* release_roomtype();
  inline void set_allocated_roomtype(::msg::RoomTypeInfo* roomtype);

  // optional string RoomNote = 5;
  inline bool has_roomnote() const;
  inline void clear_roomnote();
  static const int kRoomNoteFieldNumber = 5;
  inline const ::std::string& roomnote() const;
  inline void set_roomnote(const ::std::string& value);
  inline void set_roomnote(const char* value);
  inline void set_roomnote(const char* value, size_t size);
  inline ::std::string* mutable_roomnote();
  inline ::std::string* release_roomnote();
  inline void set_allocated_roomnote(::std::string* roomnote);

  // optional int32 PlayerNum = 6;
  inline bool has_playernum() const;
  inline void clear_playernum();
  static const int kPlayerNumFieldNumber = 6;
  inline ::google_public::protobuf::int32 playernum() const;
  inline void set_playernum(::google_public::protobuf::int32 value);

  // optional int32 MaxPlayerNum = 7;
  inline bool has_maxplayernum() const;
  inline void clear_maxplayernum();
  static const int kMaxPlayerNumFieldNumber = 7;
  inline ::google_public::protobuf::int32 maxplayernum() const;
  inline void set_maxplayernum(::google_public::protobuf::int32 value);

  // optional .msg.GroupInfo GroupInfo = 8;
  inline bool has_groupinfo() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 8;
  inline const ::msg::GroupInfo& groupinfo() const;
  inline ::msg::GroupInfo* mutable_groupinfo();
  inline ::msg::GroupInfo* release_groupinfo();
  inline void set_allocated_groupinfo(::msg::GroupInfo* groupinfo);

  // optional bool IsTournament = 9;
  inline bool has_istournament() const;
  inline void clear_istournament();
  static const int kIsTournamentFieldNumber = 9;
  inline bool istournament() const;
  inline void set_istournament(bool value);

  // optional int64 StartTime = 10;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 10;
  inline ::google_public::protobuf::int64 starttime() const;
  inline void set_starttime(::google_public::protobuf::int64 value);

  // optional .msg.UserDetailInfo CreaterInfo = 11;
  inline bool has_createrinfo() const;
  inline void clear_createrinfo();
  static const int kCreaterInfoFieldNumber = 11;
  inline const ::msg::UserDetailInfo& createrinfo() const;
  inline ::msg::UserDetailInfo* mutable_createrinfo();
  inline ::msg::UserDetailInfo* release_createrinfo();
  inline void set_allocated_createrinfo(::msg::UserDetailInfo* createrinfo);

  // optional int64 EndTime = 12;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 12;
  inline ::google_public::protobuf::int64 endtime() const;
  inline void set_endtime(::google_public::protobuf::int64 value);

  // optional string RoomIp = 13;
  inline bool has_roomip() const;
  inline void clear_roomip();
  static const int kRoomIpFieldNumber = 13;
  inline const ::std::string& roomip() const;
  inline void set_roomip(const ::std::string& value);
  inline void set_roomip(const char* value);
  inline void set_roomip(const char* value, size_t size);
  inline ::std::string* mutable_roomip();
  inline ::std::string* release_roomip();
  inline void set_allocated_roomip(::std::string* roomip);

  // optional int32 RoomPort = 14;
  inline bool has_roomport() const;
  inline void clear_roomport();
  static const int kRoomPortFieldNumber = 14;
  inline ::google_public::protobuf::int32 roomport() const;
  inline void set_roomport(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.RoomInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_roomstatus();
  inline void clear_has_roomstatus();
  inline void set_has_roomname();
  inline void clear_has_roomname();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_roomnote();
  inline void clear_has_roomnote();
  inline void set_has_playernum();
  inline void clear_has_playernum();
  inline void set_has_maxplayernum();
  inline void clear_has_maxplayernum();
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();
  inline void set_has_istournament();
  inline void clear_has_istournament();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_createrinfo();
  inline void clear_has_createrinfo();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_roomip();
  inline void clear_has_roomip();
  inline void set_has_roomport();
  inline void clear_has_roomport();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  int roomstatus_;
  ::std::string* roomname_;
  ::msg::RoomTypeInfo* roomtype_;
  ::std::string* roomnote_;
  ::google_public::protobuf::int32 playernum_;
  ::google_public::protobuf::int32 maxplayernum_;
  ::msg::GroupInfo* groupinfo_;
  ::google_public::protobuf::int64 starttime_;
  ::msg::UserDetailInfo* createrinfo_;
  bool istournament_;
  ::google_public::protobuf::int32 roomport_;
  ::google_public::protobuf::int64 endtime_;
  ::std::string* roomip_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static RoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_150_GetRoomInfo_UP : public ::google_public::protobuf::Message {
 public:
  Processor_150_GetRoomInfo_UP();
  virtual ~Processor_150_GetRoomInfo_UP();

  Processor_150_GetRoomInfo_UP(const Processor_150_GetRoomInfo_UP& from);

  inline Processor_150_GetRoomInfo_UP& operator=(const Processor_150_GetRoomInfo_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_150_GetRoomInfo_UP& default_instance();

  void Swap(Processor_150_GetRoomInfo_UP* other);

  // implements Message ----------------------------------------------

  Processor_150_GetRoomInfo_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_150_GetRoomInfo_UP& from);
  void MergeFrom(const Processor_150_GetRoomInfo_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupId = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_150_GetRoomInfo_UP)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_150_GetRoomInfo_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_150_GetRoomInfo_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_150_GetRoomInfo_DOWN();
  virtual ~Processor_150_GetRoomInfo_DOWN();

  Processor_150_GetRoomInfo_DOWN(const Processor_150_GetRoomInfo_DOWN& from);

  inline Processor_150_GetRoomInfo_DOWN& operator=(const Processor_150_GetRoomInfo_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_150_GetRoomInfo_DOWN& default_instance();

  void Swap(Processor_150_GetRoomInfo_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_150_GetRoomInfo_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_150_GetRoomInfo_DOWN& from);
  void MergeFrom(const Processor_150_GetRoomInfo_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional .msg.ServerInfo RoomServer = 2;
  inline bool has_roomserver() const;
  inline void clear_roomserver();
  static const int kRoomServerFieldNumber = 2;
  inline const ::msg::ServerInfo& roomserver() const;
  inline ::msg::ServerInfo* mutable_roomserver();
  inline ::msg::ServerInfo* release_roomserver();
  inline void set_allocated_roomserver(::msg::ServerInfo* roomserver);

  // repeated .msg.RoomInfo RoomInfo = 3;
  inline int roominfo_size() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 3;
  inline const ::msg::RoomInfo& roominfo(int index) const;
  inline ::msg::RoomInfo* mutable_roominfo(int index);
  inline ::msg::RoomInfo* add_roominfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::RoomInfo >&
      roominfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::RoomInfo >*
      mutable_roominfo();

  // @@protoc_insertion_point(class_scope:msg.Processor_150_GetRoomInfo_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_roomserver();
  inline void clear_has_roomserver();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::msg::ServerInfo* roomserver_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::RoomInfo > roominfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_150_GetRoomInfo_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class CreateRoomInfo : public ::google_public::protobuf::Message {
 public:
  CreateRoomInfo();
  virtual ~CreateRoomInfo();

  CreateRoomInfo(const CreateRoomInfo& from);

  inline CreateRoomInfo& operator=(const CreateRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const CreateRoomInfo& default_instance();

  void Swap(CreateRoomInfo* other);

  // implements Message ----------------------------------------------

  CreateRoomInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const CreateRoomInfo& from);
  void MergeFrom(const CreateRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.RoomTypeInfo RoomType = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 1;
  inline const ::msg::RoomTypeInfo& roomtype() const;
  inline ::msg::RoomTypeInfo* mutable_roomtype();
  inline ::msg::RoomTypeInfo* release_roomtype();
  inline void set_allocated_roomtype(::msg::RoomTypeInfo* roomtype);

  // optional .msg.RoomProp RoomProp = 2;
  inline bool has_roomprop() const;
  inline void clear_roomprop();
  static const int kRoomPropFieldNumber = 2;
  inline const ::msg::RoomProp& roomprop() const;
  inline ::msg::RoomProp* mutable_roomprop();
  inline ::msg::RoomProp* release_roomprop();
  inline void set_allocated_roomprop(::msg::RoomProp* roomprop);

  // optional bool SupportTournament = 3;
  inline bool has_supporttournament() const;
  inline void clear_supporttournament();
  static const int kSupportTournamentFieldNumber = 3;
  inline bool supporttournament() const;
  inline void set_supporttournament(bool value);

  // @@protoc_insertion_point(class_scope:msg.CreateRoomInfo)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_roomprop();
  inline void clear_has_roomprop();
  inline void set_has_supporttournament();
  inline void clear_has_supporttournament();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::RoomTypeInfo* roomtype_;
  ::msg::RoomProp* roomprop_;
  bool supporttournament_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static CreateRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class BlindLevel : public ::google_public::protobuf::Message {
 public:
  BlindLevel();
  virtual ~BlindLevel();

  BlindLevel(const BlindLevel& from);

  inline BlindLevel& operator=(const BlindLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const BlindLevel& default_instance();

  void Swap(BlindLevel* other);

  // implements Message ----------------------------------------------

  BlindLevel* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const BlindLevel& from);
  void MergeFrom(const BlindLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SmallBlind = 1;
  inline bool has_smallblind() const;
  inline void clear_smallblind();
  static const int kSmallBlindFieldNumber = 1;
  inline ::google_public::protobuf::int32 smallblind() const;
  inline void set_smallblind(::google_public::protobuf::int32 value);

  // optional int32 BigBlind = 2;
  inline bool has_bigblind() const;
  inline void clear_bigblind();
  static const int kBigBlindFieldNumber = 2;
  inline ::google_public::protobuf::int32 bigblind() const;
  inline void set_bigblind(::google_public::protobuf::int32 value);

  // optional int32 Ante = 3;
  inline bool has_ante() const;
  inline void clear_ante();
  static const int kAnteFieldNumber = 3;
  inline ::google_public::protobuf::int32 ante() const;
  inline void set_ante(::google_public::protobuf::int32 value);

  // optional int32 LastTime = 4;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 4;
  inline ::google_public::protobuf::int32 lasttime() const;
  inline void set_lasttime(::google_public::protobuf::int32 value);

  // optional int32 RestTime = 5;
  inline bool has_resttime() const;
  inline void clear_resttime();
  static const int kRestTimeFieldNumber = 5;
  inline ::google_public::protobuf::int32 resttime() const;
  inline void set_resttime(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.BlindLevel)
 private:
  inline void set_has_smallblind();
  inline void clear_has_smallblind();
  inline void set_has_bigblind();
  inline void clear_has_bigblind();
  inline void set_has_ante();
  inline void clear_has_ante();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_resttime();
  inline void clear_has_resttime();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 smallblind_;
  ::google_public::protobuf::int32 bigblind_;
  ::google_public::protobuf::int32 ante_;
  ::google_public::protobuf::int32 lasttime_;
  ::google_public::protobuf::int32 resttime_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static BlindLevel* default_instance_;
};
// -------------------------------------------------------------------

class TournamentLevel : public ::google_public::protobuf::Message {
 public:
  TournamentLevel();
  virtual ~TournamentLevel();

  TournamentLevel(const TournamentLevel& from);

  inline TournamentLevel& operator=(const TournamentLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const TournamentLevel& default_instance();

  void Swap(TournamentLevel* other);

  // implements Message ----------------------------------------------

  TournamentLevel* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const TournamentLevel& from);
  void MergeFrom(const TournamentLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.BlindLevel Level = 1;
  inline int level_size() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline const ::msg::BlindLevel& level(int index) const;
  inline ::msg::BlindLevel* mutable_level(int index);
  inline ::msg::BlindLevel* add_level();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::BlindLevel >&
      level() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::BlindLevel >*
      mutable_level();

  // @@protoc_insertion_point(class_scope:msg.TournamentLevel)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::BlindLevel > level_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static TournamentLevel* default_instance_;
};
// -------------------------------------------------------------------

class PrizeLevel : public ::google_public::protobuf::Message {
 public:
  PrizeLevel();
  virtual ~PrizeLevel();

  PrizeLevel(const PrizeLevel& from);

  inline PrizeLevel& operator=(const PrizeLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PrizeLevel& default_instance();

  void Swap(PrizeLevel* other);

  // implements Message ----------------------------------------------

  PrizeLevel* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PrizeLevel& from);
  void MergeFrom(const PrizeLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PrizePercent = 1;
  inline bool has_prizepercent() const;
  inline void clear_prizepercent();
  static const int kPrizePercentFieldNumber = 1;
  inline ::google_public::protobuf::int32 prizepercent() const;
  inline void set_prizepercent(::google_public::protobuf::int32 value);

  // optional int32 MinRank = 2;
  inline bool has_minrank() const;
  inline void clear_minrank();
  static const int kMinRankFieldNumber = 2;
  inline ::google_public::protobuf::int32 minrank() const;
  inline void set_minrank(::google_public::protobuf::int32 value);

  // optional int32 MaxRank = 3;
  inline bool has_maxrank() const;
  inline void clear_maxrank();
  static const int kMaxRankFieldNumber = 3;
  inline ::google_public::protobuf::int32 maxrank() const;
  inline void set_maxrank(::google_public::protobuf::int32 value);

  // optional string OtherPrize = 4;
  inline bool has_otherprize() const;
  inline void clear_otherprize();
  static const int kOtherPrizeFieldNumber = 4;
  inline const ::std::string& otherprize() const;
  inline void set_otherprize(const ::std::string& value);
  inline void set_otherprize(const char* value);
  inline void set_otherprize(const char* value, size_t size);
  inline ::std::string* mutable_otherprize();
  inline ::std::string* release_otherprize();
  inline void set_allocated_otherprize(::std::string* otherprize);

  // @@protoc_insertion_point(class_scope:msg.PrizeLevel)
 private:
  inline void set_has_prizepercent();
  inline void clear_has_prizepercent();
  inline void set_has_minrank();
  inline void clear_has_minrank();
  inline void set_has_maxrank();
  inline void clear_has_maxrank();
  inline void set_has_otherprize();
  inline void clear_has_otherprize();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 prizepercent_;
  ::google_public::protobuf::int32 minrank_;
  ::std::string* otherprize_;
  ::google_public::protobuf::int32 maxrank_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PrizeLevel* default_instance_;
};
// -------------------------------------------------------------------

class TournamentPrize : public ::google_public::protobuf::Message {
 public:
  TournamentPrize();
  virtual ~TournamentPrize();

  TournamentPrize(const TournamentPrize& from);

  inline TournamentPrize& operator=(const TournamentPrize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const TournamentPrize& default_instance();

  void Swap(TournamentPrize* other);

  // implements Message ----------------------------------------------

  TournamentPrize* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const TournamentPrize& from);
  void MergeFrom(const TournamentPrize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.PrizeLevel Level = 1;
  inline int level_size() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline const ::msg::PrizeLevel& level(int index) const;
  inline ::msg::PrizeLevel* mutable_level(int index);
  inline ::msg::PrizeLevel* add_level();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PrizeLevel >&
      level() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::PrizeLevel >*
      mutable_level();

  // @@protoc_insertion_point(class_scope:msg.TournamentPrize)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::PrizeLevel > level_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static TournamentPrize* default_instance_;
};
// -------------------------------------------------------------------

class TournamentInfo : public ::google_public::protobuf::Message {
 public:
  TournamentInfo();
  virtual ~TournamentInfo();

  TournamentInfo(const TournamentInfo& from);

  inline TournamentInfo& operator=(const TournamentInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const TournamentInfo& default_instance();

  void Swap(TournamentInfo* other);

  // implements Message ----------------------------------------------

  TournamentInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const TournamentInfo& from);
  void MergeFrom(const TournamentInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string StartTime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline const ::std::string& starttime() const;
  inline void set_starttime(const ::std::string& value);
  inline void set_starttime(const char* value);
  inline void set_starttime(const char* value, size_t size);
  inline ::std::string* mutable_starttime();
  inline ::std::string* release_starttime();
  inline void set_allocated_starttime(::std::string* starttime);

  // optional .msg.TournamentLevel TournamentLevel = 2;
  inline bool has_tournamentlevel() const;
  inline void clear_tournamentlevel();
  static const int kTournamentLevelFieldNumber = 2;
  inline const ::msg::TournamentLevel& tournamentlevel() const;
  inline ::msg::TournamentLevel* mutable_tournamentlevel();
  inline ::msg::TournamentLevel* release_tournamentlevel();
  inline void set_allocated_tournamentlevel(::msg::TournamentLevel* tournamentlevel);

  // optional .msg.TournamentPrize TournamentPrize = 3;
  inline bool has_tournamentprize() const;
  inline void clear_tournamentprize();
  static const int kTournamentPrizeFieldNumber = 3;
  inline const ::msg::TournamentPrize& tournamentprize() const;
  inline ::msg::TournamentPrize* mutable_tournamentprize();
  inline ::msg::TournamentPrize* release_tournamentprize();
  inline void set_allocated_tournamentprize(::msg::TournamentPrize* tournamentprize);

  // optional int32 MinPlayerNum = 4;
  inline bool has_minplayernum() const;
  inline void clear_minplayernum();
  static const int kMinPlayerNumFieldNumber = 4;
  inline ::google_public::protobuf::int32 minplayernum() const;
  inline void set_minplayernum(::google_public::protobuf::int32 value);

  // optional int32 MaxPlayerNum = 5;
  inline bool has_maxplayernum() const;
  inline void clear_maxplayernum();
  static const int kMaxPlayerNumFieldNumber = 5;
  inline ::google_public::protobuf::int32 maxplayernum() const;
  inline void set_maxplayernum(::google_public::protobuf::int32 value);

  // optional int32 PlayerPerTable = 6;
  inline bool has_playerpertable() const;
  inline void clear_playerpertable();
  static const int kPlayerPerTableFieldNumber = 6;
  inline ::google_public::protobuf::int32 playerpertable() const;
  inline void set_playerpertable(::google_public::protobuf::int32 value);

  // optional int32 Buyin = 7;
  inline bool has_buyin() const;
  inline void clear_buyin();
  static const int kBuyinFieldNumber = 7;
  inline ::google_public::protobuf::int32 buyin() const;
  inline void set_buyin(::google_public::protobuf::int32 value);

  // optional int32 StartBB = 8;
  inline bool has_startbb() const;
  inline void clear_startbb();
  static const int kStartBBFieldNumber = 8;
  inline ::google_public::protobuf::int32 startbb() const;
  inline void set_startbb(::google_public::protobuf::int32 value);

  // optional int32 MaxAddonLevel = 9;
  inline bool has_maxaddonlevel() const;
  inline void clear_maxaddonlevel();
  static const int kMaxAddonLevelFieldNumber = 9;
  inline ::google_public::protobuf::int32 maxaddonlevel() const;
  inline void set_maxaddonlevel(::google_public::protobuf::int32 value);

  // optional int32 PrizePercent = 10;
  inline bool has_prizepercent() const;
  inline void clear_prizepercent();
  static const int kPrizePercentFieldNumber = 10;
  inline ::google_public::protobuf::int32 prizepercent() const;
  inline void set_prizepercent(::google_public::protobuf::int32 value);

  // optional int32 ActionTime = 11;
  inline bool has_actiontime() const;
  inline void clear_actiontime();
  static const int kActionTimeFieldNumber = 11;
  inline ::google_public::protobuf::int32 actiontime() const;
  inline void set_actiontime(::google_public::protobuf::int32 value);

  // optional string RoomName = 12;
  inline bool has_roomname() const;
  inline void clear_roomname();
  static const int kRoomNameFieldNumber = 12;
  inline const ::std::string& roomname() const;
  inline void set_roomname(const ::std::string& value);
  inline void set_roomname(const char* value);
  inline void set_roomname(const char* value, size_t size);
  inline ::std::string* mutable_roomname();
  inline ::std::string* release_roomname();
  inline void set_allocated_roomname(::std::string* roomname);

  // optional string TemplateName = 13;
  inline bool has_templatename() const;
  inline void clear_templatename();
  static const int kTemplateNameFieldNumber = 13;
  inline const ::std::string& templatename() const;
  inline void set_templatename(const ::std::string& value);
  inline void set_templatename(const char* value);
  inline void set_templatename(const char* value, size_t size);
  inline ::std::string* mutable_templatename();
  inline ::std::string* release_templatename();
  inline void set_allocated_templatename(::std::string* templatename);

  // optional bool IsSitAndGo = 14;
  inline bool has_issitandgo() const;
  inline void clear_issitandgo();
  static const int kIsSitAndGoFieldNumber = 14;
  inline bool issitandgo() const;
  inline void set_issitandgo(bool value);

  // optional int32 BlindTime = 15;
  inline bool has_blindtime() const;
  inline void clear_blindtime();
  static const int kBlindTimeFieldNumber = 15;
  inline ::google_public::protobuf::int32 blindtime() const;
  inline void set_blindtime(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.TournamentInfo)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_tournamentlevel();
  inline void clear_has_tournamentlevel();
  inline void set_has_tournamentprize();
  inline void clear_has_tournamentprize();
  inline void set_has_minplayernum();
  inline void clear_has_minplayernum();
  inline void set_has_maxplayernum();
  inline void clear_has_maxplayernum();
  inline void set_has_playerpertable();
  inline void clear_has_playerpertable();
  inline void set_has_buyin();
  inline void clear_has_buyin();
  inline void set_has_startbb();
  inline void clear_has_startbb();
  inline void set_has_maxaddonlevel();
  inline void clear_has_maxaddonlevel();
  inline void set_has_prizepercent();
  inline void clear_has_prizepercent();
  inline void set_has_actiontime();
  inline void clear_has_actiontime();
  inline void set_has_roomname();
  inline void clear_has_roomname();
  inline void set_has_templatename();
  inline void clear_has_templatename();
  inline void set_has_issitandgo();
  inline void clear_has_issitandgo();
  inline void set_has_blindtime();
  inline void clear_has_blindtime();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* starttime_;
  ::msg::TournamentLevel* tournamentlevel_;
  ::msg::TournamentPrize* tournamentprize_;
  ::google_public::protobuf::int32 minplayernum_;
  ::google_public::protobuf::int32 maxplayernum_;
  ::google_public::protobuf::int32 playerpertable_;
  ::google_public::protobuf::int32 buyin_;
  ::google_public::protobuf::int32 startbb_;
  ::google_public::protobuf::int32 maxaddonlevel_;
  ::google_public::protobuf::int32 prizepercent_;
  ::google_public::protobuf::int32 actiontime_;
  ::std::string* roomname_;
  ::std::string* templatename_;
  bool issitandgo_;
  ::google_public::protobuf::int32 blindtime_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static TournamentInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoomProp : public ::google_public::protobuf::Message {
 public:
  RoomProp();
  virtual ~RoomProp();

  RoomProp(const RoomProp& from);

  inline RoomProp& operator=(const RoomProp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const RoomProp& default_instance();

  void Swap(RoomProp* other);

  // implements Message ----------------------------------------------

  RoomProp* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const RoomProp& from);
  void MergeFrom(const RoomProp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.Property Property = 1;
  inline int property_size() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 1;
  inline const ::msg::Property& property(int index) const;
  inline ::msg::Property* mutable_property(int index);
  inline ::msg::Property* add_property();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Property >&
      property() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::Property >*
      mutable_property();

  // @@protoc_insertion_point(class_scope:msg.RoomProp)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::Property > property_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static RoomProp* default_instance_;
};
// -------------------------------------------------------------------

class Processor_151_GetRoomInfomation : public ::google_public::protobuf::Message {
 public:
  Processor_151_GetRoomInfomation();
  virtual ~Processor_151_GetRoomInfomation();

  Processor_151_GetRoomInfomation(const Processor_151_GetRoomInfomation& from);

  inline Processor_151_GetRoomInfomation& operator=(const Processor_151_GetRoomInfomation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_151_GetRoomInfomation& default_instance();

  void Swap(Processor_151_GetRoomInfomation* other);

  // implements Message ----------------------------------------------

  Processor_151_GetRoomInfomation* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_151_GetRoomInfomation& from);
  void MergeFrom(const Processor_151_GetRoomInfomation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.RoomInfomation RoomInfomation = 1;
  inline bool has_roominfomation() const;
  inline void clear_roominfomation();
  static const int kRoomInfomationFieldNumber = 1;
  inline const ::msg::RoomInfomation& roominfomation() const;
  inline ::msg::RoomInfomation* mutable_roominfomation();
  inline ::msg::RoomInfomation* release_roominfomation();
  inline void set_allocated_roominfomation(::msg::RoomInfomation* roominfomation);

  // @@protoc_insertion_point(class_scope:msg.Processor_151_GetRoomInfomation)
 private:
  inline void set_has_roominfomation();
  inline void clear_has_roominfomation();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::RoomInfomation* roominfomation_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_151_GetRoomInfomation* default_instance_;
};
// -------------------------------------------------------------------

class Processor_152_CreateRoom : public ::google_public::protobuf::Message {
 public:
  Processor_152_CreateRoom();
  virtual ~Processor_152_CreateRoom();

  Processor_152_CreateRoom(const Processor_152_CreateRoom& from);

  inline Processor_152_CreateRoom& operator=(const Processor_152_CreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_152_CreateRoom& default_instance();

  void Swap(Processor_152_CreateRoom* other);

  // implements Message ----------------------------------------------

  Processor_152_CreateRoom* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_152_CreateRoom& from);
  void MergeFrom(const Processor_152_CreateRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.RoomInfo RoomInfo = 1;
  inline bool has_roominfo() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 1;
  inline const ::msg::RoomInfo& roominfo() const;
  inline ::msg::RoomInfo* mutable_roominfo();
  inline ::msg::RoomInfo* release_roominfo();
  inline void set_allocated_roominfo(::msg::RoomInfo* roominfo);

  // optional .msg.RoomProp RoomProp = 2;
  inline bool has_roomprop() const;
  inline void clear_roomprop();
  static const int kRoomPropFieldNumber = 2;
  inline const ::msg::RoomProp& roomprop() const;
  inline ::msg::RoomProp* mutable_roomprop();
  inline ::msg::RoomProp* release_roomprop();
  inline void set_allocated_roomprop(::msg::RoomProp* roomprop);

  // optional .msg.TournamentInfo TournamentInfo = 3;
  inline bool has_tournamentinfo() const;
  inline void clear_tournamentinfo();
  static const int kTournamentInfoFieldNumber = 3;
  inline const ::msg::TournamentInfo& tournamentinfo() const;
  inline ::msg::TournamentInfo* mutable_tournamentinfo();
  inline ::msg::TournamentInfo* release_tournamentinfo();
  inline void set_allocated_tournamentinfo(::msg::TournamentInfo* tournamentinfo);

  // @@protoc_insertion_point(class_scope:msg.Processor_152_CreateRoom)
 private:
  inline void set_has_roominfo();
  inline void clear_has_roominfo();
  inline void set_has_roomprop();
  inline void clear_has_roomprop();
  inline void set_has_tournamentinfo();
  inline void clear_has_tournamentinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::RoomInfo* roominfo_;
  ::msg::RoomProp* roomprop_;
  ::msg::TournamentInfo* tournamentinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_152_CreateRoom* default_instance_;
};
// -------------------------------------------------------------------

class Processor_152_CreateRoom_down : public ::google_public::protobuf::Message {
 public:
  Processor_152_CreateRoom_down();
  virtual ~Processor_152_CreateRoom_down();

  Processor_152_CreateRoom_down(const Processor_152_CreateRoom_down& from);

  inline Processor_152_CreateRoom_down& operator=(const Processor_152_CreateRoom_down& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_152_CreateRoom_down& default_instance();

  void Swap(Processor_152_CreateRoom_down* other);

  // implements Message ----------------------------------------------

  Processor_152_CreateRoom_down* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_152_CreateRoom_down& from);
  void MergeFrom(const Processor_152_CreateRoom_down& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // @@protoc_insertion_point(class_scope:msg.Processor_152_CreateRoom_down)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_response();
  inline void clear_has_response();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_152_CreateRoom_down* default_instance_;
};
// -------------------------------------------------------------------

class Processor_154_CancelTournament : public ::google_public::protobuf::Message {
 public:
  Processor_154_CancelTournament();
  virtual ~Processor_154_CancelTournament();

  Processor_154_CancelTournament(const Processor_154_CancelTournament& from);

  inline Processor_154_CancelTournament& operator=(const Processor_154_CancelTournament& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_154_CancelTournament& default_instance();

  void Swap(Processor_154_CancelTournament* other);

  // implements Message ----------------------------------------------

  Processor_154_CancelTournament* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_154_CancelTournament& from);
  void MergeFrom(const Processor_154_CancelTournament& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_154_CancelTournament)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_154_CancelTournament* default_instance_;
};
// -------------------------------------------------------------------

class Processor_160_SendChatMessage : public ::google_public::protobuf::Message {
 public:
  Processor_160_SendChatMessage();
  virtual ~Processor_160_SendChatMessage();

  Processor_160_SendChatMessage(const Processor_160_SendChatMessage& from);

  inline Processor_160_SendChatMessage& operator=(const Processor_160_SendChatMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_160_SendChatMessage& default_instance();

  void Swap(Processor_160_SendChatMessage* other);

  // implements Message ----------------------------------------------

  Processor_160_SendChatMessage* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_160_SendChatMessage& from);
  void MergeFrom(const Processor_160_SendChatMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.ChatMessage ChatMessage = 1;
  inline bool has_chatmessage() const;
  inline void clear_chatmessage();
  static const int kChatMessageFieldNumber = 1;
  inline const ::msg::ChatMessage& chatmessage() const;
  inline ::msg::ChatMessage* mutable_chatmessage();
  inline ::msg::ChatMessage* release_chatmessage();
  inline void set_allocated_chatmessage(::msg::ChatMessage* chatmessage);

  // @@protoc_insertion_point(class_scope:msg.Processor_160_SendChatMessage)
 private:
  inline void set_has_chatmessage();
  inline void clear_has_chatmessage();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::ChatMessage* chatmessage_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_160_SendChatMessage* default_instance_;
};
// -------------------------------------------------------------------

class Processor_160_SendChatMessage_Down : public ::google_public::protobuf::Message {
 public:
  Processor_160_SendChatMessage_Down();
  virtual ~Processor_160_SendChatMessage_Down();

  Processor_160_SendChatMessage_Down(const Processor_160_SendChatMessage_Down& from);

  inline Processor_160_SendChatMessage_Down& operator=(const Processor_160_SendChatMessage_Down& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_160_SendChatMessage_Down& default_instance();

  void Swap(Processor_160_SendChatMessage_Down* other);

  // implements Message ----------------------------------------------

  Processor_160_SendChatMessage_Down* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_160_SendChatMessage_Down& from);
  void MergeFrom(const Processor_160_SendChatMessage_Down& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional string SubmitTime = 2;
  inline bool has_submittime() const;
  inline void clear_submittime();
  static const int kSubmitTimeFieldNumber = 2;
  inline const ::std::string& submittime() const;
  inline void set_submittime(const ::std::string& value);
  inline void set_submittime(const char* value);
  inline void set_submittime(const char* value, size_t size);
  inline ::std::string* mutable_submittime();
  inline ::std::string* release_submittime();
  inline void set_allocated_submittime(::std::string* submittime);

  // @@protoc_insertion_point(class_scope:msg.Processor_160_SendChatMessage_Down)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_submittime();
  inline void clear_has_submittime();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::std::string* submittime_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_160_SendChatMessage_Down* default_instance_;
};
// -------------------------------------------------------------------

class Processor_161_ReceiveChatMessage : public ::google_public::protobuf::Message {
 public:
  Processor_161_ReceiveChatMessage();
  virtual ~Processor_161_ReceiveChatMessage();

  Processor_161_ReceiveChatMessage(const Processor_161_ReceiveChatMessage& from);

  inline Processor_161_ReceiveChatMessage& operator=(const Processor_161_ReceiveChatMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_161_ReceiveChatMessage& default_instance();

  void Swap(Processor_161_ReceiveChatMessage* other);

  // implements Message ----------------------------------------------

  Processor_161_ReceiveChatMessage* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_161_ReceiveChatMessage& from);
  void MergeFrom(const Processor_161_ReceiveChatMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.ChatMessage ChatMessage = 1;
  inline int chatmessage_size() const;
  inline void clear_chatmessage();
  static const int kChatMessageFieldNumber = 1;
  inline const ::msg::ChatMessage& chatmessage(int index) const;
  inline ::msg::ChatMessage* mutable_chatmessage(int index);
  inline ::msg::ChatMessage* add_chatmessage();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage >&
      chatmessage() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage >*
      mutable_chatmessage();

  // @@protoc_insertion_point(class_scope:msg.Processor_161_ReceiveChatMessage)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage > chatmessage_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_161_ReceiveChatMessage* default_instance_;
};
// -------------------------------------------------------------------

class Processor_161_ReceiveChatMessage_UP : public ::google_public::protobuf::Message {
 public:
  Processor_161_ReceiveChatMessage_UP();
  virtual ~Processor_161_ReceiveChatMessage_UP();

  Processor_161_ReceiveChatMessage_UP(const Processor_161_ReceiveChatMessage_UP& from);

  inline Processor_161_ReceiveChatMessage_UP& operator=(const Processor_161_ReceiveChatMessage_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_161_ReceiveChatMessage_UP& default_instance();

  void Swap(Processor_161_ReceiveChatMessage_UP* other);

  // implements Message ----------------------------------------------

  Processor_161_ReceiveChatMessage_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_161_ReceiveChatMessage_UP& from);
  void MergeFrom(const Processor_161_ReceiveChatMessage_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 LastMsgID = 1;
  inline bool has_lastmsgid() const;
  inline void clear_lastmsgid();
  static const int kLastMsgIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 lastmsgid() const;
  inline void set_lastmsgid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_161_ReceiveChatMessage_UP)
 private:
  inline void set_has_lastmsgid();
  inline void clear_has_lastmsgid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 lastmsgid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_161_ReceiveChatMessage_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_170_GetHistoryScore_Up : public ::google_public::protobuf::Message {
 public:
  Processor_170_GetHistoryScore_Up();
  virtual ~Processor_170_GetHistoryScore_Up();

  Processor_170_GetHistoryScore_Up(const Processor_170_GetHistoryScore_Up& from);

  inline Processor_170_GetHistoryScore_Up& operator=(const Processor_170_GetHistoryScore_Up& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_170_GetHistoryScore_Up& default_instance();

  void Swap(Processor_170_GetHistoryScore_Up* other);

  // implements Message ----------------------------------------------

  Processor_170_GetHistoryScore_Up* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_170_GetHistoryScore_Up& from);
  void MergeFrom(const Processor_170_GetHistoryScore_Up& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.RoomType RoomType = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 1;
  inline ::msg::RoomType roomtype() const;
  inline void set_roomtype(::msg::RoomType value);

  // optional bool IsTournament = 2;
  inline bool has_istournament() const;
  inline void clear_istournament();
  static const int kIsTournamentFieldNumber = 2;
  inline bool istournament() const;
  inline void set_istournament(bool value);

  // optional string StartTime = 3;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 3;
  inline const ::std::string& starttime() const;
  inline void set_starttime(const ::std::string& value);
  inline void set_starttime(const char* value);
  inline void set_starttime(const char* value, size_t size);
  inline ::std::string* mutable_starttime();
  inline ::std::string* release_starttime();
  inline void set_allocated_starttime(::std::string* starttime);

  // optional string EndTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline const ::std::string& endtime() const;
  inline void set_endtime(const ::std::string& value);
  inline void set_endtime(const char* value);
  inline void set_endtime(const char* value, size_t size);
  inline ::std::string* mutable_endtime();
  inline ::std::string* release_endtime();
  inline void set_allocated_endtime(::std::string* endtime);

  // optional int32 groupid = 5;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 5;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_170_GetHistoryScore_Up)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_istournament();
  inline void clear_has_istournament();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int roomtype_;
  bool istournament_;
  ::std::string* starttime_;
  ::std::string* endtime_;
  ::google_public::protobuf::int32 groupid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_170_GetHistoryScore_Up* default_instance_;
};
// -------------------------------------------------------------------

class HistoryScore : public ::google_public::protobuf::Message {
 public:
  HistoryScore();
  virtual ~HistoryScore();

  HistoryScore(const HistoryScore& from);

  inline HistoryScore& operator=(const HistoryScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const HistoryScore& default_instance();

  void Swap(HistoryScore* other);

  // implements Message ----------------------------------------------

  HistoryScore* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const HistoryScore& from);
  void MergeFrom(const HistoryScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional string EndTime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  inline const ::std::string& endtime() const;
  inline void set_endtime(const ::std::string& value);
  inline void set_endtime(const char* value);
  inline void set_endtime(const char* value, size_t size);
  inline ::std::string* mutable_endtime();
  inline ::std::string* release_endtime();
  inline void set_allocated_endtime(::std::string* endtime);

  // optional string RoomName = 3;
  inline bool has_roomname() const;
  inline void clear_roomname();
  static const int kRoomNameFieldNumber = 3;
  inline const ::std::string& roomname() const;
  inline void set_roomname(const ::std::string& value);
  inline void set_roomname(const char* value);
  inline void set_roomname(const char* value, size_t size);
  inline ::std::string* mutable_roomname();
  inline ::std::string* release_roomname();
  inline void set_allocated_roomname(::std::string* roomname);

  // optional int32 Score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google_public::protobuf::int32 score() const;
  inline void set_score(::google_public::protobuf::int32 value);

  // optional int64 PlayTime = 5;
  inline bool has_playtime() const;
  inline void clear_playtime();
  static const int kPlayTimeFieldNumber = 5;
  inline ::google_public::protobuf::int64 playtime() const;
  inline void set_playtime(::google_public::protobuf::int64 value);

  // optional int32 PlayHands = 6;
  inline bool has_playhands() const;
  inline void clear_playhands();
  static const int kPlayHandsFieldNumber = 6;
  inline ::google_public::protobuf::int32 playhands() const;
  inline void set_playhands(::google_public::protobuf::int32 value);

  // optional string GroupName = 7;
  inline bool has_groupname() const;
  inline void clear_groupname();
  static const int kGroupNameFieldNumber = 7;
  inline const ::std::string& groupname() const;
  inline void set_groupname(const ::std::string& value);
  inline void set_groupname(const char* value);
  inline void set_groupname(const char* value, size_t size);
  inline ::std::string* mutable_groupname();
  inline ::std::string* release_groupname();
  inline void set_allocated_groupname(::std::string* groupname);

  // repeated string Label = 8;
  inline int label_size() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 8;
  inline const ::std::string& label(int index) const;
  inline ::std::string* mutable_label(int index);
  inline void set_label(int index, const ::std::string& value);
  inline void set_label(int index, const char* value);
  inline void set_label(int index, const char* value, size_t size);
  inline ::std::string* add_label();
  inline void add_label(const ::std::string& value);
  inline void add_label(const char* value);
  inline void add_label(const char* value, size_t size);
  inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>& label() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::std::string>* mutable_label();

  // @@protoc_insertion_point(class_scope:msg.HistoryScore)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_roomname();
  inline void clear_has_roomname();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_playtime();
  inline void clear_has_playtime();
  inline void set_has_playhands();
  inline void clear_has_playhands();
  inline void set_has_groupname();
  inline void clear_has_groupname();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* endtime_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 score_;
  ::std::string* roomname_;
  ::google_public::protobuf::int64 playtime_;
  ::std::string* groupname_;
  ::google_public::protobuf::RepeatedPtrField< ::std::string> label_;
  ::google_public::protobuf::int32 playhands_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static HistoryScore* default_instance_;
};
// -------------------------------------------------------------------

class Processor_170_GetHistoryScore_Down : public ::google_public::protobuf::Message {
 public:
  Processor_170_GetHistoryScore_Down();
  virtual ~Processor_170_GetHistoryScore_Down();

  Processor_170_GetHistoryScore_Down(const Processor_170_GetHistoryScore_Down& from);

  inline Processor_170_GetHistoryScore_Down& operator=(const Processor_170_GetHistoryScore_Down& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_170_GetHistoryScore_Down& default_instance();

  void Swap(Processor_170_GetHistoryScore_Down* other);

  // implements Message ----------------------------------------------

  Processor_170_GetHistoryScore_Down* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_170_GetHistoryScore_Down& from);
  void MergeFrom(const Processor_170_GetHistoryScore_Down& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.HistoryScore Score = 1;
  inline int score_size() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline const ::msg::HistoryScore& score(int index) const;
  inline ::msg::HistoryScore* mutable_score(int index);
  inline ::msg::HistoryScore* add_score();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::HistoryScore >&
      score() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::HistoryScore >*
      mutable_score();

  // @@protoc_insertion_point(class_scope:msg.Processor_170_GetHistoryScore_Down)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::HistoryScore > score_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_170_GetHistoryScore_Down* default_instance_;
};
// -------------------------------------------------------------------

class Processor_171_GetGroupUserRank_UP : public ::google_public::protobuf::Message {
 public:
  Processor_171_GetGroupUserRank_UP();
  virtual ~Processor_171_GetGroupUserRank_UP();

  Processor_171_GetGroupUserRank_UP(const Processor_171_GetGroupUserRank_UP& from);

  inline Processor_171_GetGroupUserRank_UP& operator=(const Processor_171_GetGroupUserRank_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_171_GetGroupUserRank_UP& default_instance();

  void Swap(Processor_171_GetGroupUserRank_UP* other);

  // implements Message ----------------------------------------------

  Processor_171_GetGroupUserRank_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_171_GetGroupUserRank_UP& from);
  void MergeFrom(const Processor_171_GetGroupUserRank_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 GroupId = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional .msg.RoomType RoomType = 2;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 2;
  inline ::msg::RoomType roomtype() const;
  inline void set_roomtype(::msg::RoomType value);

  // optional bool IsTournament = 3;
  inline bool has_istournament() const;
  inline void clear_istournament();
  static const int kIsTournamentFieldNumber = 3;
  inline bool istournament() const;
  inline void set_istournament(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_171_GetGroupUserRank_UP)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_istournament();
  inline void clear_has_istournament();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 groupid_;
  int roomtype_;
  bool istournament_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_171_GetGroupUserRank_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_171_GetGroupUserRank_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_171_GetGroupUserRank_DOWN();
  virtual ~Processor_171_GetGroupUserRank_DOWN();

  Processor_171_GetGroupUserRank_DOWN(const Processor_171_GetGroupUserRank_DOWN& from);

  inline Processor_171_GetGroupUserRank_DOWN& operator=(const Processor_171_GetGroupUserRank_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_171_GetGroupUserRank_DOWN& default_instance();

  void Swap(Processor_171_GetGroupUserRank_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_171_GetGroupUserRank_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_171_GetGroupUserRank_DOWN& from);
  void MergeFrom(const Processor_171_GetGroupUserRank_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.GroupInfo GroupInfo = 1;
  inline bool has_groupinfo() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 1;
  inline const ::msg::GroupInfo& groupinfo() const;
  inline ::msg::GroupInfo* mutable_groupinfo();
  inline ::msg::GroupInfo* release_groupinfo();
  inline void set_allocated_groupinfo(::msg::GroupInfo* groupinfo);

  // optional .msg.RoomType RoomType = 2;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 2;
  inline ::msg::RoomType roomtype() const;
  inline void set_roomtype(::msg::RoomType value);

  // optional bool IsTournament = 3;
  inline bool has_istournament() const;
  inline void clear_istournament();
  static const int kIsTournamentFieldNumber = 3;
  inline bool istournament() const;
  inline void set_istournament(bool value);

  // optional .msg.PlayerScores PlayerScores = 4;
  inline bool has_playerscores() const;
  inline void clear_playerscores();
  static const int kPlayerScoresFieldNumber = 4;
  inline const ::msg::PlayerScores& playerscores() const;
  inline ::msg::PlayerScores* mutable_playerscores();
  inline ::msg::PlayerScores* release_playerscores();
  inline void set_allocated_playerscores(::msg::PlayerScores* playerscores);

  // @@protoc_insertion_point(class_scope:msg.Processor_171_GetGroupUserRank_DOWN)
 private:
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_istournament();
  inline void clear_has_istournament();
  inline void set_has_playerscores();
  inline void clear_has_playerscores();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::GroupInfo* groupinfo_;
  int roomtype_;
  bool istournament_;
  ::msg::PlayerScores* playerscores_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_171_GetGroupUserRank_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_181_JoinTournament : public ::google_public::protobuf::Message {
 public:
  Processor_181_JoinTournament();
  virtual ~Processor_181_JoinTournament();

  Processor_181_JoinTournament(const Processor_181_JoinTournament& from);

  inline Processor_181_JoinTournament& operator=(const Processor_181_JoinTournament& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_181_JoinTournament& default_instance();

  void Swap(Processor_181_JoinTournament* other);

  // implements Message ----------------------------------------------

  Processor_181_JoinTournament* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_181_JoinTournament& from);
  void MergeFrom(const Processor_181_JoinTournament& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional bool IsJoin = 2;
  inline bool has_isjoin() const;
  inline void clear_isjoin();
  static const int kIsJoinFieldNumber = 2;
  inline bool isjoin() const;
  inline void set_isjoin(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_181_JoinTournament)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_isjoin();
  inline void clear_has_isjoin();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  bool isjoin_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_181_JoinTournament* default_instance_;
};
// -------------------------------------------------------------------

class Processor_182_TournamentStart : public ::google_public::protobuf::Message {
 public:
  Processor_182_TournamentStart();
  virtual ~Processor_182_TournamentStart();

  Processor_182_TournamentStart(const Processor_182_TournamentStart& from);

  inline Processor_182_TournamentStart& operator=(const Processor_182_TournamentStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_182_TournamentStart& default_instance();

  void Swap(Processor_182_TournamentStart* other);

  // implements Message ----------------------------------------------

  Processor_182_TournamentStart* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_182_TournamentStart& from);
  void MergeFrom(const Processor_182_TournamentStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_182_TournamentStart)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_182_TournamentStart* default_instance_;
};
// -------------------------------------------------------------------

class Processor_190_ReceiveMessage : public ::google_public::protobuf::Message {
 public:
  Processor_190_ReceiveMessage();
  virtual ~Processor_190_ReceiveMessage();

  Processor_190_ReceiveMessage(const Processor_190_ReceiveMessage& from);

  inline Processor_190_ReceiveMessage& operator=(const Processor_190_ReceiveMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_190_ReceiveMessage& default_instance();

  void Swap(Processor_190_ReceiveMessage* other);

  // implements Message ----------------------------------------------

  Processor_190_ReceiveMessage* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_190_ReceiveMessage& from);
  void MergeFrom(const Processor_190_ReceiveMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 id() const;
  inline void set_id(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_190_ReceiveMessage)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_id();
  inline void clear_has_id();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google_public::protobuf::int32 id_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_190_ReceiveMessage* default_instance_;
};
// -------------------------------------------------------------------

class Processor_190_ReceiveMessage_UP : public ::google_public::protobuf::Message {
 public:
  Processor_190_ReceiveMessage_UP();
  virtual ~Processor_190_ReceiveMessage_UP();

  Processor_190_ReceiveMessage_UP(const Processor_190_ReceiveMessage_UP& from);

  inline Processor_190_ReceiveMessage_UP& operator=(const Processor_190_ReceiveMessage_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_190_ReceiveMessage_UP& default_instance();

  void Swap(Processor_190_ReceiveMessage_UP* other);

  // implements Message ----------------------------------------------

  Processor_190_ReceiveMessage_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_190_ReceiveMessage_UP& from);
  void MergeFrom(const Processor_190_ReceiveMessage_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool choice = 1;
  inline bool has_choice() const;
  inline void clear_choice();
  static const int kChoiceFieldNumber = 1;
  inline bool choice() const;
  inline void set_choice(bool value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 id() const;
  inline void set_id(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_190_ReceiveMessage_UP)
 private:
  inline void set_has_choice();
  inline void clear_has_choice();
  inline void set_has_id();
  inline void clear_has_id();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool choice_;
  ::google_public::protobuf::int32 id_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_190_ReceiveMessage_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_191_NotifyChange : public ::google_public::protobuf::Message {
 public:
  Processor_191_NotifyChange();
  virtual ~Processor_191_NotifyChange();

  Processor_191_NotifyChange(const Processor_191_NotifyChange& from);

  inline Processor_191_NotifyChange& operator=(const Processor_191_NotifyChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_191_NotifyChange& default_instance();

  void Swap(Processor_191_NotifyChange* other);

  // implements Message ----------------------------------------------

  Processor_191_NotifyChange* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_191_NotifyChange& from);
  void MergeFrom(const Processor_191_NotifyChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool RoomChange = 1;
  inline bool has_roomchange() const;
  inline void clear_roomchange();
  static const int kRoomChangeFieldNumber = 1;
  inline bool roomchange() const;
  inline void set_roomchange(bool value);

  // optional bool FriendChange = 2;
  inline bool has_friendchange() const;
  inline void clear_friendchange();
  static const int kFriendChangeFieldNumber = 2;
  inline bool friendchange() const;
  inline void set_friendchange(bool value);

  // optional bool GroupChange = 3;
  inline bool has_groupchange() const;
  inline void clear_groupchange();
  static const int kGroupChangeFieldNumber = 3;
  inline bool groupchange() const;
  inline void set_groupchange(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_191_NotifyChange)
 private:
  inline void set_has_roomchange();
  inline void clear_has_roomchange();
  inline void set_has_friendchange();
  inline void clear_has_friendchange();
  inline void set_has_groupchange();
  inline void clear_has_groupchange();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool roomchange_;
  bool friendchange_;
  bool groupchange_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_191_NotifyChange* default_instance_;
};
// -------------------------------------------------------------------

class Moment : public ::google_public::protobuf::Message {
 public:
  Moment();
  virtual ~Moment();

  Moment(const Moment& from);

  inline Moment& operator=(const Moment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Moment& default_instance();

  void Swap(Moment* other);

  // implements Message ----------------------------------------------

  Moment* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Moment& from);
  void MergeFrom(const Moment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userinfo() const;
  inline ::msg::UserDetailInfo* mutable_userinfo();
  inline ::msg::UserDetailInfo* release_userinfo();
  inline void set_allocated_userinfo(::msg::UserDetailInfo* userinfo);

  // optional int32 MomentId = 2;
  inline bool has_momentid() const;
  inline void clear_momentid();
  static const int kMomentIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 momentid() const;
  inline void set_momentid(::google_public::protobuf::int32 value);

  // optional .msg.MomentInfo MomentInfo = 3;
  inline bool has_momentinfo() const;
  inline void clear_momentinfo();
  static const int kMomentInfoFieldNumber = 3;
  inline const ::msg::MomentInfo& momentinfo() const;
  inline ::msg::MomentInfo* mutable_momentinfo();
  inline ::msg::MomentInfo* release_momentinfo();
  inline void set_allocated_momentinfo(::msg::MomentInfo* momentinfo);

  // optional .msg.MomentDisplayType DisplayType = 4;
  inline bool has_displaytype() const;
  inline void clear_displaytype();
  static const int kDisplayTypeFieldNumber = 4;
  inline ::msg::MomentDisplayType displaytype() const;
  inline void set_displaytype(::msg::MomentDisplayType value);

  // optional int64 Time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google_public::protobuf::int64 time() const;
  inline void set_time(::google_public::protobuf::int64 value);

  // optional .msg.CommentInfos CommentInfos = 6;
  inline bool has_commentinfos() const;
  inline void clear_commentinfos();
  static const int kCommentInfosFieldNumber = 6;
  inline const ::msg::CommentInfos& commentinfos() const;
  inline ::msg::CommentInfos* mutable_commentinfos();
  inline ::msg::CommentInfos* release_commentinfos();
  inline void set_allocated_commentinfos(::msg::CommentInfos* commentinfos);

  // @@protoc_insertion_point(class_scope:msg.Moment)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_momentid();
  inline void clear_has_momentid();
  inline void set_has_momentinfo();
  inline void clear_has_momentinfo();
  inline void set_has_displaytype();
  inline void clear_has_displaytype();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_commentinfos();
  inline void clear_has_commentinfos();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userinfo_;
  ::msg::MomentInfo* momentinfo_;
  ::google_public::protobuf::int32 momentid_;
  int displaytype_;
  ::google_public::protobuf::int64 time_;
  ::msg::CommentInfos* commentinfos_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Moment* default_instance_;
};
// -------------------------------------------------------------------

class CommentInfos : public ::google_public::protobuf::Message {
 public:
  CommentInfos();
  virtual ~CommentInfos();

  CommentInfos(const CommentInfos& from);

  inline CommentInfos& operator=(const CommentInfos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const CommentInfos& default_instance();

  void Swap(CommentInfos* other);

  // implements Message ----------------------------------------------

  CommentInfos* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const CommentInfos& from);
  void MergeFrom(const CommentInfos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.CommentInfo CommentInfo = 1;
  inline int commentinfo_size() const;
  inline void clear_commentinfo();
  static const int kCommentInfoFieldNumber = 1;
  inline const ::msg::CommentInfo& commentinfo(int index) const;
  inline ::msg::CommentInfo* mutable_commentinfo(int index);
  inline ::msg::CommentInfo* add_commentinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo >&
      commentinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo >*
      mutable_commentinfo();

  // @@protoc_insertion_point(class_scope:msg.CommentInfos)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo > commentinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static CommentInfos* default_instance_;
};
// -------------------------------------------------------------------

class MomentInfo : public ::google_public::protobuf::Message {
 public:
  MomentInfo();
  virtual ~MomentInfo();

  MomentInfo(const MomentInfo& from);

  inline MomentInfo& operator=(const MomentInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MomentInfo& default_instance();

  void Swap(MomentInfo* other);

  // implements Message ----------------------------------------------

  MomentInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MomentInfo& from);
  void MergeFrom(const MomentInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MomentType = 1;
  inline bool has_momenttype() const;
  inline void clear_momenttype();
  static const int kMomentTypeFieldNumber = 1;
  inline ::google_public::protobuf::int32 momenttype() const;
  inline void set_momenttype(::google_public::protobuf::int32 value);

  // optional .msg.NormalMomentInfo NormalMomentInfo = 2;
  inline bool has_normalmomentinfo() const;
  inline void clear_normalmomentinfo();
  static const int kNormalMomentInfoFieldNumber = 2;
  inline const ::msg::NormalMomentInfo& normalmomentinfo() const;
  inline ::msg::NormalMomentInfo* mutable_normalmomentinfo();
  inline ::msg::NormalMomentInfo* release_normalmomentinfo();
  inline void set_allocated_normalmomentinfo(::msg::NormalMomentInfo* normalmomentinfo);

  // @@protoc_insertion_point(class_scope:msg.MomentInfo)
 private:
  inline void set_has_momenttype();
  inline void clear_has_momenttype();
  inline void set_has_normalmomentinfo();
  inline void clear_has_normalmomentinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::NormalMomentInfo* normalmomentinfo_;
  ::google_public::protobuf::int32 momenttype_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MomentInfo* default_instance_;
};
// -------------------------------------------------------------------

class NormalMomentInfo : public ::google_public::protobuf::Message {
 public:
  NormalMomentInfo();
  virtual ~NormalMomentInfo();

  NormalMomentInfo(const NormalMomentInfo& from);

  inline NormalMomentInfo& operator=(const NormalMomentInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const NormalMomentInfo& default_instance();

  void Swap(NormalMomentInfo* other);

  // implements Message ----------------------------------------------

  NormalMomentInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const NormalMomentInfo& from);
  void MergeFrom(const NormalMomentInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string WordContent = 1;
  inline bool has_wordcontent() const;
  inline void clear_wordcontent();
  static const int kWordContentFieldNumber = 1;
  inline const ::std::string& wordcontent() const;
  inline void set_wordcontent(const ::std::string& value);
  inline void set_wordcontent(const char* value);
  inline void set_wordcontent(const char* value, size_t size);
  inline ::std::string* mutable_wordcontent();
  inline ::std::string* release_wordcontent();
  inline void set_allocated_wordcontent(::std::string* wordcontent);

  // repeated string PicName = 2;
  inline int picname_size() const;
  inline void clear_picname();
  static const int kPicNameFieldNumber = 2;
  inline const ::std::string& picname(int index) const;
  inline ::std::string* mutable_picname(int index);
  inline void set_picname(int index, const ::std::string& value);
  inline void set_picname(int index, const char* value);
  inline void set_picname(int index, const char* value, size_t size);
  inline ::std::string* add_picname();
  inline void add_picname(const ::std::string& value);
  inline void add_picname(const char* value);
  inline void add_picname(const char* value, size_t size);
  inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>& picname() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::std::string>* mutable_picname();

  // optional int32 HandId = 3;
  inline bool has_handid() const;
  inline void clear_handid();
  static const int kHandIdFieldNumber = 3;
  inline ::google_public::protobuf::int32 handid() const;
  inline void set_handid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.NormalMomentInfo)
 private:
  inline void set_has_wordcontent();
  inline void clear_has_wordcontent();
  inline void set_has_handid();
  inline void clear_has_handid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* wordcontent_;
  ::google_public::protobuf::RepeatedPtrField< ::std::string> picname_;
  ::google_public::protobuf::int32 handid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static NormalMomentInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_200_PublishMoment : public ::google_public::protobuf::Message {
 public:
  Processor_200_PublishMoment();
  virtual ~Processor_200_PublishMoment();

  Processor_200_PublishMoment(const Processor_200_PublishMoment& from);

  inline Processor_200_PublishMoment& operator=(const Processor_200_PublishMoment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_200_PublishMoment& default_instance();

  void Swap(Processor_200_PublishMoment* other);

  // implements Message ----------------------------------------------

  Processor_200_PublishMoment* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_200_PublishMoment& from);
  void MergeFrom(const Processor_200_PublishMoment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Moment Moment = 1;
  inline bool has_moment() const;
  inline void clear_moment();
  static const int kMomentFieldNumber = 1;
  inline const ::msg::Moment& moment() const;
  inline ::msg::Moment* mutable_moment();
  inline ::msg::Moment* release_moment();
  inline void set_allocated_moment(::msg::Moment* moment);

  // @@protoc_insertion_point(class_scope:msg.Processor_200_PublishMoment)
 private:
  inline void set_has_moment();
  inline void clear_has_moment();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Moment* moment_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_200_PublishMoment* default_instance_;
};
// -------------------------------------------------------------------

class Processor_201_GetMoment_UP : public ::google_public::protobuf::Message {
 public:
  Processor_201_GetMoment_UP();
  virtual ~Processor_201_GetMoment_UP();

  Processor_201_GetMoment_UP(const Processor_201_GetMoment_UP& from);

  inline Processor_201_GetMoment_UP& operator=(const Processor_201_GetMoment_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_201_GetMoment_UP& default_instance();

  void Swap(Processor_201_GetMoment_UP* other);

  // implements Message ----------------------------------------------

  Processor_201_GetMoment_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_201_GetMoment_UP& from);
  void MergeFrom(const Processor_201_GetMoment_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MomentId = 1;
  inline bool has_momentid() const;
  inline void clear_momentid();
  static const int kMomentIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 momentid() const;
  inline void set_momentid(::google_public::protobuf::int32 value);

  // optional bool IsDown = 2;
  inline bool has_isdown() const;
  inline void clear_isdown();
  static const int kIsDownFieldNumber = 2;
  inline bool isdown() const;
  inline void set_isdown(bool value);

  // optional .msg.MomentDisplayType Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::msg::MomentDisplayType type() const;
  inline void set_type(::msg::MomentDisplayType value);

  // @@protoc_insertion_point(class_scope:msg.Processor_201_GetMoment_UP)
 private:
  inline void set_has_momentid();
  inline void clear_has_momentid();
  inline void set_has_isdown();
  inline void clear_has_isdown();
  inline void set_has_type();
  inline void clear_has_type();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 momentid_;
  bool isdown_;
  int type_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_201_GetMoment_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_201_GetMoment_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_201_GetMoment_DOWN();
  virtual ~Processor_201_GetMoment_DOWN();

  Processor_201_GetMoment_DOWN(const Processor_201_GetMoment_DOWN& from);

  inline Processor_201_GetMoment_DOWN& operator=(const Processor_201_GetMoment_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_201_GetMoment_DOWN& default_instance();

  void Swap(Processor_201_GetMoment_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_201_GetMoment_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_201_GetMoment_DOWN& from);
  void MergeFrom(const Processor_201_GetMoment_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.Moment Moment = 1;
  inline int moment_size() const;
  inline void clear_moment();
  static const int kMomentFieldNumber = 1;
  inline const ::msg::Moment& moment(int index) const;
  inline ::msg::Moment* mutable_moment(int index);
  inline ::msg::Moment* add_moment();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Moment >&
      moment() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::Moment >*
      mutable_moment();

  // @@protoc_insertion_point(class_scope:msg.Processor_201_GetMoment_DOWN)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::Moment > moment_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_201_GetMoment_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_202_DeleteMoment : public ::google_public::protobuf::Message {
 public:
  Processor_202_DeleteMoment();
  virtual ~Processor_202_DeleteMoment();

  Processor_202_DeleteMoment(const Processor_202_DeleteMoment& from);

  inline Processor_202_DeleteMoment& operator=(const Processor_202_DeleteMoment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_202_DeleteMoment& default_instance();

  void Swap(Processor_202_DeleteMoment* other);

  // implements Message ----------------------------------------------

  Processor_202_DeleteMoment* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_202_DeleteMoment& from);
  void MergeFrom(const Processor_202_DeleteMoment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MomentId = 1;
  inline bool has_momentid() const;
  inline void clear_momentid();
  static const int kMomentIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 momentid() const;
  inline void set_momentid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_202_DeleteMoment)
 private:
  inline void set_has_momentid();
  inline void clear_has_momentid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 momentid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_202_DeleteMoment* default_instance_;
};
// -------------------------------------------------------------------

class CommentInfo : public ::google_public::protobuf::Message {
 public:
  CommentInfo();
  virtual ~CommentInfo();

  CommentInfo(const CommentInfo& from);

  inline CommentInfo& operator=(const CommentInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const CommentInfo& default_instance();

  void Swap(CommentInfo* other);

  // implements Message ----------------------------------------------

  CommentInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const CommentInfo& from);
  void MergeFrom(const CommentInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MomentId = 1;
  inline bool has_momentid() const;
  inline void clear_momentid();
  static const int kMomentIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 momentid() const;
  inline void set_momentid(::google_public::protobuf::int32 value);

  // optional int32 CommentId = 2;
  inline bool has_commentid() const;
  inline void clear_commentid();
  static const int kCommentIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 commentid() const;
  inline void set_commentid(::google_public::protobuf::int32 value);

  // optional .msg.CommentType Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::msg::CommentType type() const;
  inline void set_type(::msg::CommentType value);

  // optional .msg.UserDetailInfo UserInfo = 4;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 4;
  inline const ::msg::UserDetailInfo& userinfo() const;
  inline ::msg::UserDetailInfo* mutable_userinfo();
  inline ::msg::UserDetailInfo* release_userinfo();
  inline void set_allocated_userinfo(::msg::UserDetailInfo* userinfo);

  // optional string Content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional int64 Time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google_public::protobuf::int64 time() const;
  inline void set_time(::google_public::protobuf::int64 value);

  // optional int32 parentComment = 7;
  inline bool has_parentcomment() const;
  inline void clear_parentcomment();
  static const int kParentCommentFieldNumber = 7;
  inline ::google_public::protobuf::int32 parentcomment() const;
  inline void set_parentcomment(::google_public::protobuf::int32 value);

  // optional bool isDelete = 8;
  inline bool has_isdelete() const;
  inline void clear_isdelete();
  static const int kIsDeleteFieldNumber = 8;
  inline bool isdelete() const;
  inline void set_isdelete(bool value);

  // @@protoc_insertion_point(class_scope:msg.CommentInfo)
 private:
  inline void set_has_momentid();
  inline void clear_has_momentid();
  inline void set_has_commentid();
  inline void clear_has_commentid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_parentcomment();
  inline void clear_has_parentcomment();
  inline void set_has_isdelete();
  inline void clear_has_isdelete();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 momentid_;
  ::google_public::protobuf::int32 commentid_;
  ::msg::UserDetailInfo* userinfo_;
  ::std::string* content_;
  int type_;
  ::google_public::protobuf::int32 parentcomment_;
  ::google_public::protobuf::int64 time_;
  bool isdelete_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static CommentInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_203_PublishComment : public ::google_public::protobuf::Message {
 public:
  Processor_203_PublishComment();
  virtual ~Processor_203_PublishComment();

  Processor_203_PublishComment(const Processor_203_PublishComment& from);

  inline Processor_203_PublishComment& operator=(const Processor_203_PublishComment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_203_PublishComment& default_instance();

  void Swap(Processor_203_PublishComment* other);

  // implements Message ----------------------------------------------

  Processor_203_PublishComment* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_203_PublishComment& from);
  void MergeFrom(const Processor_203_PublishComment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.CommentInfo CommentInfo = 1;
  inline bool has_commentinfo() const;
  inline void clear_commentinfo();
  static const int kCommentInfoFieldNumber = 1;
  inline const ::msg::CommentInfo& commentinfo() const;
  inline ::msg::CommentInfo* mutable_commentinfo();
  inline ::msg::CommentInfo* release_commentinfo();
  inline void set_allocated_commentinfo(::msg::CommentInfo* commentinfo);

  // @@protoc_insertion_point(class_scope:msg.Processor_203_PublishComment)
 private:
  inline void set_has_commentinfo();
  inline void clear_has_commentinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::CommentInfo* commentinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_203_PublishComment* default_instance_;
};
// -------------------------------------------------------------------

class Processor_204_GetComment_UP : public ::google_public::protobuf::Message {
 public:
  Processor_204_GetComment_UP();
  virtual ~Processor_204_GetComment_UP();

  Processor_204_GetComment_UP(const Processor_204_GetComment_UP& from);

  inline Processor_204_GetComment_UP& operator=(const Processor_204_GetComment_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_204_GetComment_UP& default_instance();

  void Swap(Processor_204_GetComment_UP* other);

  // implements Message ----------------------------------------------

  Processor_204_GetComment_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_204_GetComment_UP& from);
  void MergeFrom(const Processor_204_GetComment_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MomentId = 1;
  inline bool has_momentid() const;
  inline void clear_momentid();
  static const int kMomentIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 momentid() const;
  inline void set_momentid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_204_GetComment_UP)
 private:
  inline void set_has_momentid();
  inline void clear_has_momentid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 momentid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_204_GetComment_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_204_GetComment_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_204_GetComment_DOWN();
  virtual ~Processor_204_GetComment_DOWN();

  Processor_204_GetComment_DOWN(const Processor_204_GetComment_DOWN& from);

  inline Processor_204_GetComment_DOWN& operator=(const Processor_204_GetComment_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_204_GetComment_DOWN& default_instance();

  void Swap(Processor_204_GetComment_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_204_GetComment_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_204_GetComment_DOWN& from);
  void MergeFrom(const Processor_204_GetComment_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.CommentInfo CommentInfo = 1;
  inline int commentinfo_size() const;
  inline void clear_commentinfo();
  static const int kCommentInfoFieldNumber = 1;
  inline const ::msg::CommentInfo& commentinfo(int index) const;
  inline ::msg::CommentInfo* mutable_commentinfo(int index);
  inline ::msg::CommentInfo* add_commentinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo >&
      commentinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo >*
      mutable_commentinfo();

  // @@protoc_insertion_point(class_scope:msg.Processor_204_GetComment_DOWN)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo > commentinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_204_GetComment_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_205_DeleteMoment : public ::google_public::protobuf::Message {
 public:
  Processor_205_DeleteMoment();
  virtual ~Processor_205_DeleteMoment();

  Processor_205_DeleteMoment(const Processor_205_DeleteMoment& from);

  inline Processor_205_DeleteMoment& operator=(const Processor_205_DeleteMoment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_205_DeleteMoment& default_instance();

  void Swap(Processor_205_DeleteMoment* other);

  // implements Message ----------------------------------------------

  Processor_205_DeleteMoment* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_205_DeleteMoment& from);
  void MergeFrom(const Processor_205_DeleteMoment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MomentId = 1;
  inline bool has_momentid() const;
  inline void clear_momentid();
  static const int kMomentIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 momentid() const;
  inline void set_momentid(::google_public::protobuf::int32 value);

  // optional int32 CommentId = 2;
  inline bool has_commentid() const;
  inline void clear_commentid();
  static const int kCommentIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 commentid() const;
  inline void set_commentid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_205_DeleteMoment)
 private:
  inline void set_has_momentid();
  inline void clear_has_momentid();
  inline void set_has_commentid();
  inline void clear_has_commentid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 momentid_;
  ::google_public::protobuf::int32 commentid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_205_DeleteMoment* default_instance_;
};
// -------------------------------------------------------------------

class Processor_400_LoginRoom_UP : public ::google_public::protobuf::Message {
 public:
  Processor_400_LoginRoom_UP();
  virtual ~Processor_400_LoginRoom_UP();

  Processor_400_LoginRoom_UP(const Processor_400_LoginRoom_UP& from);

  inline Processor_400_LoginRoom_UP& operator=(const Processor_400_LoginRoom_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_400_LoginRoom_UP& default_instance();

  void Swap(Processor_400_LoginRoom_UP* other);

  // implements Message ----------------------------------------------

  Processor_400_LoginRoom_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_400_LoginRoom_UP& from);
  void MergeFrom(const Processor_400_LoginRoom_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:msg.Processor_400_LoginRoom_UP)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_400_LoginRoom_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_400_LoginRoom_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_400_LoginRoom_DOWN();
  virtual ~Processor_400_LoginRoom_DOWN();

  Processor_400_LoginRoom_DOWN(const Processor_400_LoginRoom_DOWN& from);

  inline Processor_400_LoginRoom_DOWN& operator=(const Processor_400_LoginRoom_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_400_LoginRoom_DOWN& default_instance();

  void Swap(Processor_400_LoginRoom_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_400_LoginRoom_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_400_LoginRoom_DOWN& from);
  void MergeFrom(const Processor_400_LoginRoom_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // repeated int32 RoomID = 2;
  inline int roomid_size() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 roomid(int index) const;
  inline void set_roomid(int index, ::google_public::protobuf::int32 value);
  inline void add_roomid(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      roomid() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_roomid();

  // @@protoc_insertion_point(class_scope:msg.Processor_400_LoginRoom_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_400_LoginRoom_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_410_EnterRoom : public ::google_public::protobuf::Message {
 public:
  Processor_410_EnterRoom();
  virtual ~Processor_410_EnterRoom();

  Processor_410_EnterRoom(const Processor_410_EnterRoom& from);

  inline Processor_410_EnterRoom& operator=(const Processor_410_EnterRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_410_EnterRoom& default_instance();

  void Swap(Processor_410_EnterRoom* other);

  // implements Message ----------------------------------------------

  Processor_410_EnterRoom* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_410_EnterRoom& from);
  void MergeFrom(const Processor_410_EnterRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_410_EnterRoom)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_410_EnterRoom* default_instance_;
};
// -------------------------------------------------------------------

class Processor_410_EnterRoom_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_410_EnterRoom_DOWN();
  virtual ~Processor_410_EnterRoom_DOWN();

  Processor_410_EnterRoom_DOWN(const Processor_410_EnterRoom_DOWN& from);

  inline Processor_410_EnterRoom_DOWN& operator=(const Processor_410_EnterRoom_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_410_EnterRoom_DOWN& default_instance();

  void Swap(Processor_410_EnterRoom_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_410_EnterRoom_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_410_EnterRoom_DOWN& from);
  void MergeFrom(const Processor_410_EnterRoom_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional .msg.TournamentInfo TournamentInfo = 2;
  inline bool has_tournamentinfo() const;
  inline void clear_tournamentinfo();
  static const int kTournamentInfoFieldNumber = 2;
  inline const ::msg::TournamentInfo& tournamentinfo() const;
  inline ::msg::TournamentInfo* mutable_tournamentinfo();
  inline ::msg::TournamentInfo* release_tournamentinfo();
  inline void set_allocated_tournamentinfo(::msg::TournamentInfo* tournamentinfo);

  // repeated .msg.UserDetailInfo UserInfo = 3;
  inline int userinfo_size() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 3;
  inline const ::msg::UserDetailInfo& userinfo(int index) const;
  inline ::msg::UserDetailInfo* mutable_userinfo(int index);
  inline ::msg::UserDetailInfo* add_userinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >&
      userinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >*
      mutable_userinfo();

  // optional .msg.RoomInfo RoomInfo = 4;
  inline bool has_roominfo() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 4;
  inline const ::msg::RoomInfo& roominfo() const;
  inline ::msg::RoomInfo* mutable_roominfo();
  inline ::msg::RoomInfo* release_roominfo();
  inline void set_allocated_roominfo(::msg::RoomInfo* roominfo);

  // @@protoc_insertion_point(class_scope:msg.Processor_410_EnterRoom_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_tournamentinfo();
  inline void clear_has_tournamentinfo();
  inline void set_has_roominfo();
  inline void clear_has_roominfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::msg::TournamentInfo* tournamentinfo_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo > userinfo_;
  ::msg::RoomInfo* roominfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_410_EnterRoom_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_411_SendSeatInfo : public ::google_public::protobuf::Message {
 public:
  Processor_411_SendSeatInfo();
  virtual ~Processor_411_SendSeatInfo();

  Processor_411_SendSeatInfo(const Processor_411_SendSeatInfo& from);

  inline Processor_411_SendSeatInfo& operator=(const Processor_411_SendSeatInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_411_SendSeatInfo& default_instance();

  void Swap(Processor_411_SendSeatInfo* other);

  // implements Message ----------------------------------------------

  Processor_411_SendSeatInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_411_SendSeatInfo& from);
  void MergeFrom(const Processor_411_SendSeatInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.SittingStatus SittingStatus = 2;
  inline bool has_sittingstatus() const;
  inline void clear_sittingstatus();
  static const int kSittingStatusFieldNumber = 2;
  inline ::msg::SittingStatus sittingstatus() const;
  inline void set_sittingstatus(::msg::SittingStatus value);

  // optional int32 SitNum = 3;
  inline bool has_sitnum() const;
  inline void clear_sitnum();
  static const int kSitNumFieldNumber = 3;
  inline ::google_public::protobuf::int32 sitnum() const;
  inline void set_sitnum(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_411_SendSeatInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_sittingstatus();
  inline void clear_has_sittingstatus();
  inline void set_has_sitnum();
  inline void clear_has_sitnum();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  int sittingstatus_;
  ::google_public::protobuf::int32 sitnum_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_411_SendSeatInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_411_SendSeatInfo_Down : public ::google_public::protobuf::Message {
 public:
  Processor_411_SendSeatInfo_Down();
  virtual ~Processor_411_SendSeatInfo_Down();

  Processor_411_SendSeatInfo_Down(const Processor_411_SendSeatInfo_Down& from);

  inline Processor_411_SendSeatInfo_Down& operator=(const Processor_411_SendSeatInfo_Down& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_411_SendSeatInfo_Down& default_instance();

  void Swap(Processor_411_SendSeatInfo_Down* other);

  // implements Message ----------------------------------------------

  Processor_411_SendSeatInfo_Down* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_411_SendSeatInfo_Down& from);
  void MergeFrom(const Processor_411_SendSeatInfo_Down& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional bool IsHitNotEnough = 2;
  inline bool has_ishitnotenough() const;
  inline void clear_ishitnotenough();
  static const int kIsHitNotEnoughFieldNumber = 2;
  inline bool ishitnotenough() const;
  inline void set_ishitnotenough(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_411_SendSeatInfo_Down)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_ishitnotenough();
  inline void clear_has_ishitnotenough();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  bool ishitnotenough_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_411_SendSeatInfo_Down* default_instance_;
};
// -------------------------------------------------------------------

class PlayerSitStatus : public ::google_public::protobuf::Message {
 public:
  PlayerSitStatus();
  virtual ~PlayerSitStatus();

  PlayerSitStatus(const PlayerSitStatus& from);

  inline PlayerSitStatus& operator=(const PlayerSitStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PlayerSitStatus& default_instance();

  void Swap(PlayerSitStatus* other);

  // implements Message ----------------------------------------------

  PlayerSitStatus* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PlayerSitStatus& from);
  void MergeFrom(const PlayerSitStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo Info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& info() const;
  inline ::msg::UserDetailInfo* mutable_info();
  inline ::msg::UserDetailInfo* release_info();
  inline void set_allocated_info(::msg::UserDetailInfo* info);

  // optional .msg.SittingStatus Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::msg::SittingStatus status() const;
  inline void set_status(::msg::SittingStatus value);

  // optional int32 SitNum = 3;
  inline bool has_sitnum() const;
  inline void clear_sitnum();
  static const int kSitNumFieldNumber = 3;
  inline ::google_public::protobuf::int32 sitnum() const;
  inline void set_sitnum(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.PlayerSitStatus)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_sitnum();
  inline void clear_has_sitnum();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* info_;
  int status_;
  ::google_public::protobuf::int32 sitnum_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PlayerSitStatus* default_instance_;
};
// -------------------------------------------------------------------

class Processor_412_ReceiveSeatInfo : public ::google_public::protobuf::Message {
 public:
  Processor_412_ReceiveSeatInfo();
  virtual ~Processor_412_ReceiveSeatInfo();

  Processor_412_ReceiveSeatInfo(const Processor_412_ReceiveSeatInfo& from);

  inline Processor_412_ReceiveSeatInfo& operator=(const Processor_412_ReceiveSeatInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_412_ReceiveSeatInfo& default_instance();

  void Swap(Processor_412_ReceiveSeatInfo* other);

  // implements Message ----------------------------------------------

  Processor_412_ReceiveSeatInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_412_ReceiveSeatInfo& from);
  void MergeFrom(const Processor_412_ReceiveSeatInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // repeated .msg.PlayerSitStatus PlayerSitStatus = 2;
  inline int playersitstatus_size() const;
  inline void clear_playersitstatus();
  static const int kPlayerSitStatusFieldNumber = 2;
  inline const ::msg::PlayerSitStatus& playersitstatus(int index) const;
  inline ::msg::PlayerSitStatus* mutable_playersitstatus(int index);
  inline ::msg::PlayerSitStatus* add_playersitstatus();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerSitStatus >&
      playersitstatus() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerSitStatus >*
      mutable_playersitstatus();

  // @@protoc_insertion_point(class_scope:msg.Processor_412_ReceiveSeatInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerSitStatus > playersitstatus_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_412_ReceiveSeatInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_413_ReceiveGameStart : public ::google_public::protobuf::Message {
 public:
  Processor_413_ReceiveGameStart();
  virtual ~Processor_413_ReceiveGameStart();

  Processor_413_ReceiveGameStart(const Processor_413_ReceiveGameStart& from);

  inline Processor_413_ReceiveGameStart& operator=(const Processor_413_ReceiveGameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_413_ReceiveGameStart& default_instance();

  void Swap(Processor_413_ReceiveGameStart* other);

  // implements Message ----------------------------------------------

  Processor_413_ReceiveGameStart* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_413_ReceiveGameStart& from);
  void MergeFrom(const Processor_413_ReceiveGameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional string Message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int32 DealerPos = 3;
  inline bool has_dealerpos() const;
  inline void clear_dealerpos();
  static const int kDealerPosFieldNumber = 3;
  inline ::google_public::protobuf::int32 dealerpos() const;
  inline void set_dealerpos(::google_public::protobuf::int32 value);

  // optional int32 HandID = 4;
  inline bool has_handid() const;
  inline void clear_handid();
  static const int kHandIDFieldNumber = 4;
  inline ::google_public::protobuf::int32 handid() const;
  inline void set_handid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_413_ReceiveGameStart)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_dealerpos();
  inline void clear_has_dealerpos();
  inline void set_has_handid();
  inline void clear_has_handid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 dealerpos_;
  ::google_public::protobuf::int32 handid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_413_ReceiveGameStart* default_instance_;
};
// -------------------------------------------------------------------

class Processor_414_ReceiveGameEnd : public ::google_public::protobuf::Message {
 public:
  Processor_414_ReceiveGameEnd();
  virtual ~Processor_414_ReceiveGameEnd();

  Processor_414_ReceiveGameEnd(const Processor_414_ReceiveGameEnd& from);

  inline Processor_414_ReceiveGameEnd& operator=(const Processor_414_ReceiveGameEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_414_ReceiveGameEnd& default_instance();

  void Swap(Processor_414_ReceiveGameEnd* other);

  // implements Message ----------------------------------------------

  Processor_414_ReceiveGameEnd* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_414_ReceiveGameEnd& from);
  void MergeFrom(const Processor_414_ReceiveGameEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_414_ReceiveGameEnd)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_414_ReceiveGameEnd* default_instance_;
};
// -------------------------------------------------------------------

class Processor_415_DisableAutoAction : public ::google_public::protobuf::Message {
 public:
  Processor_415_DisableAutoAction();
  virtual ~Processor_415_DisableAutoAction();

  Processor_415_DisableAutoAction(const Processor_415_DisableAutoAction& from);

  inline Processor_415_DisableAutoAction& operator=(const Processor_415_DisableAutoAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_415_DisableAutoAction& default_instance();

  void Swap(Processor_415_DisableAutoAction* other);

  // implements Message ----------------------------------------------

  Processor_415_DisableAutoAction* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_415_DisableAutoAction& from);
  void MergeFrom(const Processor_415_DisableAutoAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_415_DisableAutoAction)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_415_DisableAutoAction* default_instance_;
};
// -------------------------------------------------------------------

class ActionRequest : public ::google_public::protobuf::Message {
 public:
  ActionRequest();
  virtual ~ActionRequest();

  ActionRequest(const ActionRequest& from);

  inline ActionRequest& operator=(const ActionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ActionRequest& default_instance();

  void Swap(ActionRequest* other);

  // implements Message ----------------------------------------------

  ActionRequest* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ActionRequest& from);
  void MergeFrom(const ActionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ActionPlayerId = 1;
  inline bool has_actionplayerid() const;
  inline void clear_actionplayerid();
  static const int kActionPlayerIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 actionplayerid() const;
  inline void set_actionplayerid(::google_public::protobuf::int32 value);

  // optional int32 CountDown = 2;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountDownFieldNumber = 2;
  inline ::google_public::protobuf::int32 countdown() const;
  inline void set_countdown(::google_public::protobuf::int32 value);

  // optional bool IsUsingTimeBank = 3;
  inline bool has_isusingtimebank() const;
  inline void clear_isusingtimebank();
  static const int kIsUsingTimeBankFieldNumber = 3;
  inline bool isusingtimebank() const;
  inline void set_isusingtimebank(bool value);

  // @@protoc_insertion_point(class_scope:msg.ActionRequest)
 private:
  inline void set_has_actionplayerid();
  inline void clear_has_actionplayerid();
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_isusingtimebank();
  inline void clear_has_isusingtimebank();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 actionplayerid_;
  ::google_public::protobuf::int32 countdown_;
  bool isusingtimebank_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ActionRequest* default_instance_;
};
// -------------------------------------------------------------------

class Processor_417_ReceiveOtherPlayerAction : public ::google_public::protobuf::Message {
 public:
  Processor_417_ReceiveOtherPlayerAction();
  virtual ~Processor_417_ReceiveOtherPlayerAction();

  Processor_417_ReceiveOtherPlayerAction(const Processor_417_ReceiveOtherPlayerAction& from);

  inline Processor_417_ReceiveOtherPlayerAction& operator=(const Processor_417_ReceiveOtherPlayerAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_417_ReceiveOtherPlayerAction& default_instance();

  void Swap(Processor_417_ReceiveOtherPlayerAction* other);

  // implements Message ----------------------------------------------

  Processor_417_ReceiveOtherPlayerAction* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_417_ReceiveOtherPlayerAction& from);
  void MergeFrom(const Processor_417_ReceiveOtherPlayerAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.ActionRequest ActionRequest = 2;
  inline bool has_actionrequest() const;
  inline void clear_actionrequest();
  static const int kActionRequestFieldNumber = 2;
  inline const ::msg::ActionRequest& actionrequest() const;
  inline ::msg::ActionRequest* mutable_actionrequest();
  inline ::msg::ActionRequest* release_actionrequest();
  inline void set_allocated_actionrequest(::msg::ActionRequest* actionrequest);

  // @@protoc_insertion_point(class_scope:msg.Processor_417_ReceiveOtherPlayerAction)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_actionrequest();
  inline void clear_has_actionrequest();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::ActionRequest* actionrequest_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_417_ReceiveOtherPlayerAction* default_instance_;
};
// -------------------------------------------------------------------

class Processor_420_PokerGetScore_UP : public ::google_public::protobuf::Message {
 public:
  Processor_420_PokerGetScore_UP();
  virtual ~Processor_420_PokerGetScore_UP();

  Processor_420_PokerGetScore_UP(const Processor_420_PokerGetScore_UP& from);

  inline Processor_420_PokerGetScore_UP& operator=(const Processor_420_PokerGetScore_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_420_PokerGetScore_UP& default_instance();

  void Swap(Processor_420_PokerGetScore_UP* other);

  // implements Message ----------------------------------------------

  Processor_420_PokerGetScore_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_420_PokerGetScore_UP& from);
  void MergeFrom(const Processor_420_PokerGetScore_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_420_PokerGetScore_UP)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_420_PokerGetScore_UP* default_instance_;
};
// -------------------------------------------------------------------

class PlayerScore : public ::google_public::protobuf::Message {
 public:
  PlayerScore();
  virtual ~PlayerScore();

  PlayerScore(const PlayerScore& from);

  inline PlayerScore& operator=(const PlayerScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PlayerScore& default_instance();

  void Swap(PlayerScore* other);

  // implements Message ----------------------------------------------

  PlayerScore* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PlayerScore& from);
  void MergeFrom(const PlayerScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo UserDetailInfo = 1;
  inline bool has_userdetailinfo() const;
  inline void clear_userdetailinfo();
  static const int kUserDetailInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userdetailinfo() const;
  inline ::msg::UserDetailInfo* mutable_userdetailinfo();
  inline ::msg::UserDetailInfo* release_userdetailinfo();
  inline void set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo);

  // optional int32 TotalBuyin = 2;
  inline bool has_totalbuyin() const;
  inline void clear_totalbuyin();
  static const int kTotalBuyinFieldNumber = 2;
  inline ::google_public::protobuf::int32 totalbuyin() const;
  inline void set_totalbuyin(::google_public::protobuf::int32 value);

  // optional int32 TotalWin = 3;
  inline bool has_totalwin() const;
  inline void clear_totalwin();
  static const int kTotalWinFieldNumber = 3;
  inline ::google_public::protobuf::int32 totalwin() const;
  inline void set_totalwin(::google_public::protobuf::int32 value);

  // optional int32 Rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  inline ::google_public::protobuf::int32 rank() const;
  inline void set_rank(::google_public::protobuf::int32 value);

  // optional string OtherPrize = 5;
  inline bool has_otherprize() const;
  inline void clear_otherprize();
  static const int kOtherPrizeFieldNumber = 5;
  inline const ::std::string& otherprize() const;
  inline void set_otherprize(const ::std::string& value);
  inline void set_otherprize(const char* value);
  inline void set_otherprize(const char* value, size_t size);
  inline ::std::string* mutable_otherprize();
  inline ::std::string* release_otherprize();
  inline void set_allocated_otherprize(::std::string* otherprize);

  // optional int64 PlayTime = 6;
  inline bool has_playtime() const;
  inline void clear_playtime();
  static const int kPlayTimeFieldNumber = 6;
  inline ::google_public::protobuf::int64 playtime() const;
  inline void set_playtime(::google_public::protobuf::int64 value);

  // optional int32 PlayHands = 7;
  inline bool has_playhands() const;
  inline void clear_playhands();
  static const int kPlayHandsFieldNumber = 7;
  inline ::google_public::protobuf::int32 playhands() const;
  inline void set_playhands(::google_public::protobuf::int32 value);

  // optional int32 HPLost = 8;
  inline bool has_hplost() const;
  inline void clear_hplost();
  static const int kHPLostFieldNumber = 8;
  inline ::google_public::protobuf::int32 hplost() const;
  inline void set_hplost(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.PlayerScore)
 private:
  inline void set_has_userdetailinfo();
  inline void clear_has_userdetailinfo();
  inline void set_has_totalbuyin();
  inline void clear_has_totalbuyin();
  inline void set_has_totalwin();
  inline void clear_has_totalwin();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_otherprize();
  inline void clear_has_otherprize();
  inline void set_has_playtime();
  inline void clear_has_playtime();
  inline void set_has_playhands();
  inline void clear_has_playhands();
  inline void set_has_hplost();
  inline void clear_has_hplost();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userdetailinfo_;
  ::google_public::protobuf::int32 totalbuyin_;
  ::google_public::protobuf::int32 totalwin_;
  ::std::string* otherprize_;
  ::google_public::protobuf::int32 rank_;
  ::google_public::protobuf::int32 playhands_;
  ::google_public::protobuf::int64 playtime_;
  ::google_public::protobuf::int32 hplost_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PlayerScore* default_instance_;
};
// -------------------------------------------------------------------

class PlayerScores : public ::google_public::protobuf::Message {
 public:
  PlayerScores();
  virtual ~PlayerScores();

  PlayerScores(const PlayerScores& from);

  inline PlayerScores& operator=(const PlayerScores& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PlayerScores& default_instance();

  void Swap(PlayerScores* other);

  // implements Message ----------------------------------------------

  PlayerScores* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PlayerScores& from);
  void MergeFrom(const PlayerScores& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.PlayerScore Score = 1;
  inline int score_size() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline const ::msg::PlayerScore& score(int index) const;
  inline ::msg::PlayerScore* mutable_score(int index);
  inline ::msg::PlayerScore* add_score();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore >&
      score() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore >*
      mutable_score();

  // @@protoc_insertion_point(class_scope:msg.PlayerScores)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore > score_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PlayerScores* default_instance_;
};
// -------------------------------------------------------------------

class Processor_420_PokerGetScore_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_420_PokerGetScore_DOWN();
  virtual ~Processor_420_PokerGetScore_DOWN();

  Processor_420_PokerGetScore_DOWN(const Processor_420_PokerGetScore_DOWN& from);

  inline Processor_420_PokerGetScore_DOWN& operator=(const Processor_420_PokerGetScore_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_420_PokerGetScore_DOWN& default_instance();

  void Swap(Processor_420_PokerGetScore_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_420_PokerGetScore_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_420_PokerGetScore_DOWN& from);
  void MergeFrom(const Processor_420_PokerGetScore_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional string RoomName = 2;
  inline bool has_roomname() const;
  inline void clear_roomname();
  static const int kRoomNameFieldNumber = 2;
  inline const ::std::string& roomname() const;
  inline void set_roomname(const ::std::string& value);
  inline void set_roomname(const char* value);
  inline void set_roomname(const char* value, size_t size);
  inline ::std::string* mutable_roomname();
  inline ::std::string* release_roomname();
  inline void set_allocated_roomname(::std::string* roomname);

  // optional string RoomNote = 3;
  inline bool has_roomnote() const;
  inline void clear_roomnote();
  static const int kRoomNoteFieldNumber = 3;
  inline const ::std::string& roomnote() const;
  inline void set_roomnote(const ::std::string& value);
  inline void set_roomnote(const char* value);
  inline void set_roomnote(const char* value, size_t size);
  inline ::std::string* mutable_roomnote();
  inline ::std::string* release_roomnote();
  inline void set_allocated_roomnote(::std::string* roomnote);

  // optional string Time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline const ::std::string& time() const;
  inline void set_time(const ::std::string& value);
  inline void set_time(const char* value);
  inline void set_time(const char* value, size_t size);
  inline ::std::string* mutable_time();
  inline ::std::string* release_time();
  inline void set_allocated_time(::std::string* time);

  // optional int32 HandCount = 5;
  inline bool has_handcount() const;
  inline void clear_handcount();
  static const int kHandCountFieldNumber = 5;
  inline ::google_public::protobuf::int32 handcount() const;
  inline void set_handcount(::google_public::protobuf::int32 value);

  // optional .msg.PlayerScores PlayerScores = 6;
  inline bool has_playerscores() const;
  inline void clear_playerscores();
  static const int kPlayerScoresFieldNumber = 6;
  inline const ::msg::PlayerScores& playerscores() const;
  inline ::msg::PlayerScores* mutable_playerscores();
  inline ::msg::PlayerScores* release_playerscores();
  inline void set_allocated_playerscores(::msg::PlayerScores* playerscores);

  // optional .msg.RoomType RoomType = 7;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 7;
  inline ::msg::RoomType roomtype() const;
  inline void set_roomtype(::msg::RoomType value);

  // optional bool IsTournament = 8;
  inline bool has_istournament() const;
  inline void clear_istournament();
  static const int kIsTournamentFieldNumber = 8;
  inline bool istournament() const;
  inline void set_istournament(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_420_PokerGetScore_DOWN)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_roomname();
  inline void clear_has_roomname();
  inline void set_has_roomnote();
  inline void clear_has_roomnote();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_handcount();
  inline void clear_has_handcount();
  inline void set_has_playerscores();
  inline void clear_has_playerscores();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_istournament();
  inline void clear_has_istournament();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* roomname_;
  ::std::string* roomnote_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 handcount_;
  ::std::string* time_;
  ::msg::PlayerScores* playerscores_;
  int roomtype_;
  bool istournament_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_420_PokerGetScore_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_430_SendGameVoice : public ::google_public::protobuf::Message {
 public:
  Processor_430_SendGameVoice();
  virtual ~Processor_430_SendGameVoice();

  Processor_430_SendGameVoice(const Processor_430_SendGameVoice& from);

  inline Processor_430_SendGameVoice& operator=(const Processor_430_SendGameVoice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_430_SendGameVoice& default_instance();

  void Swap(Processor_430_SendGameVoice* other);

  // implements Message ----------------------------------------------

  Processor_430_SendGameVoice* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_430_SendGameVoice& from);
  void MergeFrom(const Processor_430_SendGameVoice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional string Voice = 2;
  inline bool has_voice() const;
  inline void clear_voice();
  static const int kVoiceFieldNumber = 2;
  inline const ::std::string& voice() const;
  inline void set_voice(const ::std::string& value);
  inline void set_voice(const char* value);
  inline void set_voice(const char* value, size_t size);
  inline ::std::string* mutable_voice();
  inline ::std::string* release_voice();
  inline void set_allocated_voice(::std::string* voice);

  // optional string Time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline const ::std::string& time() const;
  inline void set_time(const ::std::string& value);
  inline void set_time(const char* value);
  inline void set_time(const char* value, size_t size);
  inline ::std::string* mutable_time();
  inline ::std::string* release_time();
  inline void set_allocated_time(::std::string* time);

  // @@protoc_insertion_point(class_scope:msg.Processor_430_SendGameVoice)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_voice();
  inline void clear_has_voice();
  inline void set_has_time();
  inline void clear_has_time();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* voice_;
  ::std::string* time_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_430_SendGameVoice* default_instance_;
};
// -------------------------------------------------------------------

class Processor_431_ReceiveGameVoice : public ::google_public::protobuf::Message {
 public:
  Processor_431_ReceiveGameVoice();
  virtual ~Processor_431_ReceiveGameVoice();

  Processor_431_ReceiveGameVoice(const Processor_431_ReceiveGameVoice& from);

  inline Processor_431_ReceiveGameVoice& operator=(const Processor_431_ReceiveGameVoice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_431_ReceiveGameVoice& default_instance();

  void Swap(Processor_431_ReceiveGameVoice* other);

  // implements Message ----------------------------------------------

  Processor_431_ReceiveGameVoice* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_431_ReceiveGameVoice& from);
  void MergeFrom(const Processor_431_ReceiveGameVoice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional int32 UserID = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional string Voice = 3;
  inline bool has_voice() const;
  inline void clear_voice();
  static const int kVoiceFieldNumber = 3;
  inline const ::std::string& voice() const;
  inline void set_voice(const ::std::string& value);
  inline void set_voice(const char* value);
  inline void set_voice(const char* value, size_t size);
  inline ::std::string* mutable_voice();
  inline ::std::string* release_voice();
  inline void set_allocated_voice(::std::string* voice);

  // optional string Time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline const ::std::string& time() const;
  inline void set_time(const ::std::string& value);
  inline void set_time(const char* value);
  inline void set_time(const char* value, size_t size);
  inline ::std::string* mutable_time();
  inline ::std::string* release_time();
  inline void set_allocated_time(::std::string* time);

  // @@protoc_insertion_point(class_scope:msg.Processor_431_ReceiveGameVoice)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_voice();
  inline void clear_has_voice();
  inline void set_has_time();
  inline void clear_has_time();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 userid_;
  ::std::string* voice_;
  ::std::string* time_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_431_ReceiveGameVoice* default_instance_;
};
// -------------------------------------------------------------------

class Processor_440_SetGameStatus : public ::google_public::protobuf::Message {
 public:
  Processor_440_SetGameStatus();
  virtual ~Processor_440_SetGameStatus();

  Processor_440_SetGameStatus(const Processor_440_SetGameStatus& from);

  inline Processor_440_SetGameStatus& operator=(const Processor_440_SetGameStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_440_SetGameStatus& default_instance();

  void Swap(Processor_440_SetGameStatus* other);

  // implements Message ----------------------------------------------

  Processor_440_SetGameStatus* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_440_SetGameStatus& from);
  void MergeFrom(const Processor_440_SetGameStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.GameStatus status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::msg::GameStatus status() const;
  inline void set_status(::msg::GameStatus value);

  // @@protoc_insertion_point(class_scope:msg.Processor_440_SetGameStatus)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  int status_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_440_SetGameStatus* default_instance_;
};
// -------------------------------------------------------------------

class Processor_441_KickPlayer : public ::google_public::protobuf::Message {
 public:
  Processor_441_KickPlayer();
  virtual ~Processor_441_KickPlayer();

  Processor_441_KickPlayer(const Processor_441_KickPlayer& from);

  inline Processor_441_KickPlayer& operator=(const Processor_441_KickPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_441_KickPlayer& default_instance();

  void Swap(Processor_441_KickPlayer* other);

  // implements Message ----------------------------------------------

  Processor_441_KickPlayer* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_441_KickPlayer& from);
  void MergeFrom(const Processor_441_KickPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional int32 KickUserID = 2;
  inline bool has_kickuserid() const;
  inline void clear_kickuserid();
  static const int kKickUserIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 kickuserid() const;
  inline void set_kickuserid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_441_KickPlayer)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_kickuserid();
  inline void clear_has_kickuserid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 kickuserid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_441_KickPlayer* default_instance_;
};
// -------------------------------------------------------------------

class Processor_442_ReceiveGameStatus : public ::google_public::protobuf::Message {
 public:
  Processor_442_ReceiveGameStatus();
  virtual ~Processor_442_ReceiveGameStatus();

  Processor_442_ReceiveGameStatus(const Processor_442_ReceiveGameStatus& from);

  inline Processor_442_ReceiveGameStatus& operator=(const Processor_442_ReceiveGameStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_442_ReceiveGameStatus& default_instance();

  void Swap(Processor_442_ReceiveGameStatus* other);

  // implements Message ----------------------------------------------

  Processor_442_ReceiveGameStatus* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_442_ReceiveGameStatus& from);
  void MergeFrom(const Processor_442_ReceiveGameStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.GameStatus status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::msg::GameStatus status() const;
  inline void set_status(::msg::GameStatus value);

  // @@protoc_insertion_point(class_scope:msg.Processor_442_ReceiveGameStatus)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  int status_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_442_ReceiveGameStatus* default_instance_;
};
// -------------------------------------------------------------------

class Processor_490_ReceiveRoomClose : public ::google_public::protobuf::Message {
 public:
  Processor_490_ReceiveRoomClose();
  virtual ~Processor_490_ReceiveRoomClose();

  Processor_490_ReceiveRoomClose(const Processor_490_ReceiveRoomClose& from);

  inline Processor_490_ReceiveRoomClose& operator=(const Processor_490_ReceiveRoomClose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_490_ReceiveRoomClose& default_instance();

  void Swap(Processor_490_ReceiveRoomClose* other);

  // implements Message ----------------------------------------------

  Processor_490_ReceiveRoomClose* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_490_ReceiveRoomClose& from);
  void MergeFrom(const Processor_490_ReceiveRoomClose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_490_ReceiveRoomClose)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_490_ReceiveRoomClose* default_instance_;
};
// -------------------------------------------------------------------

class Processor_491_ReceiveRoomMessage : public ::google_public::protobuf::Message {
 public:
  Processor_491_ReceiveRoomMessage();
  virtual ~Processor_491_ReceiveRoomMessage();

  Processor_491_ReceiveRoomMessage(const Processor_491_ReceiveRoomMessage& from);

  inline Processor_491_ReceiveRoomMessage& operator=(const Processor_491_ReceiveRoomMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_491_ReceiveRoomMessage& default_instance();

  void Swap(Processor_491_ReceiveRoomMessage* other);

  // implements Message ----------------------------------------------

  Processor_491_ReceiveRoomMessage* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_491_ReceiveRoomMessage& from);
  void MergeFrom(const Processor_491_ReceiveRoomMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional string Message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:msg.Processor_491_ReceiveRoomMessage)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_message();
  inline void clear_has_message();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_491_ReceiveRoomMessage* default_instance_;
};
// -------------------------------------------------------------------

class Processor_495_ReceiveRequest : public ::google_public::protobuf::Message {
 public:
  Processor_495_ReceiveRequest();
  virtual ~Processor_495_ReceiveRequest();

  Processor_495_ReceiveRequest(const Processor_495_ReceiveRequest& from);

  inline Processor_495_ReceiveRequest& operator=(const Processor_495_ReceiveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_495_ReceiveRequest& default_instance();

  void Swap(Processor_495_ReceiveRequest* other);

  // implements Message ----------------------------------------------

  Processor_495_ReceiveRequest* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_495_ReceiveRequest& from);
  void MergeFrom(const Processor_495_ReceiveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 id() const;
  inline void set_id(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_495_ReceiveRequest)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_id();
  inline void clear_has_id();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google_public::protobuf::int32 id_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_495_ReceiveRequest* default_instance_;
};
// -------------------------------------------------------------------

class Processor_496_ReplyRequest : public ::google_public::protobuf::Message {
 public:
  Processor_496_ReplyRequest();
  virtual ~Processor_496_ReplyRequest();

  Processor_496_ReplyRequest(const Processor_496_ReplyRequest& from);

  inline Processor_496_ReplyRequest& operator=(const Processor_496_ReplyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_496_ReplyRequest& default_instance();

  void Swap(Processor_496_ReplyRequest* other);

  // implements Message ----------------------------------------------

  Processor_496_ReplyRequest* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_496_ReplyRequest& from);
  void MergeFrom(const Processor_496_ReplyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool choice = 1;
  inline bool has_choice() const;
  inline void clear_choice();
  static const int kChoiceFieldNumber = 1;
  inline bool choice() const;
  inline void set_choice(bool value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 id() const;
  inline void set_id(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_496_ReplyRequest)
 private:
  inline void set_has_choice();
  inline void clear_has_choice();
  inline void set_has_id();
  inline void clear_has_id();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool choice_;
  ::google_public::protobuf::int32 id_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_496_ReplyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CommonRoomInfo : public ::google_public::protobuf::Message {
 public:
  CommonRoomInfo();
  virtual ~CommonRoomInfo();

  CommonRoomInfo(const CommonRoomInfo& from);

  inline CommonRoomInfo& operator=(const CommonRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const CommonRoomInfo& default_instance();

  void Swap(CommonRoomInfo* other);

  // implements Message ----------------------------------------------

  CommonRoomInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const CommonRoomInfo& from);
  void MergeFrom(const CommonRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 OwnerID = 1;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwnerIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 ownerid() const;
  inline void set_ownerid(::google_public::protobuf::int32 value);

  // optional .msg.GameStatus Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::msg::GameStatus status() const;
  inline void set_status(::msg::GameStatus value);

  // optional int32 MaxSeatNum = 3;
  inline bool has_maxseatnum() const;
  inline void clear_maxseatnum();
  static const int kMaxSeatNumFieldNumber = 3;
  inline ::google_public::protobuf::int32 maxseatnum() const;
  inline void set_maxseatnum(::google_public::protobuf::int32 value);

  // optional int32 HandID = 4;
  inline bool has_handid() const;
  inline void clear_handid();
  static const int kHandIDFieldNumber = 4;
  inline ::google_public::protobuf::int32 handid() const;
  inline void set_handid(::google_public::protobuf::int32 value);

  // optional string TableNote = 5;
  inline bool has_tablenote() const;
  inline void clear_tablenote();
  static const int kTableNoteFieldNumber = 5;
  inline const ::std::string& tablenote() const;
  inline void set_tablenote(const ::std::string& value);
  inline void set_tablenote(const char* value);
  inline void set_tablenote(const char* value, size_t size);
  inline ::std::string* mutable_tablenote();
  inline ::std::string* release_tablenote();
  inline void set_allocated_tablenote(::std::string* tablenote);

  // optional .msg.RoomType RoomType = 6;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 6;
  inline ::msg::RoomType roomtype() const;
  inline void set_roomtype(::msg::RoomType value);

  // optional int32 RoomId = 7;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 7;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional int32 GroupId = 8;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 8;
  inline ::google_public::protobuf::int32 groupid() const;
  inline void set_groupid(::google_public::protobuf::int32 value);

  // optional int32 DealerPos = 9;
  inline bool has_dealerpos() const;
  inline void clear_dealerpos();
  static const int kDealerPosFieldNumber = 9;
  inline ::google_public::protobuf::int32 dealerpos() const;
  inline void set_dealerpos(::google_public::protobuf::int32 value);

  // optional bool IsManager = 10;
  inline bool has_ismanager() const;
  inline void clear_ismanager();
  static const int kIsManagerFieldNumber = 10;
  inline bool ismanager() const;
  inline void set_ismanager(bool value);

  // optional bool IsPlaying = 11;
  inline bool has_isplaying() const;
  inline void clear_isplaying();
  static const int kIsPlayingFieldNumber = 11;
  inline bool isplaying() const;
  inline void set_isplaying(bool value);

  // @@protoc_insertion_point(class_scope:msg.CommonRoomInfo)
 private:
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_maxseatnum();
  inline void clear_has_maxseatnum();
  inline void set_has_handid();
  inline void clear_has_handid();
  inline void set_has_tablenote();
  inline void clear_has_tablenote();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_dealerpos();
  inline void clear_has_dealerpos();
  inline void set_has_ismanager();
  inline void clear_has_ismanager();
  inline void set_has_isplaying();
  inline void clear_has_isplaying();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 ownerid_;
  int status_;
  ::google_public::protobuf::int32 maxseatnum_;
  ::google_public::protobuf::int32 handid_;
  ::std::string* tablenote_;
  int roomtype_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 groupid_;
  ::google_public::protobuf::int32 dealerpos_;
  bool ismanager_;
  bool isplaying_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static CommonRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class CommonPlayerInfo : public ::google_public::protobuf::Message {
 public:
  CommonPlayerInfo();
  virtual ~CommonPlayerInfo();

  CommonPlayerInfo(const CommonPlayerInfo& from);

  inline CommonPlayerInfo& operator=(const CommonPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const CommonPlayerInfo& default_instance();

  void Swap(CommonPlayerInfo* other);

  // implements Message ----------------------------------------------

  CommonPlayerInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const CommonPlayerInfo& from);
  void MergeFrom(const CommonPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userinfo() const;
  inline ::msg::UserDetailInfo* mutable_userinfo();
  inline ::msg::UserDetailInfo* release_userinfo();
  inline void set_allocated_userinfo(::msg::UserDetailInfo* userinfo);

  // optional .msg.SittingStatus SittingStatus = 2;
  inline bool has_sittingstatus() const;
  inline void clear_sittingstatus();
  static const int kSittingStatusFieldNumber = 2;
  inline ::msg::SittingStatus sittingstatus() const;
  inline void set_sittingstatus(::msg::SittingStatus value);

  // optional int32 SitNum = 3;
  inline bool has_sitnum() const;
  inline void clear_sitnum();
  static const int kSitNumFieldNumber = 3;
  inline ::google_public::protobuf::int32 sitnum() const;
  inline void set_sitnum(::google_public::protobuf::int32 value);

  // optional bool AutoAction = 4;
  inline bool has_autoaction() const;
  inline void clear_autoaction();
  static const int kAutoActionFieldNumber = 4;
  inline bool autoaction() const;
  inline void set_autoaction(bool value);

  // @@protoc_insertion_point(class_scope:msg.CommonPlayerInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_sittingstatus();
  inline void clear_has_sittingstatus();
  inline void set_has_sitnum();
  inline void clear_has_sitnum();
  inline void set_has_autoaction();
  inline void clear_has_autoaction();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userinfo_;
  int sittingstatus_;
  ::google_public::protobuf::int32 sitnum_;
  bool autoaction_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static CommonPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_500_PokerRefreshAll : public ::google_public::protobuf::Message {
 public:
  Processor_500_PokerRefreshAll();
  virtual ~Processor_500_PokerRefreshAll();

  Processor_500_PokerRefreshAll(const Processor_500_PokerRefreshAll& from);

  inline Processor_500_PokerRefreshAll& operator=(const Processor_500_PokerRefreshAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_500_PokerRefreshAll& default_instance();

  void Swap(Processor_500_PokerRefreshAll* other);

  // implements Message ----------------------------------------------

  Processor_500_PokerRefreshAll* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_500_PokerRefreshAll& from);
  void MergeFrom(const Processor_500_PokerRefreshAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.CommonRoomInfo CommonRoomInfo = 1;
  inline bool has_commonroominfo() const;
  inline void clear_commonroominfo();
  static const int kCommonRoomInfoFieldNumber = 1;
  inline const ::msg::CommonRoomInfo& commonroominfo() const;
  inline ::msg::CommonRoomInfo* mutable_commonroominfo();
  inline ::msg::CommonRoomInfo* release_commonroominfo();
  inline void set_allocated_commonroominfo(::msg::CommonRoomInfo* commonroominfo);

  // optional int32 MinBuy = 2;
  inline bool has_minbuy() const;
  inline void clear_minbuy();
  static const int kMinBuyFieldNumber = 2;
  inline ::google_public::protobuf::int32 minbuy() const;
  inline void set_minbuy(::google_public::protobuf::int32 value);

  // optional int32 MaxBuy = 3;
  inline bool has_maxbuy() const;
  inline void clear_maxbuy();
  static const int kMaxBuyFieldNumber = 3;
  inline ::google_public::protobuf::int32 maxbuy() const;
  inline void set_maxbuy(::google_public::protobuf::int32 value);

  // optional int32 BuyUnit = 4;
  inline bool has_buyunit() const;
  inline void clear_buyunit();
  static const int kBuyUnitFieldNumber = 4;
  inline ::google_public::protobuf::int32 buyunit() const;
  inline void set_buyunit(::google_public::protobuf::int32 value);

  // optional .msg.TableAndUserUpdate PropUpdate = 5;
  inline bool has_propupdate() const;
  inline void clear_propupdate();
  static const int kPropUpdateFieldNumber = 5;
  inline const ::msg::TableAndUserUpdate& propupdate() const;
  inline ::msg::TableAndUserUpdate* mutable_propupdate();
  inline ::msg::TableAndUserUpdate* release_propupdate();
  inline void set_allocated_propupdate(::msg::TableAndUserUpdate* propupdate);

  // optional .msg.PokerPlayerSetting Settings = 6;
  inline bool has_settings() const;
  inline void clear_settings();
  static const int kSettingsFieldNumber = 6;
  inline const ::msg::PokerPlayerSetting& settings() const;
  inline ::msg::PokerPlayerSetting* mutable_settings();
  inline ::msg::PokerPlayerSetting* release_settings();
  inline void set_allocated_settings(::msg::PokerPlayerSetting* settings);

  // optional .msg.PokerActionRequest ActionRequest = 7;
  inline bool has_actionrequest() const;
  inline void clear_actionrequest();
  static const int kActionRequestFieldNumber = 7;
  inline const ::msg::PokerActionRequest& actionrequest() const;
  inline ::msg::PokerActionRequest* mutable_actionrequest();
  inline ::msg::PokerActionRequest* release_actionrequest();
  inline void set_allocated_actionrequest(::msg::PokerActionRequest* actionrequest);

  // optional bool IsTournament = 8;
  inline bool has_istournament() const;
  inline void clear_istournament();
  static const int kIsTournamentFieldNumber = 8;
  inline bool istournament() const;
  inline void set_istournament(bool value);

  // repeated bool ShowCard = 9;
  inline int showcard_size() const;
  inline void clear_showcard();
  static const int kShowCardFieldNumber = 9;
  inline bool showcard(int index) const;
  inline void set_showcard(int index, bool value);
  inline void add_showcard(bool value);
  inline const ::google_public::protobuf::RepeatedField< bool >&
      showcard() const;
  inline ::google_public::protobuf::RepeatedField< bool >*
      mutable_showcard();

  // @@protoc_insertion_point(class_scope:msg.Processor_500_PokerRefreshAll)
 private:
  inline void set_has_commonroominfo();
  inline void clear_has_commonroominfo();
  inline void set_has_minbuy();
  inline void clear_has_minbuy();
  inline void set_has_maxbuy();
  inline void clear_has_maxbuy();
  inline void set_has_buyunit();
  inline void clear_has_buyunit();
  inline void set_has_propupdate();
  inline void clear_has_propupdate();
  inline void set_has_settings();
  inline void clear_has_settings();
  inline void set_has_actionrequest();
  inline void clear_has_actionrequest();
  inline void set_has_istournament();
  inline void clear_has_istournament();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::CommonRoomInfo* commonroominfo_;
  ::google_public::protobuf::int32 minbuy_;
  ::google_public::protobuf::int32 maxbuy_;
  ::msg::TableAndUserUpdate* propupdate_;
  ::msg::PokerPlayerSetting* settings_;
  ::google_public::protobuf::int32 buyunit_;
  bool istournament_;
  ::msg::PokerActionRequest* actionrequest_;
  ::google_public::protobuf::RepeatedField< bool > showcard_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_500_PokerRefreshAll* default_instance_;
};
// -------------------------------------------------------------------

class PokerPlayerSetting : public ::google_public::protobuf::Message {
 public:
  PokerPlayerSetting();
  virtual ~PokerPlayerSetting();

  PokerPlayerSetting(const PokerPlayerSetting& from);

  inline PokerPlayerSetting& operator=(const PokerPlayerSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PokerPlayerSetting& default_instance();

  void Swap(PokerPlayerSetting* other);

  // implements Message ----------------------------------------------

  PokerPlayerSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PokerPlayerSetting& from);
  void MergeFrom(const PokerPlayerSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool AutoCall = 1;
  inline bool has_autocall() const;
  inline void clear_autocall();
  static const int kAutoCallFieldNumber = 1;
  inline bool autocall() const;
  inline void set_autocall(bool value);

  // optional bool CallOrFold = 2;
  inline bool has_callorfold() const;
  inline void clear_callorfold();
  static const int kCallOrFoldFieldNumber = 2;
  inline bool callorfold() const;
  inline void set_callorfold(bool value);

  // optional bool Straddle = 3;
  inline bool has_straddle() const;
  inline void clear_straddle();
  static const int kStraddleFieldNumber = 3;
  inline bool straddle() const;
  inline void set_straddle(bool value);

  // optional bool SitoutNextHand = 4;
  inline bool has_sitoutnexthand() const;
  inline void clear_sitoutnexthand();
  static const int kSitoutNextHandFieldNumber = 4;
  inline bool sitoutnexthand() const;
  inline void set_sitoutnexthand(bool value);

  // @@protoc_insertion_point(class_scope:msg.PokerPlayerSetting)
 private:
  inline void set_has_autocall();
  inline void clear_has_autocall();
  inline void set_has_callorfold();
  inline void clear_has_callorfold();
  inline void set_has_straddle();
  inline void clear_has_straddle();
  inline void set_has_sitoutnexthand();
  inline void clear_has_sitoutnexthand();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool autocall_;
  bool callorfold_;
  bool straddle_;
  bool sitoutnexthand_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PokerPlayerSetting* default_instance_;
};
// -------------------------------------------------------------------

class PokerPlayerInfo : public ::google_public::protobuf::Message {
 public:
  PokerPlayerInfo();
  virtual ~PokerPlayerInfo();

  PokerPlayerInfo(const PokerPlayerInfo& from);

  inline PokerPlayerInfo& operator=(const PokerPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PokerPlayerInfo& default_instance();

  void Swap(PokerPlayerInfo* other);

  // implements Message ----------------------------------------------

  PokerPlayerInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PokerPlayerInfo& from);
  void MergeFrom(const PokerPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.CommonPlayerInfo PlayerInfo = 16;
  inline bool has_playerinfo() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 16;
  inline const ::msg::CommonPlayerInfo& playerinfo() const;
  inline ::msg::CommonPlayerInfo* mutable_playerinfo();
  inline ::msg::CommonPlayerInfo* release_playerinfo();
  inline void set_allocated_playerinfo(::msg::CommonPlayerInfo* playerinfo);

  // repeated int32 HoleCards = 4;
  inline int holecards_size() const;
  inline void clear_holecards();
  static const int kHoleCardsFieldNumber = 4;
  inline ::google_public::protobuf::int32 holecards(int index) const;
  inline void set_holecards(int index, ::google_public::protobuf::int32 value);
  inline void add_holecards(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      holecards() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_holecards();

  // optional int32 BetChips = 5;
  inline bool has_betchips() const;
  inline void clear_betchips();
  static const int kBetChipsFieldNumber = 5;
  inline ::google_public::protobuf::int32 betchips() const;
  inline void set_betchips(::google_public::protobuf::int32 value);

  // optional int32 Chips = 6;
  inline bool has_chips() const;
  inline void clear_chips();
  static const int kChipsFieldNumber = 6;
  inline ::google_public::protobuf::int32 chips() const;
  inline void set_chips(::google_public::protobuf::int32 value);

  // optional .msg.ActionStatus ActionStatus = 7;
  inline bool has_actionstatus() const;
  inline void clear_actionstatus();
  static const int kActionStatusFieldNumber = 7;
  inline ::msg::ActionStatus actionstatus() const;
  inline void set_actionstatus(::msg::ActionStatus value);

  // optional string HiHandType = 8;
  inline bool has_hihandtype() const;
  inline void clear_hihandtype();
  static const int kHiHandTypeFieldNumber = 8;
  inline const ::std::string& hihandtype() const;
  inline void set_hihandtype(const ::std::string& value);
  inline void set_hihandtype(const char* value);
  inline void set_hihandtype(const char* value, size_t size);
  inline ::std::string* mutable_hihandtype();
  inline ::std::string* release_hihandtype();
  inline void set_allocated_hihandtype(::std::string* hihandtype);

  // optional string LoHandType = 9;
  inline bool has_lohandtype() const;
  inline void clear_lohandtype();
  static const int kLoHandTypeFieldNumber = 9;
  inline const ::std::string& lohandtype() const;
  inline void set_lohandtype(const ::std::string& value);
  inline void set_lohandtype(const char* value);
  inline void set_lohandtype(const char* value, size_t size);
  inline ::std::string* mutable_lohandtype();
  inline ::std::string* release_lohandtype();
  inline void set_allocated_lohandtype(::std::string* lohandtype);

  // repeated int32 HiCards = 10;
  inline int hicards_size() const;
  inline void clear_hicards();
  static const int kHiCardsFieldNumber = 10;
  inline ::google_public::protobuf::int32 hicards(int index) const;
  inline void set_hicards(int index, ::google_public::protobuf::int32 value);
  inline void add_hicards(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      hicards() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_hicards();

  // repeated int32 LoCards = 11;
  inline int locards_size() const;
  inline void clear_locards();
  static const int kLoCardsFieldNumber = 11;
  inline ::google_public::protobuf::int32 locards(int index) const;
  inline void set_locards(int index, ::google_public::protobuf::int32 value);
  inline void add_locards(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      locards() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_locards();

  // optional string SecondHiHandType = 12;
  inline bool has_secondhihandtype() const;
  inline void clear_secondhihandtype();
  static const int kSecondHiHandTypeFieldNumber = 12;
  inline const ::std::string& secondhihandtype() const;
  inline void set_secondhihandtype(const ::std::string& value);
  inline void set_secondhihandtype(const char* value);
  inline void set_secondhihandtype(const char* value, size_t size);
  inline ::std::string* mutable_secondhihandtype();
  inline ::std::string* release_secondhihandtype();
  inline void set_allocated_secondhihandtype(::std::string* secondhihandtype);

  // optional string SecondLoHandType = 13;
  inline bool has_secondlohandtype() const;
  inline void clear_secondlohandtype();
  static const int kSecondLoHandTypeFieldNumber = 13;
  inline const ::std::string& secondlohandtype() const;
  inline void set_secondlohandtype(const ::std::string& value);
  inline void set_secondlohandtype(const char* value);
  inline void set_secondlohandtype(const char* value, size_t size);
  inline ::std::string* mutable_secondlohandtype();
  inline ::std::string* release_secondlohandtype();
  inline void set_allocated_secondlohandtype(::std::string* secondlohandtype);

  // repeated int32 SecondHiCards = 14;
  inline int secondhicards_size() const;
  inline void clear_secondhicards();
  static const int kSecondHiCardsFieldNumber = 14;
  inline ::google_public::protobuf::int32 secondhicards(int index) const;
  inline void set_secondhicards(int index, ::google_public::protobuf::int32 value);
  inline void add_secondhicards(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      secondhicards() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_secondhicards();

  // repeated int32 SecondLoCards = 15;
  inline int secondlocards_size() const;
  inline void clear_secondlocards();
  static const int kSecondLoCardsFieldNumber = 15;
  inline ::google_public::protobuf::int32 secondlocards(int index) const;
  inline void set_secondlocards(int index, ::google_public::protobuf::int32 value);
  inline void add_secondlocards(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      secondlocards() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_secondlocards();

  // @@protoc_insertion_point(class_scope:msg.PokerPlayerInfo)
 private:
  inline void set_has_playerinfo();
  inline void clear_has_playerinfo();
  inline void set_has_betchips();
  inline void clear_has_betchips();
  inline void set_has_chips();
  inline void clear_has_chips();
  inline void set_has_actionstatus();
  inline void clear_has_actionstatus();
  inline void set_has_hihandtype();
  inline void clear_has_hihandtype();
  inline void set_has_lohandtype();
  inline void clear_has_lohandtype();
  inline void set_has_secondhihandtype();
  inline void clear_has_secondhihandtype();
  inline void set_has_secondlohandtype();
  inline void clear_has_secondlohandtype();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::CommonPlayerInfo* playerinfo_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > holecards_;
  ::google_public::protobuf::int32 betchips_;
  ::google_public::protobuf::int32 chips_;
  ::std::string* hihandtype_;
  ::std::string* lohandtype_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > hicards_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > locards_;
  ::std::string* secondhihandtype_;
  ::std::string* secondlohandtype_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > secondhicards_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > secondlocards_;
  int actionstatus_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PokerPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class TableInfo : public ::google_public::protobuf::Message {
 public:
  TableInfo();
  virtual ~TableInfo();

  TableInfo(const TableInfo& from);

  inline TableInfo& operator=(const TableInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const TableInfo& default_instance();

  void Swap(TableInfo* other);

  // implements Message ----------------------------------------------

  TableInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const TableInfo& from);
  void MergeFrom(const TableInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 HoleCards = 1;
  inline int holecards_size() const;
  inline void clear_holecards();
  static const int kHoleCardsFieldNumber = 1;
  inline ::google_public::protobuf::int32 holecards(int index) const;
  inline void set_holecards(int index, ::google_public::protobuf::int32 value);
  inline void add_holecards(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      holecards() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_holecards();

  // repeated int32 SecondHoleCards = 2;
  inline int secondholecards_size() const;
  inline void clear_secondholecards();
  static const int kSecondHoleCardsFieldNumber = 2;
  inline ::google_public::protobuf::int32 secondholecards(int index) const;
  inline void set_secondholecards(int index, ::google_public::protobuf::int32 value);
  inline void add_secondholecards(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      secondholecards() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_secondholecards();

  // optional int32 Chips = 3;
  inline bool has_chips() const;
  inline void clear_chips();
  static const int kChipsFieldNumber = 3;
  inline ::google_public::protobuf::int32 chips() const;
  inline void set_chips(::google_public::protobuf::int32 value);

  // optional int32 BigBlind = 4;
  inline bool has_bigblind() const;
  inline void clear_bigblind();
  static const int kBigBlindFieldNumber = 4;
  inline ::google_public::protobuf::int32 bigblind() const;
  inline void set_bigblind(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.TableInfo)
 private:
  inline void set_has_chips();
  inline void clear_has_chips();
  inline void set_has_bigblind();
  inline void clear_has_bigblind();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > holecards_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > secondholecards_;
  ::google_public::protobuf::int32 chips_;
  ::google_public::protobuf::int32 bigblind_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static TableInfo* default_instance_;
};
// -------------------------------------------------------------------

class TableAndUserUpdate : public ::google_public::protobuf::Message {
 public:
  TableAndUserUpdate();
  virtual ~TableAndUserUpdate();

  TableAndUserUpdate(const TableAndUserUpdate& from);

  inline TableAndUserUpdate& operator=(const TableAndUserUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const TableAndUserUpdate& default_instance();

  void Swap(TableAndUserUpdate* other);

  // implements Message ----------------------------------------------

  TableAndUserUpdate* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const TableAndUserUpdate& from);
  void MergeFrom(const TableAndUserUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.PokerPlayerInfo PokerPlayerInfo = 1;
  inline int pokerplayerinfo_size() const;
  inline void clear_pokerplayerinfo();
  static const int kPokerPlayerInfoFieldNumber = 1;
  inline const ::msg::PokerPlayerInfo& pokerplayerinfo(int index) const;
  inline ::msg::PokerPlayerInfo* mutable_pokerplayerinfo(int index);
  inline ::msg::PokerPlayerInfo* add_pokerplayerinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo >&
      pokerplayerinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo >*
      mutable_pokerplayerinfo();

  // optional .msg.TableInfo TableInfo = 2;
  inline bool has_tableinfo() const;
  inline void clear_tableinfo();
  static const int kTableInfoFieldNumber = 2;
  inline const ::msg::TableInfo& tableinfo() const;
  inline ::msg::TableInfo* mutable_tableinfo();
  inline ::msg::TableInfo* release_tableinfo();
  inline void set_allocated_tableinfo(::msg::TableInfo* tableinfo);

  // @@protoc_insertion_point(class_scope:msg.TableAndUserUpdate)
 private:
  inline void set_has_tableinfo();
  inline void clear_has_tableinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo > pokerplayerinfo_;
  ::msg::TableInfo* tableinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static TableAndUserUpdate* default_instance_;
};
// -------------------------------------------------------------------

class PokerActionRequest : public ::google_public::protobuf::Message {
 public:
  PokerActionRequest();
  virtual ~PokerActionRequest();

  PokerActionRequest(const PokerActionRequest& from);

  inline PokerActionRequest& operator=(const PokerActionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PokerActionRequest& default_instance();

  void Swap(PokerActionRequest* other);

  // implements Message ----------------------------------------------

  PokerActionRequest* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PokerActionRequest& from);
  void MergeFrom(const PokerActionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.ActionRequest ActionRequest = 1;
  inline bool has_actionrequest() const;
  inline void clear_actionrequest();
  static const int kActionRequestFieldNumber = 1;
  inline const ::msg::ActionRequest& actionrequest() const;
  inline ::msg::ActionRequest* mutable_actionrequest();
  inline ::msg::ActionRequest* release_actionrequest();
  inline void set_allocated_actionrequest(::msg::ActionRequest* actionrequest);

  // optional .msg.ActionChoice ActionChoice = 2;
  inline bool has_actionchoice() const;
  inline void clear_actionchoice();
  static const int kActionChoiceFieldNumber = 2;
  inline ::msg::ActionChoice actionchoice() const;
  inline void set_actionchoice(::msg::ActionChoice value);

  // optional int32 BetMax = 3;
  inline bool has_betmax() const;
  inline void clear_betmax();
  static const int kBetMaxFieldNumber = 3;
  inline ::google_public::protobuf::int32 betmax() const;
  inline void set_betmax(::google_public::protobuf::int32 value);

  // optional int32 BetMin = 4;
  inline bool has_betmin() const;
  inline void clear_betmin();
  static const int kBetMinFieldNumber = 4;
  inline ::google_public::protobuf::int32 betmin() const;
  inline void set_betmin(::google_public::protobuf::int32 value);

  // optional int32 Unit = 5;
  inline bool has_unit() const;
  inline void clear_unit();
  static const int kUnitFieldNumber = 5;
  inline ::google_public::protobuf::int32 unit() const;
  inline void set_unit(::google_public::protobuf::int32 value);

  // optional int32 BetPot = 6;
  inline bool has_betpot() const;
  inline void clear_betpot();
  static const int kBetPotFieldNumber = 6;
  inline ::google_public::protobuf::int32 betpot() const;
  inline void set_betpot(::google_public::protobuf::int32 value);

  // optional int32 NeedCallChips = 7;
  inline bool has_needcallchips() const;
  inline void clear_needcallchips();
  static const int kNeedCallChipsFieldNumber = 7;
  inline ::google_public::protobuf::int32 needcallchips() const;
  inline void set_needcallchips(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.PokerActionRequest)
 private:
  inline void set_has_actionrequest();
  inline void clear_has_actionrequest();
  inline void set_has_actionchoice();
  inline void clear_has_actionchoice();
  inline void set_has_betmax();
  inline void clear_has_betmax();
  inline void set_has_betmin();
  inline void clear_has_betmin();
  inline void set_has_unit();
  inline void clear_has_unit();
  inline void set_has_betpot();
  inline void clear_has_betpot();
  inline void set_has_needcallchips();
  inline void clear_has_needcallchips();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::ActionRequest* actionrequest_;
  int actionchoice_;
  ::google_public::protobuf::int32 betmax_;
  ::google_public::protobuf::int32 betmin_;
  ::google_public::protobuf::int32 unit_;
  ::google_public::protobuf::int32 betpot_;
  ::google_public::protobuf::int32 needcallchips_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PokerActionRequest* default_instance_;
};
// -------------------------------------------------------------------

class Processor_501_PokerRequestAction : public ::google_public::protobuf::Message {
 public:
  Processor_501_PokerRequestAction();
  virtual ~Processor_501_PokerRequestAction();

  Processor_501_PokerRequestAction(const Processor_501_PokerRequestAction& from);

  inline Processor_501_PokerRequestAction& operator=(const Processor_501_PokerRequestAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_501_PokerRequestAction& default_instance();

  void Swap(Processor_501_PokerRequestAction* other);

  // implements Message ----------------------------------------------

  Processor_501_PokerRequestAction* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_501_PokerRequestAction& from);
  void MergeFrom(const Processor_501_PokerRequestAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.PokerActionRequest ActionRequest = 2;
  inline bool has_actionrequest() const;
  inline void clear_actionrequest();
  static const int kActionRequestFieldNumber = 2;
  inline const ::msg::PokerActionRequest& actionrequest() const;
  inline ::msg::PokerActionRequest* mutable_actionrequest();
  inline ::msg::PokerActionRequest* release_actionrequest();
  inline void set_allocated_actionrequest(::msg::PokerActionRequest* actionrequest);

  // @@protoc_insertion_point(class_scope:msg.Processor_501_PokerRequestAction)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_actionrequest();
  inline void clear_has_actionrequest();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::PokerActionRequest* actionrequest_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_501_PokerRequestAction* default_instance_;
};
// -------------------------------------------------------------------

class Processor_502_PokerSendAction : public ::google_public::protobuf::Message {
 public:
  Processor_502_PokerSendAction();
  virtual ~Processor_502_PokerSendAction();

  Processor_502_PokerSendAction(const Processor_502_PokerSendAction& from);

  inline Processor_502_PokerSendAction& operator=(const Processor_502_PokerSendAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_502_PokerSendAction& default_instance();

  void Swap(Processor_502_PokerSendAction* other);

  // implements Message ----------------------------------------------

  Processor_502_PokerSendAction* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_502_PokerSendAction& from);
  void MergeFrom(const Processor_502_PokerSendAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.ActionStatus ActionStatus = 2;
  inline bool has_actionstatus() const;
  inline void clear_actionstatus();
  static const int kActionStatusFieldNumber = 2;
  inline ::msg::ActionStatus actionstatus() const;
  inline void set_actionstatus(::msg::ActionStatus value);

  // optional int32 Amount = 3;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 3;
  inline ::google_public::protobuf::int32 amount() const;
  inline void set_amount(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_502_PokerSendAction)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_actionstatus();
  inline void clear_has_actionstatus();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  int actionstatus_;
  ::google_public::protobuf::int32 amount_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_502_PokerSendAction* default_instance_;
};
// -------------------------------------------------------------------

class Processor_503_PokerReceivePropUpdate : public ::google_public::protobuf::Message {
 public:
  Processor_503_PokerReceivePropUpdate();
  virtual ~Processor_503_PokerReceivePropUpdate();

  Processor_503_PokerReceivePropUpdate(const Processor_503_PokerReceivePropUpdate& from);

  inline Processor_503_PokerReceivePropUpdate& operator=(const Processor_503_PokerReceivePropUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_503_PokerReceivePropUpdate& default_instance();

  void Swap(Processor_503_PokerReceivePropUpdate* other);

  // implements Message ----------------------------------------------

  Processor_503_PokerReceivePropUpdate* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_503_PokerReceivePropUpdate& from);
  void MergeFrom(const Processor_503_PokerReceivePropUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.TableAndUserUpdate PropUpdate = 2;
  inline bool has_propupdate() const;
  inline void clear_propupdate();
  static const int kPropUpdateFieldNumber = 2;
  inline const ::msg::TableAndUserUpdate& propupdate() const;
  inline ::msg::TableAndUserUpdate* mutable_propupdate();
  inline ::msg::TableAndUserUpdate* release_propupdate();
  inline void set_allocated_propupdate(::msg::TableAndUserUpdate* propupdate);

  // @@protoc_insertion_point(class_scope:msg.Processor_503_PokerReceivePropUpdate)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_propupdate();
  inline void clear_has_propupdate();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::TableAndUserUpdate* propupdate_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_503_PokerReceivePropUpdate* default_instance_;
};
// -------------------------------------------------------------------

class Processor_510_PokerAddChips : public ::google_public::protobuf::Message {
 public:
  Processor_510_PokerAddChips();
  virtual ~Processor_510_PokerAddChips();

  Processor_510_PokerAddChips(const Processor_510_PokerAddChips& from);

  inline Processor_510_PokerAddChips& operator=(const Processor_510_PokerAddChips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_510_PokerAddChips& default_instance();

  void Swap(Processor_510_PokerAddChips* other);

  // implements Message ----------------------------------------------

  Processor_510_PokerAddChips* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_510_PokerAddChips& from);
  void MergeFrom(const Processor_510_PokerAddChips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional int32 Amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google_public::protobuf::int32 amount() const;
  inline void set_amount(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_510_PokerAddChips)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 amount_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_510_PokerAddChips* default_instance_;
};
// -------------------------------------------------------------------

class Processor_511_PokerReceiveNeedChip : public ::google_public::protobuf::Message {
 public:
  Processor_511_PokerReceiveNeedChip();
  virtual ~Processor_511_PokerReceiveNeedChip();

  Processor_511_PokerReceiveNeedChip(const Processor_511_PokerReceiveNeedChip& from);

  inline Processor_511_PokerReceiveNeedChip& operator=(const Processor_511_PokerReceiveNeedChip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_511_PokerReceiveNeedChip& default_instance();

  void Swap(Processor_511_PokerReceiveNeedChip* other);

  // implements Message ----------------------------------------------

  Processor_511_PokerReceiveNeedChip* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_511_PokerReceiveNeedChip& from);
  void MergeFrom(const Processor_511_PokerReceiveNeedChip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_511_PokerReceiveNeedChip)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_511_PokerReceiveNeedChip* default_instance_;
};
// -------------------------------------------------------------------

class Processor_512_PokerRequestChoice : public ::google_public::protobuf::Message {
 public:
  Processor_512_PokerRequestChoice();
  virtual ~Processor_512_PokerRequestChoice();

  Processor_512_PokerRequestChoice(const Processor_512_PokerRequestChoice& from);

  inline Processor_512_PokerRequestChoice& operator=(const Processor_512_PokerRequestChoice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_512_PokerRequestChoice& default_instance();

  void Swap(Processor_512_PokerRequestChoice* other);

  // implements Message ----------------------------------------------

  Processor_512_PokerRequestChoice* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_512_PokerRequestChoice& from);
  void MergeFrom(const Processor_512_PokerRequestChoice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.ChoiceType ChoiceType = 2;
  inline bool has_choicetype() const;
  inline void clear_choicetype();
  static const int kChoiceTypeFieldNumber = 2;
  inline ::msg::ChoiceType choicetype() const;
  inline void set_choicetype(::msg::ChoiceType value);

  // @@protoc_insertion_point(class_scope:msg.Processor_512_PokerRequestChoice)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_choicetype();
  inline void clear_has_choicetype();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  int choicetype_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_512_PokerRequestChoice* default_instance_;
};
// -------------------------------------------------------------------

class Processor_513_PokerReplyChoice : public ::google_public::protobuf::Message {
 public:
  Processor_513_PokerReplyChoice();
  virtual ~Processor_513_PokerReplyChoice();

  Processor_513_PokerReplyChoice(const Processor_513_PokerReplyChoice& from);

  inline Processor_513_PokerReplyChoice& operator=(const Processor_513_PokerReplyChoice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_513_PokerReplyChoice& default_instance();

  void Swap(Processor_513_PokerReplyChoice* other);

  // implements Message ----------------------------------------------

  Processor_513_PokerReplyChoice* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_513_PokerReplyChoice& from);
  void MergeFrom(const Processor_513_PokerReplyChoice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.ChoiceType ChoiceType = 2;
  inline bool has_choicetype() const;
  inline void clear_choicetype();
  static const int kChoiceTypeFieldNumber = 2;
  inline ::msg::ChoiceType choicetype() const;
  inline void set_choicetype(::msg::ChoiceType value);

  // optional bool result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline bool result() const;
  inline void set_result(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_513_PokerReplyChoice)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_choicetype();
  inline void clear_has_choicetype();
  inline void set_has_result();
  inline void clear_has_result();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  int choicetype_;
  bool result_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_513_PokerReplyChoice* default_instance_;
};
// -------------------------------------------------------------------

class Processor_514_PokerReceiveTableNote : public ::google_public::protobuf::Message {
 public:
  Processor_514_PokerReceiveTableNote();
  virtual ~Processor_514_PokerReceiveTableNote();

  Processor_514_PokerReceiveTableNote(const Processor_514_PokerReceiveTableNote& from);

  inline Processor_514_PokerReceiveTableNote& operator=(const Processor_514_PokerReceiveTableNote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_514_PokerReceiveTableNote& default_instance();

  void Swap(Processor_514_PokerReceiveTableNote* other);

  // implements Message ----------------------------------------------

  Processor_514_PokerReceiveTableNote* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_514_PokerReceiveTableNote& from);
  void MergeFrom(const Processor_514_PokerReceiveTableNote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional string TableNote = 2;
  inline bool has_tablenote() const;
  inline void clear_tablenote();
  static const int kTableNoteFieldNumber = 2;
  inline const ::std::string& tablenote() const;
  inline void set_tablenote(const ::std::string& value);
  inline void set_tablenote(const char* value);
  inline void set_tablenote(const char* value, size_t size);
  inline ::std::string* mutable_tablenote();
  inline ::std::string* release_tablenote();
  inline void set_allocated_tablenote(::std::string* tablenote);

  // @@protoc_insertion_point(class_scope:msg.Processor_514_PokerReceiveTableNote)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_tablenote();
  inline void clear_has_tablenote();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tablenote_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_514_PokerReceiveTableNote* default_instance_;
};
// -------------------------------------------------------------------

class Processor_515_PokerSendSetting : public ::google_public::protobuf::Message {
 public:
  Processor_515_PokerSendSetting();
  virtual ~Processor_515_PokerSendSetting();

  Processor_515_PokerSendSetting(const Processor_515_PokerSendSetting& from);

  inline Processor_515_PokerSendSetting& operator=(const Processor_515_PokerSendSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_515_PokerSendSetting& default_instance();

  void Swap(Processor_515_PokerSendSetting* other);

  // implements Message ----------------------------------------------

  Processor_515_PokerSendSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_515_PokerSendSetting& from);
  void MergeFrom(const Processor_515_PokerSendSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.PokerPlayerSetting Settings = 2;
  inline bool has_settings() const;
  inline void clear_settings();
  static const int kSettingsFieldNumber = 2;
  inline const ::msg::PokerPlayerSetting& settings() const;
  inline ::msg::PokerPlayerSetting* mutable_settings();
  inline ::msg::PokerPlayerSetting* release_settings();
  inline void set_allocated_settings(::msg::PokerPlayerSetting* settings);

  // @@protoc_insertion_point(class_scope:msg.Processor_515_PokerSendSetting)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_settings();
  inline void clear_has_settings();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::PokerPlayerSetting* settings_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_515_PokerSendSetting* default_instance_;
};
// -------------------------------------------------------------------

class Processor_516_PokerReceiveSettingChange : public ::google_public::protobuf::Message {
 public:
  Processor_516_PokerReceiveSettingChange();
  virtual ~Processor_516_PokerReceiveSettingChange();

  Processor_516_PokerReceiveSettingChange(const Processor_516_PokerReceiveSettingChange& from);

  inline Processor_516_PokerReceiveSettingChange& operator=(const Processor_516_PokerReceiveSettingChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_516_PokerReceiveSettingChange& default_instance();

  void Swap(Processor_516_PokerReceiveSettingChange* other);

  // implements Message ----------------------------------------------

  Processor_516_PokerReceiveSettingChange* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_516_PokerReceiveSettingChange& from);
  void MergeFrom(const Processor_516_PokerReceiveSettingChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.PokerPlayerSetting Settings = 2;
  inline bool has_settings() const;
  inline void clear_settings();
  static const int kSettingsFieldNumber = 2;
  inline const ::msg::PokerPlayerSetting& settings() const;
  inline ::msg::PokerPlayerSetting* mutable_settings();
  inline ::msg::PokerPlayerSetting* release_settings();
  inline void set_allocated_settings(::msg::PokerPlayerSetting* settings);

  // @@protoc_insertion_point(class_scope:msg.Processor_516_PokerReceiveSettingChange)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_settings();
  inline void clear_has_settings();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::PokerPlayerSetting* settings_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_516_PokerReceiveSettingChange* default_instance_;
};
// -------------------------------------------------------------------

class Processor_517_PokerSendShowCard : public ::google_public::protobuf::Message {
 public:
  Processor_517_PokerSendShowCard();
  virtual ~Processor_517_PokerSendShowCard();

  Processor_517_PokerSendShowCard(const Processor_517_PokerSendShowCard& from);

  inline Processor_517_PokerSendShowCard& operator=(const Processor_517_PokerSendShowCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_517_PokerSendShowCard& default_instance();

  void Swap(Processor_517_PokerSendShowCard* other);

  // implements Message ----------------------------------------------

  Processor_517_PokerSendShowCard* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_517_PokerSendShowCard& from);
  void MergeFrom(const Processor_517_PokerSendShowCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // repeated bool ShowCard = 2;
  inline int showcard_size() const;
  inline void clear_showcard();
  static const int kShowCardFieldNumber = 2;
  inline bool showcard(int index) const;
  inline void set_showcard(int index, bool value);
  inline void add_showcard(bool value);
  inline const ::google_public::protobuf::RepeatedField< bool >&
      showcard() const;
  inline ::google_public::protobuf::RepeatedField< bool >*
      mutable_showcard();

  // @@protoc_insertion_point(class_scope:msg.Processor_517_PokerSendShowCard)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedField< bool > showcard_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_517_PokerSendShowCard* default_instance_;
};
// -------------------------------------------------------------------

class PlayerWin : public ::google_public::protobuf::Message {
 public:
  PlayerWin();
  virtual ~PlayerWin();

  PlayerWin(const PlayerWin& from);

  inline PlayerWin& operator=(const PlayerWin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PlayerWin& default_instance();

  void Swap(PlayerWin* other);

  // implements Message ----------------------------------------------

  PlayerWin* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PlayerWin& from);
  void MergeFrom(const PlayerWin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional int32 PlayerWinChips = 2;
  inline bool has_playerwinchips() const;
  inline void clear_playerwinchips();
  static const int kPlayerWinChipsFieldNumber = 2;
  inline ::google_public::protobuf::int32 playerwinchips() const;
  inline void set_playerwinchips(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.PlayerWin)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_playerwinchips();
  inline void clear_has_playerwinchips();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  ::google_public::protobuf::int32 playerwinchips_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PlayerWin* default_instance_;
};
// -------------------------------------------------------------------

class PlayerHandResult : public ::google_public::protobuf::Message {
 public:
  PlayerHandResult();
  virtual ~PlayerHandResult();

  PlayerHandResult(const PlayerHandResult& from);

  inline PlayerHandResult& operator=(const PlayerHandResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PlayerHandResult& default_instance();

  void Swap(PlayerHandResult* other);

  // implements Message ----------------------------------------------

  PlayerHandResult* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PlayerHandResult& from);
  void MergeFrom(const PlayerHandResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo UserDetailInfo = 1;
  inline bool has_userdetailinfo() const;
  inline void clear_userdetailinfo();
  static const int kUserDetailInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userdetailinfo() const;
  inline ::msg::UserDetailInfo* mutable_userdetailinfo();
  inline ::msg::UserDetailInfo* release_userdetailinfo();
  inline void set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo);

  // optional int32 PlayerWinChips = 2;
  inline bool has_playerwinchips() const;
  inline void clear_playerwinchips();
  static const int kPlayerWinChipsFieldNumber = 2;
  inline ::google_public::protobuf::int32 playerwinchips() const;
  inline void set_playerwinchips(::google_public::protobuf::int32 value);

  // optional int32 PlayerBetChips = 3;
  inline bool has_playerbetchips() const;
  inline void clear_playerbetchips();
  static const int kPlayerBetChipsFieldNumber = 3;
  inline ::google_public::protobuf::int32 playerbetchips() const;
  inline void set_playerbetchips(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.PlayerHandResult)
 private:
  inline void set_has_userdetailinfo();
  inline void clear_has_userdetailinfo();
  inline void set_has_playerwinchips();
  inline void clear_has_playerwinchips();
  inline void set_has_playerbetchips();
  inline void clear_has_playerbetchips();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userdetailinfo_;
  ::google_public::protobuf::int32 playerwinchips_;
  ::google_public::protobuf::int32 playerbetchips_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PlayerHandResult* default_instance_;
};
// -------------------------------------------------------------------

class Pot : public ::google_public::protobuf::Message {
 public:
  Pot();
  virtual ~Pot();

  Pot(const Pot& from);

  inline Pot& operator=(const Pot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Pot& default_instance();

  void Swap(Pot* other);

  // implements Message ----------------------------------------------

  Pot* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Pot& from);
  void MergeFrom(const Pot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PotAmount = 1;
  inline bool has_potamount() const;
  inline void clear_potamount();
  static const int kPotAmountFieldNumber = 1;
  inline ::google_public::protobuf::int32 potamount() const;
  inline void set_potamount(::google_public::protobuf::int32 value);

  // repeated .msg.PlayerWin PlayerWin = 2;
  inline int playerwin_size() const;
  inline void clear_playerwin();
  static const int kPlayerWinFieldNumber = 2;
  inline const ::msg::PlayerWin& playerwin(int index) const;
  inline ::msg::PlayerWin* mutable_playerwin(int index);
  inline ::msg::PlayerWin* add_playerwin();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerWin >&
      playerwin() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerWin >*
      mutable_playerwin();

  // @@protoc_insertion_point(class_scope:msg.Pot)
 private:
  inline void set_has_potamount();
  inline void clear_has_potamount();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerWin > playerwin_;
  ::google_public::protobuf::int32 potamount_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Pot* default_instance_;
};
// -------------------------------------------------------------------

class HandResultInfo : public ::google_public::protobuf::Message {
 public:
  HandResultInfo();
  virtual ~HandResultInfo();

  HandResultInfo(const HandResultInfo& from);

  inline HandResultInfo& operator=(const HandResultInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const HandResultInfo& default_instance();

  void Swap(HandResultInfo* other);

  // implements Message ----------------------------------------------

  HandResultInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const HandResultInfo& from);
  void MergeFrom(const HandResultInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool HasLow = 1;
  inline bool has_haslow() const;
  inline void clear_haslow();
  static const int kHasLowFieldNumber = 1;
  inline bool haslow() const;
  inline void set_haslow(bool value);

  // repeated .msg.Pot Pot = 2;
  inline int pot_size() const;
  inline void clear_pot();
  static const int kPotFieldNumber = 2;
  inline const ::msg::Pot& pot(int index) const;
  inline ::msg::Pot* mutable_pot(int index);
  inline ::msg::Pot* add_pot();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Pot >&
      pot() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::Pot >*
      mutable_pot();

  // repeated .msg.PlayerHandResult PlayerResult = 3;
  inline int playerresult_size() const;
  inline void clear_playerresult();
  static const int kPlayerResultFieldNumber = 3;
  inline const ::msg::PlayerHandResult& playerresult(int index) const;
  inline ::msg::PlayerHandResult* mutable_playerresult(int index);
  inline ::msg::PlayerHandResult* add_playerresult();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerHandResult >&
      playerresult() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerHandResult >*
      mutable_playerresult();

  // optional bool HasSecondCards = 4;
  inline bool has_hassecondcards() const;
  inline void clear_hassecondcards();
  static const int kHasSecondCardsFieldNumber = 4;
  inline bool hassecondcards() const;
  inline void set_hassecondcards(bool value);

  // optional bool SecondHasLow = 5;
  inline bool has_secondhaslow() const;
  inline void clear_secondhaslow();
  static const int kSecondHasLowFieldNumber = 5;
  inline bool secondhaslow() const;
  inline void set_secondhaslow(bool value);

  // @@protoc_insertion_point(class_scope:msg.HandResultInfo)
 private:
  inline void set_has_haslow();
  inline void clear_has_haslow();
  inline void set_has_hassecondcards();
  inline void clear_has_hassecondcards();
  inline void set_has_secondhaslow();
  inline void clear_has_secondhaslow();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::Pot > pot_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerHandResult > playerresult_;
  bool haslow_;
  bool hassecondcards_;
  bool secondhaslow_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static HandResultInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_520_PokerReceiveHandResult : public ::google_public::protobuf::Message {
 public:
  Processor_520_PokerReceiveHandResult();
  virtual ~Processor_520_PokerReceiveHandResult();

  Processor_520_PokerReceiveHandResult(const Processor_520_PokerReceiveHandResult& from);

  inline Processor_520_PokerReceiveHandResult& operator=(const Processor_520_PokerReceiveHandResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_520_PokerReceiveHandResult& default_instance();

  void Swap(Processor_520_PokerReceiveHandResult* other);

  // implements Message ----------------------------------------------

  Processor_520_PokerReceiveHandResult* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_520_PokerReceiveHandResult& from);
  void MergeFrom(const Processor_520_PokerReceiveHandResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional int32 HandId = 2;
  inline bool has_handid() const;
  inline void clear_handid();
  static const int kHandIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 handid() const;
  inline void set_handid(::google_public::protobuf::int32 value);

  // optional .msg.HandResultInfo HandResultInfo = 3;
  inline bool has_handresultinfo() const;
  inline void clear_handresultinfo();
  static const int kHandResultInfoFieldNumber = 3;
  inline const ::msg::HandResultInfo& handresultinfo() const;
  inline ::msg::HandResultInfo* mutable_handresultinfo();
  inline ::msg::HandResultInfo* release_handresultinfo();
  inline void set_allocated_handresultinfo(::msg::HandResultInfo* handresultinfo);

  // @@protoc_insertion_point(class_scope:msg.Processor_520_PokerReceiveHandResult)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_handid();
  inline void clear_has_handid();
  inline void set_has_handresultinfo();
  inline void clear_has_handresultinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 handid_;
  ::msg::HandResultInfo* handresultinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_520_PokerReceiveHandResult* default_instance_;
};
// -------------------------------------------------------------------

class Processor_530_PokerGetTourmentStatus_UP : public ::google_public::protobuf::Message {
 public:
  Processor_530_PokerGetTourmentStatus_UP();
  virtual ~Processor_530_PokerGetTourmentStatus_UP();

  Processor_530_PokerGetTourmentStatus_UP(const Processor_530_PokerGetTourmentStatus_UP& from);

  inline Processor_530_PokerGetTourmentStatus_UP& operator=(const Processor_530_PokerGetTourmentStatus_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_530_PokerGetTourmentStatus_UP& default_instance();

  void Swap(Processor_530_PokerGetTourmentStatus_UP* other);

  // implements Message ----------------------------------------------

  Processor_530_PokerGetTourmentStatus_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_530_PokerGetTourmentStatus_UP& from);
  void MergeFrom(const Processor_530_PokerGetTourmentStatus_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_530_PokerGetTourmentStatus_UP)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_530_PokerGetTourmentStatus_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_530_PokerGetTourmentStatus_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_530_PokerGetTourmentStatus_DOWN();
  virtual ~Processor_530_PokerGetTourmentStatus_DOWN();

  Processor_530_PokerGetTourmentStatus_DOWN(const Processor_530_PokerGetTourmentStatus_DOWN& from);

  inline Processor_530_PokerGetTourmentStatus_DOWN& operator=(const Processor_530_PokerGetTourmentStatus_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_530_PokerGetTourmentStatus_DOWN& default_instance();

  void Swap(Processor_530_PokerGetTourmentStatus_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_530_PokerGetTourmentStatus_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_530_PokerGetTourmentStatus_DOWN& from);
  void MergeFrom(const Processor_530_PokerGetTourmentStatus_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.TournamentInfo TournamentInfo = 2;
  inline bool has_tournamentinfo() const;
  inline void clear_tournamentinfo();
  static const int kTournamentInfoFieldNumber = 2;
  inline const ::msg::TournamentInfo& tournamentinfo() const;
  inline ::msg::TournamentInfo* mutable_tournamentinfo();
  inline ::msg::TournamentInfo* release_tournamentinfo();
  inline void set_allocated_tournamentinfo(::msg::TournamentInfo* tournamentinfo);

  // optional int32 CurrentLevel = 3;
  inline bool has_currentlevel() const;
  inline void clear_currentlevel();
  static const int kCurrentLevelFieldNumber = 3;
  inline ::google_public::protobuf::int32 currentlevel() const;
  inline void set_currentlevel(::google_public::protobuf::int32 value);

  // optional int32 LastTime = 4;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 4;
  inline ::google_public::protobuf::int32 lasttime() const;
  inline void set_lasttime(::google_public::protobuf::int32 value);

  // optional int32 TotalPlayerNum = 5;
  inline bool has_totalplayernum() const;
  inline void clear_totalplayernum();
  static const int kTotalPlayerNumFieldNumber = 5;
  inline ::google_public::protobuf::int32 totalplayernum() const;
  inline void set_totalplayernum(::google_public::protobuf::int32 value);

  // optional int32 TotalChips = 6;
  inline bool has_totalchips() const;
  inline void clear_totalchips();
  static const int kTotalChipsFieldNumber = 6;
  inline ::google_public::protobuf::int32 totalchips() const;
  inline void set_totalchips(::google_public::protobuf::int32 value);

  // repeated .msg.TourmentTableInfo TableInfo = 7;
  inline int tableinfo_size() const;
  inline void clear_tableinfo();
  static const int kTableInfoFieldNumber = 7;
  inline const ::msg::TourmentTableInfo& tableinfo(int index) const;
  inline ::msg::TourmentTableInfo* mutable_tableinfo(int index);
  inline ::msg::TourmentTableInfo* add_tableinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::TourmentTableInfo >&
      tableinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::TourmentTableInfo >*
      mutable_tableinfo();

  // optional .msg.TournamentStatus Status = 8;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 8;
  inline ::msg::TournamentStatus status() const;
  inline void set_status(::msg::TournamentStatus value);

  // optional int32 PrizePool = 9;
  inline bool has_prizepool() const;
  inline void clear_prizepool();
  static const int kPrizePoolFieldNumber = 9;
  inline ::google_public::protobuf::int32 prizepool() const;
  inline void set_prizepool(::google_public::protobuf::int32 value);

  // repeated .msg.PlayerScore LosePlayers = 10;
  inline int loseplayers_size() const;
  inline void clear_loseplayers();
  static const int kLosePlayersFieldNumber = 10;
  inline const ::msg::PlayerScore& loseplayers(int index) const;
  inline ::msg::PlayerScore* mutable_loseplayers(int index);
  inline ::msg::PlayerScore* add_loseplayers();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore >&
      loseplayers() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore >*
      mutable_loseplayers();

  // @@protoc_insertion_point(class_scope:msg.Processor_530_PokerGetTourmentStatus_DOWN)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_tournamentinfo();
  inline void clear_has_tournamentinfo();
  inline void set_has_currentlevel();
  inline void clear_has_currentlevel();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_totalplayernum();
  inline void clear_has_totalplayernum();
  inline void set_has_totalchips();
  inline void clear_has_totalchips();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_prizepool();
  inline void clear_has_prizepool();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::TournamentInfo* tournamentinfo_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 currentlevel_;
  ::google_public::protobuf::int32 lasttime_;
  ::google_public::protobuf::int32 totalplayernum_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::TourmentTableInfo > tableinfo_;
  ::google_public::protobuf::int32 totalchips_;
  int status_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore > loseplayers_;
  ::google_public::protobuf::int32 prizepool_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_530_PokerGetTourmentStatus_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class TourmentTableInfo : public ::google_public::protobuf::Message {
 public:
  TourmentTableInfo();
  virtual ~TourmentTableInfo();

  TourmentTableInfo(const TourmentTableInfo& from);

  inline TourmentTableInfo& operator=(const TourmentTableInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const TourmentTableInfo& default_instance();

  void Swap(TourmentTableInfo* other);

  // implements Message ----------------------------------------------

  TourmentTableInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const TourmentTableInfo& from);
  void MergeFrom(const TourmentTableInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TableID = 1;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 tableid() const;
  inline void set_tableid(::google_public::protobuf::int32 value);

  // repeated .msg.PokerPlayerInfo Player = 2;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline const ::msg::PokerPlayerInfo& player(int index) const;
  inline ::msg::PokerPlayerInfo* mutable_player(int index);
  inline ::msg::PokerPlayerInfo* add_player();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo >&
      player() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo >*
      mutable_player();

  // @@protoc_insertion_point(class_scope:msg.TourmentTableInfo)
 private:
  inline void set_has_tableid();
  inline void clear_has_tableid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo > player_;
  ::google_public::protobuf::int32 tableid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static TourmentTableInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_531_PokerTourmentChangeTable : public ::google_public::protobuf::Message {
 public:
  Processor_531_PokerTourmentChangeTable();
  virtual ~Processor_531_PokerTourmentChangeTable();

  Processor_531_PokerTourmentChangeTable(const Processor_531_PokerTourmentChangeTable& from);

  inline Processor_531_PokerTourmentChangeTable& operator=(const Processor_531_PokerTourmentChangeTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_531_PokerTourmentChangeTable& default_instance();

  void Swap(Processor_531_PokerTourmentChangeTable* other);

  // implements Message ----------------------------------------------

  Processor_531_PokerTourmentChangeTable* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_531_PokerTourmentChangeTable& from);
  void MergeFrom(const Processor_531_PokerTourmentChangeTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TableID = 1;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 tableid() const;
  inline void set_tableid(::google_public::protobuf::int32 value);

  // optional int32 RoomID = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_531_PokerTourmentChangeTable)
 private:
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 tableid_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_531_PokerTourmentChangeTable* default_instance_;
};
// -------------------------------------------------------------------

class Processor_532_PokerTournamentRequestAddon : public ::google_public::protobuf::Message {
 public:
  Processor_532_PokerTournamentRequestAddon();
  virtual ~Processor_532_PokerTournamentRequestAddon();

  Processor_532_PokerTournamentRequestAddon(const Processor_532_PokerTournamentRequestAddon& from);

  inline Processor_532_PokerTournamentRequestAddon& operator=(const Processor_532_PokerTournamentRequestAddon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_532_PokerTournamentRequestAddon& default_instance();

  void Swap(Processor_532_PokerTournamentRequestAddon* other);

  // implements Message ----------------------------------------------

  Processor_532_PokerTournamentRequestAddon* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_532_PokerTournamentRequestAddon& from);
  void MergeFrom(const Processor_532_PokerTournamentRequestAddon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional int32 Buyin = 2;
  inline bool has_buyin() const;
  inline void clear_buyin();
  static const int kBuyinFieldNumber = 2;
  inline ::google_public::protobuf::int32 buyin() const;
  inline void set_buyin(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_532_PokerTournamentRequestAddon)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_buyin();
  inline void clear_has_buyin();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 buyin_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_532_PokerTournamentRequestAddon* default_instance_;
};
// -------------------------------------------------------------------

class Processor_533_PokerTournamentAddon : public ::google_public::protobuf::Message {
 public:
  Processor_533_PokerTournamentAddon();
  virtual ~Processor_533_PokerTournamentAddon();

  Processor_533_PokerTournamentAddon(const Processor_533_PokerTournamentAddon& from);

  inline Processor_533_PokerTournamentAddon& operator=(const Processor_533_PokerTournamentAddon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_533_PokerTournamentAddon& default_instance();

  void Swap(Processor_533_PokerTournamentAddon* other);

  // implements Message ----------------------------------------------

  Processor_533_PokerTournamentAddon* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_533_PokerTournamentAddon& from);
  void MergeFrom(const Processor_533_PokerTournamentAddon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional bool Addon = 2;
  inline bool has_addon() const;
  inline void clear_addon();
  static const int kAddonFieldNumber = 2;
  inline bool addon() const;
  inline void set_addon(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_533_PokerTournamentAddon)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_addon();
  inline void clear_has_addon();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  bool addon_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_533_PokerTournamentAddon* default_instance_;
};
// -------------------------------------------------------------------

class OFCPlayerInfo : public ::google_public::protobuf::Message {
 public:
  OFCPlayerInfo();
  virtual ~OFCPlayerInfo();

  OFCPlayerInfo(const OFCPlayerInfo& from);

  inline OFCPlayerInfo& operator=(const OFCPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OFCPlayerInfo& default_instance();

  void Swap(OFCPlayerInfo* other);

  // implements Message ----------------------------------------------

  OFCPlayerInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OFCPlayerInfo& from);
  void MergeFrom(const OFCPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.CommonPlayerInfo PlayerInfo = 1;
  inline bool has_playerinfo() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 1;
  inline const ::msg::CommonPlayerInfo& playerinfo() const;
  inline ::msg::CommonPlayerInfo* mutable_playerinfo();
  inline ::msg::CommonPlayerInfo* release_playerinfo();
  inline void set_allocated_playerinfo(::msg::CommonPlayerInfo* playerinfo);

  // optional int32 PlayerScore = 2;
  inline bool has_playerscore() const;
  inline void clear_playerscore();
  static const int kPlayerScoreFieldNumber = 2;
  inline ::google_public::protobuf::int32 playerscore() const;
  inline void set_playerscore(::google_public::protobuf::int32 value);

  // repeated .msg.OFCPlayerCard Card = 3;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 3;
  inline const ::msg::OFCPlayerCard& card(int index) const;
  inline ::msg::OFCPlayerCard* mutable_card(int index);
  inline ::msg::OFCPlayerCard* add_card();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard >&
      card() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard >*
      mutable_card();

  // repeated int32 HoleCard = 4;
  inline int holecard_size() const;
  inline void clear_holecard();
  static const int kHoleCardFieldNumber = 4;
  inline ::google_public::protobuf::int32 holecard(int index) const;
  inline void set_holecard(int index, ::google_public::protobuf::int32 value);
  inline void add_holecard(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      holecard() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_holecard();

  // optional string FirstRowType = 5;
  inline bool has_firstrowtype() const;
  inline void clear_firstrowtype();
  static const int kFirstRowTypeFieldNumber = 5;
  inline const ::std::string& firstrowtype() const;
  inline void set_firstrowtype(const ::std::string& value);
  inline void set_firstrowtype(const char* value);
  inline void set_firstrowtype(const char* value, size_t size);
  inline ::std::string* mutable_firstrowtype();
  inline ::std::string* release_firstrowtype();
  inline void set_allocated_firstrowtype(::std::string* firstrowtype);

  // optional string MiddleRowType = 6;
  inline bool has_middlerowtype() const;
  inline void clear_middlerowtype();
  static const int kMiddleRowTypeFieldNumber = 6;
  inline const ::std::string& middlerowtype() const;
  inline void set_middlerowtype(const ::std::string& value);
  inline void set_middlerowtype(const char* value);
  inline void set_middlerowtype(const char* value, size_t size);
  inline ::std::string* mutable_middlerowtype();
  inline ::std::string* release_middlerowtype();
  inline void set_allocated_middlerowtype(::std::string* middlerowtype);

  // optional string LastRowType = 7;
  inline bool has_lastrowtype() const;
  inline void clear_lastrowtype();
  static const int kLastRowTypeFieldNumber = 7;
  inline const ::std::string& lastrowtype() const;
  inline void set_lastrowtype(const ::std::string& value);
  inline void set_lastrowtype(const char* value);
  inline void set_lastrowtype(const char* value, size_t size);
  inline ::std::string* mutable_lastrowtype();
  inline ::std::string* release_lastrowtype();
  inline void set_allocated_lastrowtype(::std::string* lastrowtype);

  // optional int32 FirstRowScore = 8;
  inline bool has_firstrowscore() const;
  inline void clear_firstrowscore();
  static const int kFirstRowScoreFieldNumber = 8;
  inline ::google_public::protobuf::int32 firstrowscore() const;
  inline void set_firstrowscore(::google_public::protobuf::int32 value);

  // optional int32 MiddleRowScore = 9;
  inline bool has_middlerowscore() const;
  inline void clear_middlerowscore();
  static const int kMiddleRowScoreFieldNumber = 9;
  inline ::google_public::protobuf::int32 middlerowscore() const;
  inline void set_middlerowscore(::google_public::protobuf::int32 value);

  // optional int32 LastRowScore = 10;
  inline bool has_lastrowscore() const;
  inline void clear_lastrowscore();
  static const int kLastRowScoreFieldNumber = 10;
  inline ::google_public::protobuf::int32 lastrowscore() const;
  inline void set_lastrowscore(::google_public::protobuf::int32 value);

  // optional int32 FantasyCards = 11;
  inline bool has_fantasycards() const;
  inline void clear_fantasycards();
  static const int kFantasyCardsFieldNumber = 11;
  inline ::google_public::protobuf::int32 fantasycards() const;
  inline void set_fantasycards(::google_public::protobuf::int32 value);

  // optional .msg.OFCActionStatus ActionStatus = 12;
  inline bool has_actionstatus() const;
  inline void clear_actionstatus();
  static const int kActionStatusFieldNumber = 12;
  inline ::msg::OFCActionStatus actionstatus() const;
  inline void set_actionstatus(::msg::OFCActionStatus value);

  // optional .msg.ActionRequest ActionRequest = 13;
  inline bool has_actionrequest() const;
  inline void clear_actionrequest();
  static const int kActionRequestFieldNumber = 13;
  inline const ::msg::ActionRequest& actionrequest() const;
  inline ::msg::ActionRequest* mutable_actionrequest();
  inline ::msg::ActionRequest* release_actionrequest();
  inline void set_allocated_actionrequest(::msg::ActionRequest* actionrequest);

  // optional .msg.OFCCardType FirstCardType = 14;
  inline bool has_firstcardtype() const;
  inline void clear_firstcardtype();
  static const int kFirstCardTypeFieldNumber = 14;
  inline ::msg::OFCCardType firstcardtype() const;
  inline void set_firstcardtype(::msg::OFCCardType value);

  // optional .msg.OFCCardType MiddleCardType = 15;
  inline bool has_middlecardtype() const;
  inline void clear_middlecardtype();
  static const int kMiddleCardTypeFieldNumber = 15;
  inline ::msg::OFCCardType middlecardtype() const;
  inline void set_middlecardtype(::msg::OFCCardType value);

  // optional .msg.OFCCardType LastCardType = 16;
  inline bool has_lastcardtype() const;
  inline void clear_lastcardtype();
  static const int kLastCardTypeFieldNumber = 16;
  inline ::msg::OFCCardType lastcardtype() const;
  inline void set_lastcardtype(::msg::OFCCardType value);

  // optional bool Refantasy = 17;
  inline bool has_refantasy() const;
  inline void clear_refantasy();
  static const int kRefantasyFieldNumber = 17;
  inline bool refantasy() const;
  inline void set_refantasy(bool value);

  // @@protoc_insertion_point(class_scope:msg.OFCPlayerInfo)
 private:
  inline void set_has_playerinfo();
  inline void clear_has_playerinfo();
  inline void set_has_playerscore();
  inline void clear_has_playerscore();
  inline void set_has_firstrowtype();
  inline void clear_has_firstrowtype();
  inline void set_has_middlerowtype();
  inline void clear_has_middlerowtype();
  inline void set_has_lastrowtype();
  inline void clear_has_lastrowtype();
  inline void set_has_firstrowscore();
  inline void clear_has_firstrowscore();
  inline void set_has_middlerowscore();
  inline void clear_has_middlerowscore();
  inline void set_has_lastrowscore();
  inline void clear_has_lastrowscore();
  inline void set_has_fantasycards();
  inline void clear_has_fantasycards();
  inline void set_has_actionstatus();
  inline void clear_has_actionstatus();
  inline void set_has_actionrequest();
  inline void clear_has_actionrequest();
  inline void set_has_firstcardtype();
  inline void clear_has_firstcardtype();
  inline void set_has_middlecardtype();
  inline void clear_has_middlecardtype();
  inline void set_has_lastcardtype();
  inline void clear_has_lastcardtype();
  inline void set_has_refantasy();
  inline void clear_has_refantasy();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::CommonPlayerInfo* playerinfo_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard > card_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > holecard_;
  ::std::string* firstrowtype_;
  ::google_public::protobuf::int32 playerscore_;
  ::google_public::protobuf::int32 firstrowscore_;
  ::std::string* middlerowtype_;
  ::std::string* lastrowtype_;
  ::google_public::protobuf::int32 middlerowscore_;
  ::google_public::protobuf::int32 lastrowscore_;
  ::google_public::protobuf::int32 fantasycards_;
  int actionstatus_;
  ::msg::ActionRequest* actionrequest_;
  int firstcardtype_;
  int middlecardtype_;
  int lastcardtype_;
  bool refantasy_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OFCPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class OFCPlayerSetting : public ::google_public::protobuf::Message {
 public:
  OFCPlayerSetting();
  virtual ~OFCPlayerSetting();

  OFCPlayerSetting(const OFCPlayerSetting& from);

  inline OFCPlayerSetting& operator=(const OFCPlayerSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OFCPlayerSetting& default_instance();

  void Swap(OFCPlayerSetting* other);

  // implements Message ----------------------------------------------

  OFCPlayerSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OFCPlayerSetting& from);
  void MergeFrom(const OFCPlayerSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool SitoutNextHand = 1;
  inline bool has_sitoutnexthand() const;
  inline void clear_sitoutnexthand();
  static const int kSitoutNextHandFieldNumber = 1;
  inline bool sitoutnexthand() const;
  inline void set_sitoutnexthand(bool value);

  // @@protoc_insertion_point(class_scope:msg.OFCPlayerSetting)
 private:
  inline void set_has_sitoutnexthand();
  inline void clear_has_sitoutnexthand();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool sitoutnexthand_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OFCPlayerSetting* default_instance_;
};
// -------------------------------------------------------------------

class OFCPropUpdate : public ::google_public::protobuf::Message {
 public:
  OFCPropUpdate();
  virtual ~OFCPropUpdate();

  OFCPropUpdate(const OFCPropUpdate& from);

  inline OFCPropUpdate& operator=(const OFCPropUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OFCPropUpdate& default_instance();

  void Swap(OFCPropUpdate* other);

  // implements Message ----------------------------------------------

  OFCPropUpdate* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OFCPropUpdate& from);
  void MergeFrom(const OFCPropUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.OFCPlayerInfo PlayerInfo = 1;
  inline int playerinfo_size() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 1;
  inline const ::msg::OFCPlayerInfo& playerinfo(int index) const;
  inline ::msg::OFCPlayerInfo* mutable_playerinfo(int index);
  inline ::msg::OFCPlayerInfo* add_playerinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerInfo >&
      playerinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerInfo >*
      mutable_playerinfo();

  // @@protoc_insertion_point(class_scope:msg.OFCPropUpdate)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerInfo > playerinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OFCPropUpdate* default_instance_;
};
// -------------------------------------------------------------------

class OFCResult : public ::google_public::protobuf::Message {
 public:
  OFCResult();
  virtual ~OFCResult();

  OFCResult(const OFCResult& from);

  inline OFCResult& operator=(const OFCResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OFCResult& default_instance();

  void Swap(OFCResult* other);

  // implements Message ----------------------------------------------

  OFCResult* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OFCResult& from);
  void MergeFrom(const OFCResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.OFCPlayerHandResult OFCPlayerHandResult = 1;
  inline int ofcplayerhandresult_size() const;
  inline void clear_ofcplayerhandresult();
  static const int kOFCPlayerHandResultFieldNumber = 1;
  inline const ::msg::OFCPlayerHandResult& ofcplayerhandresult(int index) const;
  inline ::msg::OFCPlayerHandResult* mutable_ofcplayerhandresult(int index);
  inline ::msg::OFCPlayerHandResult* add_ofcplayerhandresult();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerHandResult >&
      ofcplayerhandresult() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerHandResult >*
      mutable_ofcplayerhandresult();

  // repeated .msg.UserCompare UserCompare = 2;
  inline int usercompare_size() const;
  inline void clear_usercompare();
  static const int kUserCompareFieldNumber = 2;
  inline const ::msg::UserCompare& usercompare(int index) const;
  inline ::msg::UserCompare* mutable_usercompare(int index);
  inline ::msg::UserCompare* add_usercompare();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserCompare >&
      usercompare() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserCompare >*
      mutable_usercompare();

  // @@protoc_insertion_point(class_scope:msg.OFCResult)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerHandResult > ofcplayerhandresult_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::UserCompare > usercompare_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OFCResult* default_instance_;
};
// -------------------------------------------------------------------

class Processor_600_OFCRefreshAll : public ::google_public::protobuf::Message {
 public:
  Processor_600_OFCRefreshAll();
  virtual ~Processor_600_OFCRefreshAll();

  Processor_600_OFCRefreshAll(const Processor_600_OFCRefreshAll& from);

  inline Processor_600_OFCRefreshAll& operator=(const Processor_600_OFCRefreshAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_600_OFCRefreshAll& default_instance();

  void Swap(Processor_600_OFCRefreshAll* other);

  // implements Message ----------------------------------------------

  Processor_600_OFCRefreshAll* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_600_OFCRefreshAll& from);
  void MergeFrom(const Processor_600_OFCRefreshAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.CommonRoomInfo CommonRoomInfo = 1;
  inline bool has_commonroominfo() const;
  inline void clear_commonroominfo();
  static const int kCommonRoomInfoFieldNumber = 1;
  inline const ::msg::CommonRoomInfo& commonroominfo() const;
  inline ::msg::CommonRoomInfo* mutable_commonroominfo();
  inline ::msg::CommonRoomInfo* release_commonroominfo();
  inline void set_allocated_commonroominfo(::msg::CommonRoomInfo* commonroominfo);

  // optional .msg.OFCPropUpdate PropUpdate = 2;
  inline bool has_propupdate() const;
  inline void clear_propupdate();
  static const int kPropUpdateFieldNumber = 2;
  inline const ::msg::OFCPropUpdate& propupdate() const;
  inline ::msg::OFCPropUpdate* mutable_propupdate();
  inline ::msg::OFCPropUpdate* release_propupdate();
  inline void set_allocated_propupdate(::msg::OFCPropUpdate* propupdate);

  // optional .msg.OFCPlayerSetting Settings = 3;
  inline bool has_settings() const;
  inline void clear_settings();
  static const int kSettingsFieldNumber = 3;
  inline const ::msg::OFCPlayerSetting& settings() const;
  inline ::msg::OFCPlayerSetting* mutable_settings();
  inline ::msg::OFCPlayerSetting* release_settings();
  inline void set_allocated_settings(::msg::OFCPlayerSetting* settings);

  // @@protoc_insertion_point(class_scope:msg.Processor_600_OFCRefreshAll)
 private:
  inline void set_has_commonroominfo();
  inline void clear_has_commonroominfo();
  inline void set_has_propupdate();
  inline void clear_has_propupdate();
  inline void set_has_settings();
  inline void clear_has_settings();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::CommonRoomInfo* commonroominfo_;
  ::msg::OFCPropUpdate* propupdate_;
  ::msg::OFCPlayerSetting* settings_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_600_OFCRefreshAll* default_instance_;
};
// -------------------------------------------------------------------

class Processor_601_OFCReceivePropUpdate : public ::google_public::protobuf::Message {
 public:
  Processor_601_OFCReceivePropUpdate();
  virtual ~Processor_601_OFCReceivePropUpdate();

  Processor_601_OFCReceivePropUpdate(const Processor_601_OFCReceivePropUpdate& from);

  inline Processor_601_OFCReceivePropUpdate& operator=(const Processor_601_OFCReceivePropUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_601_OFCReceivePropUpdate& default_instance();

  void Swap(Processor_601_OFCReceivePropUpdate* other);

  // implements Message ----------------------------------------------

  Processor_601_OFCReceivePropUpdate* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_601_OFCReceivePropUpdate& from);
  void MergeFrom(const Processor_601_OFCReceivePropUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.OFCPropUpdate Update = 2;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 2;
  inline const ::msg::OFCPropUpdate& update() const;
  inline ::msg::OFCPropUpdate* mutable_update();
  inline ::msg::OFCPropUpdate* release_update();
  inline void set_allocated_update(::msg::OFCPropUpdate* update);

  // @@protoc_insertion_point(class_scope:msg.Processor_601_OFCReceivePropUpdate)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_update();
  inline void clear_has_update();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::OFCPropUpdate* update_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_601_OFCReceivePropUpdate* default_instance_;
};
// -------------------------------------------------------------------

class OFCPlayerCard : public ::google_public::protobuf::Message {
 public:
  OFCPlayerCard();
  virtual ~OFCPlayerCard();

  OFCPlayerCard(const OFCPlayerCard& from);

  inline OFCPlayerCard& operator=(const OFCPlayerCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OFCPlayerCard& default_instance();

  void Swap(OFCPlayerCard* other);

  // implements Message ----------------------------------------------

  OFCPlayerCard* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OFCPlayerCard& from);
  void MergeFrom(const OFCPlayerCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.OFCCardLocation CardLocation = 1;
  inline bool has_cardlocation() const;
  inline void clear_cardlocation();
  static const int kCardLocationFieldNumber = 1;
  inline ::msg::OFCCardLocation cardlocation() const;
  inline void set_cardlocation(::msg::OFCCardLocation value);

  // optional int32 Card = 2;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 2;
  inline ::google_public::protobuf::int32 card() const;
  inline void set_card(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.OFCPlayerCard)
 private:
  inline void set_has_cardlocation();
  inline void clear_has_cardlocation();
  inline void set_has_card();
  inline void clear_has_card();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cardlocation_;
  ::google_public::protobuf::int32 card_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OFCPlayerCard* default_instance_;
};
// -------------------------------------------------------------------

class Processor_602_OFCSendPlayerCard : public ::google_public::protobuf::Message {
 public:
  Processor_602_OFCSendPlayerCard();
  virtual ~Processor_602_OFCSendPlayerCard();

  Processor_602_OFCSendPlayerCard(const Processor_602_OFCSendPlayerCard& from);

  inline Processor_602_OFCSendPlayerCard& operator=(const Processor_602_OFCSendPlayerCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_602_OFCSendPlayerCard& default_instance();

  void Swap(Processor_602_OFCSendPlayerCard* other);

  // implements Message ----------------------------------------------

  Processor_602_OFCSendPlayerCard* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_602_OFCSendPlayerCard& from);
  void MergeFrom(const Processor_602_OFCSendPlayerCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // repeated .msg.OFCCardLocation CardLocation = 2;
  inline int cardlocation_size() const;
  inline void clear_cardlocation();
  static const int kCardLocationFieldNumber = 2;
  inline ::msg::OFCCardLocation cardlocation(int index) const;
  inline void set_cardlocation(int index, ::msg::OFCCardLocation value);
  inline void add_cardlocation(::msg::OFCCardLocation value);
  inline const ::google_public::protobuf::RepeatedField<int>& cardlocation() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_cardlocation();

  // @@protoc_insertion_point(class_scope:msg.Processor_602_OFCSendPlayerCard)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedField<int> cardlocation_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_602_OFCSendPlayerCard* default_instance_;
};
// -------------------------------------------------------------------

class UserCompare : public ::google_public::protobuf::Message {
 public:
  UserCompare();
  virtual ~UserCompare();

  UserCompare(const UserCompare& from);

  inline UserCompare& operator=(const UserCompare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const UserCompare& default_instance();

  void Swap(UserCompare* other);

  // implements Message ----------------------------------------------

  UserCompare* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const UserCompare& from);
  void MergeFrom(const UserCompare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 UserID = 1;
  inline int userid_size() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid(int index) const;
  inline void set_userid(int index, ::google_public::protobuf::int32 value);
  inline void add_userid(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      userid() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_userid();

  // optional int32 FirstRowComparScore = 2;
  inline bool has_firstrowcomparscore() const;
  inline void clear_firstrowcomparscore();
  static const int kFirstRowComparScoreFieldNumber = 2;
  inline ::google_public::protobuf::int32 firstrowcomparscore() const;
  inline void set_firstrowcomparscore(::google_public::protobuf::int32 value);

  // optional int32 MiddleRowCompareScore = 3;
  inline bool has_middlerowcomparescore() const;
  inline void clear_middlerowcomparescore();
  static const int kMiddleRowCompareScoreFieldNumber = 3;
  inline ::google_public::protobuf::int32 middlerowcomparescore() const;
  inline void set_middlerowcomparescore(::google_public::protobuf::int32 value);

  // optional int32 LastRowCompareScore = 4;
  inline bool has_lastrowcomparescore() const;
  inline void clear_lastrowcomparescore();
  static const int kLastRowCompareScoreFieldNumber = 4;
  inline ::google_public::protobuf::int32 lastrowcomparescore() const;
  inline void set_lastrowcomparescore(::google_public::protobuf::int32 value);

  // optional int32 CompareScore = 5;
  inline bool has_comparescore() const;
  inline void clear_comparescore();
  static const int kCompareScoreFieldNumber = 5;
  inline ::google_public::protobuf::int32 comparescore() const;
  inline void set_comparescore(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.UserCompare)
 private:
  inline void set_has_firstrowcomparscore();
  inline void clear_has_firstrowcomparscore();
  inline void set_has_middlerowcomparescore();
  inline void clear_has_middlerowcomparescore();
  inline void set_has_lastrowcomparescore();
  inline void clear_has_lastrowcomparescore();
  inline void set_has_comparescore();
  inline void clear_has_comparescore();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > userid_;
  ::google_public::protobuf::int32 firstrowcomparscore_;
  ::google_public::protobuf::int32 middlerowcomparescore_;
  ::google_public::protobuf::int32 lastrowcomparescore_;
  ::google_public::protobuf::int32 comparescore_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static UserCompare* default_instance_;
};
// -------------------------------------------------------------------

class OFCPlayerHandResult : public ::google_public::protobuf::Message {
 public:
  OFCPlayerHandResult();
  virtual ~OFCPlayerHandResult();

  OFCPlayerHandResult(const OFCPlayerHandResult& from);

  inline OFCPlayerHandResult& operator=(const OFCPlayerHandResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OFCPlayerHandResult& default_instance();

  void Swap(OFCPlayerHandResult* other);

  // implements Message ----------------------------------------------

  OFCPlayerHandResult* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OFCPlayerHandResult& from);
  void MergeFrom(const OFCPlayerHandResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 PlayerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 playerid() const;
  inline void set_playerid(::google_public::protobuf::int32 value);

  // optional int32 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google_public::protobuf::int32 score() const;
  inline void set_score(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.OFCPlayerHandResult)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_score();
  inline void clear_has_score();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 playerid_;
  ::google_public::protobuf::int32 score_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OFCPlayerHandResult* default_instance_;
};
// -------------------------------------------------------------------

class Processor_610_OFCReceiveResult : public ::google_public::protobuf::Message {
 public:
  Processor_610_OFCReceiveResult();
  virtual ~Processor_610_OFCReceiveResult();

  Processor_610_OFCReceiveResult(const Processor_610_OFCReceiveResult& from);

  inline Processor_610_OFCReceiveResult& operator=(const Processor_610_OFCReceiveResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_610_OFCReceiveResult& default_instance();

  void Swap(Processor_610_OFCReceiveResult* other);

  // implements Message ----------------------------------------------

  Processor_610_OFCReceiveResult* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_610_OFCReceiveResult& from);
  void MergeFrom(const Processor_610_OFCReceiveResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional int32 HandId = 2;
  inline bool has_handid() const;
  inline void clear_handid();
  static const int kHandIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 handid() const;
  inline void set_handid(::google_public::protobuf::int32 value);

  // optional .msg.OFCResult Result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline const ::msg::OFCResult& result() const;
  inline ::msg::OFCResult* mutable_result();
  inline ::msg::OFCResult* release_result();
  inline void set_allocated_result(::msg::OFCResult* result);

  // @@protoc_insertion_point(class_scope:msg.Processor_610_OFCReceiveResult)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_handid();
  inline void clear_has_handid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 handid_;
  ::msg::OFCResult* result_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_610_OFCReceiveResult* default_instance_;
};
// -------------------------------------------------------------------

class Processor_615_OFCSendSetting : public ::google_public::protobuf::Message {
 public:
  Processor_615_OFCSendSetting();
  virtual ~Processor_615_OFCSendSetting();

  Processor_615_OFCSendSetting(const Processor_615_OFCSendSetting& from);

  inline Processor_615_OFCSendSetting& operator=(const Processor_615_OFCSendSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_615_OFCSendSetting& default_instance();

  void Swap(Processor_615_OFCSendSetting* other);

  // implements Message ----------------------------------------------

  Processor_615_OFCSendSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_615_OFCSendSetting& from);
  void MergeFrom(const Processor_615_OFCSendSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.OFCPlayerSetting Settings = 2;
  inline bool has_settings() const;
  inline void clear_settings();
  static const int kSettingsFieldNumber = 2;
  inline const ::msg::OFCPlayerSetting& settings() const;
  inline ::msg::OFCPlayerSetting* mutable_settings();
  inline ::msg::OFCPlayerSetting* release_settings();
  inline void set_allocated_settings(::msg::OFCPlayerSetting* settings);

  // @@protoc_insertion_point(class_scope:msg.Processor_615_OFCSendSetting)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_settings();
  inline void clear_has_settings();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::OFCPlayerSetting* settings_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_615_OFCSendSetting* default_instance_;
};
// -------------------------------------------------------------------

class Processor_616_OFCReceiveSettingChange : public ::google_public::protobuf::Message {
 public:
  Processor_616_OFCReceiveSettingChange();
  virtual ~Processor_616_OFCReceiveSettingChange();

  Processor_616_OFCReceiveSettingChange(const Processor_616_OFCReceiveSettingChange& from);

  inline Processor_616_OFCReceiveSettingChange& operator=(const Processor_616_OFCReceiveSettingChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_616_OFCReceiveSettingChange& default_instance();

  void Swap(Processor_616_OFCReceiveSettingChange* other);

  // implements Message ----------------------------------------------

  Processor_616_OFCReceiveSettingChange* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_616_OFCReceiveSettingChange& from);
  void MergeFrom(const Processor_616_OFCReceiveSettingChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.OFCPlayerSetting Settings = 2;
  inline bool has_settings() const;
  inline void clear_settings();
  static const int kSettingsFieldNumber = 2;
  inline const ::msg::OFCPlayerSetting& settings() const;
  inline ::msg::OFCPlayerSetting* mutable_settings();
  inline ::msg::OFCPlayerSetting* release_settings();
  inline void set_allocated_settings(::msg::OFCPlayerSetting* settings);

  // @@protoc_insertion_point(class_scope:msg.Processor_616_OFCReceiveSettingChange)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_settings();
  inline void clear_has_settings();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::OFCPlayerSetting* settings_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_616_OFCReceiveSettingChange* default_instance_;
};
// -------------------------------------------------------------------

class MahjongPlayerInfo : public ::google_public::protobuf::Message {
 public:
  MahjongPlayerInfo();
  virtual ~MahjongPlayerInfo();

  MahjongPlayerInfo(const MahjongPlayerInfo& from);

  inline MahjongPlayerInfo& operator=(const MahjongPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongPlayerInfo& default_instance();

  void Swap(MahjongPlayerInfo* other);

  // implements Message ----------------------------------------------

  MahjongPlayerInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongPlayerInfo& from);
  void MergeFrom(const MahjongPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.CommonPlayerInfo PlayerInfo = 1;
  inline bool has_playerinfo() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 1;
  inline const ::msg::CommonPlayerInfo& playerinfo() const;
  inline ::msg::CommonPlayerInfo* mutable_playerinfo();
  inline ::msg::CommonPlayerInfo* release_playerinfo();
  inline void set_allocated_playerinfo(::msg::CommonPlayerInfo* playerinfo);

  // optional int32 PlayerScore = 2;
  inline bool has_playerscore() const;
  inline void clear_playerscore();
  static const int kPlayerScoreFieldNumber = 2;
  inline ::google_public::protobuf::int32 playerscore() const;
  inline void set_playerscore(::google_public::protobuf::int32 value);

  // repeated .msg.MahjongCard Card = 3;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 3;
  inline ::msg::MahjongCard card(int index) const;
  inline void set_card(int index, ::msg::MahjongCard value);
  inline void add_card(::msg::MahjongCard value);
  inline const ::google_public::protobuf::RepeatedField<int>& card() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_card();

  // repeated .msg.MahjongCard Discard = 4;
  inline int discard_size() const;
  inline void clear_discard();
  static const int kDiscardFieldNumber = 4;
  inline ::msg::MahjongCard discard(int index) const;
  inline void set_discard(int index, ::msg::MahjongCard value);
  inline void add_discard(::msg::MahjongCard value);
  inline const ::google_public::protobuf::RepeatedField<int>& discard() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_discard();

  // repeated .msg.MahjongFu Fu = 5;
  inline int fu_size() const;
  inline void clear_fu();
  static const int kFuFieldNumber = 5;
  inline const ::msg::MahjongFu& fu(int index) const;
  inline ::msg::MahjongFu* mutable_fu(int index);
  inline ::msg::MahjongFu* add_fu();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >&
      fu() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >*
      mutable_fu();

  // optional .msg.MahjongActionRequest ActionRequest = 6;
  inline bool has_actionrequest() const;
  inline void clear_actionrequest();
  static const int kActionRequestFieldNumber = 6;
  inline const ::msg::MahjongActionRequest& actionrequest() const;
  inline ::msg::MahjongActionRequest* mutable_actionrequest();
  inline ::msg::MahjongActionRequest* release_actionrequest();
  inline void set_allocated_actionrequest(::msg::MahjongActionRequest* actionrequest);

  // repeated .msg.MahjongScoreChange ScoreChange = 7;
  inline int scorechange_size() const;
  inline void clear_scorechange();
  static const int kScoreChangeFieldNumber = 7;
  inline const ::msg::MahjongScoreChange& scorechange(int index) const;
  inline ::msg::MahjongScoreChange* mutable_scorechange(int index);
  inline ::msg::MahjongScoreChange* add_scorechange();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongScoreChange >&
      scorechange() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongScoreChange >*
      mutable_scorechange();

  // optional .msg.MahjongCard DrawCard = 8;
  inline bool has_drawcard() const;
  inline void clear_drawcard();
  static const int kDrawCardFieldNumber = 8;
  inline ::msg::MahjongCard drawcard() const;
  inline void set_drawcard(::msg::MahjongCard value);

  // optional bool CanWinByOther = 9;
  inline bool has_canwinbyother() const;
  inline void clear_canwinbyother();
  static const int kCanWinByOtherFieldNumber = 9;
  inline bool canwinbyother() const;
  inline void set_canwinbyother(bool value);

  // optional .msg.MahjongSuit Suit = 10;
  inline bool has_suit() const;
  inline void clear_suit();
  static const int kSuitFieldNumber = 10;
  inline ::msg::MahjongSuit suit() const;
  inline void set_suit(::msg::MahjongSuit value);

  // repeated .msg.MahjongTing Ting = 11;
  inline int ting_size() const;
  inline void clear_ting();
  static const int kTingFieldNumber = 11;
  inline const ::msg::MahjongTing& ting(int index) const;
  inline ::msg::MahjongTing* mutable_ting(int index);
  inline ::msg::MahjongTing* add_ting();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing >&
      ting() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing >*
      mutable_ting();

  // @@protoc_insertion_point(class_scope:msg.MahjongPlayerInfo)
 private:
  inline void set_has_playerinfo();
  inline void clear_has_playerinfo();
  inline void set_has_playerscore();
  inline void clear_has_playerscore();
  inline void set_has_actionrequest();
  inline void clear_has_actionrequest();
  inline void set_has_drawcard();
  inline void clear_has_drawcard();
  inline void set_has_canwinbyother();
  inline void clear_has_canwinbyother();
  inline void set_has_suit();
  inline void clear_has_suit();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::CommonPlayerInfo* playerinfo_;
  ::google_public::protobuf::RepeatedField<int> card_;
  ::google_public::protobuf::RepeatedField<int> discard_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu > fu_;
  ::google_public::protobuf::int32 playerscore_;
  int drawcard_;
  ::msg::MahjongActionRequest* actionrequest_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongScoreChange > scorechange_;
  bool canwinbyother_;
  int suit_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing > ting_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MahjongFu : public ::google_public::protobuf::Message {
 public:
  MahjongFu();
  virtual ~MahjongFu();

  MahjongFu(const MahjongFu& from);

  inline MahjongFu& operator=(const MahjongFu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongFu& default_instance();

  void Swap(MahjongFu* other);

  // implements Message ----------------------------------------------

  MahjongFu* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongFu& from);
  void MergeFrom(const MahjongFu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.MahjongCard Card = 1;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::msg::MahjongCard card(int index) const;
  inline void set_card(int index, ::msg::MahjongCard value);
  inline void add_card(::msg::MahjongCard value);
  inline const ::google_public::protobuf::RepeatedField<int>& card() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_card();

  // optional .msg.MahjongPosition Source = 2;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 2;
  inline ::msg::MahjongPosition source() const;
  inline void set_source(::msg::MahjongPosition value);

  // optional .msg.MahjongFuType Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::msg::MahjongFuType type() const;
  inline void set_type(::msg::MahjongFuType value);

  // optional .msg.MahjongCard GetCard = 4;
  inline bool has_getcard() const;
  inline void clear_getcard();
  static const int kGetCardFieldNumber = 4;
  inline ::msg::MahjongCard getcard() const;
  inline void set_getcard(::msg::MahjongCard value);

  // @@protoc_insertion_point(class_scope:msg.MahjongFu)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_getcard();
  inline void clear_has_getcard();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedField<int> card_;
  int source_;
  int type_;
  int getcard_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongFu* default_instance_;
};
// -------------------------------------------------------------------

class MahjongScoreChange : public ::google_public::protobuf::Message {
 public:
  MahjongScoreChange();
  virtual ~MahjongScoreChange();

  MahjongScoreChange(const MahjongScoreChange& from);

  inline MahjongScoreChange& operator=(const MahjongScoreChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongScoreChange& default_instance();

  void Swap(MahjongScoreChange* other);

  // implements Message ----------------------------------------------

  MahjongScoreChange* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongScoreChange& from);
  void MergeFrom(const MahjongScoreChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.MahjongCard Card = 1;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::msg::MahjongCard card(int index) const;
  inline void set_card(int index, ::msg::MahjongCard value);
  inline void add_card(::msg::MahjongCard value);
  inline const ::google_public::protobuf::RepeatedField<int>& card() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_card();

  // repeated .msg.MahjongFu Fu = 2;
  inline int fu_size() const;
  inline void clear_fu();
  static const int kFuFieldNumber = 2;
  inline const ::msg::MahjongFu& fu(int index) const;
  inline ::msg::MahjongFu* mutable_fu(int index);
  inline ::msg::MahjongFu* add_fu();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >&
      fu() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >*
      mutable_fu();

  // optional .msg.MahjongPosition Source = 3;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 3;
  inline ::msg::MahjongPosition source() const;
  inline void set_source(::msg::MahjongPosition value);

  // optional .msg.MahjongCard HuCard = 4;
  inline bool has_hucard() const;
  inline void clear_hucard();
  static const int kHuCardFieldNumber = 4;
  inline ::msg::MahjongCard hucard() const;
  inline void set_hucard(::msg::MahjongCard value);

  // repeated .msg.SiChuanMahjongWinType Type = 5;
  inline int type_size() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::msg::SiChuanMahjongWinType type(int index) const;
  inline void set_type(int index, ::msg::SiChuanMahjongWinType value);
  inline void add_type(::msg::SiChuanMahjongWinType value);
  inline const ::google_public::protobuf::RepeatedField<int>& type() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_type();

  // optional int32 Score = 6;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 6;
  inline ::google_public::protobuf::int32 score() const;
  inline void set_score(::google_public::protobuf::int32 value);

  // optional bool MultiWin = 7;
  inline bool has_multiwin() const;
  inline void clear_multiwin();
  static const int kMultiWinFieldNumber = 7;
  inline bool multiwin() const;
  inline void set_multiwin(bool value);

  // @@protoc_insertion_point(class_scope:msg.MahjongScoreChange)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_hucard();
  inline void clear_has_hucard();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_multiwin();
  inline void clear_has_multiwin();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedField<int> card_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu > fu_;
  int source_;
  int hucard_;
  ::google_public::protobuf::RepeatedField<int> type_;
  ::google_public::protobuf::int32 score_;
  bool multiwin_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongScoreChange* default_instance_;
};
// -------------------------------------------------------------------

class MahjongPlayerSetting : public ::google_public::protobuf::Message {
 public:
  MahjongPlayerSetting();
  virtual ~MahjongPlayerSetting();

  MahjongPlayerSetting(const MahjongPlayerSetting& from);

  inline MahjongPlayerSetting& operator=(const MahjongPlayerSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongPlayerSetting& default_instance();

  void Swap(MahjongPlayerSetting* other);

  // implements Message ----------------------------------------------

  MahjongPlayerSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongPlayerSetting& from);
  void MergeFrom(const MahjongPlayerSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool LeaveNextHand = 1;
  inline bool has_leavenexthand() const;
  inline void clear_leavenexthand();
  static const int kLeaveNextHandFieldNumber = 1;
  inline bool leavenexthand() const;
  inline void set_leavenexthand(bool value);

  // optional bool AutoHu = 2;
  inline bool has_autohu() const;
  inline void clear_autohu();
  static const int kAutoHuFieldNumber = 2;
  inline bool autohu() const;
  inline void set_autohu(bool value);

  // optional bool DiscardAll = 3;
  inline bool has_discardall() const;
  inline void clear_discardall();
  static const int kDiscardAllFieldNumber = 3;
  inline bool discardall() const;
  inline void set_discardall(bool value);

  // @@protoc_insertion_point(class_scope:msg.MahjongPlayerSetting)
 private:
  inline void set_has_leavenexthand();
  inline void clear_has_leavenexthand();
  inline void set_has_autohu();
  inline void clear_has_autohu();
  inline void set_has_discardall();
  inline void clear_has_discardall();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool leavenexthand_;
  bool autohu_;
  bool discardall_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongPlayerSetting* default_instance_;
};
// -------------------------------------------------------------------

class MahjongPropUpdate : public ::google_public::protobuf::Message {
 public:
  MahjongPropUpdate();
  virtual ~MahjongPropUpdate();

  MahjongPropUpdate(const MahjongPropUpdate& from);

  inline MahjongPropUpdate& operator=(const MahjongPropUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongPropUpdate& default_instance();

  void Swap(MahjongPropUpdate* other);

  // implements Message ----------------------------------------------

  MahjongPropUpdate* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongPropUpdate& from);
  void MergeFrom(const MahjongPropUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.MahjongPlayerInfo PlayerInfo = 1;
  inline int playerinfo_size() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 1;
  inline const ::msg::MahjongPlayerInfo& playerinfo(int index) const;
  inline ::msg::MahjongPlayerInfo* mutable_playerinfo(int index);
  inline ::msg::MahjongPlayerInfo* add_playerinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPlayerInfo >&
      playerinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPlayerInfo >*
      mutable_playerinfo();

  // optional int32 LastCards = 2;
  inline bool has_lastcards() const;
  inline void clear_lastcards();
  static const int kLastCardsFieldNumber = 2;
  inline ::google_public::protobuf::int32 lastcards() const;
  inline void set_lastcards(::google_public::protobuf::int32 value);

  // optional int32 StartPosition = 3;
  inline bool has_startposition() const;
  inline void clear_startposition();
  static const int kStartPositionFieldNumber = 3;
  inline ::google_public::protobuf::int32 startposition() const;
  inline void set_startposition(::google_public::protobuf::int32 value);

  // optional .msg.MahjongCard CurrentDiscard = 4;
  inline bool has_currentdiscard() const;
  inline void clear_currentdiscard();
  static const int kCurrentDiscardFieldNumber = 4;
  inline ::msg::MahjongCard currentdiscard() const;
  inline void set_currentdiscard(::msg::MahjongCard value);

  // optional int32 CurrentDiscardUserID = 5;
  inline bool has_currentdiscarduserid() const;
  inline void clear_currentdiscarduserid();
  static const int kCurrentDiscardUserIDFieldNumber = 5;
  inline ::google_public::protobuf::int32 currentdiscarduserid() const;
  inline void set_currentdiscarduserid(::google_public::protobuf::int32 value);

  // optional .msg.MahjongCardZone CurrentDiscardZone = 6;
  inline bool has_currentdiscardzone() const;
  inline void clear_currentdiscardzone();
  static const int kCurrentDiscardZoneFieldNumber = 6;
  inline ::msg::MahjongCardZone currentdiscardzone() const;
  inline void set_currentdiscardzone(::msg::MahjongCardZone value);

  // optional int32 EastSeatNo = 7;
  inline bool has_eastseatno() const;
  inline void clear_eastseatno();
  static const int kEastSeatNoFieldNumber = 7;
  inline ::google_public::protobuf::int32 eastseatno() const;
  inline void set_eastseatno(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.MahjongPropUpdate)
 private:
  inline void set_has_lastcards();
  inline void clear_has_lastcards();
  inline void set_has_startposition();
  inline void clear_has_startposition();
  inline void set_has_currentdiscard();
  inline void clear_has_currentdiscard();
  inline void set_has_currentdiscarduserid();
  inline void clear_has_currentdiscarduserid();
  inline void set_has_currentdiscardzone();
  inline void clear_has_currentdiscardzone();
  inline void set_has_eastseatno();
  inline void clear_has_eastseatno();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPlayerInfo > playerinfo_;
  ::google_public::protobuf::int32 lastcards_;
  ::google_public::protobuf::int32 startposition_;
  int currentdiscard_;
  ::google_public::protobuf::int32 currentdiscarduserid_;
  int currentdiscardzone_;
  ::google_public::protobuf::int32 eastseatno_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongPropUpdate* default_instance_;
};
// -------------------------------------------------------------------

class MahjongTing : public ::google_public::protobuf::Message {
 public:
  MahjongTing();
  virtual ~MahjongTing();

  MahjongTing(const MahjongTing& from);

  inline MahjongTing& operator=(const MahjongTing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongTing& default_instance();

  void Swap(MahjongTing* other);

  // implements Message ----------------------------------------------

  MahjongTing* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongTing& from);
  void MergeFrom(const MahjongTing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.MahjongCard Card = 1;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::msg::MahjongCard card() const;
  inline void set_card(::msg::MahjongCard value);

  // optional int32 Number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google_public::protobuf::int32 number() const;
  inline void set_number(::google_public::protobuf::int32 value);

  // optional int32 Score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google_public::protobuf::int32 score() const;
  inline void set_score(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.MahjongTing)
 private:
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_score();
  inline void clear_has_score();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int card_;
  ::google_public::protobuf::int32 number_;
  ::google_public::protobuf::int32 score_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongTing* default_instance_;
};
// -------------------------------------------------------------------

class MahjongPossibleTing : public ::google_public::protobuf::Message {
 public:
  MahjongPossibleTing();
  virtual ~MahjongPossibleTing();

  MahjongPossibleTing(const MahjongPossibleTing& from);

  inline MahjongPossibleTing& operator=(const MahjongPossibleTing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongPossibleTing& default_instance();

  void Swap(MahjongPossibleTing* other);

  // implements Message ----------------------------------------------

  MahjongPossibleTing* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongPossibleTing& from);
  void MergeFrom(const MahjongPossibleTing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.MahjongCard Card = 1;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::msg::MahjongCard card() const;
  inline void set_card(::msg::MahjongCard value);

  // repeated .msg.MahjongTing Ting = 2;
  inline int ting_size() const;
  inline void clear_ting();
  static const int kTingFieldNumber = 2;
  inline const ::msg::MahjongTing& ting(int index) const;
  inline ::msg::MahjongTing* mutable_ting(int index);
  inline ::msg::MahjongTing* add_ting();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing >&
      ting() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing >*
      mutable_ting();

  // @@protoc_insertion_point(class_scope:msg.MahjongPossibleTing)
 private:
  inline void set_has_card();
  inline void clear_has_card();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing > ting_;
  int card_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongPossibleTing* default_instance_;
};
// -------------------------------------------------------------------

class MahjongActionRequest : public ::google_public::protobuf::Message {
 public:
  MahjongActionRequest();
  virtual ~MahjongActionRequest();

  MahjongActionRequest(const MahjongActionRequest& from);

  inline MahjongActionRequest& operator=(const MahjongActionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongActionRequest& default_instance();

  void Swap(MahjongActionRequest* other);

  // implements Message ----------------------------------------------

  MahjongActionRequest* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongActionRequest& from);
  void MergeFrom(const MahjongActionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.ActionRequest ActionRequest = 1;
  inline bool has_actionrequest() const;
  inline void clear_actionrequest();
  static const int kActionRequestFieldNumber = 1;
  inline const ::msg::ActionRequest& actionrequest() const;
  inline ::msg::ActionRequest* mutable_actionrequest();
  inline ::msg::ActionRequest* release_actionrequest();
  inline void set_allocated_actionrequest(::msg::ActionRequest* actionrequest);

  // optional .msg.MahjongRequestType Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::msg::MahjongRequestType type() const;
  inline void set_type(::msg::MahjongRequestType value);

  // optional bool CanHu = 3;
  inline bool has_canhu() const;
  inline void clear_canhu();
  static const int kCanHuFieldNumber = 3;
  inline bool canhu() const;
  inline void set_canhu(bool value);

  // optional bool CanGang = 4;
  inline bool has_cangang() const;
  inline void clear_cangang();
  static const int kCanGangFieldNumber = 4;
  inline bool cangang() const;
  inline void set_cangang(bool value);

  // optional bool CanPeng = 5;
  inline bool has_canpeng() const;
  inline void clear_canpeng();
  static const int kCanPengFieldNumber = 5;
  inline bool canpeng() const;
  inline void set_canpeng(bool value);

  // optional bool CanChi = 6;
  inline bool has_canchi() const;
  inline void clear_canchi();
  static const int kCanChiFieldNumber = 6;
  inline bool canchi() const;
  inline void set_canchi(bool value);

  // repeated .msg.MahjongPossibleTing PossibleTing = 7;
  inline int possibleting_size() const;
  inline void clear_possibleting();
  static const int kPossibleTingFieldNumber = 7;
  inline const ::msg::MahjongPossibleTing& possibleting(int index) const;
  inline ::msg::MahjongPossibleTing* mutable_possibleting(int index);
  inline ::msg::MahjongPossibleTing* add_possibleting();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPossibleTing >&
      possibleting() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPossibleTing >*
      mutable_possibleting();

  // optional .msg.SiChuanMahjongWinType WinType = 8;
  inline bool has_wintype() const;
  inline void clear_wintype();
  static const int kWinTypeFieldNumber = 8;
  inline ::msg::SiChuanMahjongWinType wintype() const;
  inline void set_wintype(::msg::SiChuanMahjongWinType value);

  // optional int32 WinScore = 9;
  inline bool has_winscore() const;
  inline void clear_winscore();
  static const int kWinScoreFieldNumber = 9;
  inline ::google_public::protobuf::int32 winscore() const;
  inline void set_winscore(::google_public::protobuf::int32 value);

  // repeated .msg.MahjongCard DefaultSwitchCard = 10;
  inline int defaultswitchcard_size() const;
  inline void clear_defaultswitchcard();
  static const int kDefaultSwitchCardFieldNumber = 10;
  inline ::msg::MahjongCard defaultswitchcard(int index) const;
  inline void set_defaultswitchcard(int index, ::msg::MahjongCard value);
  inline void add_defaultswitchcard(::msg::MahjongCard value);
  inline const ::google_public::protobuf::RepeatedField<int>& defaultswitchcard() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_defaultswitchcard();

  // optional .msg.MahjongSuit DefaultBlankSuit = 11;
  inline bool has_defaultblanksuit() const;
  inline void clear_defaultblanksuit();
  static const int kDefaultBlankSuitFieldNumber = 11;
  inline ::msg::MahjongSuit defaultblanksuit() const;
  inline void set_defaultblanksuit(::msg::MahjongSuit value);

  // repeated .msg.MahjongCard GangCard = 12;
  inline int gangcard_size() const;
  inline void clear_gangcard();
  static const int kGangCardFieldNumber = 12;
  inline ::msg::MahjongCard gangcard(int index) const;
  inline void set_gangcard(int index, ::msg::MahjongCard value);
  inline void add_gangcard(::msg::MahjongCard value);
  inline const ::google_public::protobuf::RepeatedField<int>& gangcard() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_gangcard();

  // @@protoc_insertion_point(class_scope:msg.MahjongActionRequest)
 private:
  inline void set_has_actionrequest();
  inline void clear_has_actionrequest();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_canhu();
  inline void clear_has_canhu();
  inline void set_has_cangang();
  inline void clear_has_cangang();
  inline void set_has_canpeng();
  inline void clear_has_canpeng();
  inline void set_has_canchi();
  inline void clear_has_canchi();
  inline void set_has_wintype();
  inline void clear_has_wintype();
  inline void set_has_winscore();
  inline void clear_has_winscore();
  inline void set_has_defaultblanksuit();
  inline void clear_has_defaultblanksuit();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::ActionRequest* actionrequest_;
  int type_;
  bool canhu_;
  bool cangang_;
  bool canpeng_;
  bool canchi_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPossibleTing > possibleting_;
  int wintype_;
  ::google_public::protobuf::int32 winscore_;
  ::google_public::protobuf::RepeatedField<int> defaultswitchcard_;
  ::google_public::protobuf::RepeatedField<int> gangcard_;
  int defaultblanksuit_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongActionRequest* default_instance_;
};
// -------------------------------------------------------------------

class Processor_700_MahjongRefreshAll : public ::google_public::protobuf::Message {
 public:
  Processor_700_MahjongRefreshAll();
  virtual ~Processor_700_MahjongRefreshAll();

  Processor_700_MahjongRefreshAll(const Processor_700_MahjongRefreshAll& from);

  inline Processor_700_MahjongRefreshAll& operator=(const Processor_700_MahjongRefreshAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_700_MahjongRefreshAll& default_instance();

  void Swap(Processor_700_MahjongRefreshAll* other);

  // implements Message ----------------------------------------------

  Processor_700_MahjongRefreshAll* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_700_MahjongRefreshAll& from);
  void MergeFrom(const Processor_700_MahjongRefreshAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.CommonRoomInfo CommonRoomInfo = 1;
  inline bool has_commonroominfo() const;
  inline void clear_commonroominfo();
  static const int kCommonRoomInfoFieldNumber = 1;
  inline const ::msg::CommonRoomInfo& commonroominfo() const;
  inline ::msg::CommonRoomInfo* mutable_commonroominfo();
  inline ::msg::CommonRoomInfo* release_commonroominfo();
  inline void set_allocated_commonroominfo(::msg::CommonRoomInfo* commonroominfo);

  // optional .msg.MahjongPropUpdate PropUpdate = 2;
  inline bool has_propupdate() const;
  inline void clear_propupdate();
  static const int kPropUpdateFieldNumber = 2;
  inline const ::msg::MahjongPropUpdate& propupdate() const;
  inline ::msg::MahjongPropUpdate* mutable_propupdate();
  inline ::msg::MahjongPropUpdate* release_propupdate();
  inline void set_allocated_propupdate(::msg::MahjongPropUpdate* propupdate);

  // optional .msg.MahjongPlayerSetting Settings = 3;
  inline bool has_settings() const;
  inline void clear_settings();
  static const int kSettingsFieldNumber = 3;
  inline const ::msg::MahjongPlayerSetting& settings() const;
  inline ::msg::MahjongPlayerSetting* mutable_settings();
  inline ::msg::MahjongPlayerSetting* release_settings();
  inline void set_allocated_settings(::msg::MahjongPlayerSetting* settings);

  // @@protoc_insertion_point(class_scope:msg.Processor_700_MahjongRefreshAll)
 private:
  inline void set_has_commonroominfo();
  inline void clear_has_commonroominfo();
  inline void set_has_propupdate();
  inline void clear_has_propupdate();
  inline void set_has_settings();
  inline void clear_has_settings();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::CommonRoomInfo* commonroominfo_;
  ::msg::MahjongPropUpdate* propupdate_;
  ::msg::MahjongPlayerSetting* settings_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_700_MahjongRefreshAll* default_instance_;
};
// -------------------------------------------------------------------

class Processor_701_MahjongReceivePropUpdate : public ::google_public::protobuf::Message {
 public:
  Processor_701_MahjongReceivePropUpdate();
  virtual ~Processor_701_MahjongReceivePropUpdate();

  Processor_701_MahjongReceivePropUpdate(const Processor_701_MahjongReceivePropUpdate& from);

  inline Processor_701_MahjongReceivePropUpdate& operator=(const Processor_701_MahjongReceivePropUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_701_MahjongReceivePropUpdate& default_instance();

  void Swap(Processor_701_MahjongReceivePropUpdate* other);

  // implements Message ----------------------------------------------

  Processor_701_MahjongReceivePropUpdate* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_701_MahjongReceivePropUpdate& from);
  void MergeFrom(const Processor_701_MahjongReceivePropUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.MahjongPropUpdate Update = 2;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 2;
  inline const ::msg::MahjongPropUpdate& update() const;
  inline ::msg::MahjongPropUpdate* mutable_update();
  inline ::msg::MahjongPropUpdate* release_update();
  inline void set_allocated_update(::msg::MahjongPropUpdate* update);

  // @@protoc_insertion_point(class_scope:msg.Processor_701_MahjongReceivePropUpdate)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_update();
  inline void clear_has_update();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::MahjongPropUpdate* update_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_701_MahjongReceivePropUpdate* default_instance_;
};
// -------------------------------------------------------------------

class Processor_702_MahjongSendPlayerChoice : public ::google_public::protobuf::Message {
 public:
  Processor_702_MahjongSendPlayerChoice();
  virtual ~Processor_702_MahjongSendPlayerChoice();

  Processor_702_MahjongSendPlayerChoice(const Processor_702_MahjongSendPlayerChoice& from);

  inline Processor_702_MahjongSendPlayerChoice& operator=(const Processor_702_MahjongSendPlayerChoice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_702_MahjongSendPlayerChoice& default_instance();

  void Swap(Processor_702_MahjongSendPlayerChoice* other);

  // implements Message ----------------------------------------------

  Processor_702_MahjongSendPlayerChoice* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_702_MahjongSendPlayerChoice& from);
  void MergeFrom(const Processor_702_MahjongSendPlayerChoice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.MahjongCard Card = 2;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 2;
  inline ::msg::MahjongCard card() const;
  inline void set_card(::msg::MahjongCard value);

  // optional .msg.MahjongActionChoice Choice = 3;
  inline bool has_choice() const;
  inline void clear_choice();
  static const int kChoiceFieldNumber = 3;
  inline ::msg::MahjongActionChoice choice() const;
  inline void set_choice(::msg::MahjongActionChoice value);

  // repeated .msg.MahjongCard SwitchCard = 4;
  inline int switchcard_size() const;
  inline void clear_switchcard();
  static const int kSwitchCardFieldNumber = 4;
  inline ::msg::MahjongCard switchcard(int index) const;
  inline void set_switchcard(int index, ::msg::MahjongCard value);
  inline void add_switchcard(::msg::MahjongCard value);
  inline const ::google_public::protobuf::RepeatedField<int>& switchcard() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_switchcard();

  // optional .msg.MahjongSuit Suit = 5;
  inline bool has_suit() const;
  inline void clear_suit();
  static const int kSuitFieldNumber = 5;
  inline ::msg::MahjongSuit suit() const;
  inline void set_suit(::msg::MahjongSuit value);

  // optional .msg.MahjongCard GangCard = 6;
  inline bool has_gangcard() const;
  inline void clear_gangcard();
  static const int kGangCardFieldNumber = 6;
  inline ::msg::MahjongCard gangcard() const;
  inline void set_gangcard(::msg::MahjongCard value);

  // @@protoc_insertion_point(class_scope:msg.Processor_702_MahjongSendPlayerChoice)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_choice();
  inline void clear_has_choice();
  inline void set_has_suit();
  inline void clear_has_suit();
  inline void set_has_gangcard();
  inline void clear_has_gangcard();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  int card_;
  ::google_public::protobuf::RepeatedField<int> switchcard_;
  int choice_;
  int suit_;
  int gangcard_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_702_MahjongSendPlayerChoice* default_instance_;
};
// -------------------------------------------------------------------

class MahjongAction : public ::google_public::protobuf::Message {
 public:
  MahjongAction();
  virtual ~MahjongAction();

  MahjongAction(const MahjongAction& from);

  inline MahjongAction& operator=(const MahjongAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongAction& default_instance();

  void Swap(MahjongAction* other);

  // implements Message ----------------------------------------------

  MahjongAction* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongAction& from);
  void MergeFrom(const MahjongAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional .msg.MahjongActionChoice Choice = 2;
  inline bool has_choice() const;
  inline void clear_choice();
  static const int kChoiceFieldNumber = 2;
  inline ::msg::MahjongActionChoice choice() const;
  inline void set_choice(::msg::MahjongActionChoice value);

  // optional int32 ScoreChange = 3;
  inline bool has_scorechange() const;
  inline void clear_scorechange();
  static const int kScoreChangeFieldNumber = 3;
  inline ::google_public::protobuf::int32 scorechange() const;
  inline void set_scorechange(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.MahjongAction)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_choice();
  inline void clear_has_choice();
  inline void set_has_scorechange();
  inline void clear_has_scorechange();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  int choice_;
  ::google_public::protobuf::int32 scorechange_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongAction* default_instance_;
};
// -------------------------------------------------------------------

class MahjongTestAllWinCardAndType : public ::google_public::protobuf::Message {
 public:
  MahjongTestAllWinCardAndType();
  virtual ~MahjongTestAllWinCardAndType();

  MahjongTestAllWinCardAndType(const MahjongTestAllWinCardAndType& from);

  inline MahjongTestAllWinCardAndType& operator=(const MahjongTestAllWinCardAndType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongTestAllWinCardAndType& default_instance();

  void Swap(MahjongTestAllWinCardAndType* other);

  // implements Message ----------------------------------------------

  MahjongTestAllWinCardAndType* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongTestAllWinCardAndType& from);
  void MergeFrom(const MahjongTestAllWinCardAndType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.MahjongSuit quemen = 1;
  inline bool has_quemen() const;
  inline void clear_quemen();
  static const int kQuemenFieldNumber = 1;
  inline ::msg::MahjongSuit quemen() const;
  inline void set_quemen(::msg::MahjongSuit value);

  // repeated .msg.MahjongWinCardAndType CardAndType = 2;
  inline int cardandtype_size() const;
  inline void clear_cardandtype();
  static const int kCardAndTypeFieldNumber = 2;
  inline const ::msg::MahjongWinCardAndType& cardandtype(int index) const;
  inline ::msg::MahjongWinCardAndType* mutable_cardandtype(int index);
  inline ::msg::MahjongWinCardAndType* add_cardandtype();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongWinCardAndType >&
      cardandtype() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongWinCardAndType >*
      mutable_cardandtype();

  // @@protoc_insertion_point(class_scope:msg.MahjongTestAllWinCardAndType)
 private:
  inline void set_has_quemen();
  inline void clear_has_quemen();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongWinCardAndType > cardandtype_;
  int quemen_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongTestAllWinCardAndType* default_instance_;
};
// -------------------------------------------------------------------

class MahjongWinCardAndType : public ::google_public::protobuf::Message {
 public:
  MahjongWinCardAndType();
  virtual ~MahjongWinCardAndType();

  MahjongWinCardAndType(const MahjongWinCardAndType& from);

  inline MahjongWinCardAndType& operator=(const MahjongWinCardAndType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongWinCardAndType& default_instance();

  void Swap(MahjongWinCardAndType* other);

  // implements Message ----------------------------------------------

  MahjongWinCardAndType* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongWinCardAndType& from);
  void MergeFrom(const MahjongWinCardAndType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.SiChuanMahjongWinType wintype = 1;
  inline int wintype_size() const;
  inline void clear_wintype();
  static const int kWintypeFieldNumber = 1;
  inline ::msg::SiChuanMahjongWinType wintype(int index) const;
  inline void set_wintype(int index, ::msg::SiChuanMahjongWinType value);
  inline void add_wintype(::msg::SiChuanMahjongWinType value);
  inline const ::google_public::protobuf::RepeatedField<int>& wintype() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_wintype();

  // repeated .msg.MahjongCard handCard = 2;
  inline int handcard_size() const;
  inline void clear_handcard();
  static const int kHandCardFieldNumber = 2;
  inline ::msg::MahjongCard handcard(int index) const;
  inline void set_handcard(int index, ::msg::MahjongCard value);
  inline void add_handcard(::msg::MahjongCard value);
  inline const ::google_public::protobuf::RepeatedField<int>& handcard() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_handcard();

  // repeated .msg.MahjongFu fuPai = 3;
  inline int fupai_size() const;
  inline void clear_fupai();
  static const int kFuPaiFieldNumber = 3;
  inline const ::msg::MahjongFu& fupai(int index) const;
  inline ::msg::MahjongFu* mutable_fupai(int index);
  inline ::msg::MahjongFu* add_fupai();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >&
      fupai() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >*
      mutable_fupai();

  // optional .msg.MahjongCard ziMoPai = 4;
  inline bool has_zimopai() const;
  inline void clear_zimopai();
  static const int kZiMoPaiFieldNumber = 4;
  inline ::msg::MahjongCard zimopai() const;
  inline void set_zimopai(::msg::MahjongCard value);

  // optional .msg.MahjongCard dianPaoPai = 5;
  inline bool has_dianpaopai() const;
  inline void clear_dianpaopai();
  static const int kDianPaoPaiFieldNumber = 5;
  inline ::msg::MahjongCard dianpaopai() const;
  inline void set_dianpaopai(::msg::MahjongCard value);

  // @@protoc_insertion_point(class_scope:msg.MahjongWinCardAndType)
 private:
  inline void set_has_zimopai();
  inline void clear_has_zimopai();
  inline void set_has_dianpaopai();
  inline void clear_has_dianpaopai();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedField<int> wintype_;
  ::google_public::protobuf::RepeatedField<int> handcard_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu > fupai_;
  int zimopai_;
  int dianpaopai_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongWinCardAndType* default_instance_;
};
// -------------------------------------------------------------------

class Processor_703_MahjongReceivePlayerAction : public ::google_public::protobuf::Message {
 public:
  Processor_703_MahjongReceivePlayerAction();
  virtual ~Processor_703_MahjongReceivePlayerAction();

  Processor_703_MahjongReceivePlayerAction(const Processor_703_MahjongReceivePlayerAction& from);

  inline Processor_703_MahjongReceivePlayerAction& operator=(const Processor_703_MahjongReceivePlayerAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_703_MahjongReceivePlayerAction& default_instance();

  void Swap(Processor_703_MahjongReceivePlayerAction* other);

  // implements Message ----------------------------------------------

  Processor_703_MahjongReceivePlayerAction* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_703_MahjongReceivePlayerAction& from);
  void MergeFrom(const Processor_703_MahjongReceivePlayerAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // repeated .msg.MahjongAction Action = 2;
  inline int action_size() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline const ::msg::MahjongAction& action(int index) const;
  inline ::msg::MahjongAction* mutable_action(int index);
  inline ::msg::MahjongAction* add_action();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongAction >&
      action() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongAction >*
      mutable_action();

  // optional .msg.MahjongCardSwitchType SwitchType = 3;
  inline bool has_switchtype() const;
  inline void clear_switchtype();
  static const int kSwitchTypeFieldNumber = 3;
  inline ::msg::MahjongCardSwitchType switchtype() const;
  inline void set_switchtype(::msg::MahjongCardSwitchType value);

  // @@protoc_insertion_point(class_scope:msg.Processor_703_MahjongReceivePlayerAction)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_switchtype();
  inline void clear_has_switchtype();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongAction > action_;
  ::google_public::protobuf::int32 roomid_;
  int switchtype_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_703_MahjongReceivePlayerAction* default_instance_;
};
// -------------------------------------------------------------------

class Processor_715_MahjongSendSetting : public ::google_public::protobuf::Message {
 public:
  Processor_715_MahjongSendSetting();
  virtual ~Processor_715_MahjongSendSetting();

  Processor_715_MahjongSendSetting(const Processor_715_MahjongSendSetting& from);

  inline Processor_715_MahjongSendSetting& operator=(const Processor_715_MahjongSendSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_715_MahjongSendSetting& default_instance();

  void Swap(Processor_715_MahjongSendSetting* other);

  // implements Message ----------------------------------------------

  Processor_715_MahjongSendSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_715_MahjongSendSetting& from);
  void MergeFrom(const Processor_715_MahjongSendSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.MahjongPlayerSetting Settings = 2;
  inline bool has_settings() const;
  inline void clear_settings();
  static const int kSettingsFieldNumber = 2;
  inline const ::msg::MahjongPlayerSetting& settings() const;
  inline ::msg::MahjongPlayerSetting* mutable_settings();
  inline ::msg::MahjongPlayerSetting* release_settings();
  inline void set_allocated_settings(::msg::MahjongPlayerSetting* settings);

  // @@protoc_insertion_point(class_scope:msg.Processor_715_MahjongSendSetting)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_settings();
  inline void clear_has_settings();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::MahjongPlayerSetting* settings_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_715_MahjongSendSetting* default_instance_;
};
// -------------------------------------------------------------------

class Processor_716_MahjongReceiveSettingChange : public ::google_public::protobuf::Message {
 public:
  Processor_716_MahjongReceiveSettingChange();
  virtual ~Processor_716_MahjongReceiveSettingChange();

  Processor_716_MahjongReceiveSettingChange(const Processor_716_MahjongReceiveSettingChange& from);

  inline Processor_716_MahjongReceiveSettingChange& operator=(const Processor_716_MahjongReceiveSettingChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_716_MahjongReceiveSettingChange& default_instance();

  void Swap(Processor_716_MahjongReceiveSettingChange* other);

  // implements Message ----------------------------------------------

  Processor_716_MahjongReceiveSettingChange* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_716_MahjongReceiveSettingChange& from);
  void MergeFrom(const Processor_716_MahjongReceiveSettingChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional .msg.MahjongPlayerSetting Settings = 2;
  inline bool has_settings() const;
  inline void clear_settings();
  static const int kSettingsFieldNumber = 2;
  inline const ::msg::MahjongPlayerSetting& settings() const;
  inline ::msg::MahjongPlayerSetting* mutable_settings();
  inline ::msg::MahjongPlayerSetting* release_settings();
  inline void set_allocated_settings(::msg::MahjongPlayerSetting* settings);

  // @@protoc_insertion_point(class_scope:msg.Processor_716_MahjongReceiveSettingChange)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_settings();
  inline void clear_has_settings();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::MahjongPlayerSetting* settings_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_716_MahjongReceiveSettingChange* default_instance_;
};
// -------------------------------------------------------------------

class Processor_300_PokerGetHandHistory_UP : public ::google_public::protobuf::Message {
 public:
  Processor_300_PokerGetHandHistory_UP();
  virtual ~Processor_300_PokerGetHandHistory_UP();

  Processor_300_PokerGetHandHistory_UP(const Processor_300_PokerGetHandHistory_UP& from);

  inline Processor_300_PokerGetHandHistory_UP& operator=(const Processor_300_PokerGetHandHistory_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_300_PokerGetHandHistory_UP& default_instance();

  void Swap(Processor_300_PokerGetHandHistory_UP* other);

  // implements Message ----------------------------------------------

  Processor_300_PokerGetHandHistory_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_300_PokerGetHandHistory_UP& from);
  void MergeFrom(const Processor_300_PokerGetHandHistory_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 HandId = 1;
  inline bool has_handid() const;
  inline void clear_handid();
  static const int kHandIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 handid() const;
  inline void set_handid(::google_public::protobuf::int32 value);

  // optional bool isPoker = 2;
  inline bool has_ispoker() const;
  inline void clear_ispoker();
  static const int kIsPokerFieldNumber = 2;
  inline bool ispoker() const;
  inline void set_ispoker(bool value);

  // @@protoc_insertion_point(class_scope:msg.Processor_300_PokerGetHandHistory_UP)
 private:
  inline void set_has_handid();
  inline void clear_has_handid();
  inline void set_has_ispoker();
  inline void clear_has_ispoker();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 handid_;
  bool ispoker_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_300_PokerGetHandHistory_UP* default_instance_;
};
// -------------------------------------------------------------------

class PokerStep : public ::google_public::protobuf::Message {
 public:
  PokerStep();
  virtual ~PokerStep();

  PokerStep(const PokerStep& from);

  inline PokerStep& operator=(const PokerStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PokerStep& default_instance();

  void Swap(PokerStep* other);

  // implements Message ----------------------------------------------

  PokerStep* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PokerStep& from);
  void MergeFrom(const PokerStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.PokerStepType Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::msg::PokerStepType type() const;
  inline void set_type(::msg::PokerStepType value);

  // optional string Text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // optional .msg.PokerRoundType Round = 3;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 3;
  inline ::msg::PokerRoundType round() const;
  inline void set_round(::msg::PokerRoundType value);

  // optional .msg.PokerPlayerActionInfo PlayerAction = 4;
  inline bool has_playeraction() const;
  inline void clear_playeraction();
  static const int kPlayerActionFieldNumber = 4;
  inline const ::msg::PokerPlayerActionInfo& playeraction() const;
  inline ::msg::PokerPlayerActionInfo* mutable_playeraction();
  inline ::msg::PokerPlayerActionInfo* release_playeraction();
  inline void set_allocated_playeraction(::msg::PokerPlayerActionInfo* playeraction);

  // optional .msg.TableInfo CommunityChange = 5;
  inline bool has_communitychange() const;
  inline void clear_communitychange();
  static const int kCommunityChangeFieldNumber = 5;
  inline const ::msg::TableInfo& communitychange() const;
  inline ::msg::TableInfo* mutable_communitychange();
  inline ::msg::TableInfo* release_communitychange();
  inline void set_allocated_communitychange(::msg::TableInfo* communitychange);

  // optional .msg.PokerBlinds Blinds = 6;
  inline bool has_blinds() const;
  inline void clear_blinds();
  static const int kBlindsFieldNumber = 6;
  inline const ::msg::PokerBlinds& blinds() const;
  inline ::msg::PokerBlinds* mutable_blinds();
  inline ::msg::PokerBlinds* release_blinds();
  inline void set_allocated_blinds(::msg::PokerBlinds* blinds);

  // @@protoc_insertion_point(class_scope:msg.PokerStep)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_round();
  inline void clear_has_round();
  inline void set_has_playeraction();
  inline void clear_has_playeraction();
  inline void set_has_communitychange();
  inline void clear_has_communitychange();
  inline void set_has_blinds();
  inline void clear_has_blinds();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* text_;
  int type_;
  int round_;
  ::msg::PokerPlayerActionInfo* playeraction_;
  ::msg::TableInfo* communitychange_;
  ::msg::PokerBlinds* blinds_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PokerStep* default_instance_;
};
// -------------------------------------------------------------------

class PokerBlinds : public ::google_public::protobuf::Message {
 public:
  PokerBlinds();
  virtual ~PokerBlinds();

  PokerBlinds(const PokerBlinds& from);

  inline PokerBlinds& operator=(const PokerBlinds& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PokerBlinds& default_instance();

  void Swap(PokerBlinds* other);

  // implements Message ----------------------------------------------

  PokerBlinds* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PokerBlinds& from);
  void MergeFrom(const PokerBlinds& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.PokerBlind Blind = 1;
  inline int blind_size() const;
  inline void clear_blind();
  static const int kBlindFieldNumber = 1;
  inline const ::msg::PokerBlind& blind(int index) const;
  inline ::msg::PokerBlind* mutable_blind(int index);
  inline ::msg::PokerBlind* add_blind();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PokerBlind >&
      blind() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::PokerBlind >*
      mutable_blind();

  // @@protoc_insertion_point(class_scope:msg.PokerBlinds)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::PokerBlind > blind_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PokerBlinds* default_instance_;
};
// -------------------------------------------------------------------

class PokerBlind : public ::google_public::protobuf::Message {
 public:
  PokerBlind();
  virtual ~PokerBlind();

  PokerBlind(const PokerBlind& from);

  inline PokerBlind& operator=(const PokerBlind& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PokerBlind& default_instance();

  void Swap(PokerBlind* other);

  // implements Message ----------------------------------------------

  PokerBlind* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PokerBlind& from);
  void MergeFrom(const PokerBlind& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional .msg.BlindType Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::msg::BlindType type() const;
  inline void set_type(::msg::BlindType value);

  // optional int32 Amount = 3;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 3;
  inline ::google_public::protobuf::int32 amount() const;
  inline void set_amount(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.PokerBlind)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  int type_;
  ::google_public::protobuf::int32 amount_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PokerBlind* default_instance_;
};
// -------------------------------------------------------------------

class PokerPlayerActionInfo : public ::google_public::protobuf::Message {
 public:
  PokerPlayerActionInfo();
  virtual ~PokerPlayerActionInfo();

  PokerPlayerActionInfo(const PokerPlayerActionInfo& from);

  inline PokerPlayerActionInfo& operator=(const PokerPlayerActionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const PokerPlayerActionInfo& default_instance();

  void Swap(PokerPlayerActionInfo* other);

  // implements Message ----------------------------------------------

  PokerPlayerActionInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const PokerPlayerActionInfo& from);
  void MergeFrom(const PokerPlayerActionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional .msg.ActionStatus Action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::msg::ActionStatus action() const;
  inline void set_action(::msg::ActionStatus value);

  // optional int32 Amount = 3;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 3;
  inline ::google_public::protobuf::int32 amount() const;
  inline void set_amount(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.PokerPlayerActionInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  int action_;
  ::google_public::protobuf::int32 amount_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static PokerPlayerActionInfo* default_instance_;
};
// -------------------------------------------------------------------

class OFCStep : public ::google_public::protobuf::Message {
 public:
  OFCStep();
  virtual ~OFCStep();

  OFCStep(const OFCStep& from);

  inline OFCStep& operator=(const OFCStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OFCStep& default_instance();

  void Swap(OFCStep* other);

  // implements Message ----------------------------------------------

  OFCStep* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OFCStep& from);
  void MergeFrom(const OFCStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.OFCStepType Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::msg::OFCStepType type() const;
  inline void set_type(::msg::OFCStepType value);

  // optional .msg.OFCPlayerActionInfo Action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline const ::msg::OFCPlayerActionInfo& action() const;
  inline ::msg::OFCPlayerActionInfo* mutable_action();
  inline ::msg::OFCPlayerActionInfo* release_action();
  inline void set_allocated_action(::msg::OFCPlayerActionInfo* action);

  // @@protoc_insertion_point(class_scope:msg.OFCStep)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_action();
  inline void clear_has_action();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::OFCPlayerActionInfo* action_;
  int type_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OFCStep* default_instance_;
};
// -------------------------------------------------------------------

class OFCPlayerActionInfo : public ::google_public::protobuf::Message {
 public:
  OFCPlayerActionInfo();
  virtual ~OFCPlayerActionInfo();

  OFCPlayerActionInfo(const OFCPlayerActionInfo& from);

  inline OFCPlayerActionInfo& operator=(const OFCPlayerActionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OFCPlayerActionInfo& default_instance();

  void Swap(OFCPlayerActionInfo* other);

  // implements Message ----------------------------------------------

  OFCPlayerActionInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OFCPlayerActionInfo& from);
  void MergeFrom(const OFCPlayerActionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // repeated .msg.OFCPlayerCard PlayerCard = 2;
  inline int playercard_size() const;
  inline void clear_playercard();
  static const int kPlayerCardFieldNumber = 2;
  inline const ::msg::OFCPlayerCard& playercard(int index) const;
  inline ::msg::OFCPlayerCard* mutable_playercard(int index);
  inline ::msg::OFCPlayerCard* add_playercard();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard >&
      playercard() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard >*
      mutable_playercard();

  // @@protoc_insertion_point(class_scope:msg.OFCPlayerActionInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard > playercard_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OFCPlayerActionInfo* default_instance_;
};
// -------------------------------------------------------------------

class MahjongStep : public ::google_public::protobuf::Message {
 public:
  MahjongStep();
  virtual ~MahjongStep();

  MahjongStep(const MahjongStep& from);

  inline MahjongStep& operator=(const MahjongStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const MahjongStep& default_instance();

  void Swap(MahjongStep* other);

  // implements Message ----------------------------------------------

  MahjongStep* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const MahjongStep& from);
  void MergeFrom(const MahjongStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.MahjongRequestType Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::msg::MahjongRequestType type() const;
  inline void set_type(::msg::MahjongRequestType value);

  // optional .msg.MahjongActionChoice ActionType = 2;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 2;
  inline ::msg::MahjongActionChoice actiontype() const;
  inline void set_actiontype(::msg::MahjongActionChoice value);

  // optional .msg.MahjongCard Card = 3;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 3;
  inline ::msg::MahjongCard card() const;
  inline void set_card(::msg::MahjongCard value);

  // optional int32 UserID = 4;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 4;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // repeated .msg.MahjongCard SwitchCard = 5;
  inline int switchcard_size() const;
  inline void clear_switchcard();
  static const int kSwitchCardFieldNumber = 5;
  inline ::msg::MahjongCard switchcard(int index) const;
  inline void set_switchcard(int index, ::msg::MahjongCard value);
  inline void add_switchcard(::msg::MahjongCard value);
  inline const ::google_public::protobuf::RepeatedField<int>& switchcard() const;
  inline ::google_public::protobuf::RepeatedField<int>* mutable_switchcard();

  // optional .msg.MahjongSuit Suit = 6;
  inline bool has_suit() const;
  inline void clear_suit();
  static const int kSuitFieldNumber = 6;
  inline ::msg::MahjongSuit suit() const;
  inline void set_suit(::msg::MahjongSuit value);

  // @@protoc_insertion_point(class_scope:msg.MahjongStep)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_actiontype();
  inline void clear_has_actiontype();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_suit();
  inline void clear_has_suit();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  int actiontype_;
  int card_;
  ::google_public::protobuf::int32 userid_;
  ::google_public::protobuf::RepeatedField<int> switchcard_;
  int suit_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MahjongStep* default_instance_;
};
// -------------------------------------------------------------------

class ReplayStep : public ::google_public::protobuf::Message {
 public:
  ReplayStep();
  virtual ~ReplayStep();

  ReplayStep(const ReplayStep& from);

  inline ReplayStep& operator=(const ReplayStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ReplayStep& default_instance();

  void Swap(ReplayStep* other);

  // implements Message ----------------------------------------------

  ReplayStep* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ReplayStep& from);
  void MergeFrom(const ReplayStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 StepId = 1;
  inline bool has_stepid() const;
  inline void clear_stepid();
  static const int kStepIdFieldNumber = 1;
  inline ::google_public::protobuf::int32 stepid() const;
  inline void set_stepid(::google_public::protobuf::int32 value);

  // optional .msg.TableAndUserUpdate PropUpdate = 2;
  inline bool has_propupdate() const;
  inline void clear_propupdate();
  static const int kPropUpdateFieldNumber = 2;
  inline const ::msg::TableAndUserUpdate& propupdate() const;
  inline ::msg::TableAndUserUpdate* mutable_propupdate();
  inline ::msg::TableAndUserUpdate* release_propupdate();
  inline void set_allocated_propupdate(::msg::TableAndUserUpdate* propupdate);

  // optional .msg.OFCPropUpdate OFCPropUpdate = 3;
  inline bool has_ofcpropupdate() const;
  inline void clear_ofcpropupdate();
  static const int kOFCPropUpdateFieldNumber = 3;
  inline const ::msg::OFCPropUpdate& ofcpropupdate() const;
  inline ::msg::OFCPropUpdate* mutable_ofcpropupdate();
  inline ::msg::OFCPropUpdate* release_ofcpropupdate();
  inline void set_allocated_ofcpropupdate(::msg::OFCPropUpdate* ofcpropupdate);

  // optional .msg.PokerStep PokerStep = 4;
  inline bool has_pokerstep() const;
  inline void clear_pokerstep();
  static const int kPokerStepFieldNumber = 4;
  inline const ::msg::PokerStep& pokerstep() const;
  inline ::msg::PokerStep* mutable_pokerstep();
  inline ::msg::PokerStep* release_pokerstep();
  inline void set_allocated_pokerstep(::msg::PokerStep* pokerstep);

  // optional .msg.OFCStep OFCStep = 5;
  inline bool has_ofcstep() const;
  inline void clear_ofcstep();
  static const int kOFCStepFieldNumber = 5;
  inline const ::msg::OFCStep& ofcstep() const;
  inline ::msg::OFCStep* mutable_ofcstep();
  inline ::msg::OFCStep* release_ofcstep();
  inline void set_allocated_ofcstep(::msg::OFCStep* ofcstep);

  // optional .msg.MahjongPropUpdate MahjongUpdate = 6;
  inline bool has_mahjongupdate() const;
  inline void clear_mahjongupdate();
  static const int kMahjongUpdateFieldNumber = 6;
  inline const ::msg::MahjongPropUpdate& mahjongupdate() const;
  inline ::msg::MahjongPropUpdate* mutable_mahjongupdate();
  inline ::msg::MahjongPropUpdate* release_mahjongupdate();
  inline void set_allocated_mahjongupdate(::msg::MahjongPropUpdate* mahjongupdate);

  // optional .msg.MahjongStep MahjongStep = 7;
  inline bool has_mahjongstep() const;
  inline void clear_mahjongstep();
  static const int kMahjongStepFieldNumber = 7;
  inline const ::msg::MahjongStep& mahjongstep() const;
  inline ::msg::MahjongStep* mutable_mahjongstep();
  inline ::msg::MahjongStep* release_mahjongstep();
  inline void set_allocated_mahjongstep(::msg::MahjongStep* mahjongstep);

  // @@protoc_insertion_point(class_scope:msg.ReplayStep)
 private:
  inline void set_has_stepid();
  inline void clear_has_stepid();
  inline void set_has_propupdate();
  inline void clear_has_propupdate();
  inline void set_has_ofcpropupdate();
  inline void clear_has_ofcpropupdate();
  inline void set_has_pokerstep();
  inline void clear_has_pokerstep();
  inline void set_has_ofcstep();
  inline void clear_has_ofcstep();
  inline void set_has_mahjongupdate();
  inline void clear_has_mahjongupdate();
  inline void set_has_mahjongstep();
  inline void clear_has_mahjongstep();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::TableAndUserUpdate* propupdate_;
  ::msg::OFCPropUpdate* ofcpropupdate_;
  ::msg::PokerStep* pokerstep_;
  ::msg::OFCStep* ofcstep_;
  ::msg::MahjongPropUpdate* mahjongupdate_;
  ::msg::MahjongStep* mahjongstep_;
  ::google_public::protobuf::int32 stepid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ReplayStep* default_instance_;
};
// -------------------------------------------------------------------

class ReplaySteps : public ::google_public::protobuf::Message {
 public:
  ReplaySteps();
  virtual ~ReplaySteps();

  ReplaySteps(const ReplaySteps& from);

  inline ReplaySteps& operator=(const ReplaySteps& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ReplaySteps& default_instance();

  void Swap(ReplaySteps* other);

  // implements Message ----------------------------------------------

  ReplaySteps* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ReplaySteps& from);
  void MergeFrom(const ReplaySteps& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.ReplayStep ReplayStep = 1;
  inline int replaystep_size() const;
  inline void clear_replaystep();
  static const int kReplayStepFieldNumber = 1;
  inline const ::msg::ReplayStep& replaystep(int index) const;
  inline ::msg::ReplayStep* mutable_replaystep(int index);
  inline ::msg::ReplayStep* add_replaystep();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayStep >&
      replaystep() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayStep >*
      mutable_replaystep();

  // @@protoc_insertion_point(class_scope:msg.ReplaySteps)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayStep > replaystep_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ReplaySteps* default_instance_;
};
// -------------------------------------------------------------------

class ReplayPlayers : public ::google_public::protobuf::Message {
 public:
  ReplayPlayers();
  virtual ~ReplayPlayers();

  ReplayPlayers(const ReplayPlayers& from);

  inline ReplayPlayers& operator=(const ReplayPlayers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ReplayPlayers& default_instance();

  void Swap(ReplayPlayers* other);

  // implements Message ----------------------------------------------

  ReplayPlayers* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ReplayPlayers& from);
  void MergeFrom(const ReplayPlayers& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.ReplayPlayer ReplayPlayer = 1;
  inline int replayplayer_size() const;
  inline void clear_replayplayer();
  static const int kReplayPlayerFieldNumber = 1;
  inline const ::msg::ReplayPlayer& replayplayer(int index) const;
  inline ::msg::ReplayPlayer* mutable_replayplayer(int index);
  inline ::msg::ReplayPlayer* add_replayplayer();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayPlayer >&
      replayplayer() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayPlayer >*
      mutable_replayplayer();

  // @@protoc_insertion_point(class_scope:msg.ReplayPlayers)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayPlayer > replayplayer_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ReplayPlayers* default_instance_;
};
// -------------------------------------------------------------------

class ReplayPlayer : public ::google_public::protobuf::Message {
 public:
  ReplayPlayer();
  virtual ~ReplayPlayer();

  ReplayPlayer(const ReplayPlayer& from);

  inline ReplayPlayer& operator=(const ReplayPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ReplayPlayer& default_instance();

  void Swap(ReplayPlayer* other);

  // implements Message ----------------------------------------------

  ReplayPlayer* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ReplayPlayer& from);
  void MergeFrom(const ReplayPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo UserDetailInfo = 1;
  inline bool has_userdetailinfo() const;
  inline void clear_userdetailinfo();
  static const int kUserDetailInfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userdetailinfo() const;
  inline ::msg::UserDetailInfo* mutable_userdetailinfo();
  inline ::msg::UserDetailInfo* release_userdetailinfo();
  inline void set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo);

  // optional int32 SitNum = 2;
  inline bool has_sitnum() const;
  inline void clear_sitnum();
  static const int kSitNumFieldNumber = 2;
  inline ::google_public::protobuf::int32 sitnum() const;
  inline void set_sitnum(::google_public::protobuf::int32 value);

  // repeated bool IsVisible = 3;
  inline int isvisible_size() const;
  inline void clear_isvisible();
  static const int kIsVisibleFieldNumber = 3;
  inline bool isvisible(int index) const;
  inline void set_isvisible(int index, bool value);
  inline void add_isvisible(bool value);
  inline const ::google_public::protobuf::RepeatedField< bool >&
      isvisible() const;
  inline ::google_public::protobuf::RepeatedField< bool >*
      mutable_isvisible();

  // @@protoc_insertion_point(class_scope:msg.ReplayPlayer)
 private:
  inline void set_has_userdetailinfo();
  inline void clear_has_userdetailinfo();
  inline void set_has_sitnum();
  inline void clear_has_sitnum();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userdetailinfo_;
  ::google_public::protobuf::RepeatedField< bool > isvisible_;
  ::google_public::protobuf::int32 sitnum_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ReplayPlayer* default_instance_;
};
// -------------------------------------------------------------------

class HandBaseInfo : public ::google_public::protobuf::Message {
 public:
  HandBaseInfo();
  virtual ~HandBaseInfo();

  HandBaseInfo(const HandBaseInfo& from);

  inline HandBaseInfo& operator=(const HandBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const HandBaseInfo& default_instance();

  void Swap(HandBaseInfo* other);

  // implements Message ----------------------------------------------

  HandBaseInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const HandBaseInfo& from);
  void MergeFrom(const HandBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string RoomName = 1;
  inline bool has_roomname() const;
  inline void clear_roomname();
  static const int kRoomNameFieldNumber = 1;
  inline const ::std::string& roomname() const;
  inline void set_roomname(const ::std::string& value);
  inline void set_roomname(const char* value);
  inline void set_roomname(const char* value, size_t size);
  inline ::std::string* mutable_roomname();
  inline ::std::string* release_roomname();
  inline void set_allocated_roomname(::std::string* roomname);

  // optional int32 TotalSeatNum = 2;
  inline bool has_totalseatnum() const;
  inline void clear_totalseatnum();
  static const int kTotalSeatNumFieldNumber = 2;
  inline ::google_public::protobuf::int32 totalseatnum() const;
  inline void set_totalseatnum(::google_public::protobuf::int32 value);

  // optional string TableRemark = 3;
  inline bool has_tableremark() const;
  inline void clear_tableremark();
  static const int kTableRemarkFieldNumber = 3;
  inline const ::std::string& tableremark() const;
  inline void set_tableremark(const ::std::string& value);
  inline void set_tableremark(const char* value);
  inline void set_tableremark(const char* value, size_t size);
  inline ::std::string* mutable_tableremark();
  inline ::std::string* release_tableremark();
  inline void set_allocated_tableremark(::std::string* tableremark);

  // optional string HandTxt = 4;
  inline bool has_handtxt() const;
  inline void clear_handtxt();
  static const int kHandTxtFieldNumber = 4;
  inline const ::std::string& handtxt() const;
  inline void set_handtxt(const ::std::string& value);
  inline void set_handtxt(const char* value);
  inline void set_handtxt(const char* value, size_t size);
  inline ::std::string* mutable_handtxt();
  inline ::std::string* release_handtxt();
  inline void set_allocated_handtxt(::std::string* handtxt);

  // optional int32 DealerPos = 5;
  inline bool has_dealerpos() const;
  inline void clear_dealerpos();
  static const int kDealerPosFieldNumber = 5;
  inline ::google_public::protobuf::int32 dealerpos() const;
  inline void set_dealerpos(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.HandBaseInfo)
 private:
  inline void set_has_roomname();
  inline void clear_has_roomname();
  inline void set_has_totalseatnum();
  inline void clear_has_totalseatnum();
  inline void set_has_tableremark();
  inline void clear_has_tableremark();
  inline void set_has_handtxt();
  inline void clear_has_handtxt();
  inline void set_has_dealerpos();
  inline void clear_has_dealerpos();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* roomname_;
  ::std::string* tableremark_;
  ::google_public::protobuf::int32 totalseatnum_;
  ::google_public::protobuf::int32 dealerpos_;
  ::std::string* handtxt_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static HandBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_300_PokerGetHandHistory_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_300_PokerGetHandHistory_DOWN();
  virtual ~Processor_300_PokerGetHandHistory_DOWN();

  Processor_300_PokerGetHandHistory_DOWN(const Processor_300_PokerGetHandHistory_DOWN& from);

  inline Processor_300_PokerGetHandHistory_DOWN& operator=(const Processor_300_PokerGetHandHistory_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_300_PokerGetHandHistory_DOWN& default_instance();

  void Swap(Processor_300_PokerGetHandHistory_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_300_PokerGetHandHistory_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_300_PokerGetHandHistory_DOWN& from);
  void MergeFrom(const Processor_300_PokerGetHandHistory_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Response Response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::msg::Response& response() const;
  inline ::msg::Response* mutable_response();
  inline ::msg::Response* release_response();
  inline void set_allocated_response(::msg::Response* response);

  // optional int32 HandId = 2;
  inline bool has_handid() const;
  inline void clear_handid();
  static const int kHandIdFieldNumber = 2;
  inline ::google_public::protobuf::int32 handid() const;
  inline void set_handid(::google_public::protobuf::int32 value);

  // optional .msg.HandType HandType = 3;
  inline bool has_handtype() const;
  inline void clear_handtype();
  static const int kHandTypeFieldNumber = 3;
  inline ::msg::HandType handtype() const;
  inline void set_handtype(::msg::HandType value);

  // optional .msg.HandBaseInfo BaseInfo = 4;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 4;
  inline const ::msg::HandBaseInfo& baseinfo() const;
  inline ::msg::HandBaseInfo* mutable_baseinfo();
  inline ::msg::HandBaseInfo* release_baseinfo();
  inline void set_allocated_baseinfo(::msg::HandBaseInfo* baseinfo);

  // optional .msg.ReplayPlayers Players = 5;
  inline bool has_players() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 5;
  inline const ::msg::ReplayPlayers& players() const;
  inline ::msg::ReplayPlayers* mutable_players();
  inline ::msg::ReplayPlayers* release_players();
  inline void set_allocated_players(::msg::ReplayPlayers* players);

  // optional .msg.ReplaySteps Steps = 6;
  inline bool has_steps() const;
  inline void clear_steps();
  static const int kStepsFieldNumber = 6;
  inline const ::msg::ReplaySteps& steps() const;
  inline ::msg::ReplaySteps* mutable_steps();
  inline ::msg::ReplaySteps* release_steps();
  inline void set_allocated_steps(::msg::ReplaySteps* steps);

  // optional .msg.HandResultInfo HandResultInfo = 7;
  inline bool has_handresultinfo() const;
  inline void clear_handresultinfo();
  static const int kHandResultInfoFieldNumber = 7;
  inline const ::msg::HandResultInfo& handresultinfo() const;
  inline ::msg::HandResultInfo* mutable_handresultinfo();
  inline ::msg::HandResultInfo* release_handresultinfo();
  inline void set_allocated_handresultinfo(::msg::HandResultInfo* handresultinfo);

  // optional .msg.OFCResult OFCResult = 8;
  inline bool has_ofcresult() const;
  inline void clear_ofcresult();
  static const int kOFCResultFieldNumber = 8;
  inline const ::msg::OFCResult& ofcresult() const;
  inline ::msg::OFCResult* mutable_ofcresult();
  inline ::msg::OFCResult* release_ofcresult();
  inline void set_allocated_ofcresult(::msg::OFCResult* ofcresult);

  // @@protoc_insertion_point(class_scope:msg.Processor_300_PokerGetHandHistory_DOWN)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_handid();
  inline void clear_has_handid();
  inline void set_has_handtype();
  inline void clear_has_handtype();
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();
  inline void set_has_players();
  inline void clear_has_players();
  inline void set_has_steps();
  inline void clear_has_steps();
  inline void set_has_handresultinfo();
  inline void clear_has_handresultinfo();
  inline void set_has_ofcresult();
  inline void clear_has_ofcresult();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Response* response_;
  ::google_public::protobuf::int32 handid_;
  int handtype_;
  ::msg::HandBaseInfo* baseinfo_;
  ::msg::ReplayPlayers* players_;
  ::msg::ReplaySteps* steps_;
  ::msg::HandResultInfo* handresultinfo_;
  ::msg::OFCResult* ofcresult_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_300_PokerGetHandHistory_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1000_RegisterServer_OtherToCore : public ::google_public::protobuf::Message {
 public:
  Processor_1000_RegisterServer_OtherToCore();
  virtual ~Processor_1000_RegisterServer_OtherToCore();

  Processor_1000_RegisterServer_OtherToCore(const Processor_1000_RegisterServer_OtherToCore& from);

  inline Processor_1000_RegisterServer_OtherToCore& operator=(const Processor_1000_RegisterServer_OtherToCore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1000_RegisterServer_OtherToCore& default_instance();

  void Swap(Processor_1000_RegisterServer_OtherToCore* other);

  // implements Message ----------------------------------------------

  Processor_1000_RegisterServer_OtherToCore* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1000_RegisterServer_OtherToCore& from);
  void MergeFrom(const Processor_1000_RegisterServer_OtherToCore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.ServerType Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::msg::ServerType type() const;
  inline void set_type(::msg::ServerType value);

  // optional string IP = 2;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIPFieldNumber = 2;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 ServerPort = 3;
  inline bool has_serverport() const;
  inline void clear_serverport();
  static const int kServerPortFieldNumber = 3;
  inline ::google_public::protobuf::int32 serverport() const;
  inline void set_serverport(::google_public::protobuf::int32 value);

  // optional int32 ClientPort = 4;
  inline bool has_clientport() const;
  inline void clear_clientport();
  static const int kClientPortFieldNumber = 4;
  inline ::google_public::protobuf::int32 clientport() const;
  inline void set_clientport(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1000_RegisterServer_OtherToCore)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_serverport();
  inline void clear_has_serverport();
  inline void set_has_clientport();
  inline void clear_has_clientport();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* ip_;
  int type_;
  ::google_public::protobuf::int32 serverport_;
  ::google_public::protobuf::int32 clientport_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1000_RegisterServer_OtherToCore* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1000_RegisterServer_CoreToOther : public ::google_public::protobuf::Message {
 public:
  Processor_1000_RegisterServer_CoreToOther();
  virtual ~Processor_1000_RegisterServer_CoreToOther();

  Processor_1000_RegisterServer_CoreToOther(const Processor_1000_RegisterServer_CoreToOther& from);

  inline Processor_1000_RegisterServer_CoreToOther& operator=(const Processor_1000_RegisterServer_CoreToOther& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1000_RegisterServer_CoreToOther& default_instance();

  void Swap(Processor_1000_RegisterServer_CoreToOther* other);

  // implements Message ----------------------------------------------

  Processor_1000_RegisterServer_CoreToOther* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1000_RegisterServer_CoreToOther& from);
  void MergeFrom(const Processor_1000_RegisterServer_CoreToOther& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 NewServerID = 1;
  inline bool has_newserverid() const;
  inline void clear_newserverid();
  static const int kNewServerIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 newserverid() const;
  inline void set_newserverid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1000_RegisterServer_CoreToOther)
 private:
  inline void set_has_newserverid();
  inline void clear_has_newserverid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 newserverid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1000_RegisterServer_CoreToOther* default_instance_;
};
// -------------------------------------------------------------------

class ServerInfo : public ::google_public::protobuf::Message {
 public:
  ServerInfo();
  virtual ~ServerInfo();

  ServerInfo(const ServerInfo& from);

  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ServerInfo& default_instance();

  void Swap(ServerInfo* other);

  // implements Message ----------------------------------------------

  ServerInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string IP = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIPFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 Port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google_public::protobuf::int32 port() const;
  inline void set_port(::google_public::protobuf::int32 value);

  // optional string IPv6 = 3;
  inline bool has_ipv6() const;
  inline void clear_ipv6();
  static const int kIPv6FieldNumber = 3;
  inline const ::std::string& ipv6() const;
  inline void set_ipv6(const ::std::string& value);
  inline void set_ipv6(const char* value);
  inline void set_ipv6(const char* value, size_t size);
  inline ::std::string* mutable_ipv6();
  inline ::std::string* release_ipv6();
  inline void set_allocated_ipv6(::std::string* ipv6);

  // @@protoc_insertion_point(class_scope:msg.ServerInfo)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_ipv6();
  inline void clear_has_ipv6();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* ip_;
  ::std::string* ipv6_;
  ::google_public::protobuf::int32 port_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class ServerInfos : public ::google_public::protobuf::Message {
 public:
  ServerInfos();
  virtual ~ServerInfos();

  ServerInfos(const ServerInfos& from);

  inline ServerInfos& operator=(const ServerInfos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ServerInfos& default_instance();

  void Swap(ServerInfos* other);

  // implements Message ----------------------------------------------

  ServerInfos* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ServerInfos& from);
  void MergeFrom(const ServerInfos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.ServerInfo ServerInfo = 1;
  inline int serverinfo_size() const;
  inline void clear_serverinfo();
  static const int kServerInfoFieldNumber = 1;
  inline const ::msg::ServerInfo& serverinfo(int index) const;
  inline ::msg::ServerInfo* mutable_serverinfo(int index);
  inline ::msg::ServerInfo* add_serverinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ServerInfo >&
      serverinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::ServerInfo >*
      mutable_serverinfo();

  // @@protoc_insertion_point(class_scope:msg.ServerInfos)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::ServerInfo > serverinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ServerInfos* default_instance_;
};
// -------------------------------------------------------------------

class Processor_HTMLRegister : public ::google_public::protobuf::Message {
 public:
  Processor_HTMLRegister();
  virtual ~Processor_HTMLRegister();

  Processor_HTMLRegister(const Processor_HTMLRegister& from);

  inline Processor_HTMLRegister& operator=(const Processor_HTMLRegister& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_HTMLRegister& default_instance();

  void Swap(Processor_HTMLRegister* other);

  // implements Message ----------------------------------------------

  Processor_HTMLRegister* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_HTMLRegister& from);
  void MergeFrom(const Processor_HTMLRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserLoginInfo LoginInfo = 1;
  inline bool has_logininfo() const;
  inline void clear_logininfo();
  static const int kLoginInfoFieldNumber = 1;
  inline const ::msg::UserLoginInfo& logininfo() const;
  inline ::msg::UserLoginInfo* mutable_logininfo();
  inline ::msg::UserLoginInfo* release_logininfo();
  inline void set_allocated_logininfo(::msg::UserLoginInfo* logininfo);

  // optional int32 RefereeUserID = 2;
  inline bool has_refereeuserid() const;
  inline void clear_refereeuserid();
  static const int kRefereeUserIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 refereeuserid() const;
  inline void set_refereeuserid(::google_public::protobuf::int32 value);

  // optional int32 RefereeGroupID = 3;
  inline bool has_refereegroupid() const;
  inline void clear_refereegroupid();
  static const int kRefereeGroupIDFieldNumber = 3;
  inline ::google_public::protobuf::int32 refereegroupid() const;
  inline void set_refereegroupid(::google_public::protobuf::int32 value);

  // optional int32 RefereeRoomID = 4;
  inline bool has_refereeroomid() const;
  inline void clear_refereeroomid();
  static const int kRefereeRoomIDFieldNumber = 4;
  inline ::google_public::protobuf::int32 refereeroomid() const;
  inline void set_refereeroomid(::google_public::protobuf::int32 value);

  // optional string PhoneNumber = 5;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhoneNumberFieldNumber = 5;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string Verification = 6;
  inline bool has_verification() const;
  inline void clear_verification();
  static const int kVerificationFieldNumber = 6;
  inline const ::std::string& verification() const;
  inline void set_verification(const ::std::string& value);
  inline void set_verification(const char* value);
  inline void set_verification(const char* value, size_t size);
  inline ::std::string* mutable_verification();
  inline ::std::string* release_verification();
  inline void set_allocated_verification(::std::string* verification);

  // @@protoc_insertion_point(class_scope:msg.Processor_HTMLRegister)
 private:
  inline void set_has_logininfo();
  inline void clear_has_logininfo();
  inline void set_has_refereeuserid();
  inline void clear_has_refereeuserid();
  inline void set_has_refereegroupid();
  inline void clear_has_refereegroupid();
  inline void set_has_refereeroomid();
  inline void clear_has_refereeroomid();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_verification();
  inline void clear_has_verification();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserLoginInfo* logininfo_;
  ::google_public::protobuf::int32 refereeuserid_;
  ::google_public::protobuf::int32 refereegroupid_;
  ::std::string* phonenumber_;
  ::std::string* verification_;
  ::google_public::protobuf::int32 refereeroomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_HTMLRegister* default_instance_;
};
// -------------------------------------------------------------------

class Processor_HTMLRegisterEnterRoom : public ::google_public::protobuf::Message {
 public:
  Processor_HTMLRegisterEnterRoom();
  virtual ~Processor_HTMLRegisterEnterRoom();

  Processor_HTMLRegisterEnterRoom(const Processor_HTMLRegisterEnterRoom& from);

  inline Processor_HTMLRegisterEnterRoom& operator=(const Processor_HTMLRegisterEnterRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_HTMLRegisterEnterRoom& default_instance();

  void Swap(Processor_HTMLRegisterEnterRoom* other);

  // implements Message ----------------------------------------------

  Processor_HTMLRegisterEnterRoom* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_HTMLRegisterEnterRoom& from);
  void MergeFrom(const Processor_HTMLRegisterEnterRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // optional int32 RoomID = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_HTMLRegisterEnterRoom)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_HTMLRegisterEnterRoom* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1003_ChangeUserInfo_ResToCore : public ::google_public::protobuf::Message {
 public:
  Processor_1003_ChangeUserInfo_ResToCore();
  virtual ~Processor_1003_ChangeUserInfo_ResToCore();

  Processor_1003_ChangeUserInfo_ResToCore(const Processor_1003_ChangeUserInfo_ResToCore& from);

  inline Processor_1003_ChangeUserInfo_ResToCore& operator=(const Processor_1003_ChangeUserInfo_ResToCore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1003_ChangeUserInfo_ResToCore& default_instance();

  void Swap(Processor_1003_ChangeUserInfo_ResToCore* other);

  // implements Message ----------------------------------------------

  Processor_1003_ChangeUserInfo_ResToCore* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1003_ChangeUserInfo_ResToCore& from);
  void MergeFrom(const Processor_1003_ChangeUserInfo_ResToCore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1003_ChangeUserInfo_ResToCore)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1003_ChangeUserInfo_ResToCore* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1004_ChangeUserInfo_CoreToOther : public ::google_public::protobuf::Message {
 public:
  Processor_1004_ChangeUserInfo_CoreToOther();
  virtual ~Processor_1004_ChangeUserInfo_CoreToOther();

  Processor_1004_ChangeUserInfo_CoreToOther(const Processor_1004_ChangeUserInfo_CoreToOther& from);

  inline Processor_1004_ChangeUserInfo_CoreToOther& operator=(const Processor_1004_ChangeUserInfo_CoreToOther& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1004_ChangeUserInfo_CoreToOther& default_instance();

  void Swap(Processor_1004_ChangeUserInfo_CoreToOther* other);

  // implements Message ----------------------------------------------

  Processor_1004_ChangeUserInfo_CoreToOther* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1004_ChangeUserInfo_CoreToOther& from);
  void MergeFrom(const Processor_1004_ChangeUserInfo_CoreToOther& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1004_ChangeUserInfo_CoreToOther)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1004_ChangeUserInfo_CoreToOther* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1005_OnlineInfo_OtherToCore : public ::google_public::protobuf::Message {
 public:
  Processor_1005_OnlineInfo_OtherToCore();
  virtual ~Processor_1005_OnlineInfo_OtherToCore();

  Processor_1005_OnlineInfo_OtherToCore(const Processor_1005_OnlineInfo_OtherToCore& from);

  inline Processor_1005_OnlineInfo_OtherToCore& operator=(const Processor_1005_OnlineInfo_OtherToCore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1005_OnlineInfo_OtherToCore& default_instance();

  void Swap(Processor_1005_OnlineInfo_OtherToCore* other);

  // implements Message ----------------------------------------------

  Processor_1005_OnlineInfo_OtherToCore* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1005_OnlineInfo_OtherToCore& from);
  void MergeFrom(const Processor_1005_OnlineInfo_OtherToCore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 OnlineCount = 1;
  inline bool has_onlinecount() const;
  inline void clear_onlinecount();
  static const int kOnlineCountFieldNumber = 1;
  inline ::google_public::protobuf::int32 onlinecount() const;
  inline void set_onlinecount(::google_public::protobuf::int32 value);

  // repeated int32 ID = 2;
  inline int id_size() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 id(int index) const;
  inline void set_id(int index, ::google_public::protobuf::int32 value);
  inline void add_id(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      id() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:msg.Processor_1005_OnlineInfo_OtherToCore)
 private:
  inline void set_has_onlinecount();
  inline void clear_has_onlinecount();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > id_;
  ::google_public::protobuf::int32 onlinecount_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1005_OnlineInfo_OtherToCore* default_instance_;
};
// -------------------------------------------------------------------

class ServerRoomInfo : public ::google_public::protobuf::Message {
 public:
  ServerRoomInfo();
  virtual ~ServerRoomInfo();

  ServerRoomInfo(const ServerRoomInfo& from);

  inline ServerRoomInfo& operator=(const ServerRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ServerRoomInfo& default_instance();

  void Swap(ServerRoomInfo* other);

  // implements Message ----------------------------------------------

  ServerRoomInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ServerRoomInfo& from);
  void MergeFrom(const ServerRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional int32 PlayerCount = 2;
  inline bool has_playercount() const;
  inline void clear_playercount();
  static const int kPlayerCountFieldNumber = 2;
  inline ::google_public::protobuf::int32 playercount() const;
  inline void set_playercount(::google_public::protobuf::int32 value);

  // optional .msg.RoomStatus Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::msg::RoomStatus status() const;
  inline void set_status(::msg::RoomStatus value);

  // optional string note = 4;
  inline bool has_note() const;
  inline void clear_note();
  static const int kNoteFieldNumber = 4;
  inline const ::std::string& note() const;
  inline void set_note(const ::std::string& value);
  inline void set_note(const char* value);
  inline void set_note(const char* value, size_t size);
  inline ::std::string* mutable_note();
  inline ::std::string* release_note();
  inline void set_allocated_note(::std::string* note);

  // @@protoc_insertion_point(class_scope:msg.ServerRoomInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_playercount();
  inline void clear_has_playercount();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_note();
  inline void clear_has_note();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::int32 playercount_;
  ::std::string* note_;
  int status_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ServerRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1006_RoomInfo : public ::google_public::protobuf::Message {
 public:
  Processor_1006_RoomInfo();
  virtual ~Processor_1006_RoomInfo();

  Processor_1006_RoomInfo(const Processor_1006_RoomInfo& from);

  inline Processor_1006_RoomInfo& operator=(const Processor_1006_RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1006_RoomInfo& default_instance();

  void Swap(Processor_1006_RoomInfo* other);

  // implements Message ----------------------------------------------

  Processor_1006_RoomInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1006_RoomInfo& from);
  void MergeFrom(const Processor_1006_RoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.ServerRoomInfo RoomInfo = 1;
  inline int roominfo_size() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 1;
  inline const ::msg::ServerRoomInfo& roominfo(int index) const;
  inline ::msg::ServerRoomInfo* mutable_roominfo(int index);
  inline ::msg::ServerRoomInfo* add_roominfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ServerRoomInfo >&
      roominfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::ServerRoomInfo >*
      mutable_roominfo();

  // optional .msg.ServerInfo RoomServerInfo = 2;
  inline bool has_roomserverinfo() const;
  inline void clear_roomserverinfo();
  static const int kRoomServerInfoFieldNumber = 2;
  inline const ::msg::ServerInfo& roomserverinfo() const;
  inline ::msg::ServerInfo* mutable_roomserverinfo();
  inline ::msg::ServerInfo* release_roomserverinfo();
  inline void set_allocated_roomserverinfo(::msg::ServerInfo* roomserverinfo);

  // @@protoc_insertion_point(class_scope:msg.Processor_1006_RoomInfo)
 private:
  inline void set_has_roomserverinfo();
  inline void clear_has_roomserverinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::ServerRoomInfo > roominfo_;
  ::msg::ServerInfo* roomserverinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1006_RoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1009_CreateRoom_ResToCore : public ::google_public::protobuf::Message {
 public:
  Processor_1009_CreateRoom_ResToCore();
  virtual ~Processor_1009_CreateRoom_ResToCore();

  Processor_1009_CreateRoom_ResToCore(const Processor_1009_CreateRoom_ResToCore& from);

  inline Processor_1009_CreateRoom_ResToCore& operator=(const Processor_1009_CreateRoom_ResToCore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1009_CreateRoom_ResToCore& default_instance();

  void Swap(Processor_1009_CreateRoom_ResToCore* other);

  // implements Message ----------------------------------------------

  Processor_1009_CreateRoom_ResToCore* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1009_CreateRoom_ResToCore& from);
  void MergeFrom(const Processor_1009_CreateRoom_ResToCore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1009_CreateRoom_ResToCore)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1009_CreateRoom_ResToCore* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1010_CreateRoom_CoreToRoom : public ::google_public::protobuf::Message {
 public:
  Processor_1010_CreateRoom_CoreToRoom();
  virtual ~Processor_1010_CreateRoom_CoreToRoom();

  Processor_1010_CreateRoom_CoreToRoom(const Processor_1010_CreateRoom_CoreToRoom& from);

  inline Processor_1010_CreateRoom_CoreToRoom& operator=(const Processor_1010_CreateRoom_CoreToRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1010_CreateRoom_CoreToRoom& default_instance();

  void Swap(Processor_1010_CreateRoom_CoreToRoom* other);

  // implements Message ----------------------------------------------

  Processor_1010_CreateRoom_CoreToRoom* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1010_CreateRoom_CoreToRoom& from);
  void MergeFrom(const Processor_1010_CreateRoom_CoreToRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1010_CreateRoom_CoreToRoom)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1010_CreateRoom_CoreToRoom* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1011_ChangeServerProp : public ::google_public::protobuf::Message {
 public:
  Processor_1011_ChangeServerProp();
  virtual ~Processor_1011_ChangeServerProp();

  Processor_1011_ChangeServerProp(const Processor_1011_ChangeServerProp& from);

  inline Processor_1011_ChangeServerProp& operator=(const Processor_1011_ChangeServerProp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1011_ChangeServerProp& default_instance();

  void Swap(Processor_1011_ChangeServerProp* other);

  // implements Message ----------------------------------------------

  Processor_1011_ChangeServerProp* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1011_ChangeServerProp& from);
  void MergeFrom(const Processor_1011_ChangeServerProp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.Property prop = 1;
  inline bool has_prop() const;
  inline void clear_prop();
  static const int kPropFieldNumber = 1;
  inline const ::msg::Property& prop() const;
  inline ::msg::Property* mutable_prop();
  inline ::msg::Property* release_prop();
  inline void set_allocated_prop(::msg::Property* prop);

  // @@protoc_insertion_point(class_scope:msg.Processor_1011_ChangeServerProp)
 private:
  inline void set_has_prop();
  inline void clear_has_prop();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::Property* prop_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1011_ChangeServerProp* default_instance_;
};
// -------------------------------------------------------------------

class Parameter : public ::google_public::protobuf::Message {
 public:
  Parameter();
  virtual ~Parameter();

  Parameter(const Parameter& from);

  inline Parameter& operator=(const Parameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Parameter& default_instance();

  void Swap(Parameter* other);

  // implements Message ----------------------------------------------

  Parameter* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Parameter& from);
  void MergeFrom(const Parameter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ParameterName = 1;
  inline bool has_parametername() const;
  inline void clear_parametername();
  static const int kParameterNameFieldNumber = 1;
  inline const ::std::string& parametername() const;
  inline void set_parametername(const ::std::string& value);
  inline void set_parametername(const char* value);
  inline void set_parametername(const char* value, size_t size);
  inline ::std::string* mutable_parametername();
  inline ::std::string* release_parametername();
  inline void set_allocated_parametername(::std::string* parametername);

  // optional string ParameterValue = 2;
  inline bool has_parametervalue() const;
  inline void clear_parametervalue();
  static const int kParameterValueFieldNumber = 2;
  inline const ::std::string& parametervalue() const;
  inline void set_parametervalue(const ::std::string& value);
  inline void set_parametervalue(const char* value);
  inline void set_parametervalue(const char* value, size_t size);
  inline ::std::string* mutable_parametervalue();
  inline ::std::string* release_parametervalue();
  inline void set_allocated_parametervalue(::std::string* parametervalue);

  // @@protoc_insertion_point(class_scope:msg.Parameter)
 private:
  inline void set_has_parametername();
  inline void clear_has_parametername();
  inline void set_has_parametervalue();
  inline void clear_has_parametervalue();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* parametername_;
  ::std::string* parametervalue_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Parameter* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1012_WXPayMsg : public ::google_public::protobuf::Message {
 public:
  Processor_1012_WXPayMsg();
  virtual ~Processor_1012_WXPayMsg();

  Processor_1012_WXPayMsg(const Processor_1012_WXPayMsg& from);

  inline Processor_1012_WXPayMsg& operator=(const Processor_1012_WXPayMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1012_WXPayMsg& default_instance();

  void Swap(Processor_1012_WXPayMsg* other);

  // implements Message ----------------------------------------------

  Processor_1012_WXPayMsg* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1012_WXPayMsg& from);
  void MergeFrom(const Processor_1012_WXPayMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.Parameter parameter = 1;
  inline int parameter_size() const;
  inline void clear_parameter();
  static const int kParameterFieldNumber = 1;
  inline const ::msg::Parameter& parameter(int index) const;
  inline ::msg::Parameter* mutable_parameter(int index);
  inline ::msg::Parameter* add_parameter();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Parameter >&
      parameter() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::Parameter >*
      mutable_parameter();

  // @@protoc_insertion_point(class_scope:msg.Processor_1012_WXPayMsg)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::Parameter > parameter_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1012_WXPayMsg* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1100_ShutDown_ConsoleToCore : public ::google_public::protobuf::Message {
 public:
  Processor_1100_ShutDown_ConsoleToCore();
  virtual ~Processor_1100_ShutDown_ConsoleToCore();

  Processor_1100_ShutDown_ConsoleToCore(const Processor_1100_ShutDown_ConsoleToCore& from);

  inline Processor_1100_ShutDown_ConsoleToCore& operator=(const Processor_1100_ShutDown_ConsoleToCore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1100_ShutDown_ConsoleToCore& default_instance();

  void Swap(Processor_1100_ShutDown_ConsoleToCore* other);

  // implements Message ----------------------------------------------

  Processor_1100_ShutDown_ConsoleToCore* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1100_ShutDown_ConsoleToCore& from);
  void MergeFrom(const Processor_1100_ShutDown_ConsoleToCore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TimeBeforeClose = 1;
  inline bool has_timebeforeclose() const;
  inline void clear_timebeforeclose();
  static const int kTimeBeforeCloseFieldNumber = 1;
  inline ::google_public::protobuf::int32 timebeforeclose() const;
  inline void set_timebeforeclose(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1100_ShutDown_ConsoleToCore)
 private:
  inline void set_has_timebeforeclose();
  inline void clear_has_timebeforeclose();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 timebeforeclose_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1100_ShutDown_ConsoleToCore* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1101_ShutDown_CoreToOther : public ::google_public::protobuf::Message {
 public:
  Processor_1101_ShutDown_CoreToOther();
  virtual ~Processor_1101_ShutDown_CoreToOther();

  Processor_1101_ShutDown_CoreToOther(const Processor_1101_ShutDown_CoreToOther& from);

  inline Processor_1101_ShutDown_CoreToOther& operator=(const Processor_1101_ShutDown_CoreToOther& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1101_ShutDown_CoreToOther& default_instance();

  void Swap(Processor_1101_ShutDown_CoreToOther* other);

  // implements Message ----------------------------------------------

  Processor_1101_ShutDown_CoreToOther* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1101_ShutDown_CoreToOther& from);
  void MergeFrom(const Processor_1101_ShutDown_CoreToOther& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TimeBeforeClose = 1;
  inline bool has_timebeforeclose() const;
  inline void clear_timebeforeclose();
  static const int kTimeBeforeCloseFieldNumber = 1;
  inline ::google_public::protobuf::int32 timebeforeclose() const;
  inline void set_timebeforeclose(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1101_ShutDown_CoreToOther)
 private:
  inline void set_has_timebeforeclose();
  inline void clear_has_timebeforeclose();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 timebeforeclose_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1101_ShutDown_CoreToOther* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1105_ServerInformation_CoreToConsole : public ::google_public::protobuf::Message {
 public:
  Processor_1105_ServerInformation_CoreToConsole();
  virtual ~Processor_1105_ServerInformation_CoreToConsole();

  Processor_1105_ServerInformation_CoreToConsole(const Processor_1105_ServerInformation_CoreToConsole& from);

  inline Processor_1105_ServerInformation_CoreToConsole& operator=(const Processor_1105_ServerInformation_CoreToConsole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1105_ServerInformation_CoreToConsole& default_instance();

  void Swap(Processor_1105_ServerInformation_CoreToConsole* other);

  // implements Message ----------------------------------------------

  Processor_1105_ServerInformation_CoreToConsole* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1105_ServerInformation_CoreToConsole& from);
  void MergeFrom(const Processor_1105_ServerInformation_CoreToConsole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 OnlineSize = 1;
  inline bool has_onlinesize() const;
  inline void clear_onlinesize();
  static const int kOnlineSizeFieldNumber = 1;
  inline ::google_public::protobuf::int32 onlinesize() const;
  inline void set_onlinesize(::google_public::protobuf::int32 value);

  // optional int32 OpenRoom = 2;
  inline bool has_openroom() const;
  inline void clear_openroom();
  static const int kOpenRoomFieldNumber = 2;
  inline ::google_public::protobuf::int32 openroom() const;
  inline void set_openroom(::google_public::protobuf::int32 value);

  // optional int32 CloseRoom = 3;
  inline bool has_closeroom() const;
  inline void clear_closeroom();
  static const int kCloseRoomFieldNumber = 3;
  inline ::google_public::protobuf::int32 closeroom() const;
  inline void set_closeroom(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1105_ServerInformation_CoreToConsole)
 private:
  inline void set_has_onlinesize();
  inline void clear_has_onlinesize();
  inline void set_has_openroom();
  inline void clear_has_openroom();
  inline void set_has_closeroom();
  inline void clear_has_closeroom();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 onlinesize_;
  ::google_public::protobuf::int32 openroom_;
  ::google_public::protobuf::int32 closeroom_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1105_ServerInformation_CoreToConsole* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1107_SERVER_RESET_TOURMENT_CREDIT : public ::google_public::protobuf::Message {
 public:
  Processor_1107_SERVER_RESET_TOURMENT_CREDIT();
  virtual ~Processor_1107_SERVER_RESET_TOURMENT_CREDIT();

  Processor_1107_SERVER_RESET_TOURMENT_CREDIT(const Processor_1107_SERVER_RESET_TOURMENT_CREDIT& from);

  inline Processor_1107_SERVER_RESET_TOURMENT_CREDIT& operator=(const Processor_1107_SERVER_RESET_TOURMENT_CREDIT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1107_SERVER_RESET_TOURMENT_CREDIT& default_instance();

  void Swap(Processor_1107_SERVER_RESET_TOURMENT_CREDIT* other);

  // implements Message ----------------------------------------------

  Processor_1107_SERVER_RESET_TOURMENT_CREDIT* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1107_SERVER_RESET_TOURMENT_CREDIT& from);
  void MergeFrom(const Processor_1107_SERVER_RESET_TOURMENT_CREDIT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Credit = 1;
  inline bool has_credit() const;
  inline void clear_credit();
  static const int kCreditFieldNumber = 1;
  inline ::google_public::protobuf::int32 credit() const;
  inline void set_credit(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1107_SERVER_RESET_TOURMENT_CREDIT)
 private:
  inline void set_has_credit();
  inline void clear_has_credit();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 credit_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1107_SERVER_RESET_TOURMENT_CREDIT* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1108_SEARCH_CREDIT_RANK_UP : public ::google_public::protobuf::Message {
 public:
  Processor_1108_SEARCH_CREDIT_RANK_UP();
  virtual ~Processor_1108_SEARCH_CREDIT_RANK_UP();

  Processor_1108_SEARCH_CREDIT_RANK_UP(const Processor_1108_SEARCH_CREDIT_RANK_UP& from);

  inline Processor_1108_SEARCH_CREDIT_RANK_UP& operator=(const Processor_1108_SEARCH_CREDIT_RANK_UP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1108_SEARCH_CREDIT_RANK_UP& default_instance();

  void Swap(Processor_1108_SEARCH_CREDIT_RANK_UP* other);

  // implements Message ----------------------------------------------

  Processor_1108_SEARCH_CREDIT_RANK_UP* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1108_SEARCH_CREDIT_RANK_UP& from);
  void MergeFrom(const Processor_1108_SEARCH_CREDIT_RANK_UP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ranknum = 1;
  inline bool has_ranknum() const;
  inline void clear_ranknum();
  static const int kRanknumFieldNumber = 1;
  inline ::google_public::protobuf::int32 ranknum() const;
  inline void set_ranknum(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1108_SEARCH_CREDIT_RANK_UP)
 private:
  inline void set_has_ranknum();
  inline void clear_has_ranknum();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 ranknum_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1108_SEARCH_CREDIT_RANK_UP* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1108_SEARCH_CREDIT_RANK_DOWN : public ::google_public::protobuf::Message {
 public:
  Processor_1108_SEARCH_CREDIT_RANK_DOWN();
  virtual ~Processor_1108_SEARCH_CREDIT_RANK_DOWN();

  Processor_1108_SEARCH_CREDIT_RANK_DOWN(const Processor_1108_SEARCH_CREDIT_RANK_DOWN& from);

  inline Processor_1108_SEARCH_CREDIT_RANK_DOWN& operator=(const Processor_1108_SEARCH_CREDIT_RANK_DOWN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1108_SEARCH_CREDIT_RANK_DOWN& default_instance();

  void Swap(Processor_1108_SEARCH_CREDIT_RANK_DOWN* other);

  // implements Message ----------------------------------------------

  Processor_1108_SEARCH_CREDIT_RANK_DOWN* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1108_SEARCH_CREDIT_RANK_DOWN& from);
  void MergeFrom(const Processor_1108_SEARCH_CREDIT_RANK_DOWN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.UserTourCreditInfo UserTourCreditInfo = 1;
  inline int usertourcreditinfo_size() const;
  inline void clear_usertourcreditinfo();
  static const int kUserTourCreditInfoFieldNumber = 1;
  inline const ::msg::UserTourCreditInfo& usertourcreditinfo(int index) const;
  inline ::msg::UserTourCreditInfo* mutable_usertourcreditinfo(int index);
  inline ::msg::UserTourCreditInfo* add_usertourcreditinfo();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserTourCreditInfo >&
      usertourcreditinfo() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserTourCreditInfo >*
      mutable_usertourcreditinfo();

  // @@protoc_insertion_point(class_scope:msg.Processor_1108_SEARCH_CREDIT_RANK_DOWN)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::UserTourCreditInfo > usertourcreditinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1108_SEARCH_CREDIT_RANK_DOWN* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1109_PUBLISH_SYS_MESSAGE : public ::google_public::protobuf::Message {
 public:
  Processor_1109_PUBLISH_SYS_MESSAGE();
  virtual ~Processor_1109_PUBLISH_SYS_MESSAGE();

  Processor_1109_PUBLISH_SYS_MESSAGE(const Processor_1109_PUBLISH_SYS_MESSAGE& from);

  inline Processor_1109_PUBLISH_SYS_MESSAGE& operator=(const Processor_1109_PUBLISH_SYS_MESSAGE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1109_PUBLISH_SYS_MESSAGE& default_instance();

  void Swap(Processor_1109_PUBLISH_SYS_MESSAGE* other);

  // implements Message ----------------------------------------------

  Processor_1109_PUBLISH_SYS_MESSAGE* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1109_PUBLISH_SYS_MESSAGE& from);
  void MergeFrom(const Processor_1109_PUBLISH_SYS_MESSAGE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string SYSMessage = 1;
  inline bool has_sysmessage() const;
  inline void clear_sysmessage();
  static const int kSYSMessageFieldNumber = 1;
  inline const ::std::string& sysmessage() const;
  inline void set_sysmessage(const ::std::string& value);
  inline void set_sysmessage(const char* value);
  inline void set_sysmessage(const char* value, size_t size);
  inline ::std::string* mutable_sysmessage();
  inline ::std::string* release_sysmessage();
  inline void set_allocated_sysmessage(::std::string* sysmessage);

  // @@protoc_insertion_point(class_scope:msg.Processor_1109_PUBLISH_SYS_MESSAGE)
 private:
  inline void set_has_sysmessage();
  inline void clear_has_sysmessage();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sysmessage_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1109_PUBLISH_SYS_MESSAGE* default_instance_;
};
// -------------------------------------------------------------------

class Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE : public ::google_public::protobuf::Message {
 public:
  Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE();
  virtual ~Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE();

  Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE(const Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE& from);

  inline Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE& operator=(const Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE& default_instance();

  void Swap(Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE* other);

  // implements Message ----------------------------------------------

  Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE& from);
  void MergeFrom(const Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 groupid = 1;
  inline int groupid_size() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  inline ::google_public::protobuf::int32 groupid(int index) const;
  inline void set_groupid(int index, ::google_public::protobuf::int32 value);
  inline void add_groupid(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      groupid() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_groupid();

  // repeated int32 userid = 2;
  inline int userid_size() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google_public::protobuf::int32 userid(int index) const;
  inline void set_userid(int index, ::google_public::protobuf::int32 value);
  inline void add_userid(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      userid() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_userid();

  // optional string msginfo = 3;
  inline bool has_msginfo() const;
  inline void clear_msginfo();
  static const int kMsginfoFieldNumber = 3;
  inline const ::std::string& msginfo() const;
  inline void set_msginfo(const ::std::string& value);
  inline void set_msginfo(const char* value);
  inline void set_msginfo(const char* value, size_t size);
  inline ::std::string* mutable_msginfo();
  inline ::std::string* release_msginfo();
  inline void set_allocated_msginfo(::std::string* msginfo);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google_public::protobuf::int32 num() const;
  inline void set_num(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE)
 private:
  inline void set_has_msginfo();
  inline void clear_has_msginfo();
  inline void set_has_num();
  inline void clear_has_num();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > groupid_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > userid_;
  ::std::string* msginfo_;
  ::google_public::protobuf::int32 num_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE* default_instance_;
};
// -------------------------------------------------------------------

class UserTourCreditInfo : public ::google_public::protobuf::Message {
 public:
  UserTourCreditInfo();
  virtual ~UserTourCreditInfo();

  UserTourCreditInfo(const UserTourCreditInfo& from);

  inline UserTourCreditInfo& operator=(const UserTourCreditInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const UserTourCreditInfo& default_instance();

  void Swap(UserTourCreditInfo* other);

  // implements Message ----------------------------------------------

  UserTourCreditInfo* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const UserTourCreditInfo& from);
  void MergeFrom(const UserTourCreditInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.UserDetailInfo userinfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 1;
  inline const ::msg::UserDetailInfo& userinfo() const;
  inline ::msg::UserDetailInfo* mutable_userinfo();
  inline ::msg::UserDetailInfo* release_userinfo();
  inline void set_allocated_userinfo(::msg::UserDetailInfo* userinfo);

  // optional int32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google_public::protobuf::int32 rank() const;
  inline void set_rank(::google_public::protobuf::int32 value);

  // optional int32 Credit = 3;
  inline bool has_credit() const;
  inline void clear_credit();
  static const int kCreditFieldNumber = 3;
  inline ::google_public::protobuf::int32 credit() const;
  inline void set_credit(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.UserTourCreditInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_credit();
  inline void clear_has_credit();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::UserDetailInfo* userinfo_;
  ::google_public::protobuf::int32 rank_;
  ::google_public::protobuf::int32 credit_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static UserTourCreditInfo* default_instance_;
};
// -------------------------------------------------------------------

class ChatMessages : public ::google_public::protobuf::Message {
 public:
  ChatMessages();
  virtual ~ChatMessages();

  ChatMessages(const ChatMessages& from);

  inline ChatMessages& operator=(const ChatMessages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ChatMessages& default_instance();

  void Swap(ChatMessages* other);

  // implements Message ----------------------------------------------

  ChatMessages* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ChatMessages& from);
  void MergeFrom(const ChatMessages& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.ChatMessage Message = 1;
  inline int message_size() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::msg::ChatMessage& message(int index) const;
  inline ::msg::ChatMessage* mutable_message(int index);
  inline ::msg::ChatMessage* add_message();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage >&
      message() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage >*
      mutable_message();

  // optional int32 ID = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 id() const;
  inline void set_id(::google_public::protobuf::int32 value);

  // optional int32 Count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google_public::protobuf::int32 count() const;
  inline void set_count(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.ChatMessages)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage > message_;
  ::google_public::protobuf::int32 id_;
  ::google_public::protobuf::int32 count_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ChatMessages* default_instance_;
};
// -------------------------------------------------------------------

class InvitationsForSave : public ::google_public::protobuf::Message {
 public:
  InvitationsForSave();
  virtual ~InvitationsForSave();

  InvitationsForSave(const InvitationsForSave& from);

  inline InvitationsForSave& operator=(const InvitationsForSave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const InvitationsForSave& default_instance();

  void Swap(InvitationsForSave* other);

  // implements Message ----------------------------------------------

  InvitationsForSave* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const InvitationsForSave& from);
  void MergeFrom(const InvitationsForSave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.Invitation Invitations = 1;
  inline int invitations_size() const;
  inline void clear_invitations();
  static const int kInvitationsFieldNumber = 1;
  inline const ::msg::Invitation& invitations(int index) const;
  inline ::msg::Invitation* mutable_invitations(int index);
  inline ::msg::Invitation* add_invitations();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Invitation >&
      invitations() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::Invitation >*
      mutable_invitations();

  // @@protoc_insertion_point(class_scope:msg.InvitationsForSave)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::Invitation > invitations_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static InvitationsForSave* default_instance_;
};
// -------------------------------------------------------------------

class ChatMessageForSave : public ::google_public::protobuf::Message {
 public:
  ChatMessageForSave();
  virtual ~ChatMessageForSave();

  ChatMessageForSave(const ChatMessageForSave& from);

  inline ChatMessageForSave& operator=(const ChatMessageForSave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ChatMessageForSave& default_instance();

  void Swap(ChatMessageForSave* other);

  // implements Message ----------------------------------------------

  ChatMessageForSave* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ChatMessageForSave& from);
  void MergeFrom(const ChatMessageForSave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.ChatMessages FriendMessage = 1;
  inline int friendmessage_size() const;
  inline void clear_friendmessage();
  static const int kFriendMessageFieldNumber = 1;
  inline const ::msg::ChatMessages& friendmessage(int index) const;
  inline ::msg::ChatMessages* mutable_friendmessage(int index);
  inline ::msg::ChatMessages* add_friendmessage();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages >&
      friendmessage() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages >*
      mutable_friendmessage();

  // repeated .msg.ChatMessages GroupMessage = 2;
  inline int groupmessage_size() const;
  inline void clear_groupmessage();
  static const int kGroupMessageFieldNumber = 2;
  inline const ::msg::ChatMessages& groupmessage(int index) const;
  inline ::msg::ChatMessages* mutable_groupmessage(int index);
  inline ::msg::ChatMessages* add_groupmessage();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages >&
      groupmessage() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages >*
      mutable_groupmessage();

  // @@protoc_insertion_point(class_scope:msg.ChatMessageForSave)
 private:

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages > friendmessage_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages > groupmessage_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ChatMessageForSave* default_instance_;
};
// -------------------------------------------------------------------

class OldChatMessageForSave : public ::google_public::protobuf::Message {
 public:
  OldChatMessageForSave();
  virtual ~OldChatMessageForSave();

  OldChatMessageForSave(const OldChatMessageForSave& from);

  inline OldChatMessageForSave& operator=(const OldChatMessageForSave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const OldChatMessageForSave& default_instance();

  void Swap(OldChatMessageForSave* other);

  // implements Message ----------------------------------------------

  OldChatMessageForSave* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const OldChatMessageForSave& from);
  void MergeFrom(const OldChatMessageForSave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.ChatMessages FriendMessage = 1;
  inline bool has_friendmessage() const;
  inline void clear_friendmessage();
  static const int kFriendMessageFieldNumber = 1;
  inline const ::msg::ChatMessages& friendmessage() const;
  inline ::msg::ChatMessages* mutable_friendmessage();
  inline ::msg::ChatMessages* release_friendmessage();
  inline void set_allocated_friendmessage(::msg::ChatMessages* friendmessage);

  // optional .msg.ChatMessages GroupMessage = 2;
  inline bool has_groupmessage() const;
  inline void clear_groupmessage();
  static const int kGroupMessageFieldNumber = 2;
  inline const ::msg::ChatMessages& groupmessage() const;
  inline ::msg::ChatMessages* mutable_groupmessage();
  inline ::msg::ChatMessages* release_groupmessage();
  inline void set_allocated_groupmessage(::msg::ChatMessages* groupmessage);

  // @@protoc_insertion_point(class_scope:msg.OldChatMessageForSave)
 private:
  inline void set_has_friendmessage();
  inline void clear_has_friendmessage();
  inline void set_has_groupmessage();
  inline void clear_has_groupmessage();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg::ChatMessages* friendmessage_;
  ::msg::ChatMessages* groupmessage_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static OldChatMessageForSave* default_instance_;
};
// -------------------------------------------------------------------

class GameRecord : public ::google_public::protobuf::Message {
 public:
  GameRecord();
  virtual ~GameRecord();

  GameRecord(const GameRecord& from);

  inline GameRecord& operator=(const GameRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const GameRecord& default_instance();

  void Swap(GameRecord* other);

  // implements Message ----------------------------------------------

  GameRecord* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const GameRecord& from);
  void MergeFrom(const GameRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 HandID = 1;
  inline bool has_handid() const;
  inline void clear_handid();
  static const int kHandIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 handid() const;
  inline void set_handid(::google_public::protobuf::int32 value);

  // optional int32 RoomID = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 roomid() const;
  inline void set_roomid(::google_public::protobuf::int32 value);

  // optional int32 PoolSize = 3;
  inline bool has_poolsize() const;
  inline void clear_poolsize();
  static const int kPoolSizeFieldNumber = 3;
  inline ::google_public::protobuf::int32 poolsize() const;
  inline void set_poolsize(::google_public::protobuf::int32 value);

  // repeated string WinnerName = 4;
  inline int winnername_size() const;
  inline void clear_winnername();
  static const int kWinnerNameFieldNumber = 4;
  inline const ::std::string& winnername(int index) const;
  inline ::std::string* mutable_winnername(int index);
  inline void set_winnername(int index, const ::std::string& value);
  inline void set_winnername(int index, const char* value);
  inline void set_winnername(int index, const char* value, size_t size);
  inline ::std::string* add_winnername();
  inline void add_winnername(const ::std::string& value);
  inline void add_winnername(const char* value);
  inline void add_winnername(const char* value, size_t size);
  inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>& winnername() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::std::string>* mutable_winnername();

  // repeated int32 HoleCard = 5;
  inline int holecard_size() const;
  inline void clear_holecard();
  static const int kHoleCardFieldNumber = 5;
  inline ::google_public::protobuf::int32 holecard(int index) const;
  inline void set_holecard(int index, ::google_public::protobuf::int32 value);
  inline void add_holecard(::google_public::protobuf::int32 value);
  inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
      holecard() const;
  inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
      mutable_holecard();

  // @@protoc_insertion_point(class_scope:msg.GameRecord)
 private:
  inline void set_has_handid();
  inline void clear_has_handid();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_poolsize();
  inline void clear_has_poolsize();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 handid_;
  ::google_public::protobuf::int32 roomid_;
  ::google_public::protobuf::RepeatedPtrField< ::std::string> winnername_;
  ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 > holecard_;
  ::google_public::protobuf::int32 poolsize_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static GameRecord* default_instance_;
};
// -------------------------------------------------------------------

class GameRecordForSave : public ::google_public::protobuf::Message {
 public:
  GameRecordForSave();
  virtual ~GameRecordForSave();

  GameRecordForSave(const GameRecordForSave& from);

  inline GameRecordForSave& operator=(const GameRecordForSave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const GameRecordForSave& default_instance();

  void Swap(GameRecordForSave* other);

  // implements Message ----------------------------------------------

  GameRecordForSave* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const GameRecordForSave& from);
  void MergeFrom(const GameRecordForSave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.GameRecord Record = 1;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 1;
  inline const ::msg::GameRecord& record(int index) const;
  inline ::msg::GameRecord* mutable_record(int index);
  inline ::msg::GameRecord* add_record();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::GameRecord >&
      record() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::GameRecord >*
      mutable_record();

  // optional int32 UserID = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google_public::protobuf::int32 userid() const;
  inline void set_userid(::google_public::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.GameRecordForSave)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::GameRecord > record_;
  ::google_public::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static GameRecordForSave* default_instance_;
};
// -------------------------------------------------------------------

class CreateRoomInfoForSave : public ::google_public::protobuf::Message {
 public:
  CreateRoomInfoForSave();
  virtual ~CreateRoomInfoForSave();

  CreateRoomInfoForSave(const CreateRoomInfoForSave& from);

  inline CreateRoomInfoForSave& operator=(const CreateRoomInfoForSave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const CreateRoomInfoForSave& default_instance();

  void Swap(CreateRoomInfoForSave* other);

  // implements Message ----------------------------------------------

  CreateRoomInfoForSave* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const CreateRoomInfoForSave& from);
  void MergeFrom(const CreateRoomInfoForSave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg.RoomType RoomType = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 1;
  inline ::msg::RoomType roomtype() const;
  inline void set_roomtype(::msg::RoomType value);

  // optional bool IsTournament = 2;
  inline bool has_istournament() const;
  inline void clear_istournament();
  static const int kIsTournamentFieldNumber = 2;
  inline bool istournament() const;
  inline void set_istournament(bool value);

  // optional .msg.RoomInfo RoomInfo = 3;
  inline bool has_roominfo() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 3;
  inline const ::msg::RoomInfo& roominfo() const;
  inline ::msg::RoomInfo* mutable_roominfo();
  inline ::msg::RoomInfo* release_roominfo();
  inline void set_allocated_roominfo(::msg::RoomInfo* roominfo);

  // optional .msg.RoomProp RoomProp = 4;
  inline bool has_roomprop() const;
  inline void clear_roomprop();
  static const int kRoomPropFieldNumber = 4;
  inline const ::msg::RoomProp& roomprop() const;
  inline ::msg::RoomProp* mutable_roomprop();
  inline ::msg::RoomProp* release_roomprop();
  inline void set_allocated_roomprop(::msg::RoomProp* roomprop);

  // optional string TemplateSizeName = 5;
  inline bool has_templatesizename() const;
  inline void clear_templatesizename();
  static const int kTemplateSizeNameFieldNumber = 5;
  inline const ::std::string& templatesizename() const;
  inline void set_templatesizename(const ::std::string& value);
  inline void set_templatesizename(const char* value);
  inline void set_templatesizename(const char* value, size_t size);
  inline ::std::string* mutable_templatesizename();
  inline ::std::string* release_templatesizename();
  inline void set_allocated_templatesizename(::std::string* templatesizename);

  // optional string TemplateSpeedName = 6;
  inline bool has_templatespeedname() const;
  inline void clear_templatespeedname();
  static const int kTemplateSpeedNameFieldNumber = 6;
  inline const ::std::string& templatespeedname() const;
  inline void set_templatespeedname(const ::std::string& value);
  inline void set_templatespeedname(const char* value);
  inline void set_templatespeedname(const char* value, size_t size);
  inline ::std::string* mutable_templatespeedname();
  inline ::std::string* release_templatespeedname();
  inline void set_allocated_templatespeedname(::std::string* templatespeedname);

  // optional .msg.TournamentInfo TournamentInfo = 7;
  inline bool has_tournamentinfo() const;
  inline void clear_tournamentinfo();
  static const int kTournamentInfoFieldNumber = 7;
  inline const ::msg::TournamentInfo& tournamentinfo() const;
  inline ::msg::TournamentInfo* mutable_tournamentinfo();
  inline ::msg::TournamentInfo* release_tournamentinfo();
  inline void set_allocated_tournamentinfo(::msg::TournamentInfo* tournamentinfo);

  // @@protoc_insertion_point(class_scope:msg.CreateRoomInfoForSave)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_istournament();
  inline void clear_has_istournament();
  inline void set_has_roominfo();
  inline void clear_has_roominfo();
  inline void set_has_roomprop();
  inline void clear_has_roomprop();
  inline void set_has_templatesizename();
  inline void clear_has_templatesizename();
  inline void set_has_templatespeedname();
  inline void clear_has_templatespeedname();
  inline void set_has_tournamentinfo();
  inline void clear_has_tournamentinfo();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int roomtype_;
  bool istournament_;
  ::msg::RoomInfo* roominfo_;
  ::msg::RoomProp* roomprop_;
  ::std::string* templatesizename_;
  ::std::string* templatespeedname_;
  ::msg::TournamentInfo* tournamentinfo_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static CreateRoomInfoForSave* default_instance_;
};
// -------------------------------------------------------------------

class ClientUserSetting : public ::google_public::protobuf::Message {
 public:
  ClientUserSetting();
  virtual ~ClientUserSetting();

  ClientUserSetting(const ClientUserSetting& from);

  inline ClientUserSetting& operator=(const ClientUserSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const ClientUserSetting& default_instance();

  void Swap(ClientUserSetting* other);

  // implements Message ----------------------------------------------

  ClientUserSetting* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const ClientUserSetting& from);
  void MergeFrom(const ClientUserSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 LastGroupID = 1;
  inline bool has_lastgroupid() const;
  inline void clear_lastgroupid();
  static const int kLastGroupIDFieldNumber = 1;
  inline ::google_public::protobuf::int32 lastgroupid() const;
  inline void set_lastgroupid(::google_public::protobuf::int32 value);

  // optional .msg.RoomType LastRoomType = 2;
  inline bool has_lastroomtype() const;
  inline void clear_lastroomtype();
  static const int kLastRoomTypeFieldNumber = 2;
  inline ::msg::RoomType lastroomtype() const;
  inline void set_lastroomtype(::msg::RoomType value);

  // optional bool LastIsTournament = 3;
  inline bool has_lastistournament() const;
  inline void clear_lastistournament();
  static const int kLastIsTournamentFieldNumber = 3;
  inline bool lastistournament() const;
  inline void set_lastistournament(bool value);

  // optional int32 LastRoomID = 4;
  inline bool has_lastroomid() const;
  inline void clear_lastroomid();
  static const int kLastRoomIDFieldNumber = 4;
  inline ::google_public::protobuf::int32 lastroomid() const;
  inline void set_lastroomid(::google_public::protobuf::int32 value);

  // repeated .msg.CreateRoomInfoForSave CreateRoomInfoForSave = 5;
  inline int createroominfoforsave_size() const;
  inline void clear_createroominfoforsave();
  static const int kCreateRoomInfoForSaveFieldNumber = 5;
  inline const ::msg::CreateRoomInfoForSave& createroominfoforsave(int index) const;
  inline ::msg::CreateRoomInfoForSave* mutable_createroominfoforsave(int index);
  inline ::msg::CreateRoomInfoForSave* add_createroominfoforsave();
  inline const ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfoForSave >&
      createroominfoforsave() const;
  inline ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfoForSave >*
      mutable_createroominfoforsave();

  // @@protoc_insertion_point(class_scope:msg.ClientUserSetting)
 private:
  inline void set_has_lastgroupid();
  inline void clear_has_lastgroupid();
  inline void set_has_lastroomtype();
  inline void clear_has_lastroomtype();
  inline void set_has_lastistournament();
  inline void clear_has_lastistournament();
  inline void set_has_lastroomid();
  inline void clear_has_lastroomid();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::google_public::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google_public::protobuf::int32 lastgroupid_;
  int lastroomtype_;
  bool lastistournament_;
  ::google_public::protobuf::int32 lastroomid_;
  ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfoForSave > createroominfoforsave_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static ClientUserSetting* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientRequestHead

// optional int32 UserID = 1;
inline bool ClientRequestHead::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientRequestHead::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientRequestHead::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientRequestHead::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 ClientRequestHead::userid() const {
  // @@protoc_insertion_point(field_get:msg.ClientRequestHead.UserID)
  return userid_;
}
inline void ClientRequestHead::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientRequestHead.UserID)
}

// optional int32 Version = 2;
inline bool ClientRequestHead::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientRequestHead::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientRequestHead::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientRequestHead::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google_public::protobuf::int32 ClientRequestHead::version() const {
  // @@protoc_insertion_point(field_get:msg.ClientRequestHead.Version)
  return version_;
}
inline void ClientRequestHead::set_version(::google_public::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientRequestHead.Version)
}

// optional .msg.Language Language = 3;
inline bool ClientRequestHead::has_language() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientRequestHead::set_has_language() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientRequestHead::clear_has_language() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientRequestHead::clear_language() {
  language_ = 1;
  clear_has_language();
}
inline ::msg::Language ClientRequestHead::language() const {
  // @@protoc_insertion_point(field_get:msg.ClientRequestHead.Language)
  return static_cast< ::msg::Language >(language_);
}
inline void ClientRequestHead::set_language(::msg::Language value) {
  assert(::msg::Language_IsValid(value));
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientRequestHead.Language)
}

// optional .msg.Platform Platform = 4;
inline bool ClientRequestHead::has_platform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientRequestHead::set_has_platform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientRequestHead::clear_has_platform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientRequestHead::clear_platform() {
  platform_ = 1;
  clear_has_platform();
}
inline ::msg::Platform ClientRequestHead::platform() const {
  // @@protoc_insertion_point(field_get:msg.ClientRequestHead.Platform)
  return static_cast< ::msg::Platform >(platform_);
}
inline void ClientRequestHead::set_platform(::msg::Platform value) {
  assert(::msg::Platform_IsValid(value));
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientRequestHead.Platform)
}

// optional int32 TestCode = 5;
inline bool ClientRequestHead::has_testcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientRequestHead::set_has_testcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientRequestHead::clear_has_testcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientRequestHead::clear_testcode() {
  testcode_ = 0;
  clear_has_testcode();
}
inline ::google_public::protobuf::int32 ClientRequestHead::testcode() const {
  // @@protoc_insertion_point(field_get:msg.ClientRequestHead.TestCode)
  return testcode_;
}
inline void ClientRequestHead::set_testcode(::google_public::protobuf::int32 value) {
  set_has_testcode();
  testcode_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientRequestHead.TestCode)
}

// optional int64 TimeMark = 6;
inline bool ClientRequestHead::has_timemark() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientRequestHead::set_has_timemark() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientRequestHead::clear_has_timemark() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientRequestHead::clear_timemark() {
  timemark_ = GOOGLE_LONGLONG(0);
  clear_has_timemark();
}
inline ::google_public::protobuf::int64 ClientRequestHead::timemark() const {
  // @@protoc_insertion_point(field_get:msg.ClientRequestHead.TimeMark)
  return timemark_;
}
inline void ClientRequestHead::set_timemark(::google_public::protobuf::int64 value) {
  set_has_timemark();
  timemark_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientRequestHead.TimeMark)
}

// -------------------------------------------------------------------

// ClientResponseHead

// optional int32 TestCode = 1;
inline bool ClientResponseHead::has_testcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientResponseHead::set_has_testcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientResponseHead::clear_has_testcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientResponseHead::clear_testcode() {
  testcode_ = 0;
  clear_has_testcode();
}
inline ::google_public::protobuf::int32 ClientResponseHead::testcode() const {
  // @@protoc_insertion_point(field_get:msg.ClientResponseHead.TestCode)
  return testcode_;
}
inline void ClientResponseHead::set_testcode(::google_public::protobuf::int32 value) {
  set_has_testcode();
  testcode_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientResponseHead.TestCode)
}

// optional int64 TimeMark = 2;
inline bool ClientResponseHead::has_timemark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientResponseHead::set_has_timemark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientResponseHead::clear_has_timemark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientResponseHead::clear_timemark() {
  timemark_ = GOOGLE_LONGLONG(0);
  clear_has_timemark();
}
inline ::google_public::protobuf::int64 ClientResponseHead::timemark() const {
  // @@protoc_insertion_point(field_get:msg.ClientResponseHead.TimeMark)
  return timemark_;
}
inline void ClientResponseHead::set_timemark(::google_public::protobuf::int64 value) {
  set_has_timemark();
  timemark_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientResponseHead.TimeMark)
}

// -------------------------------------------------------------------

// ServerMessageHead

// optional int32 ServerID = 1;
inline bool ServerMessageHead::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerMessageHead::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerMessageHead::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerMessageHead::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google_public::protobuf::int32 ServerMessageHead::serverid() const {
  // @@protoc_insertion_point(field_get:msg.ServerMessageHead.ServerID)
  return serverid_;
}
inline void ServerMessageHead::set_serverid(::google_public::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:msg.ServerMessageHead.ServerID)
}

// optional int64 TimeMark = 2;
inline bool ServerMessageHead::has_timemark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerMessageHead::set_has_timemark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerMessageHead::clear_has_timemark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerMessageHead::clear_timemark() {
  timemark_ = GOOGLE_LONGLONG(0);
  clear_has_timemark();
}
inline ::google_public::protobuf::int64 ServerMessageHead::timemark() const {
  // @@protoc_insertion_point(field_get:msg.ServerMessageHead.TimeMark)
  return timemark_;
}
inline void ServerMessageHead::set_timemark(::google_public::protobuf::int64 value) {
  set_has_timemark();
  timemark_ = value;
  // @@protoc_insertion_point(field_set:msg.ServerMessageHead.TimeMark)
}

// -------------------------------------------------------------------

// Response

// optional .msg.Status Status = 1;
inline bool Response::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::msg::Status Response::status() const {
  // @@protoc_insertion_point(field_get:msg.Response.Status)
  return static_cast< ::msg::Status >(status_);
}
inline void Response::set_status(::msg::Status value) {
  assert(::msg::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg.Response.Status)
}

// optional string Message = 2;
inline bool Response::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_message() {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& Response::message() const {
  // @@protoc_insertion_point(field_get:msg.Response.Message)
  return *message_;
}
inline void Response::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Response.Message)
}
inline void Response::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Response.Message)
}
inline void Response::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Response.Message)
}
inline ::std::string* Response::mutable_message() {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Response.Message)
  return message_;
}
inline ::std::string* Response::release_message() {
  clear_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Response::set_allocated_message(::std::string* message) {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Response.Message)
}

// -------------------------------------------------------------------

// RoomResponse

// optional int32 RoomID = 1;
inline bool RoomResponse::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomResponse::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomResponse::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomResponse::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 RoomResponse::roomid() const {
  // @@protoc_insertion_point(field_get:msg.RoomResponse.RoomID)
  return roomid_;
}
inline void RoomResponse::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomResponse.RoomID)
}

// optional .msg.Response Response = 2;
inline bool RoomResponse::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomResponse::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomResponse::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& RoomResponse::response() const {
  // @@protoc_insertion_point(field_get:msg.RoomResponse.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* RoomResponse::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.RoomResponse.Response)
  return response_;
}
inline ::msg::Response* RoomResponse::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void RoomResponse::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.RoomResponse.Response)
}

// -------------------------------------------------------------------

// ClientInfo

// optional string Mac = 1;
inline bool ClientInfo::has_mac() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientInfo::set_has_mac() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientInfo::clear_has_mac() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientInfo::clear_mac() {
  if (mac_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_->clear();
  }
  clear_has_mac();
}
inline const ::std::string& ClientInfo::mac() const {
  // @@protoc_insertion_point(field_get:msg.ClientInfo.Mac)
  return *mac_;
}
inline void ClientInfo::set_mac(const ::std::string& value) {
  set_has_mac();
  if (mac_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ClientInfo.Mac)
}
inline void ClientInfo::set_mac(const char* value) {
  set_has_mac();
  if (mac_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ClientInfo.Mac)
}
inline void ClientInfo::set_mac(const char* value, size_t size) {
  set_has_mac();
  if (mac_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ClientInfo.Mac)
}
inline ::std::string* ClientInfo::mutable_mac() {
  set_has_mac();
  if (mac_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ClientInfo.Mac)
  return mac_;
}
inline ::std::string* ClientInfo::release_mac() {
  clear_has_mac();
  if (mac_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mac_;
    mac_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientInfo::set_allocated_mac(::std::string* mac) {
  if (mac_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mac_;
  }
  if (mac) {
    set_has_mac();
    mac_ = mac;
  } else {
    clear_has_mac();
    mac_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ClientInfo.Mac)
}

// optional string Imsi = 2;
inline bool ClientInfo::has_imsi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientInfo::set_has_imsi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientInfo::clear_has_imsi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientInfo::clear_imsi() {
  if (imsi_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imsi_->clear();
  }
  clear_has_imsi();
}
inline const ::std::string& ClientInfo::imsi() const {
  // @@protoc_insertion_point(field_get:msg.ClientInfo.Imsi)
  return *imsi_;
}
inline void ClientInfo::set_imsi(const ::std::string& value) {
  set_has_imsi();
  if (imsi_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imsi_ = new ::std::string;
  }
  imsi_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ClientInfo.Imsi)
}
inline void ClientInfo::set_imsi(const char* value) {
  set_has_imsi();
  if (imsi_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imsi_ = new ::std::string;
  }
  imsi_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ClientInfo.Imsi)
}
inline void ClientInfo::set_imsi(const char* value, size_t size) {
  set_has_imsi();
  if (imsi_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imsi_ = new ::std::string;
  }
  imsi_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ClientInfo.Imsi)
}
inline ::std::string* ClientInfo::mutable_imsi() {
  set_has_imsi();
  if (imsi_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imsi_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ClientInfo.Imsi)
  return imsi_;
}
inline ::std::string* ClientInfo::release_imsi() {
  clear_has_imsi();
  if (imsi_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = imsi_;
    imsi_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientInfo::set_allocated_imsi(::std::string* imsi) {
  if (imsi_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete imsi_;
  }
  if (imsi) {
    set_has_imsi();
    imsi_ = imsi;
  } else {
    clear_has_imsi();
    imsi_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ClientInfo.Imsi)
}

// optional string screen_height_width = 3;
inline bool ClientInfo::has_screen_height_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientInfo::set_has_screen_height_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientInfo::clear_has_screen_height_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientInfo::clear_screen_height_width() {
  if (screen_height_width_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    screen_height_width_->clear();
  }
  clear_has_screen_height_width();
}
inline const ::std::string& ClientInfo::screen_height_width() const {
  // @@protoc_insertion_point(field_get:msg.ClientInfo.screen_height_width)
  return *screen_height_width_;
}
inline void ClientInfo::set_screen_height_width(const ::std::string& value) {
  set_has_screen_height_width();
  if (screen_height_width_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    screen_height_width_ = new ::std::string;
  }
  screen_height_width_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ClientInfo.screen_height_width)
}
inline void ClientInfo::set_screen_height_width(const char* value) {
  set_has_screen_height_width();
  if (screen_height_width_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    screen_height_width_ = new ::std::string;
  }
  screen_height_width_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ClientInfo.screen_height_width)
}
inline void ClientInfo::set_screen_height_width(const char* value, size_t size) {
  set_has_screen_height_width();
  if (screen_height_width_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    screen_height_width_ = new ::std::string;
  }
  screen_height_width_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ClientInfo.screen_height_width)
}
inline ::std::string* ClientInfo::mutable_screen_height_width() {
  set_has_screen_height_width();
  if (screen_height_width_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    screen_height_width_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ClientInfo.screen_height_width)
  return screen_height_width_;
}
inline ::std::string* ClientInfo::release_screen_height_width() {
  clear_has_screen_height_width();
  if (screen_height_width_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = screen_height_width_;
    screen_height_width_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientInfo::set_allocated_screen_height_width(::std::string* screen_height_width) {
  if (screen_height_width_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete screen_height_width_;
  }
  if (screen_height_width) {
    set_has_screen_height_width();
    screen_height_width_ = screen_height_width;
  } else {
    clear_has_screen_height_width();
    screen_height_width_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ClientInfo.screen_height_width)
}

// optional string Model = 4;
inline bool ClientInfo::has_model() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientInfo::set_has_model() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientInfo::clear_has_model() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientInfo::clear_model() {
  if (model_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_->clear();
  }
  clear_has_model();
}
inline const ::std::string& ClientInfo::model() const {
  // @@protoc_insertion_point(field_get:msg.ClientInfo.Model)
  return *model_;
}
inline void ClientInfo::set_model(const ::std::string& value) {
  set_has_model();
  if (model_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  model_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ClientInfo.Model)
}
inline void ClientInfo::set_model(const char* value) {
  set_has_model();
  if (model_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  model_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ClientInfo.Model)
}
inline void ClientInfo::set_model(const char* value, size_t size) {
  set_has_model();
  if (model_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ClientInfo.Model)
}
inline ::std::string* ClientInfo::mutable_model() {
  set_has_model();
  if (model_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ClientInfo.Model)
  return model_;
}
inline ::std::string* ClientInfo::release_model() {
  clear_has_model();
  if (model_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = model_;
    model_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientInfo::set_allocated_model(::std::string* model) {
  if (model_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete model_;
  }
  if (model) {
    set_has_model();
    model_ = model;
  } else {
    clear_has_model();
    model_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ClientInfo.Model)
}

// optional string SystemVersion = 5;
inline bool ClientInfo::has_systemversion() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientInfo::set_has_systemversion() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientInfo::clear_has_systemversion() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientInfo::clear_systemversion() {
  if (systemversion_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    systemversion_->clear();
  }
  clear_has_systemversion();
}
inline const ::std::string& ClientInfo::systemversion() const {
  // @@protoc_insertion_point(field_get:msg.ClientInfo.SystemVersion)
  return *systemversion_;
}
inline void ClientInfo::set_systemversion(const ::std::string& value) {
  set_has_systemversion();
  if (systemversion_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    systemversion_ = new ::std::string;
  }
  systemversion_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ClientInfo.SystemVersion)
}
inline void ClientInfo::set_systemversion(const char* value) {
  set_has_systemversion();
  if (systemversion_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    systemversion_ = new ::std::string;
  }
  systemversion_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ClientInfo.SystemVersion)
}
inline void ClientInfo::set_systemversion(const char* value, size_t size) {
  set_has_systemversion();
  if (systemversion_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    systemversion_ = new ::std::string;
  }
  systemversion_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ClientInfo.SystemVersion)
}
inline ::std::string* ClientInfo::mutable_systemversion() {
  set_has_systemversion();
  if (systemversion_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    systemversion_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ClientInfo.SystemVersion)
  return systemversion_;
}
inline ::std::string* ClientInfo::release_systemversion() {
  clear_has_systemversion();
  if (systemversion_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = systemversion_;
    systemversion_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientInfo::set_allocated_systemversion(::std::string* systemversion) {
  if (systemversion_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete systemversion_;
  }
  if (systemversion) {
    set_has_systemversion();
    systemversion_ = systemversion;
  } else {
    clear_has_systemversion();
    systemversion_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ClientInfo.SystemVersion)
}

// optional int32 Version = 6;
inline bool ClientInfo::has_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientInfo::set_has_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientInfo::clear_has_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientInfo::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google_public::protobuf::int32 ClientInfo::version() const {
  // @@protoc_insertion_point(field_get:msg.ClientInfo.Version)
  return version_;
}
inline void ClientInfo::set_version(::google_public::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientInfo.Version)
}

// optional .msg.Language Language = 7;
inline bool ClientInfo::has_language() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientInfo::set_has_language() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientInfo::clear_has_language() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientInfo::clear_language() {
  language_ = 1;
  clear_has_language();
}
inline ::msg::Language ClientInfo::language() const {
  // @@protoc_insertion_point(field_get:msg.ClientInfo.Language)
  return static_cast< ::msg::Language >(language_);
}
inline void ClientInfo::set_language(::msg::Language value) {
  assert(::msg::Language_IsValid(value));
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientInfo.Language)
}

// optional .msg.Platform Platform = 8;
inline bool ClientInfo::has_platform() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientInfo::set_has_platform() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientInfo::clear_has_platform() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientInfo::clear_platform() {
  platform_ = 1;
  clear_has_platform();
}
inline ::msg::Platform ClientInfo::platform() const {
  // @@protoc_insertion_point(field_get:msg.ClientInfo.Platform)
  return static_cast< ::msg::Platform >(platform_);
}
inline void ClientInfo::set_platform(::msg::Platform value) {
  assert(::msg::Platform_IsValid(value));
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientInfo.Platform)
}

// -------------------------------------------------------------------

// UserLoginInfo

// optional string UserName = 1;
inline bool UserLoginInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginInfo::clear_username() {
  if (username_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& UserLoginInfo::username() const {
  // @@protoc_insertion_point(field_get:msg.UserLoginInfo.UserName)
  return *username_;
}
inline void UserLoginInfo::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:msg.UserLoginInfo.UserName)
}
inline void UserLoginInfo::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.UserLoginInfo.UserName)
}
inline void UserLoginInfo::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.UserLoginInfo.UserName)
}
inline ::std::string* UserLoginInfo::mutable_username() {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.UserLoginInfo.UserName)
  return username_;
}
inline ::std::string* UserLoginInfo::release_username() {
  clear_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserLoginInfo::set_allocated_username(::std::string* username) {
  if (username_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.UserLoginInfo.UserName)
}

// optional string PassWord = 2;
inline bool UserLoginInfo::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginInfo::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginInfo::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginInfo::clear_password() {
  if (password_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& UserLoginInfo::password() const {
  // @@protoc_insertion_point(field_get:msg.UserLoginInfo.PassWord)
  return *password_;
}
inline void UserLoginInfo::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:msg.UserLoginInfo.PassWord)
}
inline void UserLoginInfo::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.UserLoginInfo.PassWord)
}
inline void UserLoginInfo::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.UserLoginInfo.PassWord)
}
inline ::std::string* UserLoginInfo::mutable_password() {
  set_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.UserLoginInfo.PassWord)
  return password_;
}
inline ::std::string* UserLoginInfo::release_password() {
  clear_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserLoginInfo::set_allocated_password(::std::string* password) {
  if (password_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.UserLoginInfo.PassWord)
}

// optional string phoneNum = 3;
inline bool UserLoginInfo::has_phonenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserLoginInfo::set_has_phonenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserLoginInfo::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserLoginInfo::clear_phonenum() {
  if (phonenum_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_->clear();
  }
  clear_has_phonenum();
}
inline const ::std::string& UserLoginInfo::phonenum() const {
  // @@protoc_insertion_point(field_get:msg.UserLoginInfo.phoneNum)
  return *phonenum_;
}
inline void UserLoginInfo::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  if (phonenum_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_ = new ::std::string;
  }
  phonenum_->assign(value);
  // @@protoc_insertion_point(field_set:msg.UserLoginInfo.phoneNum)
}
inline void UserLoginInfo::set_phonenum(const char* value) {
  set_has_phonenum();
  if (phonenum_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_ = new ::std::string;
  }
  phonenum_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.UserLoginInfo.phoneNum)
}
inline void UserLoginInfo::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  if (phonenum_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_ = new ::std::string;
  }
  phonenum_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.UserLoginInfo.phoneNum)
}
inline ::std::string* UserLoginInfo::mutable_phonenum() {
  set_has_phonenum();
  if (phonenum_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.UserLoginInfo.phoneNum)
  return phonenum_;
}
inline ::std::string* UserLoginInfo::release_phonenum() {
  clear_has_phonenum();
  if (phonenum_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phonenum_;
    phonenum_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserLoginInfo::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonenum_;
  }
  if (phonenum) {
    set_has_phonenum();
    phonenum_ = phonenum;
  } else {
    clear_has_phonenum();
    phonenum_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.UserLoginInfo.phoneNum)
}

// -------------------------------------------------------------------

// UserDetailInfo

// optional string NickName = 1;
inline bool UserDetailInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserDetailInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserDetailInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserDetailInfo::clear_nickname() {
  if (nickname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& UserDetailInfo::nickname() const {
  // @@protoc_insertion_point(field_get:msg.UserDetailInfo.NickName)
  return *nickname_;
}
inline void UserDetailInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.UserDetailInfo.NickName)
}
inline void UserDetailInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.UserDetailInfo.NickName)
}
inline void UserDetailInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.UserDetailInfo.NickName)
}
inline ::std::string* UserDetailInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.UserDetailInfo.NickName)
  return nickname_;
}
inline ::std::string* UserDetailInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserDetailInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.UserDetailInfo.NickName)
}

// optional string PicName = 2;
inline bool UserDetailInfo::has_picname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserDetailInfo::set_has_picname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserDetailInfo::clear_has_picname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserDetailInfo::clear_picname() {
  if (picname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_->clear();
  }
  clear_has_picname();
}
inline const ::std::string& UserDetailInfo::picname() const {
  // @@protoc_insertion_point(field_get:msg.UserDetailInfo.PicName)
  return *picname_;
}
inline void UserDetailInfo::set_picname(const ::std::string& value) {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  picname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.UserDetailInfo.PicName)
}
inline void UserDetailInfo::set_picname(const char* value) {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  picname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.UserDetailInfo.PicName)
}
inline void UserDetailInfo::set_picname(const char* value, size_t size) {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  picname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.UserDetailInfo.PicName)
}
inline ::std::string* UserDetailInfo::mutable_picname() {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.UserDetailInfo.PicName)
  return picname_;
}
inline ::std::string* UserDetailInfo::release_picname() {
  clear_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = picname_;
    picname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserDetailInfo::set_allocated_picname(::std::string* picname) {
  if (picname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete picname_;
  }
  if (picname) {
    set_has_picname();
    picname_ = picname;
  } else {
    clear_has_picname();
    picname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.UserDetailInfo.PicName)
}

// optional .msg.Sex Sex = 3;
inline bool UserDetailInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserDetailInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserDetailInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserDetailInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::msg::Sex UserDetailInfo::sex() const {
  // @@protoc_insertion_point(field_get:msg.UserDetailInfo.Sex)
  return static_cast< ::msg::Sex >(sex_);
}
inline void UserDetailInfo::set_sex(::msg::Sex value) {
  assert(::msg::Sex_IsValid(value));
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:msg.UserDetailInfo.Sex)
}

// optional int32 UserId = 4;
inline bool UserDetailInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserDetailInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserDetailInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserDetailInfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 UserDetailInfo::userid() const {
  // @@protoc_insertion_point(field_get:msg.UserDetailInfo.UserId)
  return userid_;
}
inline void UserDetailInfo::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.UserDetailInfo.UserId)
}

// -------------------------------------------------------------------

// Processor_1_VersionCheck

// optional .msg.Response Response = 1;
inline bool Processor_1_VersionCheck::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1_VersionCheck::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1_VersionCheck::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1_VersionCheck::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_1_VersionCheck::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1_VersionCheck.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_1_VersionCheck::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_1_VersionCheck.Response)
  return response_;
}
inline ::msg::Response* Processor_1_VersionCheck::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_1_VersionCheck::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_1_VersionCheck.Response)
}

// optional .msg.ServerInfo ResServerInfo = 2;
inline bool Processor_1_VersionCheck::has_resserverinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_1_VersionCheck::set_has_resserverinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_1_VersionCheck::clear_has_resserverinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_1_VersionCheck::clear_resserverinfo() {
  if (resserverinfo_ != NULL) resserverinfo_->::msg::ServerInfo::Clear();
  clear_has_resserverinfo();
}
inline const ::msg::ServerInfo& Processor_1_VersionCheck::resserverinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1_VersionCheck.ResServerInfo)
  return resserverinfo_ != NULL ? *resserverinfo_ : *default_instance_->resserverinfo_;
}
inline ::msg::ServerInfo* Processor_1_VersionCheck::mutable_resserverinfo() {
  set_has_resserverinfo();
  if (resserverinfo_ == NULL) resserverinfo_ = new ::msg::ServerInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_1_VersionCheck.ResServerInfo)
  return resserverinfo_;
}
inline ::msg::ServerInfo* Processor_1_VersionCheck::release_resserverinfo() {
  clear_has_resserverinfo();
  ::msg::ServerInfo* temp = resserverinfo_;
  resserverinfo_ = NULL;
  return temp;
}
inline void Processor_1_VersionCheck::set_allocated_resserverinfo(::msg::ServerInfo* resserverinfo) {
  delete resserverinfo_;
  resserverinfo_ = resserverinfo;
  if (resserverinfo) {
    set_has_resserverinfo();
  } else {
    clear_has_resserverinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_1_VersionCheck.ResServerInfo)
}

// optional .msg.VersionStatus VersionStatus = 3;
inline bool Processor_1_VersionCheck::has_versionstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_1_VersionCheck::set_has_versionstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_1_VersionCheck::clear_has_versionstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_1_VersionCheck::clear_versionstatus() {
  versionstatus_ = 0;
  clear_has_versionstatus();
}
inline ::msg::VersionStatus Processor_1_VersionCheck::versionstatus() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1_VersionCheck.VersionStatus)
  return static_cast< ::msg::VersionStatus >(versionstatus_);
}
inline void Processor_1_VersionCheck::set_versionstatus(::msg::VersionStatus value) {
  assert(::msg::VersionStatus_IsValid(value));
  set_has_versionstatus();
  versionstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1_VersionCheck.VersionStatus)
}

// optional string VersionCode = 4;
inline bool Processor_1_VersionCheck::has_versioncode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_1_VersionCheck::set_has_versioncode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_1_VersionCheck::clear_has_versioncode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_1_VersionCheck::clear_versioncode() {
  if (versioncode_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    versioncode_->clear();
  }
  clear_has_versioncode();
}
inline const ::std::string& Processor_1_VersionCheck::versioncode() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1_VersionCheck.VersionCode)
  return *versioncode_;
}
inline void Processor_1_VersionCheck::set_versioncode(const ::std::string& value) {
  set_has_versioncode();
  if (versioncode_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    versioncode_ = new ::std::string;
  }
  versioncode_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_1_VersionCheck.VersionCode)
}
inline void Processor_1_VersionCheck::set_versioncode(const char* value) {
  set_has_versioncode();
  if (versioncode_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    versioncode_ = new ::std::string;
  }
  versioncode_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_1_VersionCheck.VersionCode)
}
inline void Processor_1_VersionCheck::set_versioncode(const char* value, size_t size) {
  set_has_versioncode();
  if (versioncode_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    versioncode_ = new ::std::string;
  }
  versioncode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_1_VersionCheck.VersionCode)
}
inline ::std::string* Processor_1_VersionCheck::mutable_versioncode() {
  set_has_versioncode();
  if (versioncode_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    versioncode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_1_VersionCheck.VersionCode)
  return versioncode_;
}
inline ::std::string* Processor_1_VersionCheck::release_versioncode() {
  clear_has_versioncode();
  if (versioncode_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = versioncode_;
    versioncode_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_1_VersionCheck::set_allocated_versioncode(::std::string* versioncode) {
  if (versioncode_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete versioncode_;
  }
  if (versioncode) {
    set_has_versioncode();
    versioncode_ = versioncode;
  } else {
    clear_has_versioncode();
    versioncode_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_1_VersionCheck.VersionCode)
}

// optional string Url = 5;
inline bool Processor_1_VersionCheck::has_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_1_VersionCheck::set_has_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_1_VersionCheck::clear_has_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_1_VersionCheck::clear_url() {
  if (url_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& Processor_1_VersionCheck::url() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1_VersionCheck.Url)
  return *url_;
}
inline void Processor_1_VersionCheck::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_1_VersionCheck.Url)
}
inline void Processor_1_VersionCheck::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_1_VersionCheck.Url)
}
inline void Processor_1_VersionCheck::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_1_VersionCheck.Url)
}
inline ::std::string* Processor_1_VersionCheck::mutable_url() {
  set_has_url();
  if (url_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_1_VersionCheck.Url)
  return url_;
}
inline ::std::string* Processor_1_VersionCheck::release_url() {
  clear_has_url();
  if (url_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_1_VersionCheck::set_allocated_url(::std::string* url) {
  if (url_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_1_VersionCheck.Url)
}

// optional bool IsCheckVersion = 6;
inline bool Processor_1_VersionCheck::has_ischeckversion() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Processor_1_VersionCheck::set_has_ischeckversion() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Processor_1_VersionCheck::clear_has_ischeckversion() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Processor_1_VersionCheck::clear_ischeckversion() {
  ischeckversion_ = false;
  clear_has_ischeckversion();
}
inline bool Processor_1_VersionCheck::ischeckversion() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1_VersionCheck.IsCheckVersion)
  return ischeckversion_;
}
inline void Processor_1_VersionCheck::set_ischeckversion(bool value) {
  set_has_ischeckversion();
  ischeckversion_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1_VersionCheck.IsCheckVersion)
}

// -------------------------------------------------------------------

// Processor_10_LoginCoreServer

// optional string UserName = 1;
inline bool Processor_10_LoginCoreServer::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_10_LoginCoreServer::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_10_LoginCoreServer::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_10_LoginCoreServer::clear_username() {
  if (username_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& Processor_10_LoginCoreServer::username() const {
  // @@protoc_insertion_point(field_get:msg.Processor_10_LoginCoreServer.UserName)
  return *username_;
}
inline void Processor_10_LoginCoreServer::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_10_LoginCoreServer.UserName)
}
inline void Processor_10_LoginCoreServer::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_10_LoginCoreServer.UserName)
}
inline void Processor_10_LoginCoreServer::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_10_LoginCoreServer.UserName)
}
inline ::std::string* Processor_10_LoginCoreServer::mutable_username() {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_10_LoginCoreServer.UserName)
  return username_;
}
inline ::std::string* Processor_10_LoginCoreServer::release_username() {
  clear_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_10_LoginCoreServer::set_allocated_username(::std::string* username) {
  if (username_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_10_LoginCoreServer.UserName)
}

// optional string Password = 2;
inline bool Processor_10_LoginCoreServer::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_10_LoginCoreServer::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_10_LoginCoreServer::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_10_LoginCoreServer::clear_password() {
  if (password_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& Processor_10_LoginCoreServer::password() const {
  // @@protoc_insertion_point(field_get:msg.Processor_10_LoginCoreServer.Password)
  return *password_;
}
inline void Processor_10_LoginCoreServer::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_10_LoginCoreServer.Password)
}
inline void Processor_10_LoginCoreServer::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_10_LoginCoreServer.Password)
}
inline void Processor_10_LoginCoreServer::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_10_LoginCoreServer.Password)
}
inline ::std::string* Processor_10_LoginCoreServer::mutable_password() {
  set_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_10_LoginCoreServer.Password)
  return password_;
}
inline ::std::string* Processor_10_LoginCoreServer::release_password() {
  clear_has_password();
  if (password_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_10_LoginCoreServer::set_allocated_password(::std::string* password) {
  if (password_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_10_LoginCoreServer.Password)
}

// -------------------------------------------------------------------

// Processor_10_LoginCore

// optional int32 UserID = 1;
inline bool Processor_10_LoginCore::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_10_LoginCore::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_10_LoginCore::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_10_LoginCore::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_10_LoginCore::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_10_LoginCore.UserID)
  return userid_;
}
inline void Processor_10_LoginCore::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_10_LoginCore.UserID)
}

// optional .msg.Response Response = 2;
inline bool Processor_10_LoginCore::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_10_LoginCore::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_10_LoginCore::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_10_LoginCore::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_10_LoginCore::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_10_LoginCore.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_10_LoginCore::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_10_LoginCore.Response)
  return response_;
}
inline ::msg::Response* Processor_10_LoginCore::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_10_LoginCore::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_10_LoginCore.Response)
}

// -------------------------------------------------------------------

// Processor_11_CONSOLEHEARTJUMP

// -------------------------------------------------------------------

// Processor_30_UploadFile

// optional string FileName = 1;
inline bool Processor_30_UploadFile::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_30_UploadFile::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_30_UploadFile::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_30_UploadFile::clear_filename() {
  if (filename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& Processor_30_UploadFile::filename() const {
  // @@protoc_insertion_point(field_get:msg.Processor_30_UploadFile.FileName)
  return *filename_;
}
inline void Processor_30_UploadFile::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_30_UploadFile.FileName)
}
inline void Processor_30_UploadFile::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_30_UploadFile.FileName)
}
inline void Processor_30_UploadFile::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_30_UploadFile.FileName)
}
inline ::std::string* Processor_30_UploadFile::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_30_UploadFile.FileName)
  return filename_;
}
inline ::std::string* Processor_30_UploadFile::release_filename() {
  clear_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_30_UploadFile::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_30_UploadFile.FileName)
}

// optional bytes File = 2;
inline bool Processor_30_UploadFile::has_file() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_30_UploadFile::set_has_file() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_30_UploadFile::clear_has_file() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_30_UploadFile::clear_file() {
  if (file_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_->clear();
  }
  clear_has_file();
}
inline const ::std::string& Processor_30_UploadFile::file() const {
  // @@protoc_insertion_point(field_get:msg.Processor_30_UploadFile.File)
  return *file_;
}
inline void Processor_30_UploadFile::set_file(const ::std::string& value) {
  set_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  file_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_30_UploadFile.File)
}
inline void Processor_30_UploadFile::set_file(const char* value) {
  set_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  file_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_30_UploadFile.File)
}
inline void Processor_30_UploadFile::set_file(const void* value, size_t size) {
  set_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  file_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_30_UploadFile.File)
}
inline ::std::string* Processor_30_UploadFile::mutable_file() {
  set_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_30_UploadFile.File)
  return file_;
}
inline ::std::string* Processor_30_UploadFile::release_file() {
  clear_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = file_;
    file_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_30_UploadFile::set_allocated_file(::std::string* file) {
  if (file_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete file_;
  }
  if (file) {
    set_has_file();
    file_ = file;
  } else {
    clear_has_file();
    file_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_30_UploadFile.File)
}

// optional bool IsCompress = 3;
inline bool Processor_30_UploadFile::has_iscompress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_30_UploadFile::set_has_iscompress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_30_UploadFile::clear_has_iscompress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_30_UploadFile::clear_iscompress() {
  iscompress_ = false;
  clear_has_iscompress();
}
inline bool Processor_30_UploadFile::iscompress() const {
  // @@protoc_insertion_point(field_get:msg.Processor_30_UploadFile.IsCompress)
  return iscompress_;
}
inline void Processor_30_UploadFile::set_iscompress(bool value) {
  set_has_iscompress();
  iscompress_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_30_UploadFile.IsCompress)
}

// -------------------------------------------------------------------

// Processor_31_DownloadFile_UP

// optional string FileName = 1;
inline bool Processor_31_DownloadFile_UP::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_31_DownloadFile_UP::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_31_DownloadFile_UP::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_31_DownloadFile_UP::clear_filename() {
  if (filename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& Processor_31_DownloadFile_UP::filename() const {
  // @@protoc_insertion_point(field_get:msg.Processor_31_DownloadFile_UP.FileName)
  return *filename_;
}
inline void Processor_31_DownloadFile_UP::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_31_DownloadFile_UP.FileName)
}
inline void Processor_31_DownloadFile_UP::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_31_DownloadFile_UP.FileName)
}
inline void Processor_31_DownloadFile_UP::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_31_DownloadFile_UP.FileName)
}
inline ::std::string* Processor_31_DownloadFile_UP::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_31_DownloadFile_UP.FileName)
  return filename_;
}
inline ::std::string* Processor_31_DownloadFile_UP::release_filename() {
  clear_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_31_DownloadFile_UP::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_31_DownloadFile_UP.FileName)
}

// optional bool IsCompress = 2;
inline bool Processor_31_DownloadFile_UP::has_iscompress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_31_DownloadFile_UP::set_has_iscompress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_31_DownloadFile_UP::clear_has_iscompress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_31_DownloadFile_UP::clear_iscompress() {
  iscompress_ = false;
  clear_has_iscompress();
}
inline bool Processor_31_DownloadFile_UP::iscompress() const {
  // @@protoc_insertion_point(field_get:msg.Processor_31_DownloadFile_UP.IsCompress)
  return iscompress_;
}
inline void Processor_31_DownloadFile_UP::set_iscompress(bool value) {
  set_has_iscompress();
  iscompress_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_31_DownloadFile_UP.IsCompress)
}

// -------------------------------------------------------------------

// Processor_31_DownloadFile_DOWN

// optional .msg.Response response = 1;
inline bool Processor_31_DownloadFile_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_31_DownloadFile_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_31_DownloadFile_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_31_DownloadFile_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_31_DownloadFile_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_31_DownloadFile_DOWN.response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_31_DownloadFile_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_31_DownloadFile_DOWN.response)
  return response_;
}
inline ::msg::Response* Processor_31_DownloadFile_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_31_DownloadFile_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_31_DownloadFile_DOWN.response)
}

// optional bytes File = 2;
inline bool Processor_31_DownloadFile_DOWN::has_file() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_31_DownloadFile_DOWN::set_has_file() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_31_DownloadFile_DOWN::clear_has_file() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_31_DownloadFile_DOWN::clear_file() {
  if (file_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_->clear();
  }
  clear_has_file();
}
inline const ::std::string& Processor_31_DownloadFile_DOWN::file() const {
  // @@protoc_insertion_point(field_get:msg.Processor_31_DownloadFile_DOWN.File)
  return *file_;
}
inline void Processor_31_DownloadFile_DOWN::set_file(const ::std::string& value) {
  set_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  file_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_31_DownloadFile_DOWN.File)
}
inline void Processor_31_DownloadFile_DOWN::set_file(const char* value) {
  set_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  file_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_31_DownloadFile_DOWN.File)
}
inline void Processor_31_DownloadFile_DOWN::set_file(const void* value, size_t size) {
  set_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  file_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_31_DownloadFile_DOWN.File)
}
inline ::std::string* Processor_31_DownloadFile_DOWN::mutable_file() {
  set_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    file_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_31_DownloadFile_DOWN.File)
  return file_;
}
inline ::std::string* Processor_31_DownloadFile_DOWN::release_file() {
  clear_has_file();
  if (file_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = file_;
    file_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_31_DownloadFile_DOWN::set_allocated_file(::std::string* file) {
  if (file_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete file_;
  }
  if (file) {
    set_has_file();
    file_ = file;
  } else {
    clear_has_file();
    file_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_31_DownloadFile_DOWN.File)
}

// optional string FileName = 3;
inline bool Processor_31_DownloadFile_DOWN::has_filename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_31_DownloadFile_DOWN::set_has_filename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_31_DownloadFile_DOWN::clear_has_filename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_31_DownloadFile_DOWN::clear_filename() {
  if (filename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& Processor_31_DownloadFile_DOWN::filename() const {
  // @@protoc_insertion_point(field_get:msg.Processor_31_DownloadFile_DOWN.FileName)
  return *filename_;
}
inline void Processor_31_DownloadFile_DOWN::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_31_DownloadFile_DOWN.FileName)
}
inline void Processor_31_DownloadFile_DOWN::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_31_DownloadFile_DOWN.FileName)
}
inline void Processor_31_DownloadFile_DOWN::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_31_DownloadFile_DOWN.FileName)
}
inline ::std::string* Processor_31_DownloadFile_DOWN::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_31_DownloadFile_DOWN.FileName)
  return filename_;
}
inline ::std::string* Processor_31_DownloadFile_DOWN::release_filename() {
  clear_has_filename();
  if (filename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_31_DownloadFile_DOWN::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_31_DownloadFile_DOWN.FileName)
}

// -------------------------------------------------------------------

// Processor_97_SendVerificationByUserID

// optional string UserName = 1;
inline bool Processor_97_SendVerificationByUserID::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_97_SendVerificationByUserID::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_97_SendVerificationByUserID::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_97_SendVerificationByUserID::clear_username() {
  if (username_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& Processor_97_SendVerificationByUserID::username() const {
  // @@protoc_insertion_point(field_get:msg.Processor_97_SendVerificationByUserID.UserName)
  return *username_;
}
inline void Processor_97_SendVerificationByUserID::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_97_SendVerificationByUserID.UserName)
}
inline void Processor_97_SendVerificationByUserID::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_97_SendVerificationByUserID.UserName)
}
inline void Processor_97_SendVerificationByUserID::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_97_SendVerificationByUserID.UserName)
}
inline ::std::string* Processor_97_SendVerificationByUserID::mutable_username() {
  set_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_97_SendVerificationByUserID.UserName)
  return username_;
}
inline ::std::string* Processor_97_SendVerificationByUserID::release_username() {
  clear_has_username();
  if (username_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_97_SendVerificationByUserID::set_allocated_username(::std::string* username) {
  if (username_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_97_SendVerificationByUserID.UserName)
}

// -------------------------------------------------------------------

// Processor_98_ResetPassword

// optional .msg.UserLoginInfo LoginInfo = 1;
inline bool Processor_98_ResetPassword::has_logininfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_98_ResetPassword::set_has_logininfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_98_ResetPassword::clear_has_logininfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_98_ResetPassword::clear_logininfo() {
  if (logininfo_ != NULL) logininfo_->::msg::UserLoginInfo::Clear();
  clear_has_logininfo();
}
inline const ::msg::UserLoginInfo& Processor_98_ResetPassword::logininfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_98_ResetPassword.LoginInfo)
  return logininfo_ != NULL ? *logininfo_ : *default_instance_->logininfo_;
}
inline ::msg::UserLoginInfo* Processor_98_ResetPassword::mutable_logininfo() {
  set_has_logininfo();
  if (logininfo_ == NULL) logininfo_ = new ::msg::UserLoginInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_98_ResetPassword.LoginInfo)
  return logininfo_;
}
inline ::msg::UserLoginInfo* Processor_98_ResetPassword::release_logininfo() {
  clear_has_logininfo();
  ::msg::UserLoginInfo* temp = logininfo_;
  logininfo_ = NULL;
  return temp;
}
inline void Processor_98_ResetPassword::set_allocated_logininfo(::msg::UserLoginInfo* logininfo) {
  delete logininfo_;
  logininfo_ = logininfo;
  if (logininfo) {
    set_has_logininfo();
  } else {
    clear_has_logininfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_98_ResetPassword.LoginInfo)
}

// optional string Verification = 2;
inline bool Processor_98_ResetPassword::has_verification() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_98_ResetPassword::set_has_verification() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_98_ResetPassword::clear_has_verification() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_98_ResetPassword::clear_verification() {
  if (verification_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_->clear();
  }
  clear_has_verification();
}
inline const ::std::string& Processor_98_ResetPassword::verification() const {
  // @@protoc_insertion_point(field_get:msg.Processor_98_ResetPassword.Verification)
  return *verification_;
}
inline void Processor_98_ResetPassword::set_verification(const ::std::string& value) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_98_ResetPassword.Verification)
}
inline void Processor_98_ResetPassword::set_verification(const char* value) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_98_ResetPassword.Verification)
}
inline void Processor_98_ResetPassword::set_verification(const char* value, size_t size) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_98_ResetPassword.Verification)
}
inline ::std::string* Processor_98_ResetPassword::mutable_verification() {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_98_ResetPassword.Verification)
  return verification_;
}
inline ::std::string* Processor_98_ResetPassword::release_verification() {
  clear_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = verification_;
    verification_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_98_ResetPassword::set_allocated_verification(::std::string* verification) {
  if (verification_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete verification_;
  }
  if (verification) {
    set_has_verification();
    verification_ = verification;
  } else {
    clear_has_verification();
    verification_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_98_ResetPassword.Verification)
}

// -------------------------------------------------------------------

// Processor_99_Login_UP

// optional .msg.UserLoginInfo LoginInfo = 1;
inline bool Processor_99_Login_UP::has_logininfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_99_Login_UP::set_has_logininfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_99_Login_UP::clear_has_logininfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_99_Login_UP::clear_logininfo() {
  if (logininfo_ != NULL) logininfo_->::msg::UserLoginInfo::Clear();
  clear_has_logininfo();
}
inline const ::msg::UserLoginInfo& Processor_99_Login_UP::logininfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_99_Login_UP.LoginInfo)
  return logininfo_ != NULL ? *logininfo_ : *default_instance_->logininfo_;
}
inline ::msg::UserLoginInfo* Processor_99_Login_UP::mutable_logininfo() {
  set_has_logininfo();
  if (logininfo_ == NULL) logininfo_ = new ::msg::UserLoginInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_99_Login_UP.LoginInfo)
  return logininfo_;
}
inline ::msg::UserLoginInfo* Processor_99_Login_UP::release_logininfo() {
  clear_has_logininfo();
  ::msg::UserLoginInfo* temp = logininfo_;
  logininfo_ = NULL;
  return temp;
}
inline void Processor_99_Login_UP::set_allocated_logininfo(::msg::UserLoginInfo* logininfo) {
  delete logininfo_;
  logininfo_ = logininfo;
  if (logininfo) {
    set_has_logininfo();
  } else {
    clear_has_logininfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_99_Login_UP.LoginInfo)
}

// optional .msg.ClientInfo ClientInfo = 2;
inline bool Processor_99_Login_UP::has_clientinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_99_Login_UP::set_has_clientinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_99_Login_UP::clear_has_clientinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_99_Login_UP::clear_clientinfo() {
  if (clientinfo_ != NULL) clientinfo_->::msg::ClientInfo::Clear();
  clear_has_clientinfo();
}
inline const ::msg::ClientInfo& Processor_99_Login_UP::clientinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_99_Login_UP.ClientInfo)
  return clientinfo_ != NULL ? *clientinfo_ : *default_instance_->clientinfo_;
}
inline ::msg::ClientInfo* Processor_99_Login_UP::mutable_clientinfo() {
  set_has_clientinfo();
  if (clientinfo_ == NULL) clientinfo_ = new ::msg::ClientInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_99_Login_UP.ClientInfo)
  return clientinfo_;
}
inline ::msg::ClientInfo* Processor_99_Login_UP::release_clientinfo() {
  clear_has_clientinfo();
  ::msg::ClientInfo* temp = clientinfo_;
  clientinfo_ = NULL;
  return temp;
}
inline void Processor_99_Login_UP::set_allocated_clientinfo(::msg::ClientInfo* clientinfo) {
  delete clientinfo_;
  clientinfo_ = clientinfo;
  if (clientinfo) {
    set_has_clientinfo();
  } else {
    clear_has_clientinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_99_Login_UP.ClientInfo)
}

// -------------------------------------------------------------------

// Processor_99_Login_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_99_Login_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_99_Login_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_99_Login_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_99_Login_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_99_Login_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_99_Login_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_99_Login_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_99_Login_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_99_Login_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_99_Login_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_99_Login_DOWN.Response)
}

// optional .msg.ServerInfo FileServerInfo = 2;
inline bool Processor_99_Login_DOWN::has_fileserverinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_99_Login_DOWN::set_has_fileserverinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_99_Login_DOWN::clear_has_fileserverinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_99_Login_DOWN::clear_fileserverinfo() {
  if (fileserverinfo_ != NULL) fileserverinfo_->::msg::ServerInfo::Clear();
  clear_has_fileserverinfo();
}
inline const ::msg::ServerInfo& Processor_99_Login_DOWN::fileserverinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_99_Login_DOWN.FileServerInfo)
  return fileserverinfo_ != NULL ? *fileserverinfo_ : *default_instance_->fileserverinfo_;
}
inline ::msg::ServerInfo* Processor_99_Login_DOWN::mutable_fileserverinfo() {
  set_has_fileserverinfo();
  if (fileserverinfo_ == NULL) fileserverinfo_ = new ::msg::ServerInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_99_Login_DOWN.FileServerInfo)
  return fileserverinfo_;
}
inline ::msg::ServerInfo* Processor_99_Login_DOWN::release_fileserverinfo() {
  clear_has_fileserverinfo();
  ::msg::ServerInfo* temp = fileserverinfo_;
  fileserverinfo_ = NULL;
  return temp;
}
inline void Processor_99_Login_DOWN::set_allocated_fileserverinfo(::msg::ServerInfo* fileserverinfo) {
  delete fileserverinfo_;
  fileserverinfo_ = fileserverinfo;
  if (fileserverinfo) {
    set_has_fileserverinfo();
  } else {
    clear_has_fileserverinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_99_Login_DOWN.FileServerInfo)
}

// optional string Key = 3;
inline bool Processor_99_Login_DOWN::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_99_Login_DOWN::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_99_Login_DOWN::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_99_Login_DOWN::clear_key() {
  if (key_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& Processor_99_Login_DOWN::key() const {
  // @@protoc_insertion_point(field_get:msg.Processor_99_Login_DOWN.Key)
  return *key_;
}
inline void Processor_99_Login_DOWN::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_99_Login_DOWN.Key)
}
inline void Processor_99_Login_DOWN::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_99_Login_DOWN.Key)
}
inline void Processor_99_Login_DOWN::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_99_Login_DOWN.Key)
}
inline ::std::string* Processor_99_Login_DOWN::mutable_key() {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_99_Login_DOWN.Key)
  return key_;
}
inline ::std::string* Processor_99_Login_DOWN::release_key() {
  clear_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_99_Login_DOWN::set_allocated_key(::std::string* key) {
  if (key_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_99_Login_DOWN.Key)
}

// optional .msg.UserDetailInfo User = 4;
inline bool Processor_99_Login_DOWN::has_user() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_99_Login_DOWN::set_has_user() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_99_Login_DOWN::clear_has_user() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_99_Login_DOWN::clear_user() {
  if (user_ != NULL) user_->::msg::UserDetailInfo::Clear();
  clear_has_user();
}
inline const ::msg::UserDetailInfo& Processor_99_Login_DOWN::user() const {
  // @@protoc_insertion_point(field_get:msg.Processor_99_Login_DOWN.User)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::msg::UserDetailInfo* Processor_99_Login_DOWN::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_99_Login_DOWN.User)
  return user_;
}
inline ::msg::UserDetailInfo* Processor_99_Login_DOWN::release_user() {
  clear_has_user();
  ::msg::UserDetailInfo* temp = user_;
  user_ = NULL;
  return temp;
}
inline void Processor_99_Login_DOWN::set_allocated_user(::msg::UserDetailInfo* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_99_Login_DOWN.User)
}

// -------------------------------------------------------------------

// Processor_100_LoginResource

// optional string Key = 1;
inline bool Processor_100_LoginResource::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_100_LoginResource::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_100_LoginResource::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_100_LoginResource::clear_key() {
  if (key_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& Processor_100_LoginResource::key() const {
  // @@protoc_insertion_point(field_get:msg.Processor_100_LoginResource.Key)
  return *key_;
}
inline void Processor_100_LoginResource::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_100_LoginResource.Key)
}
inline void Processor_100_LoginResource::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_100_LoginResource.Key)
}
inline void Processor_100_LoginResource::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_100_LoginResource.Key)
}
inline ::std::string* Processor_100_LoginResource::mutable_key() {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_100_LoginResource.Key)
  return key_;
}
inline ::std::string* Processor_100_LoginResource::release_key() {
  clear_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_100_LoginResource::set_allocated_key(::std::string* key) {
  if (key_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_100_LoginResource.Key)
}

// -------------------------------------------------------------------

// Processor_100_LoginResource_Down

// optional .msg.Response Response = 1;
inline bool Processor_100_LoginResource_Down::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_100_LoginResource_Down::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_100_LoginResource_Down::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_100_LoginResource_Down::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_100_LoginResource_Down::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_100_LoginResource_Down.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_100_LoginResource_Down::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_100_LoginResource_Down.Response)
  return response_;
}
inline ::msg::Response* Processor_100_LoginResource_Down::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_100_LoginResource_Down::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_100_LoginResource_Down.Response)
}

// optional .msg.Processor_161_ReceiveChatMessage OfflineMessage = 2;
inline bool Processor_100_LoginResource_Down::has_offlinemessage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_100_LoginResource_Down::set_has_offlinemessage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_100_LoginResource_Down::clear_has_offlinemessage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_100_LoginResource_Down::clear_offlinemessage() {
  if (offlinemessage_ != NULL) offlinemessage_->::msg::Processor_161_ReceiveChatMessage::Clear();
  clear_has_offlinemessage();
}
inline const ::msg::Processor_161_ReceiveChatMessage& Processor_100_LoginResource_Down::offlinemessage() const {
  // @@protoc_insertion_point(field_get:msg.Processor_100_LoginResource_Down.OfflineMessage)
  return offlinemessage_ != NULL ? *offlinemessage_ : *default_instance_->offlinemessage_;
}
inline ::msg::Processor_161_ReceiveChatMessage* Processor_100_LoginResource_Down::mutable_offlinemessage() {
  set_has_offlinemessage();
  if (offlinemessage_ == NULL) offlinemessage_ = new ::msg::Processor_161_ReceiveChatMessage;
  // @@protoc_insertion_point(field_mutable:msg.Processor_100_LoginResource_Down.OfflineMessage)
  return offlinemessage_;
}
inline ::msg::Processor_161_ReceiveChatMessage* Processor_100_LoginResource_Down::release_offlinemessage() {
  clear_has_offlinemessage();
  ::msg::Processor_161_ReceiveChatMessage* temp = offlinemessage_;
  offlinemessage_ = NULL;
  return temp;
}
inline void Processor_100_LoginResource_Down::set_allocated_offlinemessage(::msg::Processor_161_ReceiveChatMessage* offlinemessage) {
  delete offlinemessage_;
  offlinemessage_ = offlinemessage;
  if (offlinemessage) {
    set_has_offlinemessage();
  } else {
    clear_has_offlinemessage();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_100_LoginResource_Down.OfflineMessage)
}

// optional .msg.Processor_123_ReceiveRequestList OfflineRequest = 3;
inline bool Processor_100_LoginResource_Down::has_offlinerequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_100_LoginResource_Down::set_has_offlinerequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_100_LoginResource_Down::clear_has_offlinerequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_100_LoginResource_Down::clear_offlinerequest() {
  if (offlinerequest_ != NULL) offlinerequest_->::msg::Processor_123_ReceiveRequestList::Clear();
  clear_has_offlinerequest();
}
inline const ::msg::Processor_123_ReceiveRequestList& Processor_100_LoginResource_Down::offlinerequest() const {
  // @@protoc_insertion_point(field_get:msg.Processor_100_LoginResource_Down.OfflineRequest)
  return offlinerequest_ != NULL ? *offlinerequest_ : *default_instance_->offlinerequest_;
}
inline ::msg::Processor_123_ReceiveRequestList* Processor_100_LoginResource_Down::mutable_offlinerequest() {
  set_has_offlinerequest();
  if (offlinerequest_ == NULL) offlinerequest_ = new ::msg::Processor_123_ReceiveRequestList;
  // @@protoc_insertion_point(field_mutable:msg.Processor_100_LoginResource_Down.OfflineRequest)
  return offlinerequest_;
}
inline ::msg::Processor_123_ReceiveRequestList* Processor_100_LoginResource_Down::release_offlinerequest() {
  clear_has_offlinerequest();
  ::msg::Processor_123_ReceiveRequestList* temp = offlinerequest_;
  offlinerequest_ = NULL;
  return temp;
}
inline void Processor_100_LoginResource_Down::set_allocated_offlinerequest(::msg::Processor_123_ReceiveRequestList* offlinerequest) {
  delete offlinerequest_;
  offlinerequest_ = offlinerequest;
  if (offlinerequest) {
    set_has_offlinerequest();
  } else {
    clear_has_offlinerequest();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_100_LoginResource_Down.OfflineRequest)
}

// optional .msg.ServerInfos RoomServerInfo = 4;
inline bool Processor_100_LoginResource_Down::has_roomserverinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_100_LoginResource_Down::set_has_roomserverinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_100_LoginResource_Down::clear_has_roomserverinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_100_LoginResource_Down::clear_roomserverinfo() {
  if (roomserverinfo_ != NULL) roomserverinfo_->::msg::ServerInfos::Clear();
  clear_has_roomserverinfo();
}
inline const ::msg::ServerInfos& Processor_100_LoginResource_Down::roomserverinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_100_LoginResource_Down.RoomServerInfo)
  return roomserverinfo_ != NULL ? *roomserverinfo_ : *default_instance_->roomserverinfo_;
}
inline ::msg::ServerInfos* Processor_100_LoginResource_Down::mutable_roomserverinfo() {
  set_has_roomserverinfo();
  if (roomserverinfo_ == NULL) roomserverinfo_ = new ::msg::ServerInfos;
  // @@protoc_insertion_point(field_mutable:msg.Processor_100_LoginResource_Down.RoomServerInfo)
  return roomserverinfo_;
}
inline ::msg::ServerInfos* Processor_100_LoginResource_Down::release_roomserverinfo() {
  clear_has_roomserverinfo();
  ::msg::ServerInfos* temp = roomserverinfo_;
  roomserverinfo_ = NULL;
  return temp;
}
inline void Processor_100_LoginResource_Down::set_allocated_roomserverinfo(::msg::ServerInfos* roomserverinfo) {
  delete roomserverinfo_;
  roomserverinfo_ = roomserverinfo;
  if (roomserverinfo) {
    set_has_roomserverinfo();
  } else {
    clear_has_roomserverinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_100_LoginResource_Down.RoomServerInfo)
}

// optional .msg.RoomInfomation RoomInfomation = 5;
inline bool Processor_100_LoginResource_Down::has_roominfomation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_100_LoginResource_Down::set_has_roominfomation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_100_LoginResource_Down::clear_has_roominfomation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_100_LoginResource_Down::clear_roominfomation() {
  if (roominfomation_ != NULL) roominfomation_->::msg::RoomInfomation::Clear();
  clear_has_roominfomation();
}
inline const ::msg::RoomInfomation& Processor_100_LoginResource_Down::roominfomation() const {
  // @@protoc_insertion_point(field_get:msg.Processor_100_LoginResource_Down.RoomInfomation)
  return roominfomation_ != NULL ? *roominfomation_ : *default_instance_->roominfomation_;
}
inline ::msg::RoomInfomation* Processor_100_LoginResource_Down::mutable_roominfomation() {
  set_has_roominfomation();
  if (roominfomation_ == NULL) roominfomation_ = new ::msg::RoomInfomation;
  // @@protoc_insertion_point(field_mutable:msg.Processor_100_LoginResource_Down.RoomInfomation)
  return roominfomation_;
}
inline ::msg::RoomInfomation* Processor_100_LoginResource_Down::release_roominfomation() {
  clear_has_roominfomation();
  ::msg::RoomInfomation* temp = roominfomation_;
  roominfomation_ = NULL;
  return temp;
}
inline void Processor_100_LoginResource_Down::set_allocated_roominfomation(::msg::RoomInfomation* roominfomation) {
  delete roominfomation_;
  roominfomation_ = roominfomation;
  if (roominfomation) {
    set_has_roominfomation();
  } else {
    clear_has_roominfomation();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_100_LoginResource_Down.RoomInfomation)
}

// -------------------------------------------------------------------

// RoomInfomation

// repeated .msg.CreateRoomInfo CreateRoomInfo = 1;
inline int RoomInfomation::createroominfo_size() const {
  return createroominfo_.size();
}
inline void RoomInfomation::clear_createroominfo() {
  createroominfo_.Clear();
}
inline const ::msg::CreateRoomInfo& RoomInfomation::createroominfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.RoomInfomation.CreateRoomInfo)
  return createroominfo_.Get(index);
}
inline ::msg::CreateRoomInfo* RoomInfomation::mutable_createroominfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.RoomInfomation.CreateRoomInfo)
  return createroominfo_.Mutable(index);
}
inline ::msg::CreateRoomInfo* RoomInfomation::add_createroominfo() {
  // @@protoc_insertion_point(field_add:msg.RoomInfomation.CreateRoomInfo)
  return createroominfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfo >&
RoomInfomation::createroominfo() const {
  // @@protoc_insertion_point(field_list:msg.RoomInfomation.CreateRoomInfo)
  return createroominfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfo >*
RoomInfomation::mutable_createroominfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.RoomInfomation.CreateRoomInfo)
  return &createroominfo_;
}

// repeated .msg.TournamentInfo TournamentSizeTemplate = 2;
inline int RoomInfomation::tournamentsizetemplate_size() const {
  return tournamentsizetemplate_.size();
}
inline void RoomInfomation::clear_tournamentsizetemplate() {
  tournamentsizetemplate_.Clear();
}
inline const ::msg::TournamentInfo& RoomInfomation::tournamentsizetemplate(int index) const {
  // @@protoc_insertion_point(field_get:msg.RoomInfomation.TournamentSizeTemplate)
  return tournamentsizetemplate_.Get(index);
}
inline ::msg::TournamentInfo* RoomInfomation::mutable_tournamentsizetemplate(int index) {
  // @@protoc_insertion_point(field_mutable:msg.RoomInfomation.TournamentSizeTemplate)
  return tournamentsizetemplate_.Mutable(index);
}
inline ::msg::TournamentInfo* RoomInfomation::add_tournamentsizetemplate() {
  // @@protoc_insertion_point(field_add:msg.RoomInfomation.TournamentSizeTemplate)
  return tournamentsizetemplate_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo >&
RoomInfomation::tournamentsizetemplate() const {
  // @@protoc_insertion_point(field_list:msg.RoomInfomation.TournamentSizeTemplate)
  return tournamentsizetemplate_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo >*
RoomInfomation::mutable_tournamentsizetemplate() {
  // @@protoc_insertion_point(field_mutable_list:msg.RoomInfomation.TournamentSizeTemplate)
  return &tournamentsizetemplate_;
}

// repeated .msg.TournamentInfo TournamentSpeedTemplate = 3;
inline int RoomInfomation::tournamentspeedtemplate_size() const {
  return tournamentspeedtemplate_.size();
}
inline void RoomInfomation::clear_tournamentspeedtemplate() {
  tournamentspeedtemplate_.Clear();
}
inline const ::msg::TournamentInfo& RoomInfomation::tournamentspeedtemplate(int index) const {
  // @@protoc_insertion_point(field_get:msg.RoomInfomation.TournamentSpeedTemplate)
  return tournamentspeedtemplate_.Get(index);
}
inline ::msg::TournamentInfo* RoomInfomation::mutable_tournamentspeedtemplate(int index) {
  // @@protoc_insertion_point(field_mutable:msg.RoomInfomation.TournamentSpeedTemplate)
  return tournamentspeedtemplate_.Mutable(index);
}
inline ::msg::TournamentInfo* RoomInfomation::add_tournamentspeedtemplate() {
  // @@protoc_insertion_point(field_add:msg.RoomInfomation.TournamentSpeedTemplate)
  return tournamentspeedtemplate_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo >&
RoomInfomation::tournamentspeedtemplate() const {
  // @@protoc_insertion_point(field_list:msg.RoomInfomation.TournamentSpeedTemplate)
  return tournamentspeedtemplate_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::TournamentInfo >*
RoomInfomation::mutable_tournamentspeedtemplate() {
  // @@protoc_insertion_point(field_mutable_list:msg.RoomInfomation.TournamentSpeedTemplate)
  return &tournamentspeedtemplate_;
}

// optional .msg.Property Blindtime = 4;
inline bool RoomInfomation::has_blindtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomInfomation::set_has_blindtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomInfomation::clear_has_blindtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomInfomation::clear_blindtime() {
  if (blindtime_ != NULL) blindtime_->::msg::Property::Clear();
  clear_has_blindtime();
}
inline const ::msg::Property& RoomInfomation::blindtime() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfomation.Blindtime)
  return blindtime_ != NULL ? *blindtime_ : *default_instance_->blindtime_;
}
inline ::msg::Property* RoomInfomation::mutable_blindtime() {
  set_has_blindtime();
  if (blindtime_ == NULL) blindtime_ = new ::msg::Property;
  // @@protoc_insertion_point(field_mutable:msg.RoomInfomation.Blindtime)
  return blindtime_;
}
inline ::msg::Property* RoomInfomation::release_blindtime() {
  clear_has_blindtime();
  ::msg::Property* temp = blindtime_;
  blindtime_ = NULL;
  return temp;
}
inline void RoomInfomation::set_allocated_blindtime(::msg::Property* blindtime) {
  delete blindtime_;
  blindtime_ = blindtime;
  if (blindtime) {
    set_has_blindtime();
  } else {
    clear_has_blindtime();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.RoomInfomation.Blindtime)
}

// -------------------------------------------------------------------

// Property

// optional string Name = 1;
inline bool Property::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Property::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Property::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Property::clear_name() {
  if (name_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Property::name() const {
  // @@protoc_insertion_point(field_get:msg.Property.Name)
  return *name_;
}
inline void Property::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Property.Name)
}
inline void Property::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Property.Name)
}
inline void Property::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Property.Name)
}
inline ::std::string* Property::mutable_name() {
  set_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Property.Name)
  return name_;
}
inline ::std::string* Property::release_name() {
  clear_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Property::set_allocated_name(::std::string* name) {
  if (name_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Property.Name)
}

// optional .msg.IntValue IntValue = 2;
inline bool Property::has_intvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Property::set_has_intvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Property::clear_has_intvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Property::clear_intvalue() {
  if (intvalue_ != NULL) intvalue_->::msg::IntValue::Clear();
  clear_has_intvalue();
}
inline const ::msg::IntValue& Property::intvalue() const {
  // @@protoc_insertion_point(field_get:msg.Property.IntValue)
  return intvalue_ != NULL ? *intvalue_ : *default_instance_->intvalue_;
}
inline ::msg::IntValue* Property::mutable_intvalue() {
  set_has_intvalue();
  if (intvalue_ == NULL) intvalue_ = new ::msg::IntValue;
  // @@protoc_insertion_point(field_mutable:msg.Property.IntValue)
  return intvalue_;
}
inline ::msg::IntValue* Property::release_intvalue() {
  clear_has_intvalue();
  ::msg::IntValue* temp = intvalue_;
  intvalue_ = NULL;
  return temp;
}
inline void Property::set_allocated_intvalue(::msg::IntValue* intvalue) {
  delete intvalue_;
  intvalue_ = intvalue;
  if (intvalue) {
    set_has_intvalue();
  } else {
    clear_has_intvalue();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Property.IntValue)
}

// optional bool BoolValue = 3;
inline bool Property::has_boolvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Property::set_has_boolvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Property::clear_has_boolvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Property::clear_boolvalue() {
  boolvalue_ = false;
  clear_has_boolvalue();
}
inline bool Property::boolvalue() const {
  // @@protoc_insertion_point(field_get:msg.Property.BoolValue)
  return boolvalue_;
}
inline void Property::set_boolvalue(bool value) {
  set_has_boolvalue();
  boolvalue_ = value;
  // @@protoc_insertion_point(field_set:msg.Property.BoolValue)
}

// optional string StringValue = 4;
inline bool Property::has_stringvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Property::set_has_stringvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Property::clear_has_stringvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Property::clear_stringvalue() {
  if (stringvalue_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_->clear();
  }
  clear_has_stringvalue();
}
inline const ::std::string& Property::stringvalue() const {
  // @@protoc_insertion_point(field_get:msg.Property.StringValue)
  return *stringvalue_;
}
inline void Property::set_stringvalue(const ::std::string& value) {
  set_has_stringvalue();
  if (stringvalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_ = new ::std::string;
  }
  stringvalue_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Property.StringValue)
}
inline void Property::set_stringvalue(const char* value) {
  set_has_stringvalue();
  if (stringvalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_ = new ::std::string;
  }
  stringvalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Property.StringValue)
}
inline void Property::set_stringvalue(const char* value, size_t size) {
  set_has_stringvalue();
  if (stringvalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_ = new ::std::string;
  }
  stringvalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Property.StringValue)
}
inline ::std::string* Property::mutable_stringvalue() {
  set_has_stringvalue();
  if (stringvalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stringvalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Property.StringValue)
  return stringvalue_;
}
inline ::std::string* Property::release_stringvalue() {
  clear_has_stringvalue();
  if (stringvalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stringvalue_;
    stringvalue_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Property::set_allocated_stringvalue(::std::string* stringvalue) {
  if (stringvalue_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stringvalue_;
  }
  if (stringvalue) {
    set_has_stringvalue();
    stringvalue_ = stringvalue;
  } else {
    clear_has_stringvalue();
    stringvalue_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Property.StringValue)
}

// optional string DisplayName = 5;
inline bool Property::has_displayname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Property::set_has_displayname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Property::clear_has_displayname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Property::clear_displayname() {
  if (displayname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    displayname_->clear();
  }
  clear_has_displayname();
}
inline const ::std::string& Property::displayname() const {
  // @@protoc_insertion_point(field_get:msg.Property.DisplayName)
  return *displayname_;
}
inline void Property::set_displayname(const ::std::string& value) {
  set_has_displayname();
  if (displayname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    displayname_ = new ::std::string;
  }
  displayname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Property.DisplayName)
}
inline void Property::set_displayname(const char* value) {
  set_has_displayname();
  if (displayname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    displayname_ = new ::std::string;
  }
  displayname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Property.DisplayName)
}
inline void Property::set_displayname(const char* value, size_t size) {
  set_has_displayname();
  if (displayname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    displayname_ = new ::std::string;
  }
  displayname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Property.DisplayName)
}
inline ::std::string* Property::mutable_displayname() {
  set_has_displayname();
  if (displayname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    displayname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Property.DisplayName)
  return displayname_;
}
inline ::std::string* Property::release_displayname() {
  clear_has_displayname();
  if (displayname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = displayname_;
    displayname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Property::set_allocated_displayname(::std::string* displayname) {
  if (displayname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displayname_;
  }
  if (displayname) {
    set_has_displayname();
    displayname_ = displayname;
  } else {
    clear_has_displayname();
    displayname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Property.DisplayName)
}

// optional .msg.PropertyType Type = 6;
inline bool Property::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Property::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Property::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Property::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::msg::PropertyType Property::type() const {
  // @@protoc_insertion_point(field_get:msg.Property.Type)
  return static_cast< ::msg::PropertyType >(type_);
}
inline void Property::set_type(::msg::PropertyType value) {
  assert(::msg::PropertyType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.Property.Type)
}

// optional .msg.EnumValue EnumValue = 7;
inline bool Property::has_enumvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Property::set_has_enumvalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Property::clear_has_enumvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Property::clear_enumvalue() {
  if (enumvalue_ != NULL) enumvalue_->::msg::EnumValue::Clear();
  clear_has_enumvalue();
}
inline const ::msg::EnumValue& Property::enumvalue() const {
  // @@protoc_insertion_point(field_get:msg.Property.EnumValue)
  return enumvalue_ != NULL ? *enumvalue_ : *default_instance_->enumvalue_;
}
inline ::msg::EnumValue* Property::mutable_enumvalue() {
  set_has_enumvalue();
  if (enumvalue_ == NULL) enumvalue_ = new ::msg::EnumValue;
  // @@protoc_insertion_point(field_mutable:msg.Property.EnumValue)
  return enumvalue_;
}
inline ::msg::EnumValue* Property::release_enumvalue() {
  clear_has_enumvalue();
  ::msg::EnumValue* temp = enumvalue_;
  enumvalue_ = NULL;
  return temp;
}
inline void Property::set_allocated_enumvalue(::msg::EnumValue* enumvalue) {
  delete enumvalue_;
  enumvalue_ = enumvalue;
  if (enumvalue) {
    set_has_enumvalue();
  } else {
    clear_has_enumvalue();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Property.EnumValue)
}

// optional bool Primary = 8;
inline bool Property::has_primary() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Property::set_has_primary() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Property::clear_has_primary() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Property::clear_primary() {
  primary_ = false;
  clear_has_primary();
}
inline bool Property::primary() const {
  // @@protoc_insertion_point(field_get:msg.Property.Primary)
  return primary_;
}
inline void Property::set_primary(bool value) {
  set_has_primary();
  primary_ = value;
  // @@protoc_insertion_point(field_set:msg.Property.Primary)
}

// -------------------------------------------------------------------

// IntValue

// optional int32 Value = 1;
inline bool IntValue::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntValue::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntValue::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google_public::protobuf::int32 IntValue::value() const {
  // @@protoc_insertion_point(field_get:msg.IntValue.Value)
  return value_;
}
inline void IntValue::set_value(::google_public::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg.IntValue.Value)
}

// optional string Max = 2;
inline bool IntValue::has_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntValue::set_has_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntValue::clear_has_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntValue::clear_max() {
  if (max_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_->clear();
  }
  clear_has_max();
}
inline const ::std::string& IntValue::max() const {
  // @@protoc_insertion_point(field_get:msg.IntValue.Max)
  return *max_;
}
inline void IntValue::set_max(const ::std::string& value) {
  set_has_max();
  if (max_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_ = new ::std::string;
  }
  max_->assign(value);
  // @@protoc_insertion_point(field_set:msg.IntValue.Max)
}
inline void IntValue::set_max(const char* value) {
  set_has_max();
  if (max_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_ = new ::std::string;
  }
  max_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.IntValue.Max)
}
inline void IntValue::set_max(const char* value, size_t size) {
  set_has_max();
  if (max_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_ = new ::std::string;
  }
  max_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.IntValue.Max)
}
inline ::std::string* IntValue::mutable_max() {
  set_has_max();
  if (max_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.IntValue.Max)
  return max_;
}
inline ::std::string* IntValue::release_max() {
  clear_has_max();
  if (max_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = max_;
    max_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IntValue::set_allocated_max(::std::string* max) {
  if (max_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete max_;
  }
  if (max) {
    set_has_max();
    max_ = max;
  } else {
    clear_has_max();
    max_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.IntValue.Max)
}

// optional string Min = 3;
inline bool IntValue::has_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IntValue::set_has_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IntValue::clear_has_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IntValue::clear_min() {
  if (min_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_->clear();
  }
  clear_has_min();
}
inline const ::std::string& IntValue::min() const {
  // @@protoc_insertion_point(field_get:msg.IntValue.Min)
  return *min_;
}
inline void IntValue::set_min(const ::std::string& value) {
  set_has_min();
  if (min_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_ = new ::std::string;
  }
  min_->assign(value);
  // @@protoc_insertion_point(field_set:msg.IntValue.Min)
}
inline void IntValue::set_min(const char* value) {
  set_has_min();
  if (min_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_ = new ::std::string;
  }
  min_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.IntValue.Min)
}
inline void IntValue::set_min(const char* value, size_t size) {
  set_has_min();
  if (min_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_ = new ::std::string;
  }
  min_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.IntValue.Min)
}
inline ::std::string* IntValue::mutable_min() {
  set_has_min();
  if (min_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.IntValue.Min)
  return min_;
}
inline ::std::string* IntValue::release_min() {
  clear_has_min();
  if (min_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = min_;
    min_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IntValue::set_allocated_min(::std::string* min) {
  if (min_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete min_;
  }
  if (min) {
    set_has_min();
    min_ = min;
  } else {
    clear_has_min();
    min_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.IntValue.Min)
}

// repeated int32 DefaultValue = 4;
inline int IntValue::defaultvalue_size() const {
  return defaultvalue_.size();
}
inline void IntValue::clear_defaultvalue() {
  defaultvalue_.Clear();
}
inline ::google_public::protobuf::int32 IntValue::defaultvalue(int index) const {
  // @@protoc_insertion_point(field_get:msg.IntValue.DefaultValue)
  return defaultvalue_.Get(index);
}
inline void IntValue::set_defaultvalue(int index, ::google_public::protobuf::int32 value) {
  defaultvalue_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.IntValue.DefaultValue)
}
inline void IntValue::add_defaultvalue(::google_public::protobuf::int32 value) {
  defaultvalue_.Add(value);
  // @@protoc_insertion_point(field_add:msg.IntValue.DefaultValue)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
IntValue::defaultvalue() const {
  // @@protoc_insertion_point(field_list:msg.IntValue.DefaultValue)
  return defaultvalue_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
IntValue::mutable_defaultvalue() {
  // @@protoc_insertion_point(field_mutable_list:msg.IntValue.DefaultValue)
  return &defaultvalue_;
}

// -------------------------------------------------------------------

// EnumValue

// optional int32 Value = 1;
inline bool EnumValue::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnumValue::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnumValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnumValue::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google_public::protobuf::int32 EnumValue::value() const {
  // @@protoc_insertion_point(field_get:msg.EnumValue.Value)
  return value_;
}
inline void EnumValue::set_value(::google_public::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg.EnumValue.Value)
}

// repeated .msg.EnumItem Items = 2;
inline int EnumValue::items_size() const {
  return items_.size();
}
inline void EnumValue::clear_items() {
  items_.Clear();
}
inline const ::msg::EnumItem& EnumValue::items(int index) const {
  // @@protoc_insertion_point(field_get:msg.EnumValue.Items)
  return items_.Get(index);
}
inline ::msg::EnumItem* EnumValue::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:msg.EnumValue.Items)
  return items_.Mutable(index);
}
inline ::msg::EnumItem* EnumValue::add_items() {
  // @@protoc_insertion_point(field_add:msg.EnumValue.Items)
  return items_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::EnumItem >&
EnumValue::items() const {
  // @@protoc_insertion_point(field_list:msg.EnumValue.Items)
  return items_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::EnumItem >*
EnumValue::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:msg.EnumValue.Items)
  return &items_;
}

// -------------------------------------------------------------------

// EnumItem

// optional int32 Value = 1;
inline bool EnumItem::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnumItem::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnumItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnumItem::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google_public::protobuf::int32 EnumItem::value() const {
  // @@protoc_insertion_point(field_get:msg.EnumItem.Value)
  return value_;
}
inline void EnumItem::set_value(::google_public::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg.EnumItem.Value)
}

// optional string Text = 2;
inline bool EnumItem::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnumItem::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnumItem::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnumItem::clear_text() {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& EnumItem::text() const {
  // @@protoc_insertion_point(field_get:msg.EnumItem.Text)
  return *text_;
}
inline void EnumItem::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:msg.EnumItem.Text)
}
inline void EnumItem::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.EnumItem.Text)
}
inline void EnumItem::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.EnumItem.Text)
}
inline ::std::string* EnumItem::mutable_text() {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.EnumItem.Text)
  return text_;
}
inline ::std::string* EnumItem::release_text() {
  clear_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EnumItem::set_allocated_text(::std::string* text) {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.EnumItem.Text)
}

// -------------------------------------------------------------------

// Processor_103_FeedBack

// optional .msg.FeedBack FeedBack = 1;
inline bool Processor_103_FeedBack::has_feedback() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_103_FeedBack::set_has_feedback() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_103_FeedBack::clear_has_feedback() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_103_FeedBack::clear_feedback() {
  if (feedback_ != NULL) feedback_->::msg::FeedBack::Clear();
  clear_has_feedback();
}
inline const ::msg::FeedBack& Processor_103_FeedBack::feedback() const {
  // @@protoc_insertion_point(field_get:msg.Processor_103_FeedBack.FeedBack)
  return feedback_ != NULL ? *feedback_ : *default_instance_->feedback_;
}
inline ::msg::FeedBack* Processor_103_FeedBack::mutable_feedback() {
  set_has_feedback();
  if (feedback_ == NULL) feedback_ = new ::msg::FeedBack;
  // @@protoc_insertion_point(field_mutable:msg.Processor_103_FeedBack.FeedBack)
  return feedback_;
}
inline ::msg::FeedBack* Processor_103_FeedBack::release_feedback() {
  clear_has_feedback();
  ::msg::FeedBack* temp = feedback_;
  feedback_ = NULL;
  return temp;
}
inline void Processor_103_FeedBack::set_allocated_feedback(::msg::FeedBack* feedback) {
  delete feedback_;
  feedback_ = feedback;
  if (feedback) {
    set_has_feedback();
  } else {
    clear_has_feedback();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_103_FeedBack.FeedBack)
}

// -------------------------------------------------------------------

// Processor_104_Register

// optional .msg.UserLoginInfo LoginInfo = 1;
inline bool Processor_104_Register::has_logininfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_104_Register::set_has_logininfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_104_Register::clear_has_logininfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_104_Register::clear_logininfo() {
  if (logininfo_ != NULL) logininfo_->::msg::UserLoginInfo::Clear();
  clear_has_logininfo();
}
inline const ::msg::UserLoginInfo& Processor_104_Register::logininfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_104_Register.LoginInfo)
  return logininfo_ != NULL ? *logininfo_ : *default_instance_->logininfo_;
}
inline ::msg::UserLoginInfo* Processor_104_Register::mutable_logininfo() {
  set_has_logininfo();
  if (logininfo_ == NULL) logininfo_ = new ::msg::UserLoginInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_104_Register.LoginInfo)
  return logininfo_;
}
inline ::msg::UserLoginInfo* Processor_104_Register::release_logininfo() {
  clear_has_logininfo();
  ::msg::UserLoginInfo* temp = logininfo_;
  logininfo_ = NULL;
  return temp;
}
inline void Processor_104_Register::set_allocated_logininfo(::msg::UserLoginInfo* logininfo) {
  delete logininfo_;
  logininfo_ = logininfo;
  if (logininfo) {
    set_has_logininfo();
  } else {
    clear_has_logininfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_104_Register.LoginInfo)
}

// optional string Referee = 2;
inline bool Processor_104_Register::has_referee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_104_Register::set_has_referee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_104_Register::clear_has_referee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_104_Register::clear_referee() {
  if (referee_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referee_->clear();
  }
  clear_has_referee();
}
inline const ::std::string& Processor_104_Register::referee() const {
  // @@protoc_insertion_point(field_get:msg.Processor_104_Register.Referee)
  return *referee_;
}
inline void Processor_104_Register::set_referee(const ::std::string& value) {
  set_has_referee();
  if (referee_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referee_ = new ::std::string;
  }
  referee_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_104_Register.Referee)
}
inline void Processor_104_Register::set_referee(const char* value) {
  set_has_referee();
  if (referee_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referee_ = new ::std::string;
  }
  referee_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_104_Register.Referee)
}
inline void Processor_104_Register::set_referee(const char* value, size_t size) {
  set_has_referee();
  if (referee_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referee_ = new ::std::string;
  }
  referee_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_104_Register.Referee)
}
inline ::std::string* Processor_104_Register::mutable_referee() {
  set_has_referee();
  if (referee_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referee_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_104_Register.Referee)
  return referee_;
}
inline ::std::string* Processor_104_Register::release_referee() {
  clear_has_referee();
  if (referee_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = referee_;
    referee_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_104_Register::set_allocated_referee(::std::string* referee) {
  if (referee_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referee_;
  }
  if (referee) {
    set_has_referee();
    referee_ = referee;
  } else {
    clear_has_referee();
    referee_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_104_Register.Referee)
}

// optional string PhoneNumber = 3;
inline bool Processor_104_Register::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_104_Register::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_104_Register::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_104_Register::clear_phonenumber() {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_->clear();
  }
  clear_has_phonenumber();
}
inline const ::std::string& Processor_104_Register::phonenumber() const {
  // @@protoc_insertion_point(field_get:msg.Processor_104_Register.PhoneNumber)
  return *phonenumber_;
}
inline void Processor_104_Register::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_104_Register.PhoneNumber)
}
inline void Processor_104_Register::set_phonenumber(const char* value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_104_Register.PhoneNumber)
}
inline void Processor_104_Register::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_104_Register.PhoneNumber)
}
inline ::std::string* Processor_104_Register::mutable_phonenumber() {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_104_Register.PhoneNumber)
  return phonenumber_;
}
inline ::std::string* Processor_104_Register::release_phonenumber() {
  clear_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phonenumber_;
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_104_Register::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonenumber_;
  }
  if (phonenumber) {
    set_has_phonenumber();
    phonenumber_ = phonenumber;
  } else {
    clear_has_phonenumber();
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_104_Register.PhoneNumber)
}

// optional string Verification = 4;
inline bool Processor_104_Register::has_verification() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_104_Register::set_has_verification() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_104_Register::clear_has_verification() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_104_Register::clear_verification() {
  if (verification_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_->clear();
  }
  clear_has_verification();
}
inline const ::std::string& Processor_104_Register::verification() const {
  // @@protoc_insertion_point(field_get:msg.Processor_104_Register.Verification)
  return *verification_;
}
inline void Processor_104_Register::set_verification(const ::std::string& value) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_104_Register.Verification)
}
inline void Processor_104_Register::set_verification(const char* value) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_104_Register.Verification)
}
inline void Processor_104_Register::set_verification(const char* value, size_t size) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_104_Register.Verification)
}
inline ::std::string* Processor_104_Register::mutable_verification() {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_104_Register.Verification)
  return verification_;
}
inline ::std::string* Processor_104_Register::release_verification() {
  clear_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = verification_;
    verification_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_104_Register::set_allocated_verification(::std::string* verification) {
  if (verification_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete verification_;
  }
  if (verification) {
    set_has_verification();
    verification_ = verification;
  } else {
    clear_has_verification();
    verification_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_104_Register.Verification)
}

// -------------------------------------------------------------------

// Processor_105_Device

// optional string devicetoken = 1;
inline bool Processor_105_Device::has_devicetoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_105_Device::set_has_devicetoken() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_105_Device::clear_has_devicetoken() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_105_Device::clear_devicetoken() {
  if (devicetoken_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetoken_->clear();
  }
  clear_has_devicetoken();
}
inline const ::std::string& Processor_105_Device::devicetoken() const {
  // @@protoc_insertion_point(field_get:msg.Processor_105_Device.devicetoken)
  return *devicetoken_;
}
inline void Processor_105_Device::set_devicetoken(const ::std::string& value) {
  set_has_devicetoken();
  if (devicetoken_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetoken_ = new ::std::string;
  }
  devicetoken_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_105_Device.devicetoken)
}
inline void Processor_105_Device::set_devicetoken(const char* value) {
  set_has_devicetoken();
  if (devicetoken_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetoken_ = new ::std::string;
  }
  devicetoken_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_105_Device.devicetoken)
}
inline void Processor_105_Device::set_devicetoken(const char* value, size_t size) {
  set_has_devicetoken();
  if (devicetoken_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetoken_ = new ::std::string;
  }
  devicetoken_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_105_Device.devicetoken)
}
inline ::std::string* Processor_105_Device::mutable_devicetoken() {
  set_has_devicetoken();
  if (devicetoken_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetoken_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_105_Device.devicetoken)
  return devicetoken_;
}
inline ::std::string* Processor_105_Device::release_devicetoken() {
  clear_has_devicetoken();
  if (devicetoken_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devicetoken_;
    devicetoken_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_105_Device::set_allocated_devicetoken(::std::string* devicetoken) {
  if (devicetoken_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devicetoken_;
  }
  if (devicetoken) {
    set_has_devicetoken();
    devicetoken_ = devicetoken;
  } else {
    clear_has_devicetoken();
    devicetoken_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_105_Device.devicetoken)
}

// -------------------------------------------------------------------

// Processor_106_ReceiveIOSPayReceipt

// optional string Receipt = 1;
inline bool Processor_106_ReceiveIOSPayReceipt::has_receipt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_106_ReceiveIOSPayReceipt::set_has_receipt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_106_ReceiveIOSPayReceipt::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_106_ReceiveIOSPayReceipt::clear_receipt() {
  if (receipt_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_->clear();
  }
  clear_has_receipt();
}
inline const ::std::string& Processor_106_ReceiveIOSPayReceipt::receipt() const {
  // @@protoc_insertion_point(field_get:msg.Processor_106_ReceiveIOSPayReceipt.Receipt)
  return *receipt_;
}
inline void Processor_106_ReceiveIOSPayReceipt::set_receipt(const ::std::string& value) {
  set_has_receipt();
  if (receipt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_106_ReceiveIOSPayReceipt.Receipt)
}
inline void Processor_106_ReceiveIOSPayReceipt::set_receipt(const char* value) {
  set_has_receipt();
  if (receipt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_106_ReceiveIOSPayReceipt.Receipt)
}
inline void Processor_106_ReceiveIOSPayReceipt::set_receipt(const char* value, size_t size) {
  set_has_receipt();
  if (receipt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_106_ReceiveIOSPayReceipt.Receipt)
}
inline ::std::string* Processor_106_ReceiveIOSPayReceipt::mutable_receipt() {
  set_has_receipt();
  if (receipt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receipt_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_106_ReceiveIOSPayReceipt.Receipt)
  return receipt_;
}
inline ::std::string* Processor_106_ReceiveIOSPayReceipt::release_receipt() {
  clear_has_receipt();
  if (receipt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = receipt_;
    receipt_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_106_ReceiveIOSPayReceipt::set_allocated_receipt(::std::string* receipt) {
  if (receipt_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete receipt_;
  }
  if (receipt) {
    set_has_receipt();
    receipt_ = receipt;
  } else {
    clear_has_receipt();
    receipt_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_106_ReceiveIOSPayReceipt.Receipt)
}

// optional int32 UserID = 2;
inline bool Processor_106_ReceiveIOSPayReceipt::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_106_ReceiveIOSPayReceipt::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_106_ReceiveIOSPayReceipt::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_106_ReceiveIOSPayReceipt::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_106_ReceiveIOSPayReceipt::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_106_ReceiveIOSPayReceipt.UserID)
  return userid_;
}
inline void Processor_106_ReceiveIOSPayReceipt::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_106_ReceiveIOSPayReceipt.UserID)
}

// -------------------------------------------------------------------

// Processor_106_ReceiveIOSPayReceipt_Down

// optional .msg.Response Response = 1;
inline bool Processor_106_ReceiveIOSPayReceipt_Down::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_106_ReceiveIOSPayReceipt_Down::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_106_ReceiveIOSPayReceipt_Down.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_106_ReceiveIOSPayReceipt_Down::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_106_ReceiveIOSPayReceipt_Down.Response)
  return response_;
}
inline ::msg::Response* Processor_106_ReceiveIOSPayReceipt_Down::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_106_ReceiveIOSPayReceipt_Down.Response)
}

// optional string ReceiptMd5 = 2;
inline bool Processor_106_ReceiveIOSPayReceipt_Down::has_receiptmd5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::set_has_receiptmd5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::clear_has_receiptmd5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::clear_receiptmd5() {
  if (receiptmd5_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receiptmd5_->clear();
  }
  clear_has_receiptmd5();
}
inline const ::std::string& Processor_106_ReceiveIOSPayReceipt_Down::receiptmd5() const {
  // @@protoc_insertion_point(field_get:msg.Processor_106_ReceiveIOSPayReceipt_Down.ReceiptMd5)
  return *receiptmd5_;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::set_receiptmd5(const ::std::string& value) {
  set_has_receiptmd5();
  if (receiptmd5_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receiptmd5_ = new ::std::string;
  }
  receiptmd5_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_106_ReceiveIOSPayReceipt_Down.ReceiptMd5)
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::set_receiptmd5(const char* value) {
  set_has_receiptmd5();
  if (receiptmd5_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receiptmd5_ = new ::std::string;
  }
  receiptmd5_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_106_ReceiveIOSPayReceipt_Down.ReceiptMd5)
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::set_receiptmd5(const char* value, size_t size) {
  set_has_receiptmd5();
  if (receiptmd5_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receiptmd5_ = new ::std::string;
  }
  receiptmd5_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_106_ReceiveIOSPayReceipt_Down.ReceiptMd5)
}
inline ::std::string* Processor_106_ReceiveIOSPayReceipt_Down::mutable_receiptmd5() {
  set_has_receiptmd5();
  if (receiptmd5_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receiptmd5_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_106_ReceiveIOSPayReceipt_Down.ReceiptMd5)
  return receiptmd5_;
}
inline ::std::string* Processor_106_ReceiveIOSPayReceipt_Down::release_receiptmd5() {
  clear_has_receiptmd5();
  if (receiptmd5_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = receiptmd5_;
    receiptmd5_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::set_allocated_receiptmd5(::std::string* receiptmd5) {
  if (receiptmd5_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete receiptmd5_;
  }
  if (receiptmd5) {
    set_has_receiptmd5();
    receiptmd5_ = receiptmd5;
  } else {
    clear_has_receiptmd5();
    receiptmd5_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_106_ReceiveIOSPayReceipt_Down.ReceiptMd5)
}

// optional .msg.VerificationType type = 3;
inline bool Processor_106_ReceiveIOSPayReceipt_Down::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::msg::VerificationType Processor_106_ReceiveIOSPayReceipt_Down::type() const {
  // @@protoc_insertion_point(field_get:msg.Processor_106_ReceiveIOSPayReceipt_Down.type)
  return static_cast< ::msg::VerificationType >(type_);
}
inline void Processor_106_ReceiveIOSPayReceipt_Down::set_type(::msg::VerificationType value) {
  assert(::msg::VerificationType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_106_ReceiveIOSPayReceipt_Down.type)
}

// -------------------------------------------------------------------

// GoodInfo

// optional string ID = 1;
inline bool GoodInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodInfo::clear_id() {
  if (id_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& GoodInfo::id() const {
  // @@protoc_insertion_point(field_get:msg.GoodInfo.ID)
  return *id_;
}
inline void GoodInfo::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GoodInfo.ID)
}
inline void GoodInfo::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GoodInfo.ID)
}
inline void GoodInfo::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GoodInfo.ID)
}
inline ::std::string* GoodInfo::mutable_id() {
  set_has_id();
  if (id_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GoodInfo.ID)
  return id_;
}
inline ::std::string* GoodInfo::release_id() {
  clear_has_id();
  if (id_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GoodInfo::set_allocated_id(::std::string* id) {
  if (id_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GoodInfo.ID)
}

// optional string Name = 2;
inline bool GoodInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodInfo::clear_name() {
  if (name_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GoodInfo::name() const {
  // @@protoc_insertion_point(field_get:msg.GoodInfo.Name)
  return *name_;
}
inline void GoodInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GoodInfo.Name)
}
inline void GoodInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GoodInfo.Name)
}
inline void GoodInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GoodInfo.Name)
}
inline ::std::string* GoodInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GoodInfo.Name)
  return name_;
}
inline ::std::string* GoodInfo::release_name() {
  clear_has_name();
  if (name_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GoodInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GoodInfo.Name)
}

// optional string Description = 3;
inline bool GoodInfo::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoodInfo::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoodInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoodInfo::clear_description() {
  if (description_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& GoodInfo::description() const {
  // @@protoc_insertion_point(field_get:msg.GoodInfo.Description)
  return *description_;
}
inline void GoodInfo::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GoodInfo.Description)
}
inline void GoodInfo::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GoodInfo.Description)
}
inline void GoodInfo::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GoodInfo.Description)
}
inline ::std::string* GoodInfo::mutable_description() {
  set_has_description();
  if (description_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GoodInfo.Description)
  return description_;
}
inline ::std::string* GoodInfo::release_description() {
  clear_has_description();
  if (description_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GoodInfo::set_allocated_description(::std::string* description) {
  if (description_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GoodInfo.Description)
}

// optional int32 Price = 4;
inline bool GoodInfo::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoodInfo::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoodInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoodInfo::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google_public::protobuf::int32 GoodInfo::price() const {
  // @@protoc_insertion_point(field_get:msg.GoodInfo.Price)
  return price_;
}
inline void GoodInfo::set_price(::google_public::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:msg.GoodInfo.Price)
}

// optional string PicName = 5;
inline bool GoodInfo::has_picname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoodInfo::set_has_picname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoodInfo::clear_has_picname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoodInfo::clear_picname() {
  if (picname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_->clear();
  }
  clear_has_picname();
}
inline const ::std::string& GoodInfo::picname() const {
  // @@protoc_insertion_point(field_get:msg.GoodInfo.PicName)
  return *picname_;
}
inline void GoodInfo::set_picname(const ::std::string& value) {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  picname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GoodInfo.PicName)
}
inline void GoodInfo::set_picname(const char* value) {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  picname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GoodInfo.PicName)
}
inline void GoodInfo::set_picname(const char* value, size_t size) {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  picname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GoodInfo.PicName)
}
inline ::std::string* GoodInfo::mutable_picname() {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GoodInfo.PicName)
  return picname_;
}
inline ::std::string* GoodInfo::release_picname() {
  clear_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = picname_;
    picname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GoodInfo::set_allocated_picname(::std::string* picname) {
  if (picname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete picname_;
  }
  if (picname) {
    set_has_picname();
    picname_ = picname;
  } else {
    clear_has_picname();
    picname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GoodInfo.PicName)
}

// -------------------------------------------------------------------

// Processor_107_GetGoodsInfo

// repeated .msg.GoodInfo GoodsInfo = 1;
inline int Processor_107_GetGoodsInfo::goodsinfo_size() const {
  return goodsinfo_.size();
}
inline void Processor_107_GetGoodsInfo::clear_goodsinfo() {
  goodsinfo_.Clear();
}
inline const ::msg::GoodInfo& Processor_107_GetGoodsInfo::goodsinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_107_GetGoodsInfo.GoodsInfo)
  return goodsinfo_.Get(index);
}
inline ::msg::GoodInfo* Processor_107_GetGoodsInfo::mutable_goodsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_107_GetGoodsInfo.GoodsInfo)
  return goodsinfo_.Mutable(index);
}
inline ::msg::GoodInfo* Processor_107_GetGoodsInfo::add_goodsinfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_107_GetGoodsInfo.GoodsInfo)
  return goodsinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::GoodInfo >&
Processor_107_GetGoodsInfo::goodsinfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_107_GetGoodsInfo.GoodsInfo)
  return goodsinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::GoodInfo >*
Processor_107_GetGoodsInfo::mutable_goodsinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_107_GetGoodsInfo.GoodsInfo)
  return &goodsinfo_;
}

// -------------------------------------------------------------------

// Processor_108_BuyGood

// optional int32 GoodID = 1;
inline bool Processor_108_BuyGood::has_goodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_108_BuyGood::set_has_goodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_108_BuyGood::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_108_BuyGood::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google_public::protobuf::int32 Processor_108_BuyGood::goodid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_108_BuyGood.GoodID)
  return goodid_;
}
inline void Processor_108_BuyGood::set_goodid(::google_public::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_108_BuyGood.GoodID)
}

// optional int32 UserID = 2;
inline bool Processor_108_BuyGood::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_108_BuyGood::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_108_BuyGood::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_108_BuyGood::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_108_BuyGood::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_108_BuyGood.UserID)
  return userid_;
}
inline void Processor_108_BuyGood::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_108_BuyGood.UserID)
}

// -------------------------------------------------------------------

// Processor_109_AndroidPay

// optional int32 UserID = 1;
inline bool Processor_109_AndroidPay::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_109_AndroidPay::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_109_AndroidPay::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_109_AndroidPay::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_109_AndroidPay::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_109_AndroidPay.UserID)
  return userid_;
}
inline void Processor_109_AndroidPay::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_109_AndroidPay.UserID)
}

// optional string ProductID = 2;
inline bool Processor_109_AndroidPay::has_productid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_109_AndroidPay::set_has_productid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_109_AndroidPay::clear_has_productid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_109_AndroidPay::clear_productid() {
  if (productid_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    productid_->clear();
  }
  clear_has_productid();
}
inline const ::std::string& Processor_109_AndroidPay::productid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_109_AndroidPay.ProductID)
  return *productid_;
}
inline void Processor_109_AndroidPay::set_productid(const ::std::string& value) {
  set_has_productid();
  if (productid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    productid_ = new ::std::string;
  }
  productid_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_109_AndroidPay.ProductID)
}
inline void Processor_109_AndroidPay::set_productid(const char* value) {
  set_has_productid();
  if (productid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    productid_ = new ::std::string;
  }
  productid_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_109_AndroidPay.ProductID)
}
inline void Processor_109_AndroidPay::set_productid(const char* value, size_t size) {
  set_has_productid();
  if (productid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    productid_ = new ::std::string;
  }
  productid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_109_AndroidPay.ProductID)
}
inline ::std::string* Processor_109_AndroidPay::mutable_productid() {
  set_has_productid();
  if (productid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    productid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_109_AndroidPay.ProductID)
  return productid_;
}
inline ::std::string* Processor_109_AndroidPay::release_productid() {
  clear_has_productid();
  if (productid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = productid_;
    productid_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_109_AndroidPay::set_allocated_productid(::std::string* productid) {
  if (productid_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete productid_;
  }
  if (productid) {
    set_has_productid();
    productid_ = productid;
  } else {
    clear_has_productid();
    productid_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_109_AndroidPay.ProductID)
}

// -------------------------------------------------------------------

// Processor_109_AndroidPayDown

// optional string appID = 1;
inline bool Processor_109_AndroidPayDown::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_109_AndroidPayDown::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_109_AndroidPayDown::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_109_AndroidPayDown::clear_appid() {
  if (appid_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appid_->clear();
  }
  clear_has_appid();
}
inline const ::std::string& Processor_109_AndroidPayDown::appid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_109_AndroidPayDown.appID)
  return *appid_;
}
inline void Processor_109_AndroidPayDown::set_appid(const ::std::string& value) {
  set_has_appid();
  if (appid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appid_ = new ::std::string;
  }
  appid_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_109_AndroidPayDown.appID)
}
inline void Processor_109_AndroidPayDown::set_appid(const char* value) {
  set_has_appid();
  if (appid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appid_ = new ::std::string;
  }
  appid_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_109_AndroidPayDown.appID)
}
inline void Processor_109_AndroidPayDown::set_appid(const char* value, size_t size) {
  set_has_appid();
  if (appid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appid_ = new ::std::string;
  }
  appid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_109_AndroidPayDown.appID)
}
inline ::std::string* Processor_109_AndroidPayDown::mutable_appid() {
  set_has_appid();
  if (appid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_109_AndroidPayDown.appID)
  return appid_;
}
inline ::std::string* Processor_109_AndroidPayDown::release_appid() {
  clear_has_appid();
  if (appid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = appid_;
    appid_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_109_AndroidPayDown::set_allocated_appid(::std::string* appid) {
  if (appid_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appid_;
  }
  if (appid) {
    set_has_appid();
    appid_ = appid;
  } else {
    clear_has_appid();
    appid_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_109_AndroidPayDown.appID)
}

// optional string partnerID = 2;
inline bool Processor_109_AndroidPayDown::has_partnerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_109_AndroidPayDown::set_has_partnerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_109_AndroidPayDown::clear_has_partnerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_109_AndroidPayDown::clear_partnerid() {
  if (partnerid_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    partnerid_->clear();
  }
  clear_has_partnerid();
}
inline const ::std::string& Processor_109_AndroidPayDown::partnerid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_109_AndroidPayDown.partnerID)
  return *partnerid_;
}
inline void Processor_109_AndroidPayDown::set_partnerid(const ::std::string& value) {
  set_has_partnerid();
  if (partnerid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    partnerid_ = new ::std::string;
  }
  partnerid_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_109_AndroidPayDown.partnerID)
}
inline void Processor_109_AndroidPayDown::set_partnerid(const char* value) {
  set_has_partnerid();
  if (partnerid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    partnerid_ = new ::std::string;
  }
  partnerid_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_109_AndroidPayDown.partnerID)
}
inline void Processor_109_AndroidPayDown::set_partnerid(const char* value, size_t size) {
  set_has_partnerid();
  if (partnerid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    partnerid_ = new ::std::string;
  }
  partnerid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_109_AndroidPayDown.partnerID)
}
inline ::std::string* Processor_109_AndroidPayDown::mutable_partnerid() {
  set_has_partnerid();
  if (partnerid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    partnerid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_109_AndroidPayDown.partnerID)
  return partnerid_;
}
inline ::std::string* Processor_109_AndroidPayDown::release_partnerid() {
  clear_has_partnerid();
  if (partnerid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = partnerid_;
    partnerid_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_109_AndroidPayDown::set_allocated_partnerid(::std::string* partnerid) {
  if (partnerid_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete partnerid_;
  }
  if (partnerid) {
    set_has_partnerid();
    partnerid_ = partnerid;
  } else {
    clear_has_partnerid();
    partnerid_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_109_AndroidPayDown.partnerID)
}

// optional string prepayId = 3;
inline bool Processor_109_AndroidPayDown::has_prepayid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_109_AndroidPayDown::set_has_prepayid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_109_AndroidPayDown::clear_has_prepayid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_109_AndroidPayDown::clear_prepayid() {
  if (prepayid_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prepayid_->clear();
  }
  clear_has_prepayid();
}
inline const ::std::string& Processor_109_AndroidPayDown::prepayid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_109_AndroidPayDown.prepayId)
  return *prepayid_;
}
inline void Processor_109_AndroidPayDown::set_prepayid(const ::std::string& value) {
  set_has_prepayid();
  if (prepayid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prepayid_ = new ::std::string;
  }
  prepayid_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_109_AndroidPayDown.prepayId)
}
inline void Processor_109_AndroidPayDown::set_prepayid(const char* value) {
  set_has_prepayid();
  if (prepayid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prepayid_ = new ::std::string;
  }
  prepayid_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_109_AndroidPayDown.prepayId)
}
inline void Processor_109_AndroidPayDown::set_prepayid(const char* value, size_t size) {
  set_has_prepayid();
  if (prepayid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prepayid_ = new ::std::string;
  }
  prepayid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_109_AndroidPayDown.prepayId)
}
inline ::std::string* Processor_109_AndroidPayDown::mutable_prepayid() {
  set_has_prepayid();
  if (prepayid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prepayid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_109_AndroidPayDown.prepayId)
  return prepayid_;
}
inline ::std::string* Processor_109_AndroidPayDown::release_prepayid() {
  clear_has_prepayid();
  if (prepayid_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = prepayid_;
    prepayid_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_109_AndroidPayDown::set_allocated_prepayid(::std::string* prepayid) {
  if (prepayid_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete prepayid_;
  }
  if (prepayid) {
    set_has_prepayid();
    prepayid_ = prepayid;
  } else {
    clear_has_prepayid();
    prepayid_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_109_AndroidPayDown.prepayId)
}

// optional string nonceStr = 4;
inline bool Processor_109_AndroidPayDown::has_noncestr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_109_AndroidPayDown::set_has_noncestr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_109_AndroidPayDown::clear_has_noncestr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_109_AndroidPayDown::clear_noncestr() {
  if (noncestr_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noncestr_->clear();
  }
  clear_has_noncestr();
}
inline const ::std::string& Processor_109_AndroidPayDown::noncestr() const {
  // @@protoc_insertion_point(field_get:msg.Processor_109_AndroidPayDown.nonceStr)
  return *noncestr_;
}
inline void Processor_109_AndroidPayDown::set_noncestr(const ::std::string& value) {
  set_has_noncestr();
  if (noncestr_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noncestr_ = new ::std::string;
  }
  noncestr_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_109_AndroidPayDown.nonceStr)
}
inline void Processor_109_AndroidPayDown::set_noncestr(const char* value) {
  set_has_noncestr();
  if (noncestr_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noncestr_ = new ::std::string;
  }
  noncestr_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_109_AndroidPayDown.nonceStr)
}
inline void Processor_109_AndroidPayDown::set_noncestr(const char* value, size_t size) {
  set_has_noncestr();
  if (noncestr_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noncestr_ = new ::std::string;
  }
  noncestr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_109_AndroidPayDown.nonceStr)
}
inline ::std::string* Processor_109_AndroidPayDown::mutable_noncestr() {
  set_has_noncestr();
  if (noncestr_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noncestr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_109_AndroidPayDown.nonceStr)
  return noncestr_;
}
inline ::std::string* Processor_109_AndroidPayDown::release_noncestr() {
  clear_has_noncestr();
  if (noncestr_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = noncestr_;
    noncestr_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_109_AndroidPayDown::set_allocated_noncestr(::std::string* noncestr) {
  if (noncestr_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete noncestr_;
  }
  if (noncestr) {
    set_has_noncestr();
    noncestr_ = noncestr;
  } else {
    clear_has_noncestr();
    noncestr_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_109_AndroidPayDown.nonceStr)
}

// optional string timeStamp = 5;
inline bool Processor_109_AndroidPayDown::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_109_AndroidPayDown::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_109_AndroidPayDown::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_109_AndroidPayDown::clear_timestamp() {
  if (timestamp_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestamp_->clear();
  }
  clear_has_timestamp();
}
inline const ::std::string& Processor_109_AndroidPayDown::timestamp() const {
  // @@protoc_insertion_point(field_get:msg.Processor_109_AndroidPayDown.timeStamp)
  return *timestamp_;
}
inline void Processor_109_AndroidPayDown::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  if (timestamp_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestamp_ = new ::std::string;
  }
  timestamp_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_109_AndroidPayDown.timeStamp)
}
inline void Processor_109_AndroidPayDown::set_timestamp(const char* value) {
  set_has_timestamp();
  if (timestamp_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestamp_ = new ::std::string;
  }
  timestamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_109_AndroidPayDown.timeStamp)
}
inline void Processor_109_AndroidPayDown::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  if (timestamp_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestamp_ = new ::std::string;
  }
  timestamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_109_AndroidPayDown.timeStamp)
}
inline ::std::string* Processor_109_AndroidPayDown::mutable_timestamp() {
  set_has_timestamp();
  if (timestamp_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_109_AndroidPayDown.timeStamp)
  return timestamp_;
}
inline ::std::string* Processor_109_AndroidPayDown::release_timestamp() {
  clear_has_timestamp();
  if (timestamp_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = timestamp_;
    timestamp_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_109_AndroidPayDown::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete timestamp_;
  }
  if (timestamp) {
    set_has_timestamp();
    timestamp_ = timestamp;
  } else {
    clear_has_timestamp();
    timestamp_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_109_AndroidPayDown.timeStamp)
}

// optional string sign = 6;
inline bool Processor_109_AndroidPayDown::has_sign() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Processor_109_AndroidPayDown::set_has_sign() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Processor_109_AndroidPayDown::clear_has_sign() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Processor_109_AndroidPayDown::clear_sign() {
  if (sign_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& Processor_109_AndroidPayDown::sign() const {
  // @@protoc_insertion_point(field_get:msg.Processor_109_AndroidPayDown.sign)
  return *sign_;
}
inline void Processor_109_AndroidPayDown::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_109_AndroidPayDown.sign)
}
inline void Processor_109_AndroidPayDown::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_109_AndroidPayDown.sign)
}
inline void Processor_109_AndroidPayDown::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_109_AndroidPayDown.sign)
}
inline ::std::string* Processor_109_AndroidPayDown::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_109_AndroidPayDown.sign)
  return sign_;
}
inline ::std::string* Processor_109_AndroidPayDown::release_sign() {
  clear_has_sign();
  if (sign_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_109_AndroidPayDown::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_109_AndroidPayDown.sign)
}

// -------------------------------------------------------------------

// FeedBack

// optional string Describe = 1;
inline bool FeedBack::has_describe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeedBack::set_has_describe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeedBack::clear_has_describe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeedBack::clear_describe() {
  if (describe_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_->clear();
  }
  clear_has_describe();
}
inline const ::std::string& FeedBack::describe() const {
  // @@protoc_insertion_point(field_get:msg.FeedBack.Describe)
  return *describe_;
}
inline void FeedBack::set_describe(const ::std::string& value) {
  set_has_describe();
  if (describe_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set:msg.FeedBack.Describe)
}
inline void FeedBack::set_describe(const char* value) {
  set_has_describe();
  if (describe_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.FeedBack.Describe)
}
inline void FeedBack::set_describe(const char* value, size_t size) {
  set_has_describe();
  if (describe_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.FeedBack.Describe)
}
inline ::std::string* FeedBack::mutable_describe() {
  set_has_describe();
  if (describe_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.FeedBack.Describe)
  return describe_;
}
inline ::std::string* FeedBack::release_describe() {
  clear_has_describe();
  if (describe_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = describe_;
    describe_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FeedBack::set_allocated_describe(::std::string* describe) {
  if (describe_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete describe_;
  }
  if (describe) {
    set_has_describe();
    describe_ = describe;
  } else {
    clear_has_describe();
    describe_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.FeedBack.Describe)
}

// optional string Type = 2;
inline bool FeedBack::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeedBack::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeedBack::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeedBack::clear_type() {
  if (type_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& FeedBack::type() const {
  // @@protoc_insertion_point(field_get:msg.FeedBack.Type)
  return *type_;
}
inline void FeedBack::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:msg.FeedBack.Type)
}
inline void FeedBack::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.FeedBack.Type)
}
inline void FeedBack::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.FeedBack.Type)
}
inline ::std::string* FeedBack::mutable_type() {
  set_has_type();
  if (type_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.FeedBack.Type)
  return type_;
}
inline ::std::string* FeedBack::release_type() {
  clear_has_type();
  if (type_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FeedBack::set_allocated_type(::std::string* type) {
  if (type_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.FeedBack.Type)
}

// repeated string PicName = 3;
inline int FeedBack::picname_size() const {
  return picname_.size();
}
inline void FeedBack::clear_picname() {
  picname_.Clear();
}
inline const ::std::string& FeedBack::picname(int index) const {
  // @@protoc_insertion_point(field_get:msg.FeedBack.PicName)
  return picname_.Get(index);
}
inline ::std::string* FeedBack::mutable_picname(int index) {
  // @@protoc_insertion_point(field_mutable:msg.FeedBack.PicName)
  return picname_.Mutable(index);
}
inline void FeedBack::set_picname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:msg.FeedBack.PicName)
  picname_.Mutable(index)->assign(value);
}
inline void FeedBack::set_picname(int index, const char* value) {
  picname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.FeedBack.PicName)
}
inline void FeedBack::set_picname(int index, const char* value, size_t size) {
  picname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.FeedBack.PicName)
}
inline ::std::string* FeedBack::add_picname() {
  return picname_.Add();
}
inline void FeedBack::add_picname(const ::std::string& value) {
  picname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:msg.FeedBack.PicName)
}
inline void FeedBack::add_picname(const char* value) {
  picname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:msg.FeedBack.PicName)
}
inline void FeedBack::add_picname(const char* value, size_t size) {
  picname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:msg.FeedBack.PicName)
}
inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>&
FeedBack::picname() const {
  // @@protoc_insertion_point(field_list:msg.FeedBack.PicName)
  return picname_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::std::string>*
FeedBack::mutable_picname() {
  // @@protoc_insertion_point(field_mutable_list:msg.FeedBack.PicName)
  return &picname_;
}

// -------------------------------------------------------------------

// UserGameSetting

// optional string GameName = 1;
inline bool UserGameSetting::has_gamename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGameSetting::set_has_gamename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGameSetting::clear_has_gamename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGameSetting::clear_gamename() {
  if (gamename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_->clear();
  }
  clear_has_gamename();
}
inline const ::std::string& UserGameSetting::gamename() const {
  // @@protoc_insertion_point(field_get:msg.UserGameSetting.GameName)
  return *gamename_;
}
inline void UserGameSetting::set_gamename(const ::std::string& value) {
  set_has_gamename();
  if (gamename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_ = new ::std::string;
  }
  gamename_->assign(value);
  // @@protoc_insertion_point(field_set:msg.UserGameSetting.GameName)
}
inline void UserGameSetting::set_gamename(const char* value) {
  set_has_gamename();
  if (gamename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_ = new ::std::string;
  }
  gamename_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.UserGameSetting.GameName)
}
inline void UserGameSetting::set_gamename(const char* value, size_t size) {
  set_has_gamename();
  if (gamename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_ = new ::std::string;
  }
  gamename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.UserGameSetting.GameName)
}
inline ::std::string* UserGameSetting::mutable_gamename() {
  set_has_gamename();
  if (gamename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.UserGameSetting.GameName)
  return gamename_;
}
inline ::std::string* UserGameSetting::release_gamename() {
  clear_has_gamename();
  if (gamename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gamename_;
    gamename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserGameSetting::set_allocated_gamename(::std::string* gamename) {
  if (gamename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gamename_;
  }
  if (gamename) {
    set_has_gamename();
    gamename_ = gamename;
  } else {
    clear_has_gamename();
    gamename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.UserGameSetting.GameName)
}

// optional .msg.RoomType GameId = 2;
inline bool UserGameSetting::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGameSetting::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGameSetting::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGameSetting::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::msg::RoomType UserGameSetting::gameid() const {
  // @@protoc_insertion_point(field_get:msg.UserGameSetting.GameId)
  return static_cast< ::msg::RoomType >(gameid_);
}
inline void UserGameSetting::set_gameid(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:msg.UserGameSetting.GameId)
}

// repeated .msg.Property Property = 3;
inline int UserGameSetting::property_size() const {
  return property_.size();
}
inline void UserGameSetting::clear_property() {
  property_.Clear();
}
inline const ::msg::Property& UserGameSetting::property(int index) const {
  // @@protoc_insertion_point(field_get:msg.UserGameSetting.Property)
  return property_.Get(index);
}
inline ::msg::Property* UserGameSetting::mutable_property(int index) {
  // @@protoc_insertion_point(field_mutable:msg.UserGameSetting.Property)
  return property_.Mutable(index);
}
inline ::msg::Property* UserGameSetting::add_property() {
  // @@protoc_insertion_point(field_add:msg.UserGameSetting.Property)
  return property_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Property >&
UserGameSetting::property() const {
  // @@protoc_insertion_point(field_list:msg.UserGameSetting.Property)
  return property_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::Property >*
UserGameSetting::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:msg.UserGameSetting.Property)
  return &property_;
}

// -------------------------------------------------------------------

// UserGameSettings

// repeated .msg.UserGameSetting GameSetting = 1;
inline int UserGameSettings::gamesetting_size() const {
  return gamesetting_.size();
}
inline void UserGameSettings::clear_gamesetting() {
  gamesetting_.Clear();
}
inline const ::msg::UserGameSetting& UserGameSettings::gamesetting(int index) const {
  // @@protoc_insertion_point(field_get:msg.UserGameSettings.GameSetting)
  return gamesetting_.Get(index);
}
inline ::msg::UserGameSetting* UserGameSettings::mutable_gamesetting(int index) {
  // @@protoc_insertion_point(field_mutable:msg.UserGameSettings.GameSetting)
  return gamesetting_.Mutable(index);
}
inline ::msg::UserGameSetting* UserGameSettings::add_gamesetting() {
  // @@protoc_insertion_point(field_add:msg.UserGameSettings.GameSetting)
  return gamesetting_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserGameSetting >&
UserGameSettings::gamesetting() const {
  // @@protoc_insertion_point(field_list:msg.UserGameSettings.GameSetting)
  return gamesetting_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserGameSetting >*
UserGameSettings::mutable_gamesetting() {
  // @@protoc_insertion_point(field_mutable_list:msg.UserGameSettings.GameSetting)
  return &gamesetting_;
}

// -------------------------------------------------------------------

// Processor_111_GetUserSetting

// optional .msg.Response Response = 1;
inline bool Processor_111_GetUserSetting::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_111_GetUserSetting::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_111_GetUserSetting::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_111_GetUserSetting::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_111_GetUserSetting::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_111_GetUserSetting.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_111_GetUserSetting::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_111_GetUserSetting.Response)
  return response_;
}
inline ::msg::Response* Processor_111_GetUserSetting::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_111_GetUserSetting::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_111_GetUserSetting.Response)
}

// optional .msg.UserGameSettings GameSettings = 3;
inline bool Processor_111_GetUserSetting::has_gamesettings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_111_GetUserSetting::set_has_gamesettings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_111_GetUserSetting::clear_has_gamesettings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_111_GetUserSetting::clear_gamesettings() {
  if (gamesettings_ != NULL) gamesettings_->::msg::UserGameSettings::Clear();
  clear_has_gamesettings();
}
inline const ::msg::UserGameSettings& Processor_111_GetUserSetting::gamesettings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_111_GetUserSetting.GameSettings)
  return gamesettings_ != NULL ? *gamesettings_ : *default_instance_->gamesettings_;
}
inline ::msg::UserGameSettings* Processor_111_GetUserSetting::mutable_gamesettings() {
  set_has_gamesettings();
  if (gamesettings_ == NULL) gamesettings_ = new ::msg::UserGameSettings;
  // @@protoc_insertion_point(field_mutable:msg.Processor_111_GetUserSetting.GameSettings)
  return gamesettings_;
}
inline ::msg::UserGameSettings* Processor_111_GetUserSetting::release_gamesettings() {
  clear_has_gamesettings();
  ::msg::UserGameSettings* temp = gamesettings_;
  gamesettings_ = NULL;
  return temp;
}
inline void Processor_111_GetUserSetting::set_allocated_gamesettings(::msg::UserGameSettings* gamesettings) {
  delete gamesettings_;
  gamesettings_ = gamesettings;
  if (gamesettings) {
    set_has_gamesettings();
  } else {
    clear_has_gamesettings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_111_GetUserSetting.GameSettings)
}

// optional int32 Diamond = 4;
inline bool Processor_111_GetUserSetting::has_diamond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_111_GetUserSetting::set_has_diamond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_111_GetUserSetting::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_111_GetUserSetting::clear_diamond() {
  diamond_ = 0;
  clear_has_diamond();
}
inline ::google_public::protobuf::int32 Processor_111_GetUserSetting::diamond() const {
  // @@protoc_insertion_point(field_get:msg.Processor_111_GetUserSetting.Diamond)
  return diamond_;
}
inline void Processor_111_GetUserSetting::set_diamond(::google_public::protobuf::int32 value) {
  set_has_diamond();
  diamond_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_111_GetUserSetting.Diamond)
}

// optional int32 HitPoint = 5;
inline bool Processor_111_GetUserSetting::has_hitpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_111_GetUserSetting::set_has_hitpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_111_GetUserSetting::clear_has_hitpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_111_GetUserSetting::clear_hitpoint() {
  hitpoint_ = 0;
  clear_has_hitpoint();
}
inline ::google_public::protobuf::int32 Processor_111_GetUserSetting::hitpoint() const {
  // @@protoc_insertion_point(field_get:msg.Processor_111_GetUserSetting.HitPoint)
  return hitpoint_;
}
inline void Processor_111_GetUserSetting::set_hitpoint(::google_public::protobuf::int32 value) {
  set_has_hitpoint();
  hitpoint_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_111_GetUserSetting.HitPoint)
}

// optional string PhoneNumber = 6;
inline bool Processor_111_GetUserSetting::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_111_GetUserSetting::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_111_GetUserSetting::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_111_GetUserSetting::clear_phonenumber() {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_->clear();
  }
  clear_has_phonenumber();
}
inline const ::std::string& Processor_111_GetUserSetting::phonenumber() const {
  // @@protoc_insertion_point(field_get:msg.Processor_111_GetUserSetting.PhoneNumber)
  return *phonenumber_;
}
inline void Processor_111_GetUserSetting::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_111_GetUserSetting.PhoneNumber)
}
inline void Processor_111_GetUserSetting::set_phonenumber(const char* value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_111_GetUserSetting.PhoneNumber)
}
inline void Processor_111_GetUserSetting::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_111_GetUserSetting.PhoneNumber)
}
inline ::std::string* Processor_111_GetUserSetting::mutable_phonenumber() {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_111_GetUserSetting.PhoneNumber)
  return phonenumber_;
}
inline ::std::string* Processor_111_GetUserSetting::release_phonenumber() {
  clear_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phonenumber_;
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_111_GetUserSetting::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonenumber_;
  }
  if (phonenumber) {
    set_has_phonenumber();
    phonenumber_ = phonenumber;
  } else {
    clear_has_phonenumber();
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_111_GetUserSetting.PhoneNumber)
}

// -------------------------------------------------------------------

// Processor_112_ChangeUserSetting

// optional .msg.UserDetailInfo UserDetailInfo = 1;
inline bool Processor_112_ChangeUserSetting::has_userdetailinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_112_ChangeUserSetting::set_has_userdetailinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_112_ChangeUserSetting::clear_has_userdetailinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_112_ChangeUserSetting::clear_userdetailinfo() {
  if (userdetailinfo_ != NULL) userdetailinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userdetailinfo();
}
inline const ::msg::UserDetailInfo& Processor_112_ChangeUserSetting::userdetailinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_112_ChangeUserSetting.UserDetailInfo)
  return userdetailinfo_ != NULL ? *userdetailinfo_ : *default_instance_->userdetailinfo_;
}
inline ::msg::UserDetailInfo* Processor_112_ChangeUserSetting::mutable_userdetailinfo() {
  set_has_userdetailinfo();
  if (userdetailinfo_ == NULL) userdetailinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_112_ChangeUserSetting.UserDetailInfo)
  return userdetailinfo_;
}
inline ::msg::UserDetailInfo* Processor_112_ChangeUserSetting::release_userdetailinfo() {
  clear_has_userdetailinfo();
  ::msg::UserDetailInfo* temp = userdetailinfo_;
  userdetailinfo_ = NULL;
  return temp;
}
inline void Processor_112_ChangeUserSetting::set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo) {
  delete userdetailinfo_;
  userdetailinfo_ = userdetailinfo;
  if (userdetailinfo) {
    set_has_userdetailinfo();
  } else {
    clear_has_userdetailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_112_ChangeUserSetting.UserDetailInfo)
}

// optional .msg.UserLoginInfo UserLoginInfo = 2;
inline bool Processor_112_ChangeUserSetting::has_userlogininfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_112_ChangeUserSetting::set_has_userlogininfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_112_ChangeUserSetting::clear_has_userlogininfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_112_ChangeUserSetting::clear_userlogininfo() {
  if (userlogininfo_ != NULL) userlogininfo_->::msg::UserLoginInfo::Clear();
  clear_has_userlogininfo();
}
inline const ::msg::UserLoginInfo& Processor_112_ChangeUserSetting::userlogininfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_112_ChangeUserSetting.UserLoginInfo)
  return userlogininfo_ != NULL ? *userlogininfo_ : *default_instance_->userlogininfo_;
}
inline ::msg::UserLoginInfo* Processor_112_ChangeUserSetting::mutable_userlogininfo() {
  set_has_userlogininfo();
  if (userlogininfo_ == NULL) userlogininfo_ = new ::msg::UserLoginInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_112_ChangeUserSetting.UserLoginInfo)
  return userlogininfo_;
}
inline ::msg::UserLoginInfo* Processor_112_ChangeUserSetting::release_userlogininfo() {
  clear_has_userlogininfo();
  ::msg::UserLoginInfo* temp = userlogininfo_;
  userlogininfo_ = NULL;
  return temp;
}
inline void Processor_112_ChangeUserSetting::set_allocated_userlogininfo(::msg::UserLoginInfo* userlogininfo) {
  delete userlogininfo_;
  userlogininfo_ = userlogininfo;
  if (userlogininfo) {
    set_has_userlogininfo();
  } else {
    clear_has_userlogininfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_112_ChangeUserSetting.UserLoginInfo)
}

// optional .msg.UserGameSettings GameSettings = 3;
inline bool Processor_112_ChangeUserSetting::has_gamesettings() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_112_ChangeUserSetting::set_has_gamesettings() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_112_ChangeUserSetting::clear_has_gamesettings() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_112_ChangeUserSetting::clear_gamesettings() {
  if (gamesettings_ != NULL) gamesettings_->::msg::UserGameSettings::Clear();
  clear_has_gamesettings();
}
inline const ::msg::UserGameSettings& Processor_112_ChangeUserSetting::gamesettings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_112_ChangeUserSetting.GameSettings)
  return gamesettings_ != NULL ? *gamesettings_ : *default_instance_->gamesettings_;
}
inline ::msg::UserGameSettings* Processor_112_ChangeUserSetting::mutable_gamesettings() {
  set_has_gamesettings();
  if (gamesettings_ == NULL) gamesettings_ = new ::msg::UserGameSettings;
  // @@protoc_insertion_point(field_mutable:msg.Processor_112_ChangeUserSetting.GameSettings)
  return gamesettings_;
}
inline ::msg::UserGameSettings* Processor_112_ChangeUserSetting::release_gamesettings() {
  clear_has_gamesettings();
  ::msg::UserGameSettings* temp = gamesettings_;
  gamesettings_ = NULL;
  return temp;
}
inline void Processor_112_ChangeUserSetting::set_allocated_gamesettings(::msg::UserGameSettings* gamesettings) {
  delete gamesettings_;
  gamesettings_ = gamesettings;
  if (gamesettings) {
    set_has_gamesettings();
  } else {
    clear_has_gamesettings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_112_ChangeUserSetting.GameSettings)
}

// -------------------------------------------------------------------

// Processor_113_GetUserPermission_UP

// optional int32 GroupID = 1;
inline bool Processor_113_GetUserPermission_UP::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_113_GetUserPermission_UP::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_113_GetUserPermission_UP::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_113_GetUserPermission_UP::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_113_GetUserPermission_UP::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_113_GetUserPermission_UP.GroupID)
  return groupid_;
}
inline void Processor_113_GetUserPermission_UP::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_113_GetUserPermission_UP.GroupID)
}

// optional int32 UserID = 2;
inline bool Processor_113_GetUserPermission_UP::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_113_GetUserPermission_UP::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_113_GetUserPermission_UP::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_113_GetUserPermission_UP::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_113_GetUserPermission_UP::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_113_GetUserPermission_UP.UserID)
  return userid_;
}
inline void Processor_113_GetUserPermission_UP::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_113_GetUserPermission_UP.UserID)
}

// -------------------------------------------------------------------

// Processor_113_GetUserPermission_DOWN

// optional .msg.GroupPermission Permission = 1;
inline bool Processor_113_GetUserPermission_DOWN::has_permission() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_113_GetUserPermission_DOWN::set_has_permission() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_113_GetUserPermission_DOWN::clear_has_permission() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_113_GetUserPermission_DOWN::clear_permission() {
  if (permission_ != NULL) permission_->::msg::GroupPermission::Clear();
  clear_has_permission();
}
inline const ::msg::GroupPermission& Processor_113_GetUserPermission_DOWN::permission() const {
  // @@protoc_insertion_point(field_get:msg.Processor_113_GetUserPermission_DOWN.Permission)
  return permission_ != NULL ? *permission_ : *default_instance_->permission_;
}
inline ::msg::GroupPermission* Processor_113_GetUserPermission_DOWN::mutable_permission() {
  set_has_permission();
  if (permission_ == NULL) permission_ = new ::msg::GroupPermission;
  // @@protoc_insertion_point(field_mutable:msg.Processor_113_GetUserPermission_DOWN.Permission)
  return permission_;
}
inline ::msg::GroupPermission* Processor_113_GetUserPermission_DOWN::release_permission() {
  clear_has_permission();
  ::msg::GroupPermission* temp = permission_;
  permission_ = NULL;
  return temp;
}
inline void Processor_113_GetUserPermission_DOWN::set_allocated_permission(::msg::GroupPermission* permission) {
  delete permission_;
  permission_ = permission;
  if (permission) {
    set_has_permission();
  } else {
    clear_has_permission();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_113_GetUserPermission_DOWN.Permission)
}

// -------------------------------------------------------------------

// Processor_114_ChangePermission

// optional int32 UserID = 1;
inline bool Processor_114_ChangePermission::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_114_ChangePermission::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_114_ChangePermission::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_114_ChangePermission::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_114_ChangePermission::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_114_ChangePermission.UserID)
  return userid_;
}
inline void Processor_114_ChangePermission::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_114_ChangePermission.UserID)
}

// optional .msg.GroupPermission Permission = 2;
inline bool Processor_114_ChangePermission::has_permission() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_114_ChangePermission::set_has_permission() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_114_ChangePermission::clear_has_permission() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_114_ChangePermission::clear_permission() {
  if (permission_ != NULL) permission_->::msg::GroupPermission::Clear();
  clear_has_permission();
}
inline const ::msg::GroupPermission& Processor_114_ChangePermission::permission() const {
  // @@protoc_insertion_point(field_get:msg.Processor_114_ChangePermission.Permission)
  return permission_ != NULL ? *permission_ : *default_instance_->permission_;
}
inline ::msg::GroupPermission* Processor_114_ChangePermission::mutable_permission() {
  set_has_permission();
  if (permission_ == NULL) permission_ = new ::msg::GroupPermission;
  // @@protoc_insertion_point(field_mutable:msg.Processor_114_ChangePermission.Permission)
  return permission_;
}
inline ::msg::GroupPermission* Processor_114_ChangePermission::release_permission() {
  clear_has_permission();
  ::msg::GroupPermission* temp = permission_;
  permission_ = NULL;
  return temp;
}
inline void Processor_114_ChangePermission::set_allocated_permission(::msg::GroupPermission* permission) {
  delete permission_;
  permission_ = permission;
  if (permission) {
    set_has_permission();
  } else {
    clear_has_permission();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_114_ChangePermission.Permission)
}

// -------------------------------------------------------------------

// GroupPermission

// optional int32 GroupID = 1;
inline bool GroupPermission::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupPermission::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupPermission::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupPermission::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 GroupPermission::groupid() const {
  // @@protoc_insertion_point(field_get:msg.GroupPermission.GroupID)
  return groupid_;
}
inline void GroupPermission::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupPermission.GroupID)
}

// optional int32 Credit = 2;
inline bool GroupPermission::has_credit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupPermission::set_has_credit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupPermission::clear_has_credit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupPermission::clear_credit() {
  credit_ = 0;
  clear_has_credit();
}
inline ::google_public::protobuf::int32 GroupPermission::credit() const {
  // @@protoc_insertion_point(field_get:msg.GroupPermission.Credit)
  return credit_;
}
inline void GroupPermission::set_credit(::google_public::protobuf::int32 value) {
  set_has_credit();
  credit_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupPermission.Credit)
}

// -------------------------------------------------------------------

// Processor_115_GetGroupSetting_UP

// optional int32 GroupID = 1;
inline bool Processor_115_GetGroupSetting_UP::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_115_GetGroupSetting_UP::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_115_GetGroupSetting_UP::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_115_GetGroupSetting_UP::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_115_GetGroupSetting_UP::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_115_GetGroupSetting_UP.GroupID)
  return groupid_;
}
inline void Processor_115_GetGroupSetting_UP::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_115_GetGroupSetting_UP.GroupID)
}

// -------------------------------------------------------------------

// Processor_115_GetGroupSetting_DOWN

// optional .msg.GroupSetting Setting = 1;
inline bool Processor_115_GetGroupSetting_DOWN::has_setting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_115_GetGroupSetting_DOWN::set_has_setting() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_115_GetGroupSetting_DOWN::clear_has_setting() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_115_GetGroupSetting_DOWN::clear_setting() {
  if (setting_ != NULL) setting_->::msg::GroupSetting::Clear();
  clear_has_setting();
}
inline const ::msg::GroupSetting& Processor_115_GetGroupSetting_DOWN::setting() const {
  // @@protoc_insertion_point(field_get:msg.Processor_115_GetGroupSetting_DOWN.Setting)
  return setting_ != NULL ? *setting_ : *default_instance_->setting_;
}
inline ::msg::GroupSetting* Processor_115_GetGroupSetting_DOWN::mutable_setting() {
  set_has_setting();
  if (setting_ == NULL) setting_ = new ::msg::GroupSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_115_GetGroupSetting_DOWN.Setting)
  return setting_;
}
inline ::msg::GroupSetting* Processor_115_GetGroupSetting_DOWN::release_setting() {
  clear_has_setting();
  ::msg::GroupSetting* temp = setting_;
  setting_ = NULL;
  return temp;
}
inline void Processor_115_GetGroupSetting_DOWN::set_allocated_setting(::msg::GroupSetting* setting) {
  delete setting_;
  setting_ = setting;
  if (setting) {
    set_has_setting();
  } else {
    clear_has_setting();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_115_GetGroupSetting_DOWN.Setting)
}

// -------------------------------------------------------------------

// Processor_116_ChangeGroupSetting

// optional .msg.GroupSetting Setting = 1;
inline bool Processor_116_ChangeGroupSetting::has_setting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_116_ChangeGroupSetting::set_has_setting() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_116_ChangeGroupSetting::clear_has_setting() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_116_ChangeGroupSetting::clear_setting() {
  if (setting_ != NULL) setting_->::msg::GroupSetting::Clear();
  clear_has_setting();
}
inline const ::msg::GroupSetting& Processor_116_ChangeGroupSetting::setting() const {
  // @@protoc_insertion_point(field_get:msg.Processor_116_ChangeGroupSetting.Setting)
  return setting_ != NULL ? *setting_ : *default_instance_->setting_;
}
inline ::msg::GroupSetting* Processor_116_ChangeGroupSetting::mutable_setting() {
  set_has_setting();
  if (setting_ == NULL) setting_ = new ::msg::GroupSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_116_ChangeGroupSetting.Setting)
  return setting_;
}
inline ::msg::GroupSetting* Processor_116_ChangeGroupSetting::release_setting() {
  clear_has_setting();
  ::msg::GroupSetting* temp = setting_;
  setting_ = NULL;
  return temp;
}
inline void Processor_116_ChangeGroupSetting::set_allocated_setting(::msg::GroupSetting* setting) {
  delete setting_;
  setting_ = setting;
  if (setting) {
    set_has_setting();
  } else {
    clear_has_setting();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_116_ChangeGroupSetting.Setting)
}

// -------------------------------------------------------------------

// Processor_118_SendVerification

// optional string PhoneNumber = 1;
inline bool Processor_118_SendVerification::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_118_SendVerification::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_118_SendVerification::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_118_SendVerification::clear_phonenumber() {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_->clear();
  }
  clear_has_phonenumber();
}
inline const ::std::string& Processor_118_SendVerification::phonenumber() const {
  // @@protoc_insertion_point(field_get:msg.Processor_118_SendVerification.PhoneNumber)
  return *phonenumber_;
}
inline void Processor_118_SendVerification::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_118_SendVerification.PhoneNumber)
}
inline void Processor_118_SendVerification::set_phonenumber(const char* value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_118_SendVerification.PhoneNumber)
}
inline void Processor_118_SendVerification::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_118_SendVerification.PhoneNumber)
}
inline ::std::string* Processor_118_SendVerification::mutable_phonenumber() {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_118_SendVerification.PhoneNumber)
  return phonenumber_;
}
inline ::std::string* Processor_118_SendVerification::release_phonenumber() {
  clear_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phonenumber_;
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_118_SendVerification::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonenumber_;
  }
  if (phonenumber) {
    set_has_phonenumber();
    phonenumber_ = phonenumber;
  } else {
    clear_has_phonenumber();
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_118_SendVerification.PhoneNumber)
}

// -------------------------------------------------------------------

// Processor_119_BindPhone

// optional string PhoneNumber = 1;
inline bool Processor_119_BindPhone::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_119_BindPhone::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_119_BindPhone::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_119_BindPhone::clear_phonenumber() {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_->clear();
  }
  clear_has_phonenumber();
}
inline const ::std::string& Processor_119_BindPhone::phonenumber() const {
  // @@protoc_insertion_point(field_get:msg.Processor_119_BindPhone.PhoneNumber)
  return *phonenumber_;
}
inline void Processor_119_BindPhone::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_119_BindPhone.PhoneNumber)
}
inline void Processor_119_BindPhone::set_phonenumber(const char* value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_119_BindPhone.PhoneNumber)
}
inline void Processor_119_BindPhone::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_119_BindPhone.PhoneNumber)
}
inline ::std::string* Processor_119_BindPhone::mutable_phonenumber() {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_119_BindPhone.PhoneNumber)
  return phonenumber_;
}
inline ::std::string* Processor_119_BindPhone::release_phonenumber() {
  clear_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phonenumber_;
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_119_BindPhone::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonenumber_;
  }
  if (phonenumber) {
    set_has_phonenumber();
    phonenumber_ = phonenumber;
  } else {
    clear_has_phonenumber();
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_119_BindPhone.PhoneNumber)
}

// optional string Verification = 2;
inline bool Processor_119_BindPhone::has_verification() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_119_BindPhone::set_has_verification() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_119_BindPhone::clear_has_verification() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_119_BindPhone::clear_verification() {
  if (verification_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_->clear();
  }
  clear_has_verification();
}
inline const ::std::string& Processor_119_BindPhone::verification() const {
  // @@protoc_insertion_point(field_get:msg.Processor_119_BindPhone.Verification)
  return *verification_;
}
inline void Processor_119_BindPhone::set_verification(const ::std::string& value) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_119_BindPhone.Verification)
}
inline void Processor_119_BindPhone::set_verification(const char* value) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_119_BindPhone.Verification)
}
inline void Processor_119_BindPhone::set_verification(const char* value, size_t size) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_119_BindPhone.Verification)
}
inline ::std::string* Processor_119_BindPhone::mutable_verification() {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_119_BindPhone.Verification)
  return verification_;
}
inline ::std::string* Processor_119_BindPhone::release_verification() {
  clear_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = verification_;
    verification_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_119_BindPhone::set_allocated_verification(::std::string* verification) {
  if (verification_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete verification_;
  }
  if (verification) {
    set_has_verification();
    verification_ = verification;
  } else {
    clear_has_verification();
    verification_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_119_BindPhone.Verification)
}

// -------------------------------------------------------------------

// GroupSetting

// optional int32 GroupID = 1;
inline bool GroupSetting::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupSetting::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupSetting::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupSetting::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 GroupSetting::groupid() const {
  // @@protoc_insertion_point(field_get:msg.GroupSetting.GroupID)
  return groupid_;
}
inline void GroupSetting::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupSetting.GroupID)
}

// optional bool ReceivePush = 2;
inline bool GroupSetting::has_receivepush() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupSetting::set_has_receivepush() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupSetting::clear_has_receivepush() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupSetting::clear_receivepush() {
  receivepush_ = false;
  clear_has_receivepush();
}
inline bool GroupSetting::receivepush() const {
  // @@protoc_insertion_point(field_get:msg.GroupSetting.ReceivePush)
  return receivepush_;
}
inline void GroupSetting::set_receivepush(bool value) {
  set_has_receivepush();
  receivepush_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupSetting.ReceivePush)
}

// -------------------------------------------------------------------

// FriendInfo

// optional .msg.UserDetailInfo UserDetailInfo = 1;
inline bool FriendInfo::has_userdetailinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInfo::set_has_userdetailinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInfo::clear_has_userdetailinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInfo::clear_userdetailinfo() {
  if (userdetailinfo_ != NULL) userdetailinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userdetailinfo();
}
inline const ::msg::UserDetailInfo& FriendInfo::userdetailinfo() const {
  // @@protoc_insertion_point(field_get:msg.FriendInfo.UserDetailInfo)
  return userdetailinfo_ != NULL ? *userdetailinfo_ : *default_instance_->userdetailinfo_;
}
inline ::msg::UserDetailInfo* FriendInfo::mutable_userdetailinfo() {
  set_has_userdetailinfo();
  if (userdetailinfo_ == NULL) userdetailinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.FriendInfo.UserDetailInfo)
  return userdetailinfo_;
}
inline ::msg::UserDetailInfo* FriendInfo::release_userdetailinfo() {
  clear_has_userdetailinfo();
  ::msg::UserDetailInfo* temp = userdetailinfo_;
  userdetailinfo_ = NULL;
  return temp;
}
inline void FriendInfo::set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo) {
  delete userdetailinfo_;
  userdetailinfo_ = userdetailinfo;
  if (userdetailinfo) {
    set_has_userdetailinfo();
  } else {
    clear_has_userdetailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.FriendInfo.UserDetailInfo)
}

// optional bool IsOnline = 2;
inline bool FriendInfo::has_isonline() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendInfo::set_has_isonline() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendInfo::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendInfo::clear_isonline() {
  isonline_ = false;
  clear_has_isonline();
}
inline bool FriendInfo::isonline() const {
  // @@protoc_insertion_point(field_get:msg.FriendInfo.IsOnline)
  return isonline_;
}
inline void FriendInfo::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
  // @@protoc_insertion_point(field_set:msg.FriendInfo.IsOnline)
}

// -------------------------------------------------------------------

// Processor_120_GetFriendList

// optional .msg.Response Response = 1;
inline bool Processor_120_GetFriendList::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_120_GetFriendList::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_120_GetFriendList::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_120_GetFriendList::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_120_GetFriendList::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_120_GetFriendList.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_120_GetFriendList::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_120_GetFriendList.Response)
  return response_;
}
inline ::msg::Response* Processor_120_GetFriendList::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_120_GetFriendList::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_120_GetFriendList.Response)
}

// repeated .msg.FriendInfo FriendInfo = 2;
inline int Processor_120_GetFriendList::friendinfo_size() const {
  return friendinfo_.size();
}
inline void Processor_120_GetFriendList::clear_friendinfo() {
  friendinfo_.Clear();
}
inline const ::msg::FriendInfo& Processor_120_GetFriendList::friendinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_120_GetFriendList.FriendInfo)
  return friendinfo_.Get(index);
}
inline ::msg::FriendInfo* Processor_120_GetFriendList::mutable_friendinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_120_GetFriendList.FriendInfo)
  return friendinfo_.Mutable(index);
}
inline ::msg::FriendInfo* Processor_120_GetFriendList::add_friendinfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_120_GetFriendList.FriendInfo)
  return friendinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::FriendInfo >&
Processor_120_GetFriendList::friendinfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_120_GetFriendList.FriendInfo)
  return friendinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::FriendInfo >*
Processor_120_GetFriendList::mutable_friendinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_120_GetFriendList.FriendInfo)
  return &friendinfo_;
}

// -------------------------------------------------------------------

// Processor_121_SearchUser_UP

// optional string SearchName = 1;
inline bool Processor_121_SearchUser_UP::has_searchname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_121_SearchUser_UP::set_has_searchname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_121_SearchUser_UP::clear_has_searchname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_121_SearchUser_UP::clear_searchname() {
  if (searchname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_->clear();
  }
  clear_has_searchname();
}
inline const ::std::string& Processor_121_SearchUser_UP::searchname() const {
  // @@protoc_insertion_point(field_get:msg.Processor_121_SearchUser_UP.SearchName)
  return *searchname_;
}
inline void Processor_121_SearchUser_UP::set_searchname(const ::std::string& value) {
  set_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_ = new ::std::string;
  }
  searchname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_121_SearchUser_UP.SearchName)
}
inline void Processor_121_SearchUser_UP::set_searchname(const char* value) {
  set_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_ = new ::std::string;
  }
  searchname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_121_SearchUser_UP.SearchName)
}
inline void Processor_121_SearchUser_UP::set_searchname(const char* value, size_t size) {
  set_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_ = new ::std::string;
  }
  searchname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_121_SearchUser_UP.SearchName)
}
inline ::std::string* Processor_121_SearchUser_UP::mutable_searchname() {
  set_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_121_SearchUser_UP.SearchName)
  return searchname_;
}
inline ::std::string* Processor_121_SearchUser_UP::release_searchname() {
  clear_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = searchname_;
    searchname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_121_SearchUser_UP::set_allocated_searchname(::std::string* searchname) {
  if (searchname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete searchname_;
  }
  if (searchname) {
    set_has_searchname();
    searchname_ = searchname;
  } else {
    clear_has_searchname();
    searchname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_121_SearchUser_UP.SearchName)
}

// -------------------------------------------------------------------

// Processor_121_SearchUser_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_121_SearchUser_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_121_SearchUser_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_121_SearchUser_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_121_SearchUser_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_121_SearchUser_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_121_SearchUser_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_121_SearchUser_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_121_SearchUser_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_121_SearchUser_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_121_SearchUser_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_121_SearchUser_DOWN.Response)
}

// repeated .msg.UserDetailInfo UserDetailInfo = 2;
inline int Processor_121_SearchUser_DOWN::userdetailinfo_size() const {
  return userdetailinfo_.size();
}
inline void Processor_121_SearchUser_DOWN::clear_userdetailinfo() {
  userdetailinfo_.Clear();
}
inline const ::msg::UserDetailInfo& Processor_121_SearchUser_DOWN::userdetailinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_121_SearchUser_DOWN.UserDetailInfo)
  return userdetailinfo_.Get(index);
}
inline ::msg::UserDetailInfo* Processor_121_SearchUser_DOWN::mutable_userdetailinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_121_SearchUser_DOWN.UserDetailInfo)
  return userdetailinfo_.Mutable(index);
}
inline ::msg::UserDetailInfo* Processor_121_SearchUser_DOWN::add_userdetailinfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_121_SearchUser_DOWN.UserDetailInfo)
  return userdetailinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >&
Processor_121_SearchUser_DOWN::userdetailinfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_121_SearchUser_DOWN.UserDetailInfo)
  return userdetailinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >*
Processor_121_SearchUser_DOWN::mutable_userdetailinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_121_SearchUser_DOWN.UserDetailInfo)
  return &userdetailinfo_;
}

// -------------------------------------------------------------------

// Processor_122_SendRequest

// repeated .msg.Request Request = 1;
inline int Processor_122_SendRequest::request_size() const {
  return request_.size();
}
inline void Processor_122_SendRequest::clear_request() {
  request_.Clear();
}
inline const ::msg::Request& Processor_122_SendRequest::request(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_122_SendRequest.Request)
  return request_.Get(index);
}
inline ::msg::Request* Processor_122_SendRequest::mutable_request(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_122_SendRequest.Request)
  return request_.Mutable(index);
}
inline ::msg::Request* Processor_122_SendRequest::add_request() {
  // @@protoc_insertion_point(field_add:msg.Processor_122_SendRequest.Request)
  return request_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Request >&
Processor_122_SendRequest::request() const {
  // @@protoc_insertion_point(field_list:msg.Processor_122_SendRequest.Request)
  return request_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::Request >*
Processor_122_SendRequest::mutable_request() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_122_SendRequest.Request)
  return &request_;
}

// -------------------------------------------------------------------

// Processor_123_ReceiveRequestList

// repeated .msg.Request Request = 1;
inline int Processor_123_ReceiveRequestList::request_size() const {
  return request_.size();
}
inline void Processor_123_ReceiveRequestList::clear_request() {
  request_.Clear();
}
inline const ::msg::Request& Processor_123_ReceiveRequestList::request(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_123_ReceiveRequestList.Request)
  return request_.Get(index);
}
inline ::msg::Request* Processor_123_ReceiveRequestList::mutable_request(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_123_ReceiveRequestList.Request)
  return request_.Mutable(index);
}
inline ::msg::Request* Processor_123_ReceiveRequestList::add_request() {
  // @@protoc_insertion_point(field_add:msg.Processor_123_ReceiveRequestList.Request)
  return request_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Request >&
Processor_123_ReceiveRequestList::request() const {
  // @@protoc_insertion_point(field_list:msg.Processor_123_ReceiveRequestList.Request)
  return request_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::Request >*
Processor_123_ReceiveRequestList::mutable_request() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_123_ReceiveRequestList.Request)
  return &request_;
}

// -------------------------------------------------------------------

// Invitation

// optional .msg.Request Request = 1;
inline bool Invitation::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Invitation::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Invitation::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Invitation::clear_request() {
  if (request_ != NULL) request_->::msg::Request::Clear();
  clear_has_request();
}
inline const ::msg::Request& Invitation::request() const {
  // @@protoc_insertion_point(field_get:msg.Invitation.Request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::msg::Request* Invitation::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::msg::Request;
  // @@protoc_insertion_point(field_mutable:msg.Invitation.Request)
  return request_;
}
inline ::msg::Request* Invitation::release_request() {
  clear_has_request();
  ::msg::Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void Invitation::set_allocated_request(::msg::Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Invitation.Request)
}

// optional .msg.MessageStatus SendingStatus = 2;
inline bool Invitation::has_sendingstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Invitation::set_has_sendingstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Invitation::clear_has_sendingstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Invitation::clear_sendingstatus() {
  sendingstatus_ = 1;
  clear_has_sendingstatus();
}
inline ::msg::MessageStatus Invitation::sendingstatus() const {
  // @@protoc_insertion_point(field_get:msg.Invitation.SendingStatus)
  return static_cast< ::msg::MessageStatus >(sendingstatus_);
}
inline void Invitation::set_sendingstatus(::msg::MessageStatus value) {
  assert(::msg::MessageStatus_IsValid(value));
  set_has_sendingstatus();
  sendingstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.Invitation.SendingStatus)
}

// optional .msg.InvitationStatus Status = 3;
inline bool Invitation::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Invitation::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Invitation::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Invitation::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::msg::InvitationStatus Invitation::status() const {
  // @@protoc_insertion_point(field_get:msg.Invitation.Status)
  return static_cast< ::msg::InvitationStatus >(status_);
}
inline void Invitation::set_status(::msg::InvitationStatus value) {
  assert(::msg::InvitationStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg.Invitation.Status)
}

// -------------------------------------------------------------------

// Request

// optional int32 ID = 1;
inline bool Request::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google_public::protobuf::int32 Request::id() const {
  // @@protoc_insertion_point(field_get:msg.Request.ID)
  return id_;
}
inline void Request::set_id(::google_public::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.Request.ID)
}

// optional .msg.UserDetailInfo UserDetailInfo = 2;
inline bool Request::has_userdetailinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_userdetailinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_userdetailinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_userdetailinfo() {
  if (userdetailinfo_ != NULL) userdetailinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userdetailinfo();
}
inline const ::msg::UserDetailInfo& Request::userdetailinfo() const {
  // @@protoc_insertion_point(field_get:msg.Request.UserDetailInfo)
  return userdetailinfo_ != NULL ? *userdetailinfo_ : *default_instance_->userdetailinfo_;
}
inline ::msg::UserDetailInfo* Request::mutable_userdetailinfo() {
  set_has_userdetailinfo();
  if (userdetailinfo_ == NULL) userdetailinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.Request.UserDetailInfo)
  return userdetailinfo_;
}
inline ::msg::UserDetailInfo* Request::release_userdetailinfo() {
  clear_has_userdetailinfo();
  ::msg::UserDetailInfo* temp = userdetailinfo_;
  userdetailinfo_ = NULL;
  return temp;
}
inline void Request::set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo) {
  delete userdetailinfo_;
  userdetailinfo_ = userdetailinfo;
  if (userdetailinfo) {
    set_has_userdetailinfo();
  } else {
    clear_has_userdetailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Request.UserDetailInfo)
}

// optional int32 ReceiverID = 3;
inline bool Request::has_receiverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_receiverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_receiverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_receiverid() {
  receiverid_ = 0;
  clear_has_receiverid();
}
inline ::google_public::protobuf::int32 Request::receiverid() const {
  // @@protoc_insertion_point(field_get:msg.Request.ReceiverID)
  return receiverid_;
}
inline void Request::set_receiverid(::google_public::protobuf::int32 value) {
  set_has_receiverid();
  receiverid_ = value;
  // @@protoc_insertion_point(field_set:msg.Request.ReceiverID)
}

// optional .msg.GroupInfo GroupInfo = 4;
inline bool Request::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::msg::GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::msg::GroupInfo& Request::groupinfo() const {
  // @@protoc_insertion_point(field_get:msg.Request.GroupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::msg::GroupInfo* Request::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) groupinfo_ = new ::msg::GroupInfo;
  // @@protoc_insertion_point(field_mutable:msg.Request.GroupInfo)
  return groupinfo_;
}
inline ::msg::GroupInfo* Request::release_groupinfo() {
  clear_has_groupinfo();
  ::msg::GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void Request::set_allocated_groupinfo(::msg::GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Request.GroupInfo)
}

// optional .msg.RequestType Type = 5;
inline bool Request::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg::RequestType Request::type() const {
  // @@protoc_insertion_point(field_get:msg.Request.Type)
  return static_cast< ::msg::RequestType >(type_);
}
inline void Request::set_type(::msg::RequestType value) {
  assert(::msg::RequestType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.Request.Type)
}

// -------------------------------------------------------------------

// Processor_124_DealRequest

// optional bool Accepted = 1;
inline bool Processor_124_DealRequest::has_accepted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_124_DealRequest::set_has_accepted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_124_DealRequest::clear_has_accepted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_124_DealRequest::clear_accepted() {
  accepted_ = false;
  clear_has_accepted();
}
inline bool Processor_124_DealRequest::accepted() const {
  // @@protoc_insertion_point(field_get:msg.Processor_124_DealRequest.Accepted)
  return accepted_;
}
inline void Processor_124_DealRequest::set_accepted(bool value) {
  set_has_accepted();
  accepted_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_124_DealRequest.Accepted)
}

// optional int32 RequestID = 2;
inline bool Processor_124_DealRequest::has_requestid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_124_DealRequest::set_has_requestid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_124_DealRequest::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_124_DealRequest::clear_requestid() {
  requestid_ = 0;
  clear_has_requestid();
}
inline ::google_public::protobuf::int32 Processor_124_DealRequest::requestid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_124_DealRequest.RequestID)
  return requestid_;
}
inline void Processor_124_DealRequest::set_requestid(::google_public::protobuf::int32 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_124_DealRequest.RequestID)
}

// -------------------------------------------------------------------

// Processor_124_DealRequest_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_124_DealRequest_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_124_DealRequest_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_124_DealRequest_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_124_DealRequest_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_124_DealRequest_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_124_DealRequest_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_124_DealRequest_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_124_DealRequest_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_124_DealRequest_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_124_DealRequest_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_124_DealRequest_DOWN.Response)
}

// optional int32 RequestID = 2;
inline bool Processor_124_DealRequest_DOWN::has_requestid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_124_DealRequest_DOWN::set_has_requestid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_124_DealRequest_DOWN::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_124_DealRequest_DOWN::clear_requestid() {
  requestid_ = 0;
  clear_has_requestid();
}
inline ::google_public::protobuf::int32 Processor_124_DealRequest_DOWN::requestid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_124_DealRequest_DOWN.RequestID)
  return requestid_;
}
inline void Processor_124_DealRequest_DOWN::set_requestid(::google_public::protobuf::int32 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_124_DealRequest_DOWN.RequestID)
}

// optional bool Accepted = 3;
inline bool Processor_124_DealRequest_DOWN::has_accepted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_124_DealRequest_DOWN::set_has_accepted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_124_DealRequest_DOWN::clear_has_accepted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_124_DealRequest_DOWN::clear_accepted() {
  accepted_ = false;
  clear_has_accepted();
}
inline bool Processor_124_DealRequest_DOWN::accepted() const {
  // @@protoc_insertion_point(field_get:msg.Processor_124_DealRequest_DOWN.Accepted)
  return accepted_;
}
inline void Processor_124_DealRequest_DOWN::set_accepted(bool value) {
  set_has_accepted();
  accepted_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_124_DealRequest_DOWN.Accepted)
}

// -------------------------------------------------------------------

// Processor_125_DeleteFriend

// optional int32 UserId = 1;
inline bool Processor_125_DeleteFriend::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_125_DeleteFriend::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_125_DeleteFriend::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_125_DeleteFriend::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_125_DeleteFriend::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_125_DeleteFriend.UserId)
  return userid_;
}
inline void Processor_125_DeleteFriend::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_125_DeleteFriend.UserId)
}

// -------------------------------------------------------------------

// Processor_126_Set_MomentBlock

// optional int32 UserId = 1;
inline bool Processor_126_Set_MomentBlock::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_126_Set_MomentBlock::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_126_Set_MomentBlock::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_126_Set_MomentBlock::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_126_Set_MomentBlock::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_126_Set_MomentBlock.UserId)
  return userid_;
}
inline void Processor_126_Set_MomentBlock::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_126_Set_MomentBlock.UserId)
}

// optional bool IsBlock = 2;
inline bool Processor_126_Set_MomentBlock::has_isblock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_126_Set_MomentBlock::set_has_isblock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_126_Set_MomentBlock::clear_has_isblock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_126_Set_MomentBlock::clear_isblock() {
  isblock_ = false;
  clear_has_isblock();
}
inline bool Processor_126_Set_MomentBlock::isblock() const {
  // @@protoc_insertion_point(field_get:msg.Processor_126_Set_MomentBlock.IsBlock)
  return isblock_;
}
inline void Processor_126_Set_MomentBlock::set_isblock(bool value) {
  set_has_isblock();
  isblock_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_126_Set_MomentBlock.IsBlock)
}

// -------------------------------------------------------------------

// Processor_127_SearchFriendByPhoneNumber_UP

// repeated string PhoneNumber = 1;
inline int Processor_127_SearchFriendByPhoneNumber_UP::phonenumber_size() const {
  return phonenumber_.size();
}
inline void Processor_127_SearchFriendByPhoneNumber_UP::clear_phonenumber() {
  phonenumber_.Clear();
}
inline const ::std::string& Processor_127_SearchFriendByPhoneNumber_UP::phonenumber(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
  return phonenumber_.Get(index);
}
inline ::std::string* Processor_127_SearchFriendByPhoneNumber_UP::mutable_phonenumber(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
  return phonenumber_.Mutable(index);
}
inline void Processor_127_SearchFriendByPhoneNumber_UP::set_phonenumber(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
  phonenumber_.Mutable(index)->assign(value);
}
inline void Processor_127_SearchFriendByPhoneNumber_UP::set_phonenumber(int index, const char* value) {
  phonenumber_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
}
inline void Processor_127_SearchFriendByPhoneNumber_UP::set_phonenumber(int index, const char* value, size_t size) {
  phonenumber_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
}
inline ::std::string* Processor_127_SearchFriendByPhoneNumber_UP::add_phonenumber() {
  return phonenumber_.Add();
}
inline void Processor_127_SearchFriendByPhoneNumber_UP::add_phonenumber(const ::std::string& value) {
  phonenumber_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
}
inline void Processor_127_SearchFriendByPhoneNumber_UP::add_phonenumber(const char* value) {
  phonenumber_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
}
inline void Processor_127_SearchFriendByPhoneNumber_UP::add_phonenumber(const char* value, size_t size) {
  phonenumber_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
}
inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>&
Processor_127_SearchFriendByPhoneNumber_UP::phonenumber() const {
  // @@protoc_insertion_point(field_list:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
  return phonenumber_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::std::string>*
Processor_127_SearchFriendByPhoneNumber_UP::mutable_phonenumber() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_127_SearchFriendByPhoneNumber_UP.PhoneNumber)
  return &phonenumber_;
}

// -------------------------------------------------------------------

// FriendByPhoneNumber

// optional string PhoneNumber = 1;
inline bool FriendByPhoneNumber::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendByPhoneNumber::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendByPhoneNumber::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendByPhoneNumber::clear_phonenumber() {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_->clear();
  }
  clear_has_phonenumber();
}
inline const ::std::string& FriendByPhoneNumber::phonenumber() const {
  // @@protoc_insertion_point(field_get:msg.FriendByPhoneNumber.PhoneNumber)
  return *phonenumber_;
}
inline void FriendByPhoneNumber::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set:msg.FriendByPhoneNumber.PhoneNumber)
}
inline void FriendByPhoneNumber::set_phonenumber(const char* value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.FriendByPhoneNumber.PhoneNumber)
}
inline void FriendByPhoneNumber::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.FriendByPhoneNumber.PhoneNumber)
}
inline ::std::string* FriendByPhoneNumber::mutable_phonenumber() {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.FriendByPhoneNumber.PhoneNumber)
  return phonenumber_;
}
inline ::std::string* FriendByPhoneNumber::release_phonenumber() {
  clear_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phonenumber_;
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendByPhoneNumber::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonenumber_;
  }
  if (phonenumber) {
    set_has_phonenumber();
    phonenumber_ = phonenumber;
  } else {
    clear_has_phonenumber();
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.FriendByPhoneNumber.PhoneNumber)
}

// optional .msg.UserDetailInfo Users = 2;
inline bool FriendByPhoneNumber::has_users() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendByPhoneNumber::set_has_users() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendByPhoneNumber::clear_has_users() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendByPhoneNumber::clear_users() {
  if (users_ != NULL) users_->::msg::UserDetailInfo::Clear();
  clear_has_users();
}
inline const ::msg::UserDetailInfo& FriendByPhoneNumber::users() const {
  // @@protoc_insertion_point(field_get:msg.FriendByPhoneNumber.Users)
  return users_ != NULL ? *users_ : *default_instance_->users_;
}
inline ::msg::UserDetailInfo* FriendByPhoneNumber::mutable_users() {
  set_has_users();
  if (users_ == NULL) users_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.FriendByPhoneNumber.Users)
  return users_;
}
inline ::msg::UserDetailInfo* FriendByPhoneNumber::release_users() {
  clear_has_users();
  ::msg::UserDetailInfo* temp = users_;
  users_ = NULL;
  return temp;
}
inline void FriendByPhoneNumber::set_allocated_users(::msg::UserDetailInfo* users) {
  delete users_;
  users_ = users;
  if (users) {
    set_has_users();
  } else {
    clear_has_users();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.FriendByPhoneNumber.Users)
}

// optional bool IsFriend = 3;
inline bool FriendByPhoneNumber::has_isfriend() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendByPhoneNumber::set_has_isfriend() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendByPhoneNumber::clear_has_isfriend() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendByPhoneNumber::clear_isfriend() {
  isfriend_ = false;
  clear_has_isfriend();
}
inline bool FriendByPhoneNumber::isfriend() const {
  // @@protoc_insertion_point(field_get:msg.FriendByPhoneNumber.IsFriend)
  return isfriend_;
}
inline void FriendByPhoneNumber::set_isfriend(bool value) {
  set_has_isfriend();
  isfriend_ = value;
  // @@protoc_insertion_point(field_set:msg.FriendByPhoneNumber.IsFriend)
}

// -------------------------------------------------------------------

// Processor_127_SearchFriendByPhoneNumber_DOWN

// repeated .msg.FriendByPhoneNumber Friends = 1;
inline int Processor_127_SearchFriendByPhoneNumber_DOWN::friends_size() const {
  return friends_.size();
}
inline void Processor_127_SearchFriendByPhoneNumber_DOWN::clear_friends() {
  friends_.Clear();
}
inline const ::msg::FriendByPhoneNumber& Processor_127_SearchFriendByPhoneNumber_DOWN::friends(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_127_SearchFriendByPhoneNumber_DOWN.Friends)
  return friends_.Get(index);
}
inline ::msg::FriendByPhoneNumber* Processor_127_SearchFriendByPhoneNumber_DOWN::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_127_SearchFriendByPhoneNumber_DOWN.Friends)
  return friends_.Mutable(index);
}
inline ::msg::FriendByPhoneNumber* Processor_127_SearchFriendByPhoneNumber_DOWN::add_friends() {
  // @@protoc_insertion_point(field_add:msg.Processor_127_SearchFriendByPhoneNumber_DOWN.Friends)
  return friends_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::FriendByPhoneNumber >&
Processor_127_SearchFriendByPhoneNumber_DOWN::friends() const {
  // @@protoc_insertion_point(field_list:msg.Processor_127_SearchFriendByPhoneNumber_DOWN.Friends)
  return friends_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::FriendByPhoneNumber >*
Processor_127_SearchFriendByPhoneNumber_DOWN::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_127_SearchFriendByPhoneNumber_DOWN.Friends)
  return &friends_;
}

// -------------------------------------------------------------------

// Processor_128_GetMomentBlockUsers_DOWN

// repeated .msg.UserDetailInfo Users = 1;
inline int Processor_128_GetMomentBlockUsers_DOWN::users_size() const {
  return users_.size();
}
inline void Processor_128_GetMomentBlockUsers_DOWN::clear_users() {
  users_.Clear();
}
inline const ::msg::UserDetailInfo& Processor_128_GetMomentBlockUsers_DOWN::users(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_128_GetMomentBlockUsers_DOWN.Users)
  return users_.Get(index);
}
inline ::msg::UserDetailInfo* Processor_128_GetMomentBlockUsers_DOWN::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_128_GetMomentBlockUsers_DOWN.Users)
  return users_.Mutable(index);
}
inline ::msg::UserDetailInfo* Processor_128_GetMomentBlockUsers_DOWN::add_users() {
  // @@protoc_insertion_point(field_add:msg.Processor_128_GetMomentBlockUsers_DOWN.Users)
  return users_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >&
Processor_128_GetMomentBlockUsers_DOWN::users() const {
  // @@protoc_insertion_point(field_list:msg.Processor_128_GetMomentBlockUsers_DOWN.Users)
  return users_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >*
Processor_128_GetMomentBlockUsers_DOWN::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_128_GetMomentBlockUsers_DOWN.Users)
  return &users_;
}

// -------------------------------------------------------------------

// Processor_130_Send_Diamond

// optional int32 UserID = 1;
inline bool Processor_130_Send_Diamond::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_130_Send_Diamond::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_130_Send_Diamond::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_130_Send_Diamond::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_130_Send_Diamond::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_130_Send_Diamond.UserID)
  return userid_;
}
inline void Processor_130_Send_Diamond::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_130_Send_Diamond.UserID)
}

// optional int32 Amount = 2;
inline bool Processor_130_Send_Diamond::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_130_Send_Diamond::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_130_Send_Diamond::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_130_Send_Diamond::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google_public::protobuf::int32 Processor_130_Send_Diamond::amount() const {
  // @@protoc_insertion_point(field_get:msg.Processor_130_Send_Diamond.Amount)
  return amount_;
}
inline void Processor_130_Send_Diamond::set_amount(::google_public::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_130_Send_Diamond.Amount)
}

// -------------------------------------------------------------------

// ChatMessage

// optional .msg.UserDetailInfo UserDetailInfo = 1;
inline bool ChatMessage::has_userdetailinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatMessage::set_has_userdetailinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatMessage::clear_has_userdetailinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatMessage::clear_userdetailinfo() {
  if (userdetailinfo_ != NULL) userdetailinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userdetailinfo();
}
inline const ::msg::UserDetailInfo& ChatMessage::userdetailinfo() const {
  // @@protoc_insertion_point(field_get:msg.ChatMessage.UserDetailInfo)
  return userdetailinfo_ != NULL ? *userdetailinfo_ : *default_instance_->userdetailinfo_;
}
inline ::msg::UserDetailInfo* ChatMessage::mutable_userdetailinfo() {
  set_has_userdetailinfo();
  if (userdetailinfo_ == NULL) userdetailinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.ChatMessage.UserDetailInfo)
  return userdetailinfo_;
}
inline ::msg::UserDetailInfo* ChatMessage::release_userdetailinfo() {
  clear_has_userdetailinfo();
  ::msg::UserDetailInfo* temp = userdetailinfo_;
  userdetailinfo_ = NULL;
  return temp;
}
inline void ChatMessage::set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo) {
  delete userdetailinfo_;
  userdetailinfo_ = userdetailinfo;
  if (userdetailinfo) {
    set_has_userdetailinfo();
  } else {
    clear_has_userdetailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ChatMessage.UserDetailInfo)
}

// optional int32 GroupID = 2;
inline bool ChatMessage::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatMessage::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatMessage::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatMessage::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 ChatMessage::groupid() const {
  // @@protoc_insertion_point(field_get:msg.ChatMessage.GroupID)
  return groupid_;
}
inline void ChatMessage::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.ChatMessage.GroupID)
}

// optional int32 ReceiveUserID = 3;
inline bool ChatMessage::has_receiveuserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatMessage::set_has_receiveuserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatMessage::clear_has_receiveuserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatMessage::clear_receiveuserid() {
  receiveuserid_ = 0;
  clear_has_receiveuserid();
}
inline ::google_public::protobuf::int32 ChatMessage::receiveuserid() const {
  // @@protoc_insertion_point(field_get:msg.ChatMessage.ReceiveUserID)
  return receiveuserid_;
}
inline void ChatMessage::set_receiveuserid(::google_public::protobuf::int32 value) {
  set_has_receiveuserid();
  receiveuserid_ = value;
  // @@protoc_insertion_point(field_set:msg.ChatMessage.ReceiveUserID)
}

// optional .msg.MessageInfo MessageInfo = 4;
inline bool ChatMessage::has_messageinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatMessage::set_has_messageinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatMessage::clear_has_messageinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatMessage::clear_messageinfo() {
  if (messageinfo_ != NULL) messageinfo_->::msg::MessageInfo::Clear();
  clear_has_messageinfo();
}
inline const ::msg::MessageInfo& ChatMessage::messageinfo() const {
  // @@protoc_insertion_point(field_get:msg.ChatMessage.MessageInfo)
  return messageinfo_ != NULL ? *messageinfo_ : *default_instance_->messageinfo_;
}
inline ::msg::MessageInfo* ChatMessage::mutable_messageinfo() {
  set_has_messageinfo();
  if (messageinfo_ == NULL) messageinfo_ = new ::msg::MessageInfo;
  // @@protoc_insertion_point(field_mutable:msg.ChatMessage.MessageInfo)
  return messageinfo_;
}
inline ::msg::MessageInfo* ChatMessage::release_messageinfo() {
  clear_has_messageinfo();
  ::msg::MessageInfo* temp = messageinfo_;
  messageinfo_ = NULL;
  return temp;
}
inline void ChatMessage::set_allocated_messageinfo(::msg::MessageInfo* messageinfo) {
  delete messageinfo_;
  messageinfo_ = messageinfo;
  if (messageinfo) {
    set_has_messageinfo();
  } else {
    clear_has_messageinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ChatMessage.MessageInfo)
}

// optional string SubTime = 5;
inline bool ChatMessage::has_subtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatMessage::set_has_subtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatMessage::clear_has_subtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatMessage::clear_subtime() {
  if (subtime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subtime_->clear();
  }
  clear_has_subtime();
}
inline const ::std::string& ChatMessage::subtime() const {
  // @@protoc_insertion_point(field_get:msg.ChatMessage.SubTime)
  return *subtime_;
}
inline void ChatMessage::set_subtime(const ::std::string& value) {
  set_has_subtime();
  if (subtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subtime_ = new ::std::string;
  }
  subtime_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ChatMessage.SubTime)
}
inline void ChatMessage::set_subtime(const char* value) {
  set_has_subtime();
  if (subtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subtime_ = new ::std::string;
  }
  subtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ChatMessage.SubTime)
}
inline void ChatMessage::set_subtime(const char* value, size_t size) {
  set_has_subtime();
  if (subtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subtime_ = new ::std::string;
  }
  subtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ChatMessage.SubTime)
}
inline ::std::string* ChatMessage::mutable_subtime() {
  set_has_subtime();
  if (subtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ChatMessage.SubTime)
  return subtime_;
}
inline ::std::string* ChatMessage::release_subtime() {
  clear_has_subtime();
  if (subtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = subtime_;
    subtime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatMessage::set_allocated_subtime(::std::string* subtime) {
  if (subtime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subtime_;
  }
  if (subtime) {
    set_has_subtime();
    subtime_ = subtime;
  } else {
    clear_has_subtime();
    subtime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ChatMessage.SubTime)
}

// optional int32 ID = 6;
inline bool ChatMessage::has_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChatMessage::set_has_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChatMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChatMessage::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google_public::protobuf::int32 ChatMessage::id() const {
  // @@protoc_insertion_point(field_get:msg.ChatMessage.ID)
  return id_;
}
inline void ChatMessage::set_id(::google_public::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.ChatMessage.ID)
}

// optional .msg.MessageStatus Status = 7;
inline bool ChatMessage::has_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChatMessage::set_has_status() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChatMessage::clear_has_status() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChatMessage::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::msg::MessageStatus ChatMessage::status() const {
  // @@protoc_insertion_point(field_get:msg.ChatMessage.Status)
  return static_cast< ::msg::MessageStatus >(status_);
}
inline void ChatMessage::set_status(::msg::MessageStatus value) {
  assert(::msg::MessageStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg.ChatMessage.Status)
}

// -------------------------------------------------------------------

// MessageInfo

// optional .msg.MessageType Type = 1;
inline bool MessageInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageInfo::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg::MessageType MessageInfo::type() const {
  // @@protoc_insertion_point(field_get:msg.MessageInfo.Type)
  return static_cast< ::msg::MessageType >(type_);
}
inline void MessageInfo::set_type(::msg::MessageType value) {
  assert(::msg::MessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.MessageInfo.Type)
}

// optional .msg.TextMessageInfo TextInfo = 2;
inline bool MessageInfo::has_textinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageInfo::set_has_textinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageInfo::clear_has_textinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageInfo::clear_textinfo() {
  if (textinfo_ != NULL) textinfo_->::msg::TextMessageInfo::Clear();
  clear_has_textinfo();
}
inline const ::msg::TextMessageInfo& MessageInfo::textinfo() const {
  // @@protoc_insertion_point(field_get:msg.MessageInfo.TextInfo)
  return textinfo_ != NULL ? *textinfo_ : *default_instance_->textinfo_;
}
inline ::msg::TextMessageInfo* MessageInfo::mutable_textinfo() {
  set_has_textinfo();
  if (textinfo_ == NULL) textinfo_ = new ::msg::TextMessageInfo;
  // @@protoc_insertion_point(field_mutable:msg.MessageInfo.TextInfo)
  return textinfo_;
}
inline ::msg::TextMessageInfo* MessageInfo::release_textinfo() {
  clear_has_textinfo();
  ::msg::TextMessageInfo* temp = textinfo_;
  textinfo_ = NULL;
  return temp;
}
inline void MessageInfo::set_allocated_textinfo(::msg::TextMessageInfo* textinfo) {
  delete textinfo_;
  textinfo_ = textinfo;
  if (textinfo) {
    set_has_textinfo();
  } else {
    clear_has_textinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.MessageInfo.TextInfo)
}

// optional .msg.PicMessageInfo PicInfo = 3;
inline bool MessageInfo::has_picinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageInfo::set_has_picinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageInfo::clear_has_picinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageInfo::clear_picinfo() {
  if (picinfo_ != NULL) picinfo_->::msg::PicMessageInfo::Clear();
  clear_has_picinfo();
}
inline const ::msg::PicMessageInfo& MessageInfo::picinfo() const {
  // @@protoc_insertion_point(field_get:msg.MessageInfo.PicInfo)
  return picinfo_ != NULL ? *picinfo_ : *default_instance_->picinfo_;
}
inline ::msg::PicMessageInfo* MessageInfo::mutable_picinfo() {
  set_has_picinfo();
  if (picinfo_ == NULL) picinfo_ = new ::msg::PicMessageInfo;
  // @@protoc_insertion_point(field_mutable:msg.MessageInfo.PicInfo)
  return picinfo_;
}
inline ::msg::PicMessageInfo* MessageInfo::release_picinfo() {
  clear_has_picinfo();
  ::msg::PicMessageInfo* temp = picinfo_;
  picinfo_ = NULL;
  return temp;
}
inline void MessageInfo::set_allocated_picinfo(::msg::PicMessageInfo* picinfo) {
  delete picinfo_;
  picinfo_ = picinfo;
  if (picinfo) {
    set_has_picinfo();
  } else {
    clear_has_picinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.MessageInfo.PicInfo)
}

// optional .msg.VoiceMessageInfo VoiceInfo = 4;
inline bool MessageInfo::has_voiceinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageInfo::set_has_voiceinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageInfo::clear_has_voiceinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageInfo::clear_voiceinfo() {
  if (voiceinfo_ != NULL) voiceinfo_->::msg::VoiceMessageInfo::Clear();
  clear_has_voiceinfo();
}
inline const ::msg::VoiceMessageInfo& MessageInfo::voiceinfo() const {
  // @@protoc_insertion_point(field_get:msg.MessageInfo.VoiceInfo)
  return voiceinfo_ != NULL ? *voiceinfo_ : *default_instance_->voiceinfo_;
}
inline ::msg::VoiceMessageInfo* MessageInfo::mutable_voiceinfo() {
  set_has_voiceinfo();
  if (voiceinfo_ == NULL) voiceinfo_ = new ::msg::VoiceMessageInfo;
  // @@protoc_insertion_point(field_mutable:msg.MessageInfo.VoiceInfo)
  return voiceinfo_;
}
inline ::msg::VoiceMessageInfo* MessageInfo::release_voiceinfo() {
  clear_has_voiceinfo();
  ::msg::VoiceMessageInfo* temp = voiceinfo_;
  voiceinfo_ = NULL;
  return temp;
}
inline void MessageInfo::set_allocated_voiceinfo(::msg::VoiceMessageInfo* voiceinfo) {
  delete voiceinfo_;
  voiceinfo_ = voiceinfo;
  if (voiceinfo) {
    set_has_voiceinfo();
  } else {
    clear_has_voiceinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.MessageInfo.VoiceInfo)
}

// optional .msg.CreateRoomMessageInfo CreateRoomInfo = 5;
inline bool MessageInfo::has_createroominfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageInfo::set_has_createroominfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageInfo::clear_has_createroominfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageInfo::clear_createroominfo() {
  if (createroominfo_ != NULL) createroominfo_->::msg::CreateRoomMessageInfo::Clear();
  clear_has_createroominfo();
}
inline const ::msg::CreateRoomMessageInfo& MessageInfo::createroominfo() const {
  // @@protoc_insertion_point(field_get:msg.MessageInfo.CreateRoomInfo)
  return createroominfo_ != NULL ? *createroominfo_ : *default_instance_->createroominfo_;
}
inline ::msg::CreateRoomMessageInfo* MessageInfo::mutable_createroominfo() {
  set_has_createroominfo();
  if (createroominfo_ == NULL) createroominfo_ = new ::msg::CreateRoomMessageInfo;
  // @@protoc_insertion_point(field_mutable:msg.MessageInfo.CreateRoomInfo)
  return createroominfo_;
}
inline ::msg::CreateRoomMessageInfo* MessageInfo::release_createroominfo() {
  clear_has_createroominfo();
  ::msg::CreateRoomMessageInfo* temp = createroominfo_;
  createroominfo_ = NULL;
  return temp;
}
inline void MessageInfo::set_allocated_createroominfo(::msg::CreateRoomMessageInfo* createroominfo) {
  delete createroominfo_;
  createroominfo_ = createroominfo;
  if (createroominfo) {
    set_has_createroominfo();
  } else {
    clear_has_createroominfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.MessageInfo.CreateRoomInfo)
}

// optional .msg.GroupNoticeMessageInfo GroupNoticeInfo = 6;
inline bool MessageInfo::has_groupnoticeinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MessageInfo::set_has_groupnoticeinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MessageInfo::clear_has_groupnoticeinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MessageInfo::clear_groupnoticeinfo() {
  if (groupnoticeinfo_ != NULL) groupnoticeinfo_->::msg::GroupNoticeMessageInfo::Clear();
  clear_has_groupnoticeinfo();
}
inline const ::msg::GroupNoticeMessageInfo& MessageInfo::groupnoticeinfo() const {
  // @@protoc_insertion_point(field_get:msg.MessageInfo.GroupNoticeInfo)
  return groupnoticeinfo_ != NULL ? *groupnoticeinfo_ : *default_instance_->groupnoticeinfo_;
}
inline ::msg::GroupNoticeMessageInfo* MessageInfo::mutable_groupnoticeinfo() {
  set_has_groupnoticeinfo();
  if (groupnoticeinfo_ == NULL) groupnoticeinfo_ = new ::msg::GroupNoticeMessageInfo;
  // @@protoc_insertion_point(field_mutable:msg.MessageInfo.GroupNoticeInfo)
  return groupnoticeinfo_;
}
inline ::msg::GroupNoticeMessageInfo* MessageInfo::release_groupnoticeinfo() {
  clear_has_groupnoticeinfo();
  ::msg::GroupNoticeMessageInfo* temp = groupnoticeinfo_;
  groupnoticeinfo_ = NULL;
  return temp;
}
inline void MessageInfo::set_allocated_groupnoticeinfo(::msg::GroupNoticeMessageInfo* groupnoticeinfo) {
  delete groupnoticeinfo_;
  groupnoticeinfo_ = groupnoticeinfo;
  if (groupnoticeinfo) {
    set_has_groupnoticeinfo();
  } else {
    clear_has_groupnoticeinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.MessageInfo.GroupNoticeInfo)
}

// -------------------------------------------------------------------

// TextMessageInfo

// optional string Text = 1;
inline bool TextMessageInfo::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TextMessageInfo::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TextMessageInfo::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TextMessageInfo::clear_text() {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& TextMessageInfo::text() const {
  // @@protoc_insertion_point(field_get:msg.TextMessageInfo.Text)
  return *text_;
}
inline void TextMessageInfo::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:msg.TextMessageInfo.Text)
}
inline void TextMessageInfo::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.TextMessageInfo.Text)
}
inline void TextMessageInfo::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.TextMessageInfo.Text)
}
inline ::std::string* TextMessageInfo::mutable_text() {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.TextMessageInfo.Text)
  return text_;
}
inline ::std::string* TextMessageInfo::release_text() {
  clear_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TextMessageInfo::set_allocated_text(::std::string* text) {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.TextMessageInfo.Text)
}

// -------------------------------------------------------------------

// PicMessageInfo

// optional string PicName = 1;
inline bool PicMessageInfo::has_picname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PicMessageInfo::set_has_picname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PicMessageInfo::clear_has_picname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PicMessageInfo::clear_picname() {
  if (picname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_->clear();
  }
  clear_has_picname();
}
inline const ::std::string& PicMessageInfo::picname() const {
  // @@protoc_insertion_point(field_get:msg.PicMessageInfo.PicName)
  return *picname_;
}
inline void PicMessageInfo::set_picname(const ::std::string& value) {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  picname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.PicMessageInfo.PicName)
}
inline void PicMessageInfo::set_picname(const char* value) {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  picname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.PicMessageInfo.PicName)
}
inline void PicMessageInfo::set_picname(const char* value, size_t size) {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  picname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.PicMessageInfo.PicName)
}
inline ::std::string* PicMessageInfo::mutable_picname() {
  set_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    picname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.PicMessageInfo.PicName)
  return picname_;
}
inline ::std::string* PicMessageInfo::release_picname() {
  clear_has_picname();
  if (picname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = picname_;
    picname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PicMessageInfo::set_allocated_picname(::std::string* picname) {
  if (picname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete picname_;
  }
  if (picname) {
    set_has_picname();
    picname_ = picname;
  } else {
    clear_has_picname();
    picname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PicMessageInfo.PicName)
}

// -------------------------------------------------------------------

// VoiceMessageInfo

// optional string VoiceName = 1;
inline bool VoiceMessageInfo::has_voicename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoiceMessageInfo::set_has_voicename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoiceMessageInfo::clear_has_voicename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoiceMessageInfo::clear_voicename() {
  if (voicename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voicename_->clear();
  }
  clear_has_voicename();
}
inline const ::std::string& VoiceMessageInfo::voicename() const {
  // @@protoc_insertion_point(field_get:msg.VoiceMessageInfo.VoiceName)
  return *voicename_;
}
inline void VoiceMessageInfo::set_voicename(const ::std::string& value) {
  set_has_voicename();
  if (voicename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voicename_ = new ::std::string;
  }
  voicename_->assign(value);
  // @@protoc_insertion_point(field_set:msg.VoiceMessageInfo.VoiceName)
}
inline void VoiceMessageInfo::set_voicename(const char* value) {
  set_has_voicename();
  if (voicename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voicename_ = new ::std::string;
  }
  voicename_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.VoiceMessageInfo.VoiceName)
}
inline void VoiceMessageInfo::set_voicename(const char* value, size_t size) {
  set_has_voicename();
  if (voicename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voicename_ = new ::std::string;
  }
  voicename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.VoiceMessageInfo.VoiceName)
}
inline ::std::string* VoiceMessageInfo::mutable_voicename() {
  set_has_voicename();
  if (voicename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voicename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.VoiceMessageInfo.VoiceName)
  return voicename_;
}
inline ::std::string* VoiceMessageInfo::release_voicename() {
  clear_has_voicename();
  if (voicename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = voicename_;
    voicename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void VoiceMessageInfo::set_allocated_voicename(::std::string* voicename) {
  if (voicename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete voicename_;
  }
  if (voicename) {
    set_has_voicename();
    voicename_ = voicename;
  } else {
    clear_has_voicename();
    voicename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.VoiceMessageInfo.VoiceName)
}

// optional int32 VoiceTime = 2;
inline bool VoiceMessageInfo::has_voicetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoiceMessageInfo::set_has_voicetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoiceMessageInfo::clear_has_voicetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoiceMessageInfo::clear_voicetime() {
  voicetime_ = 0;
  clear_has_voicetime();
}
inline ::google_public::protobuf::int32 VoiceMessageInfo::voicetime() const {
  // @@protoc_insertion_point(field_get:msg.VoiceMessageInfo.VoiceTime)
  return voicetime_;
}
inline void VoiceMessageInfo::set_voicetime(::google_public::protobuf::int32 value) {
  set_has_voicetime();
  voicetime_ = value;
  // @@protoc_insertion_point(field_set:msg.VoiceMessageInfo.VoiceTime)
}

// -------------------------------------------------------------------

// CreateRoomMessageInfo

// optional string Text = 1;
inline bool CreateRoomMessageInfo::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomMessageInfo::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomMessageInfo::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomMessageInfo::clear_text() {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CreateRoomMessageInfo::text() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomMessageInfo.Text)
  return *text_;
}
inline void CreateRoomMessageInfo::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:msg.CreateRoomMessageInfo.Text)
}
inline void CreateRoomMessageInfo::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.CreateRoomMessageInfo.Text)
}
inline void CreateRoomMessageInfo::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.CreateRoomMessageInfo.Text)
}
inline ::std::string* CreateRoomMessageInfo::mutable_text() {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomMessageInfo.Text)
  return text_;
}
inline ::std::string* CreateRoomMessageInfo::release_text() {
  clear_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateRoomMessageInfo::set_allocated_text(::std::string* text) {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomMessageInfo.Text)
}

// optional int32 RoomID = 2;
inline bool CreateRoomMessageInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoomMessageInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoomMessageInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoomMessageInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 CreateRoomMessageInfo::roomid() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomMessageInfo.RoomID)
  return roomid_;
}
inline void CreateRoomMessageInfo::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.CreateRoomMessageInfo.RoomID)
}

// optional .msg.RoomType Type = 4;
inline bool CreateRoomMessageInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoomMessageInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoomMessageInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoomMessageInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::msg::RoomType CreateRoomMessageInfo::type() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomMessageInfo.Type)
  return static_cast< ::msg::RoomType >(type_);
}
inline void CreateRoomMessageInfo::set_type(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.CreateRoomMessageInfo.Type)
}

// optional string RoomName = 5;
inline bool CreateRoomMessageInfo::has_roomname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateRoomMessageInfo::set_has_roomname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateRoomMessageInfo::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateRoomMessageInfo::clear_roomname() {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_->clear();
  }
  clear_has_roomname();
}
inline const ::std::string& CreateRoomMessageInfo::roomname() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomMessageInfo.RoomName)
  return *roomname_;
}
inline void CreateRoomMessageInfo::set_roomname(const ::std::string& value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.CreateRoomMessageInfo.RoomName)
}
inline void CreateRoomMessageInfo::set_roomname(const char* value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.CreateRoomMessageInfo.RoomName)
}
inline void CreateRoomMessageInfo::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.CreateRoomMessageInfo.RoomName)
}
inline ::std::string* CreateRoomMessageInfo::mutable_roomname() {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomMessageInfo.RoomName)
  return roomname_;
}
inline ::std::string* CreateRoomMessageInfo::release_roomname() {
  clear_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomname_;
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateRoomMessageInfo::set_allocated_roomname(::std::string* roomname) {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomname_;
  }
  if (roomname) {
    set_has_roomname();
    roomname_ = roomname;
  } else {
    clear_has_roomname();
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomMessageInfo.RoomName)
}

// optional .msg.UserDetailInfo Creater = 6;
inline bool CreateRoomMessageInfo::has_creater() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateRoomMessageInfo::set_has_creater() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateRoomMessageInfo::clear_has_creater() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateRoomMessageInfo::clear_creater() {
  if (creater_ != NULL) creater_->::msg::UserDetailInfo::Clear();
  clear_has_creater();
}
inline const ::msg::UserDetailInfo& CreateRoomMessageInfo::creater() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomMessageInfo.Creater)
  return creater_ != NULL ? *creater_ : *default_instance_->creater_;
}
inline ::msg::UserDetailInfo* CreateRoomMessageInfo::mutable_creater() {
  set_has_creater();
  if (creater_ == NULL) creater_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomMessageInfo.Creater)
  return creater_;
}
inline ::msg::UserDetailInfo* CreateRoomMessageInfo::release_creater() {
  clear_has_creater();
  ::msg::UserDetailInfo* temp = creater_;
  creater_ = NULL;
  return temp;
}
inline void CreateRoomMessageInfo::set_allocated_creater(::msg::UserDetailInfo* creater) {
  delete creater_;
  creater_ = creater;
  if (creater) {
    set_has_creater();
  } else {
    clear_has_creater();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomMessageInfo.Creater)
}

// -------------------------------------------------------------------

// GroupNoticeMessageInfo

// optional .msg.InviteIntoGroup InviteIntoGroup = 1;
inline bool GroupNoticeMessageInfo::has_inviteintogroup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupNoticeMessageInfo::set_has_inviteintogroup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupNoticeMessageInfo::clear_has_inviteintogroup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupNoticeMessageInfo::clear_inviteintogroup() {
  if (inviteintogroup_ != NULL) inviteintogroup_->::msg::InviteIntoGroup::Clear();
  clear_has_inviteintogroup();
}
inline const ::msg::InviteIntoGroup& GroupNoticeMessageInfo::inviteintogroup() const {
  // @@protoc_insertion_point(field_get:msg.GroupNoticeMessageInfo.InviteIntoGroup)
  return inviteintogroup_ != NULL ? *inviteintogroup_ : *default_instance_->inviteintogroup_;
}
inline ::msg::InviteIntoGroup* GroupNoticeMessageInfo::mutable_inviteintogroup() {
  set_has_inviteintogroup();
  if (inviteintogroup_ == NULL) inviteintogroup_ = new ::msg::InviteIntoGroup;
  // @@protoc_insertion_point(field_mutable:msg.GroupNoticeMessageInfo.InviteIntoGroup)
  return inviteintogroup_;
}
inline ::msg::InviteIntoGroup* GroupNoticeMessageInfo::release_inviteintogroup() {
  clear_has_inviteintogroup();
  ::msg::InviteIntoGroup* temp = inviteintogroup_;
  inviteintogroup_ = NULL;
  return temp;
}
inline void GroupNoticeMessageInfo::set_allocated_inviteintogroup(::msg::InviteIntoGroup* inviteintogroup) {
  delete inviteintogroup_;
  inviteintogroup_ = inviteintogroup;
  if (inviteintogroup) {
    set_has_inviteintogroup();
  } else {
    clear_has_inviteintogroup();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GroupNoticeMessageInfo.InviteIntoGroup)
}

// optional .msg.IntoGroup IntoGroup = 2;
inline bool GroupNoticeMessageInfo::has_intogroup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupNoticeMessageInfo::set_has_intogroup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupNoticeMessageInfo::clear_has_intogroup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupNoticeMessageInfo::clear_intogroup() {
  if (intogroup_ != NULL) intogroup_->::msg::IntoGroup::Clear();
  clear_has_intogroup();
}
inline const ::msg::IntoGroup& GroupNoticeMessageInfo::intogroup() const {
  // @@protoc_insertion_point(field_get:msg.GroupNoticeMessageInfo.IntoGroup)
  return intogroup_ != NULL ? *intogroup_ : *default_instance_->intogroup_;
}
inline ::msg::IntoGroup* GroupNoticeMessageInfo::mutable_intogroup() {
  set_has_intogroup();
  if (intogroup_ == NULL) intogroup_ = new ::msg::IntoGroup;
  // @@protoc_insertion_point(field_mutable:msg.GroupNoticeMessageInfo.IntoGroup)
  return intogroup_;
}
inline ::msg::IntoGroup* GroupNoticeMessageInfo::release_intogroup() {
  clear_has_intogroup();
  ::msg::IntoGroup* temp = intogroup_;
  intogroup_ = NULL;
  return temp;
}
inline void GroupNoticeMessageInfo::set_allocated_intogroup(::msg::IntoGroup* intogroup) {
  delete intogroup_;
  intogroup_ = intogroup;
  if (intogroup) {
    set_has_intogroup();
  } else {
    clear_has_intogroup();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GroupNoticeMessageInfo.IntoGroup)
}

// optional int32 GroupUserNum = 3;
inline bool GroupNoticeMessageInfo::has_groupusernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupNoticeMessageInfo::set_has_groupusernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupNoticeMessageInfo::clear_has_groupusernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupNoticeMessageInfo::clear_groupusernum() {
  groupusernum_ = 0;
  clear_has_groupusernum();
}
inline ::google_public::protobuf::int32 GroupNoticeMessageInfo::groupusernum() const {
  // @@protoc_insertion_point(field_get:msg.GroupNoticeMessageInfo.GroupUserNum)
  return groupusernum_;
}
inline void GroupNoticeMessageInfo::set_groupusernum(::google_public::protobuf::int32 value) {
  set_has_groupusernum();
  groupusernum_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupNoticeMessageInfo.GroupUserNum)
}

// optional string Text = 4;
inline bool GroupNoticeMessageInfo::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupNoticeMessageInfo::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupNoticeMessageInfo::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupNoticeMessageInfo::clear_text() {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& GroupNoticeMessageInfo::text() const {
  // @@protoc_insertion_point(field_get:msg.GroupNoticeMessageInfo.Text)
  return *text_;
}
inline void GroupNoticeMessageInfo::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GroupNoticeMessageInfo.Text)
}
inline void GroupNoticeMessageInfo::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GroupNoticeMessageInfo.Text)
}
inline void GroupNoticeMessageInfo::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GroupNoticeMessageInfo.Text)
}
inline ::std::string* GroupNoticeMessageInfo::mutable_text() {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GroupNoticeMessageInfo.Text)
  return text_;
}
inline ::std::string* GroupNoticeMessageInfo::release_text() {
  clear_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupNoticeMessageInfo::set_allocated_text(::std::string* text) {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GroupNoticeMessageInfo.Text)
}

// optional .msg.OutGroup OutGroup = 5;
inline bool GroupNoticeMessageInfo::has_outgroup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupNoticeMessageInfo::set_has_outgroup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupNoticeMessageInfo::clear_has_outgroup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupNoticeMessageInfo::clear_outgroup() {
  if (outgroup_ != NULL) outgroup_->::msg::OutGroup::Clear();
  clear_has_outgroup();
}
inline const ::msg::OutGroup& GroupNoticeMessageInfo::outgroup() const {
  // @@protoc_insertion_point(field_get:msg.GroupNoticeMessageInfo.OutGroup)
  return outgroup_ != NULL ? *outgroup_ : *default_instance_->outgroup_;
}
inline ::msg::OutGroup* GroupNoticeMessageInfo::mutable_outgroup() {
  set_has_outgroup();
  if (outgroup_ == NULL) outgroup_ = new ::msg::OutGroup;
  // @@protoc_insertion_point(field_mutable:msg.GroupNoticeMessageInfo.OutGroup)
  return outgroup_;
}
inline ::msg::OutGroup* GroupNoticeMessageInfo::release_outgroup() {
  clear_has_outgroup();
  ::msg::OutGroup* temp = outgroup_;
  outgroup_ = NULL;
  return temp;
}
inline void GroupNoticeMessageInfo::set_allocated_outgroup(::msg::OutGroup* outgroup) {
  delete outgroup_;
  outgroup_ = outgroup;
  if (outgroup) {
    set_has_outgroup();
  } else {
    clear_has_outgroup();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GroupNoticeMessageInfo.OutGroup)
}

// -------------------------------------------------------------------

// InviteIntoGroup

// optional .msg.UserDetailInfo Inviter = 1;
inline bool InviteIntoGroup::has_inviter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteIntoGroup::set_has_inviter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteIntoGroup::clear_has_inviter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteIntoGroup::clear_inviter() {
  if (inviter_ != NULL) inviter_->::msg::UserDetailInfo::Clear();
  clear_has_inviter();
}
inline const ::msg::UserDetailInfo& InviteIntoGroup::inviter() const {
  // @@protoc_insertion_point(field_get:msg.InviteIntoGroup.Inviter)
  return inviter_ != NULL ? *inviter_ : *default_instance_->inviter_;
}
inline ::msg::UserDetailInfo* InviteIntoGroup::mutable_inviter() {
  set_has_inviter();
  if (inviter_ == NULL) inviter_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.InviteIntoGroup.Inviter)
  return inviter_;
}
inline ::msg::UserDetailInfo* InviteIntoGroup::release_inviter() {
  clear_has_inviter();
  ::msg::UserDetailInfo* temp = inviter_;
  inviter_ = NULL;
  return temp;
}
inline void InviteIntoGroup::set_allocated_inviter(::msg::UserDetailInfo* inviter) {
  delete inviter_;
  inviter_ = inviter;
  if (inviter) {
    set_has_inviter();
  } else {
    clear_has_inviter();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.InviteIntoGroup.Inviter)
}

// optional .msg.UserDetailInfo Invitee = 2;
inline bool InviteIntoGroup::has_invitee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteIntoGroup::set_has_invitee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteIntoGroup::clear_has_invitee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteIntoGroup::clear_invitee() {
  if (invitee_ != NULL) invitee_->::msg::UserDetailInfo::Clear();
  clear_has_invitee();
}
inline const ::msg::UserDetailInfo& InviteIntoGroup::invitee() const {
  // @@protoc_insertion_point(field_get:msg.InviteIntoGroup.Invitee)
  return invitee_ != NULL ? *invitee_ : *default_instance_->invitee_;
}
inline ::msg::UserDetailInfo* InviteIntoGroup::mutable_invitee() {
  set_has_invitee();
  if (invitee_ == NULL) invitee_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.InviteIntoGroup.Invitee)
  return invitee_;
}
inline ::msg::UserDetailInfo* InviteIntoGroup::release_invitee() {
  clear_has_invitee();
  ::msg::UserDetailInfo* temp = invitee_;
  invitee_ = NULL;
  return temp;
}
inline void InviteIntoGroup::set_allocated_invitee(::msg::UserDetailInfo* invitee) {
  delete invitee_;
  invitee_ = invitee;
  if (invitee) {
    set_has_invitee();
  } else {
    clear_has_invitee();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.InviteIntoGroup.Invitee)
}

// -------------------------------------------------------------------

// OutGroup

// optional .msg.UserDetailInfo outer = 1;
inline bool OutGroup::has_outer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OutGroup::set_has_outer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OutGroup::clear_has_outer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OutGroup::clear_outer() {
  if (outer_ != NULL) outer_->::msg::UserDetailInfo::Clear();
  clear_has_outer();
}
inline const ::msg::UserDetailInfo& OutGroup::outer() const {
  // @@protoc_insertion_point(field_get:msg.OutGroup.outer)
  return outer_ != NULL ? *outer_ : *default_instance_->outer_;
}
inline ::msg::UserDetailInfo* OutGroup::mutable_outer() {
  set_has_outer();
  if (outer_ == NULL) outer_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.OutGroup.outer)
  return outer_;
}
inline ::msg::UserDetailInfo* OutGroup::release_outer() {
  clear_has_outer();
  ::msg::UserDetailInfo* temp = outer_;
  outer_ = NULL;
  return temp;
}
inline void OutGroup::set_allocated_outer(::msg::UserDetailInfo* outer) {
  delete outer_;
  outer_ = outer;
  if (outer) {
    set_has_outer();
  } else {
    clear_has_outer();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.OutGroup.outer)
}

// -------------------------------------------------------------------

// IntoGroup

// optional .msg.UserDetailInfo IntoGroupUser = 1;
inline bool IntoGroup::has_intogroupuser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntoGroup::set_has_intogroupuser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntoGroup::clear_has_intogroupuser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntoGroup::clear_intogroupuser() {
  if (intogroupuser_ != NULL) intogroupuser_->::msg::UserDetailInfo::Clear();
  clear_has_intogroupuser();
}
inline const ::msg::UserDetailInfo& IntoGroup::intogroupuser() const {
  // @@protoc_insertion_point(field_get:msg.IntoGroup.IntoGroupUser)
  return intogroupuser_ != NULL ? *intogroupuser_ : *default_instance_->intogroupuser_;
}
inline ::msg::UserDetailInfo* IntoGroup::mutable_intogroupuser() {
  set_has_intogroupuser();
  if (intogroupuser_ == NULL) intogroupuser_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.IntoGroup.IntoGroupUser)
  return intogroupuser_;
}
inline ::msg::UserDetailInfo* IntoGroup::release_intogroupuser() {
  clear_has_intogroupuser();
  ::msg::UserDetailInfo* temp = intogroupuser_;
  intogroupuser_ = NULL;
  return temp;
}
inline void IntoGroup::set_allocated_intogroupuser(::msg::UserDetailInfo* intogroupuser) {
  delete intogroupuser_;
  intogroupuser_ = intogroupuser;
  if (intogroupuser) {
    set_has_intogroupuser();
  } else {
    clear_has_intogroupuser();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.IntoGroup.IntoGroupUser)
}

// -------------------------------------------------------------------

// GroupInfo

// optional int32 GroupId = 1;
inline bool GroupInfo::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupInfo::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupInfo::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupInfo::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 GroupInfo::groupid() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.GroupId)
  return groupid_;
}
inline void GroupInfo::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupInfo.GroupId)
}

// optional string GroupName = 2;
inline bool GroupInfo::has_groupname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupInfo::set_has_groupname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupInfo::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupInfo::clear_groupname() {
  if (groupname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_->clear();
  }
  clear_has_groupname();
}
inline const ::std::string& GroupInfo::groupname() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.GroupName)
  return *groupname_;
}
inline void GroupInfo::set_groupname(const ::std::string& value) {
  set_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GroupInfo.GroupName)
}
inline void GroupInfo::set_groupname(const char* value) {
  set_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GroupInfo.GroupName)
}
inline void GroupInfo::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GroupInfo.GroupName)
}
inline ::std::string* GroupInfo::mutable_groupname() {
  set_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GroupInfo.GroupName)
  return groupname_;
}
inline ::std::string* GroupInfo::release_groupname() {
  clear_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = groupname_;
    groupname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupInfo::set_allocated_groupname(::std::string* groupname) {
  if (groupname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupname_;
  }
  if (groupname) {
    set_has_groupname();
    groupname_ = groupname;
  } else {
    clear_has_groupname();
    groupname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GroupInfo.GroupName)
}

// optional string GroupComment = 3;
inline bool GroupInfo::has_groupcomment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupInfo::set_has_groupcomment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupInfo::clear_has_groupcomment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupInfo::clear_groupcomment() {
  if (groupcomment_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupcomment_->clear();
  }
  clear_has_groupcomment();
}
inline const ::std::string& GroupInfo::groupcomment() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.GroupComment)
  return *groupcomment_;
}
inline void GroupInfo::set_groupcomment(const ::std::string& value) {
  set_has_groupcomment();
  if (groupcomment_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupcomment_ = new ::std::string;
  }
  groupcomment_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GroupInfo.GroupComment)
}
inline void GroupInfo::set_groupcomment(const char* value) {
  set_has_groupcomment();
  if (groupcomment_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupcomment_ = new ::std::string;
  }
  groupcomment_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GroupInfo.GroupComment)
}
inline void GroupInfo::set_groupcomment(const char* value, size_t size) {
  set_has_groupcomment();
  if (groupcomment_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupcomment_ = new ::std::string;
  }
  groupcomment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GroupInfo.GroupComment)
}
inline ::std::string* GroupInfo::mutable_groupcomment() {
  set_has_groupcomment();
  if (groupcomment_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupcomment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GroupInfo.GroupComment)
  return groupcomment_;
}
inline ::std::string* GroupInfo::release_groupcomment() {
  clear_has_groupcomment();
  if (groupcomment_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = groupcomment_;
    groupcomment_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupInfo::set_allocated_groupcomment(::std::string* groupcomment) {
  if (groupcomment_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupcomment_;
  }
  if (groupcomment) {
    set_has_groupcomment();
    groupcomment_ = groupcomment;
  } else {
    clear_has_groupcomment();
    groupcomment_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GroupInfo.GroupComment)
}

// optional int32 Hidden = 4;
inline bool GroupInfo::has_hidden() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupInfo::set_has_hidden() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupInfo::clear_has_hidden() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupInfo::clear_hidden() {
  hidden_ = 0;
  clear_has_hidden();
}
inline ::google_public::protobuf::int32 GroupInfo::hidden() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.Hidden)
  return hidden_;
}
inline void GroupInfo::set_hidden(::google_public::protobuf::int32 value) {
  set_has_hidden();
  hidden_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupInfo.Hidden)
}

// optional string GroupPic = 5;
inline bool GroupInfo::has_grouppic() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupInfo::set_has_grouppic() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupInfo::clear_has_grouppic() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupInfo::clear_grouppic() {
  if (grouppic_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grouppic_->clear();
  }
  clear_has_grouppic();
}
inline const ::std::string& GroupInfo::grouppic() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.GroupPic)
  return *grouppic_;
}
inline void GroupInfo::set_grouppic(const ::std::string& value) {
  set_has_grouppic();
  if (grouppic_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grouppic_ = new ::std::string;
  }
  grouppic_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GroupInfo.GroupPic)
}
inline void GroupInfo::set_grouppic(const char* value) {
  set_has_grouppic();
  if (grouppic_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grouppic_ = new ::std::string;
  }
  grouppic_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GroupInfo.GroupPic)
}
inline void GroupInfo::set_grouppic(const char* value, size_t size) {
  set_has_grouppic();
  if (grouppic_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grouppic_ = new ::std::string;
  }
  grouppic_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GroupInfo.GroupPic)
}
inline ::std::string* GroupInfo::mutable_grouppic() {
  set_has_grouppic();
  if (grouppic_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grouppic_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GroupInfo.GroupPic)
  return grouppic_;
}
inline ::std::string* GroupInfo::release_grouppic() {
  clear_has_grouppic();
  if (grouppic_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = grouppic_;
    grouppic_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupInfo::set_allocated_grouppic(::std::string* grouppic) {
  if (grouppic_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete grouppic_;
  }
  if (grouppic) {
    set_has_grouppic();
    grouppic_ = grouppic;
  } else {
    clear_has_grouppic();
    grouppic_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GroupInfo.GroupPic)
}

// optional .msg.GroupUserStatus UserStatus = 6;
inline bool GroupInfo::has_userstatus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GroupInfo::set_has_userstatus() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GroupInfo::clear_has_userstatus() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GroupInfo::clear_userstatus() {
  userstatus_ = 1;
  clear_has_userstatus();
}
inline ::msg::GroupUserStatus GroupInfo::userstatus() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.UserStatus)
  return static_cast< ::msg::GroupUserStatus >(userstatus_);
}
inline void GroupInfo::set_userstatus(::msg::GroupUserStatus value) {
  assert(::msg::GroupUserStatus_IsValid(value));
  set_has_userstatus();
  userstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupInfo.UserStatus)
}

// optional .msg.GroupType Type = 7;
inline bool GroupInfo::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GroupInfo::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GroupInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GroupInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::msg::GroupType GroupInfo::type() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.Type)
  return static_cast< ::msg::GroupType >(type_);
}
inline void GroupInfo::set_type(::msg::GroupType value) {
  assert(::msg::GroupType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupInfo.Type)
}

// optional int32 GroupOwnerID = 8;
inline bool GroupInfo::has_groupownerid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GroupInfo::set_has_groupownerid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GroupInfo::clear_has_groupownerid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GroupInfo::clear_groupownerid() {
  groupownerid_ = 0;
  clear_has_groupownerid();
}
inline ::google_public::protobuf::int32 GroupInfo::groupownerid() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.GroupOwnerID)
  return groupownerid_;
}
inline void GroupInfo::set_groupownerid(::google_public::protobuf::int32 value) {
  set_has_groupownerid();
  groupownerid_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupInfo.GroupOwnerID)
}

// optional bool RankVisible = 9;
inline bool GroupInfo::has_rankvisible() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GroupInfo::set_has_rankvisible() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GroupInfo::clear_has_rankvisible() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GroupInfo::clear_rankvisible() {
  rankvisible_ = false;
  clear_has_rankvisible();
}
inline bool GroupInfo::rankvisible() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.RankVisible)
  return rankvisible_;
}
inline void GroupInfo::set_rankvisible(bool value) {
  set_has_rankvisible();
  rankvisible_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupInfo.RankVisible)
}

// optional bool AllowCreateRoom = 10;
inline bool GroupInfo::has_allowcreateroom() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GroupInfo::set_has_allowcreateroom() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GroupInfo::clear_has_allowcreateroom() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GroupInfo::clear_allowcreateroom() {
  allowcreateroom_ = false;
  clear_has_allowcreateroom();
}
inline bool GroupInfo::allowcreateroom() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.AllowCreateRoom)
  return allowcreateroom_;
}
inline void GroupInfo::set_allowcreateroom(bool value) {
  set_has_allowcreateroom();
  allowcreateroom_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupInfo.AllowCreateRoom)
}

// optional bool AllowChat = 11;
inline bool GroupInfo::has_allowchat() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GroupInfo::set_has_allowchat() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GroupInfo::clear_has_allowchat() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GroupInfo::clear_allowchat() {
  allowchat_ = false;
  clear_has_allowchat();
}
inline bool GroupInfo::allowchat() const {
  // @@protoc_insertion_point(field_get:msg.GroupInfo.AllowChat)
  return allowchat_;
}
inline void GroupInfo::set_allowchat(bool value) {
  set_has_allowchat();
  allowchat_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupInfo.AllowChat)
}

// -------------------------------------------------------------------

// Processor_140_CreateGroup

// optional .msg.GroupInfo GroupInfo = 1;
inline bool Processor_140_CreateGroup::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_140_CreateGroup::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_140_CreateGroup::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_140_CreateGroup::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::msg::GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::msg::GroupInfo& Processor_140_CreateGroup::groupinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_140_CreateGroup.GroupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::msg::GroupInfo* Processor_140_CreateGroup::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) groupinfo_ = new ::msg::GroupInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_140_CreateGroup.GroupInfo)
  return groupinfo_;
}
inline ::msg::GroupInfo* Processor_140_CreateGroup::release_groupinfo() {
  clear_has_groupinfo();
  ::msg::GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void Processor_140_CreateGroup::set_allocated_groupinfo(::msg::GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_140_CreateGroup.GroupInfo)
}

// -------------------------------------------------------------------

// Processor_140_CreateGroup_Down

// optional .msg.Response Response = 1;
inline bool Processor_140_CreateGroup_Down::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_140_CreateGroup_Down::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_140_CreateGroup_Down::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_140_CreateGroup_Down::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_140_CreateGroup_Down::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_140_CreateGroup_Down.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_140_CreateGroup_Down::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_140_CreateGroup_Down.Response)
  return response_;
}
inline ::msg::Response* Processor_140_CreateGroup_Down::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_140_CreateGroup_Down::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_140_CreateGroup_Down.Response)
}

// optional .msg.GroupInfo GroupInfo = 2;
inline bool Processor_140_CreateGroup_Down::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_140_CreateGroup_Down::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_140_CreateGroup_Down::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_140_CreateGroup_Down::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::msg::GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::msg::GroupInfo& Processor_140_CreateGroup_Down::groupinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_140_CreateGroup_Down.GroupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::msg::GroupInfo* Processor_140_CreateGroup_Down::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) groupinfo_ = new ::msg::GroupInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_140_CreateGroup_Down.GroupInfo)
  return groupinfo_;
}
inline ::msg::GroupInfo* Processor_140_CreateGroup_Down::release_groupinfo() {
  clear_has_groupinfo();
  ::msg::GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void Processor_140_CreateGroup_Down::set_allocated_groupinfo(::msg::GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_140_CreateGroup_Down.GroupInfo)
}

// -------------------------------------------------------------------

// Processor_141_EditGroup

// optional .msg.GroupInfo GroupInfo = 1;
inline bool Processor_141_EditGroup::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_141_EditGroup::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_141_EditGroup::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_141_EditGroup::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::msg::GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::msg::GroupInfo& Processor_141_EditGroup::groupinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_141_EditGroup.GroupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::msg::GroupInfo* Processor_141_EditGroup::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) groupinfo_ = new ::msg::GroupInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_141_EditGroup.GroupInfo)
  return groupinfo_;
}
inline ::msg::GroupInfo* Processor_141_EditGroup::release_groupinfo() {
  clear_has_groupinfo();
  ::msg::GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void Processor_141_EditGroup::set_allocated_groupinfo(::msg::GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_141_EditGroup.GroupInfo)
}

// -------------------------------------------------------------------

// Processor_142_SearchGroup_UP

// optional .msg.GroupSearchType Type = 1;
inline bool Processor_142_SearchGroup_UP::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_142_SearchGroup_UP::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_142_SearchGroup_UP::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_142_SearchGroup_UP::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::msg::GroupSearchType Processor_142_SearchGroup_UP::type() const {
  // @@protoc_insertion_point(field_get:msg.Processor_142_SearchGroup_UP.Type)
  return static_cast< ::msg::GroupSearchType >(type_);
}
inline void Processor_142_SearchGroup_UP::set_type(::msg::GroupSearchType value) {
  assert(::msg::GroupSearchType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_142_SearchGroup_UP.Type)
}

// optional string SearchName = 2;
inline bool Processor_142_SearchGroup_UP::has_searchname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_142_SearchGroup_UP::set_has_searchname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_142_SearchGroup_UP::clear_has_searchname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_142_SearchGroup_UP::clear_searchname() {
  if (searchname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_->clear();
  }
  clear_has_searchname();
}
inline const ::std::string& Processor_142_SearchGroup_UP::searchname() const {
  // @@protoc_insertion_point(field_get:msg.Processor_142_SearchGroup_UP.SearchName)
  return *searchname_;
}
inline void Processor_142_SearchGroup_UP::set_searchname(const ::std::string& value) {
  set_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_ = new ::std::string;
  }
  searchname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_142_SearchGroup_UP.SearchName)
}
inline void Processor_142_SearchGroup_UP::set_searchname(const char* value) {
  set_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_ = new ::std::string;
  }
  searchname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_142_SearchGroup_UP.SearchName)
}
inline void Processor_142_SearchGroup_UP::set_searchname(const char* value, size_t size) {
  set_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_ = new ::std::string;
  }
  searchname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_142_SearchGroup_UP.SearchName)
}
inline ::std::string* Processor_142_SearchGroup_UP::mutable_searchname() {
  set_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_142_SearchGroup_UP.SearchName)
  return searchname_;
}
inline ::std::string* Processor_142_SearchGroup_UP::release_searchname() {
  clear_has_searchname();
  if (searchname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = searchname_;
    searchname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_142_SearchGroup_UP::set_allocated_searchname(::std::string* searchname) {
  if (searchname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete searchname_;
  }
  if (searchname) {
    set_has_searchname();
    searchname_ = searchname;
  } else {
    clear_has_searchname();
    searchname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_142_SearchGroup_UP.SearchName)
}

// -------------------------------------------------------------------

// Processor_142_SearchGroup_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_142_SearchGroup_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_142_SearchGroup_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_142_SearchGroup_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_142_SearchGroup_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_142_SearchGroup_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_142_SearchGroup_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_142_SearchGroup_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_142_SearchGroup_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_142_SearchGroup_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_142_SearchGroup_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_142_SearchGroup_DOWN.Response)
}

// repeated .msg.GroupInfo GroupInfo = 2;
inline int Processor_142_SearchGroup_DOWN::groupinfo_size() const {
  return groupinfo_.size();
}
inline void Processor_142_SearchGroup_DOWN::clear_groupinfo() {
  groupinfo_.Clear();
}
inline const ::msg::GroupInfo& Processor_142_SearchGroup_DOWN::groupinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_142_SearchGroup_DOWN.GroupInfo)
  return groupinfo_.Get(index);
}
inline ::msg::GroupInfo* Processor_142_SearchGroup_DOWN::mutable_groupinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_142_SearchGroup_DOWN.GroupInfo)
  return groupinfo_.Mutable(index);
}
inline ::msg::GroupInfo* Processor_142_SearchGroup_DOWN::add_groupinfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_142_SearchGroup_DOWN.GroupInfo)
  return groupinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::GroupInfo >&
Processor_142_SearchGroup_DOWN::groupinfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_142_SearchGroup_DOWN.GroupInfo)
  return groupinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::GroupInfo >*
Processor_142_SearchGroup_DOWN::mutable_groupinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_142_SearchGroup_DOWN.GroupInfo)
  return &groupinfo_;
}

// -------------------------------------------------------------------

// Processor_144_KickUserFromGroup

// optional int32 GroupId = 1;
inline bool Processor_144_KickUserFromGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_144_KickUserFromGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_144_KickUserFromGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_144_KickUserFromGroup::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_144_KickUserFromGroup::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_144_KickUserFromGroup.GroupId)
  return groupid_;
}
inline void Processor_144_KickUserFromGroup::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_144_KickUserFromGroup.GroupId)
}

// optional int32 UserID = 2;
inline bool Processor_144_KickUserFromGroup::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_144_KickUserFromGroup::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_144_KickUserFromGroup::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_144_KickUserFromGroup::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_144_KickUserFromGroup::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_144_KickUserFromGroup.UserID)
  return userid_;
}
inline void Processor_144_KickUserFromGroup::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_144_KickUserFromGroup.UserID)
}

// -------------------------------------------------------------------

// Processor_145_GetGroupInfo_UP

// optional int32 GroupId = 1;
inline bool Processor_145_GetGroupInfo_UP::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_145_GetGroupInfo_UP::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_145_GetGroupInfo_UP::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_145_GetGroupInfo_UP::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_145_GetGroupInfo_UP::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_145_GetGroupInfo_UP.GroupId)
  return groupid_;
}
inline void Processor_145_GetGroupInfo_UP::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_145_GetGroupInfo_UP.GroupId)
}

// -------------------------------------------------------------------

// Processor_145_GetGroupInfo_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_145_GetGroupInfo_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_145_GetGroupInfo_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_145_GetGroupInfo_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_145_GetGroupInfo_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_145_GetGroupInfo_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_145_GetGroupInfo_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_145_GetGroupInfo_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_145_GetGroupInfo_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_145_GetGroupInfo_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_145_GetGroupInfo_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_145_GetGroupInfo_DOWN.Response)
}

// optional .msg.GroupInfo GroupInfo = 2;
inline bool Processor_145_GetGroupInfo_DOWN::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_145_GetGroupInfo_DOWN::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_145_GetGroupInfo_DOWN::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_145_GetGroupInfo_DOWN::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::msg::GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::msg::GroupInfo& Processor_145_GetGroupInfo_DOWN::groupinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_145_GetGroupInfo_DOWN.GroupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::msg::GroupInfo* Processor_145_GetGroupInfo_DOWN::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) groupinfo_ = new ::msg::GroupInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_145_GetGroupInfo_DOWN.GroupInfo)
  return groupinfo_;
}
inline ::msg::GroupInfo* Processor_145_GetGroupInfo_DOWN::release_groupinfo() {
  clear_has_groupinfo();
  ::msg::GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void Processor_145_GetGroupInfo_DOWN::set_allocated_groupinfo(::msg::GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_145_GetGroupInfo_DOWN.GroupInfo)
}

// optional int32 GroupUserNum = 3;
inline bool Processor_145_GetGroupInfo_DOWN::has_groupusernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_145_GetGroupInfo_DOWN::set_has_groupusernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_145_GetGroupInfo_DOWN::clear_has_groupusernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_145_GetGroupInfo_DOWN::clear_groupusernum() {
  groupusernum_ = 0;
  clear_has_groupusernum();
}
inline ::google_public::protobuf::int32 Processor_145_GetGroupInfo_DOWN::groupusernum() const {
  // @@protoc_insertion_point(field_get:msg.Processor_145_GetGroupInfo_DOWN.GroupUserNum)
  return groupusernum_;
}
inline void Processor_145_GetGroupInfo_DOWN::set_groupusernum(::google_public::protobuf::int32 value) {
  set_has_groupusernum();
  groupusernum_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_145_GetGroupInfo_DOWN.GroupUserNum)
}

// -------------------------------------------------------------------

// Processor_146_GetGroupDetailInfo_UP

// optional int32 GroupID = 1;
inline bool Processor_146_GetGroupDetailInfo_UP::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_146_GetGroupDetailInfo_UP::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_146_GetGroupDetailInfo_UP::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_146_GetGroupDetailInfo_UP::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_146_GetGroupDetailInfo_UP::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_146_GetGroupDetailInfo_UP.GroupID)
  return groupid_;
}
inline void Processor_146_GetGroupDetailInfo_UP::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_146_GetGroupDetailInfo_UP.GroupID)
}

// -------------------------------------------------------------------

// GroupUserInfo

// optional .msg.UserDetailInfo UserDetailInfo = 1;
inline bool GroupUserInfo::has_userdetailinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupUserInfo::set_has_userdetailinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupUserInfo::clear_has_userdetailinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupUserInfo::clear_userdetailinfo() {
  if (userdetailinfo_ != NULL) userdetailinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userdetailinfo();
}
inline const ::msg::UserDetailInfo& GroupUserInfo::userdetailinfo() const {
  // @@protoc_insertion_point(field_get:msg.GroupUserInfo.UserDetailInfo)
  return userdetailinfo_ != NULL ? *userdetailinfo_ : *default_instance_->userdetailinfo_;
}
inline ::msg::UserDetailInfo* GroupUserInfo::mutable_userdetailinfo() {
  set_has_userdetailinfo();
  if (userdetailinfo_ == NULL) userdetailinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.GroupUserInfo.UserDetailInfo)
  return userdetailinfo_;
}
inline ::msg::UserDetailInfo* GroupUserInfo::release_userdetailinfo() {
  clear_has_userdetailinfo();
  ::msg::UserDetailInfo* temp = userdetailinfo_;
  userdetailinfo_ = NULL;
  return temp;
}
inline void GroupUserInfo::set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo) {
  delete userdetailinfo_;
  userdetailinfo_ = userdetailinfo;
  if (userdetailinfo) {
    set_has_userdetailinfo();
  } else {
    clear_has_userdetailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GroupUserInfo.UserDetailInfo)
}

// optional .msg.GroupUserStatus UserStatus = 2;
inline bool GroupUserInfo::has_userstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupUserInfo::set_has_userstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupUserInfo::clear_has_userstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupUserInfo::clear_userstatus() {
  userstatus_ = 1;
  clear_has_userstatus();
}
inline ::msg::GroupUserStatus GroupUserInfo::userstatus() const {
  // @@protoc_insertion_point(field_get:msg.GroupUserInfo.UserStatus)
  return static_cast< ::msg::GroupUserStatus >(userstatus_);
}
inline void GroupUserInfo::set_userstatus(::msg::GroupUserStatus value) {
  assert(::msg::GroupUserStatus_IsValid(value));
  set_has_userstatus();
  userstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupUserInfo.UserStatus)
}

// -------------------------------------------------------------------

// GroupManageSetting

// optional bool IsClub = 1;
inline bool GroupManageSetting::has_isclub() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupManageSetting::set_has_isclub() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupManageSetting::clear_has_isclub() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupManageSetting::clear_isclub() {
  isclub_ = false;
  clear_has_isclub();
}
inline bool GroupManageSetting::isclub() const {
  // @@protoc_insertion_point(field_get:msg.GroupManageSetting.IsClub)
  return isclub_;
}
inline void GroupManageSetting::set_isclub(bool value) {
  set_has_isclub();
  isclub_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupManageSetting.IsClub)
}

// optional bool CreditRefillAfterGame = 2;
inline bool GroupManageSetting::has_creditrefillaftergame() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupManageSetting::set_has_creditrefillaftergame() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupManageSetting::clear_has_creditrefillaftergame() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupManageSetting::clear_creditrefillaftergame() {
  creditrefillaftergame_ = false;
  clear_has_creditrefillaftergame();
}
inline bool GroupManageSetting::creditrefillaftergame() const {
  // @@protoc_insertion_point(field_get:msg.GroupManageSetting.CreditRefillAfterGame)
  return creditrefillaftergame_;
}
inline void GroupManageSetting::set_creditrefillaftergame(bool value) {
  set_has_creditrefillaftergame();
  creditrefillaftergame_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupManageSetting.CreditRefillAfterGame)
}

// optional bool CanChat = 3;
inline bool GroupManageSetting::has_canchat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupManageSetting::set_has_canchat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupManageSetting::clear_has_canchat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupManageSetting::clear_canchat() {
  canchat_ = false;
  clear_has_canchat();
}
inline bool GroupManageSetting::canchat() const {
  // @@protoc_insertion_point(field_get:msg.GroupManageSetting.CanChat)
  return canchat_;
}
inline void GroupManageSetting::set_canchat(bool value) {
  set_has_canchat();
  canchat_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupManageSetting.CanChat)
}

// optional bool CanSeeOtherMember = 4;
inline bool GroupManageSetting::has_canseeothermember() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupManageSetting::set_has_canseeothermember() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupManageSetting::clear_has_canseeothermember() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupManageSetting::clear_canseeothermember() {
  canseeothermember_ = false;
  clear_has_canseeothermember();
}
inline bool GroupManageSetting::canseeothermember() const {
  // @@protoc_insertion_point(field_get:msg.GroupManageSetting.CanSeeOtherMember)
  return canseeothermember_;
}
inline void GroupManageSetting::set_canseeothermember(bool value) {
  set_has_canseeothermember();
  canseeothermember_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupManageSetting.CanSeeOtherMember)
}

// optional int32 RakePercent = 5;
inline bool GroupManageSetting::has_rakepercent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupManageSetting::set_has_rakepercent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupManageSetting::clear_has_rakepercent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupManageSetting::clear_rakepercent() {
  rakepercent_ = 0;
  clear_has_rakepercent();
}
inline ::google_public::protobuf::int32 GroupManageSetting::rakepercent() const {
  // @@protoc_insertion_point(field_get:msg.GroupManageSetting.RakePercent)
  return rakepercent_;
}
inline void GroupManageSetting::set_rakepercent(::google_public::protobuf::int32 value) {
  set_has_rakepercent();
  rakepercent_ = value;
  // @@protoc_insertion_point(field_set:msg.GroupManageSetting.RakePercent)
}

// -------------------------------------------------------------------

// Processor_146_GetGroupDetailInfo_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_146_GetGroupDetailInfo_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_146_GetGroupDetailInfo_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_146_GetGroupDetailInfo_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_146_GetGroupDetailInfo_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_146_GetGroupDetailInfo_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_146_GetGroupDetailInfo_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_146_GetGroupDetailInfo_DOWN.Response)
}

// optional .msg.GroupInfo GroupInfo = 2;
inline bool Processor_146_GetGroupDetailInfo_DOWN::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::msg::GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::msg::GroupInfo& Processor_146_GetGroupDetailInfo_DOWN::groupinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_146_GetGroupDetailInfo_DOWN.GroupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::msg::GroupInfo* Processor_146_GetGroupDetailInfo_DOWN::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) groupinfo_ = new ::msg::GroupInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_146_GetGroupDetailInfo_DOWN.GroupInfo)
  return groupinfo_;
}
inline ::msg::GroupInfo* Processor_146_GetGroupDetailInfo_DOWN::release_groupinfo() {
  clear_has_groupinfo();
  ::msg::GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_allocated_groupinfo(::msg::GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_146_GetGroupDetailInfo_DOWN.GroupInfo)
}

// repeated .msg.GroupUserInfo GroupUserInfo = 3;
inline int Processor_146_GetGroupDetailInfo_DOWN::groupuserinfo_size() const {
  return groupuserinfo_.size();
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_groupuserinfo() {
  groupuserinfo_.Clear();
}
inline const ::msg::GroupUserInfo& Processor_146_GetGroupDetailInfo_DOWN::groupuserinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_146_GetGroupDetailInfo_DOWN.GroupUserInfo)
  return groupuserinfo_.Get(index);
}
inline ::msg::GroupUserInfo* Processor_146_GetGroupDetailInfo_DOWN::mutable_groupuserinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_146_GetGroupDetailInfo_DOWN.GroupUserInfo)
  return groupuserinfo_.Mutable(index);
}
inline ::msg::GroupUserInfo* Processor_146_GetGroupDetailInfo_DOWN::add_groupuserinfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_146_GetGroupDetailInfo_DOWN.GroupUserInfo)
  return groupuserinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::GroupUserInfo >&
Processor_146_GetGroupDetailInfo_DOWN::groupuserinfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_146_GetGroupDetailInfo_DOWN.GroupUserInfo)
  return groupuserinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::GroupUserInfo >*
Processor_146_GetGroupDetailInfo_DOWN::mutable_groupuserinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_146_GetGroupDetailInfo_DOWN.GroupUserInfo)
  return &groupuserinfo_;
}

// optional .msg.GroupSetting Setting = 4;
inline bool Processor_146_GetGroupDetailInfo_DOWN::has_setting() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_has_setting() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_has_setting() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_setting() {
  if (setting_ != NULL) setting_->::msg::GroupSetting::Clear();
  clear_has_setting();
}
inline const ::msg::GroupSetting& Processor_146_GetGroupDetailInfo_DOWN::setting() const {
  // @@protoc_insertion_point(field_get:msg.Processor_146_GetGroupDetailInfo_DOWN.Setting)
  return setting_ != NULL ? *setting_ : *default_instance_->setting_;
}
inline ::msg::GroupSetting* Processor_146_GetGroupDetailInfo_DOWN::mutable_setting() {
  set_has_setting();
  if (setting_ == NULL) setting_ = new ::msg::GroupSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_146_GetGroupDetailInfo_DOWN.Setting)
  return setting_;
}
inline ::msg::GroupSetting* Processor_146_GetGroupDetailInfo_DOWN::release_setting() {
  clear_has_setting();
  ::msg::GroupSetting* temp = setting_;
  setting_ = NULL;
  return temp;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_allocated_setting(::msg::GroupSetting* setting) {
  delete setting_;
  setting_ = setting;
  if (setting) {
    set_has_setting();
  } else {
    clear_has_setting();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_146_GetGroupDetailInfo_DOWN.Setting)
}

// optional .msg.GroupPermission Permission = 5;
inline bool Processor_146_GetGroupDetailInfo_DOWN::has_permission() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_has_permission() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_has_permission() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_permission() {
  if (permission_ != NULL) permission_->::msg::GroupPermission::Clear();
  clear_has_permission();
}
inline const ::msg::GroupPermission& Processor_146_GetGroupDetailInfo_DOWN::permission() const {
  // @@protoc_insertion_point(field_get:msg.Processor_146_GetGroupDetailInfo_DOWN.Permission)
  return permission_ != NULL ? *permission_ : *default_instance_->permission_;
}
inline ::msg::GroupPermission* Processor_146_GetGroupDetailInfo_DOWN::mutable_permission() {
  set_has_permission();
  if (permission_ == NULL) permission_ = new ::msg::GroupPermission;
  // @@protoc_insertion_point(field_mutable:msg.Processor_146_GetGroupDetailInfo_DOWN.Permission)
  return permission_;
}
inline ::msg::GroupPermission* Processor_146_GetGroupDetailInfo_DOWN::release_permission() {
  clear_has_permission();
  ::msg::GroupPermission* temp = permission_;
  permission_ = NULL;
  return temp;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_allocated_permission(::msg::GroupPermission* permission) {
  delete permission_;
  permission_ = permission;
  if (permission) {
    set_has_permission();
  } else {
    clear_has_permission();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_146_GetGroupDetailInfo_DOWN.Permission)
}

// optional .msg.GroupManageSetting ManageSetting = 6;
inline bool Processor_146_GetGroupDetailInfo_DOWN::has_managesetting() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_has_managesetting() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_has_managesetting() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::clear_managesetting() {
  if (managesetting_ != NULL) managesetting_->::msg::GroupManageSetting::Clear();
  clear_has_managesetting();
}
inline const ::msg::GroupManageSetting& Processor_146_GetGroupDetailInfo_DOWN::managesetting() const {
  // @@protoc_insertion_point(field_get:msg.Processor_146_GetGroupDetailInfo_DOWN.ManageSetting)
  return managesetting_ != NULL ? *managesetting_ : *default_instance_->managesetting_;
}
inline ::msg::GroupManageSetting* Processor_146_GetGroupDetailInfo_DOWN::mutable_managesetting() {
  set_has_managesetting();
  if (managesetting_ == NULL) managesetting_ = new ::msg::GroupManageSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_146_GetGroupDetailInfo_DOWN.ManageSetting)
  return managesetting_;
}
inline ::msg::GroupManageSetting* Processor_146_GetGroupDetailInfo_DOWN::release_managesetting() {
  clear_has_managesetting();
  ::msg::GroupManageSetting* temp = managesetting_;
  managesetting_ = NULL;
  return temp;
}
inline void Processor_146_GetGroupDetailInfo_DOWN::set_allocated_managesetting(::msg::GroupManageSetting* managesetting) {
  delete managesetting_;
  managesetting_ = managesetting;
  if (managesetting) {
    set_has_managesetting();
  } else {
    clear_has_managesetting();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_146_GetGroupDetailInfo_DOWN.ManageSetting)
}

// -------------------------------------------------------------------

// Processor_147_SetGroupManageSetting

// optional int32 GroupID = 1;
inline bool Processor_147_SetGroupManageSetting::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_147_SetGroupManageSetting::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_147_SetGroupManageSetting::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_147_SetGroupManageSetting::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_147_SetGroupManageSetting::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_147_SetGroupManageSetting.GroupID)
  return groupid_;
}
inline void Processor_147_SetGroupManageSetting::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_147_SetGroupManageSetting.GroupID)
}

// optional .msg.GroupManageSetting Setting = 2;
inline bool Processor_147_SetGroupManageSetting::has_setting() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_147_SetGroupManageSetting::set_has_setting() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_147_SetGroupManageSetting::clear_has_setting() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_147_SetGroupManageSetting::clear_setting() {
  if (setting_ != NULL) setting_->::msg::GroupManageSetting::Clear();
  clear_has_setting();
}
inline const ::msg::GroupManageSetting& Processor_147_SetGroupManageSetting::setting() const {
  // @@protoc_insertion_point(field_get:msg.Processor_147_SetGroupManageSetting.Setting)
  return setting_ != NULL ? *setting_ : *default_instance_->setting_;
}
inline ::msg::GroupManageSetting* Processor_147_SetGroupManageSetting::mutable_setting() {
  set_has_setting();
  if (setting_ == NULL) setting_ = new ::msg::GroupManageSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_147_SetGroupManageSetting.Setting)
  return setting_;
}
inline ::msg::GroupManageSetting* Processor_147_SetGroupManageSetting::release_setting() {
  clear_has_setting();
  ::msg::GroupManageSetting* temp = setting_;
  setting_ = NULL;
  return temp;
}
inline void Processor_147_SetGroupManageSetting::set_allocated_setting(::msg::GroupManageSetting* setting) {
  delete setting_;
  setting_ = setting;
  if (setting) {
    set_has_setting();
  } else {
    clear_has_setting();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_147_SetGroupManageSetting.Setting)
}

// -------------------------------------------------------------------

// Processor_148_SetGroupAdmin

// optional int32 GroupId = 1;
inline bool Processor_148_SetGroupAdmin::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_148_SetGroupAdmin::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_148_SetGroupAdmin::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_148_SetGroupAdmin::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_148_SetGroupAdmin::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_148_SetGroupAdmin.GroupId)
  return groupid_;
}
inline void Processor_148_SetGroupAdmin::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_148_SetGroupAdmin.GroupId)
}

// optional int32 UserID = 2;
inline bool Processor_148_SetGroupAdmin::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_148_SetGroupAdmin::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_148_SetGroupAdmin::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_148_SetGroupAdmin::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_148_SetGroupAdmin::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_148_SetGroupAdmin.UserID)
  return userid_;
}
inline void Processor_148_SetGroupAdmin::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_148_SetGroupAdmin.UserID)
}

// optional bool IsAdmin = 3;
inline bool Processor_148_SetGroupAdmin::has_isadmin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_148_SetGroupAdmin::set_has_isadmin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_148_SetGroupAdmin::clear_has_isadmin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_148_SetGroupAdmin::clear_isadmin() {
  isadmin_ = false;
  clear_has_isadmin();
}
inline bool Processor_148_SetGroupAdmin::isadmin() const {
  // @@protoc_insertion_point(field_get:msg.Processor_148_SetGroupAdmin.IsAdmin)
  return isadmin_;
}
inline void Processor_148_SetGroupAdmin::set_isadmin(bool value) {
  set_has_isadmin();
  isadmin_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_148_SetGroupAdmin.IsAdmin)
}

// -------------------------------------------------------------------

// RoomTypeInfo

// optional .msg.RoomType RoomType = 1;
inline bool RoomTypeInfo::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomTypeInfo::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomTypeInfo::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomTypeInfo::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::msg::RoomType RoomTypeInfo::roomtype() const {
  // @@protoc_insertion_point(field_get:msg.RoomTypeInfo.RoomType)
  return static_cast< ::msg::RoomType >(roomtype_);
}
inline void RoomTypeInfo::set_roomtype(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomTypeInfo.RoomType)
}

// optional string RoomTypeName = 2;
inline bool RoomTypeInfo::has_roomtypename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomTypeInfo::set_has_roomtypename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomTypeInfo::clear_has_roomtypename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomTypeInfo::clear_roomtypename() {
  if (roomtypename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomtypename_->clear();
  }
  clear_has_roomtypename();
}
inline const ::std::string& RoomTypeInfo::roomtypename() const {
  // @@protoc_insertion_point(field_get:msg.RoomTypeInfo.RoomTypeName)
  return *roomtypename_;
}
inline void RoomTypeInfo::set_roomtypename(const ::std::string& value) {
  set_has_roomtypename();
  if (roomtypename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomtypename_ = new ::std::string;
  }
  roomtypename_->assign(value);
  // @@protoc_insertion_point(field_set:msg.RoomTypeInfo.RoomTypeName)
}
inline void RoomTypeInfo::set_roomtypename(const char* value) {
  set_has_roomtypename();
  if (roomtypename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomtypename_ = new ::std::string;
  }
  roomtypename_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.RoomTypeInfo.RoomTypeName)
}
inline void RoomTypeInfo::set_roomtypename(const char* value, size_t size) {
  set_has_roomtypename();
  if (roomtypename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomtypename_ = new ::std::string;
  }
  roomtypename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.RoomTypeInfo.RoomTypeName)
}
inline ::std::string* RoomTypeInfo::mutable_roomtypename() {
  set_has_roomtypename();
  if (roomtypename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomtypename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.RoomTypeInfo.RoomTypeName)
  return roomtypename_;
}
inline ::std::string* RoomTypeInfo::release_roomtypename() {
  clear_has_roomtypename();
  if (roomtypename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomtypename_;
    roomtypename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoomTypeInfo::set_allocated_roomtypename(::std::string* roomtypename) {
  if (roomtypename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomtypename_;
  }
  if (roomtypename) {
    set_has_roomtypename();
    roomtypename_ = roomtypename;
  } else {
    clear_has_roomtypename();
    roomtypename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.RoomTypeInfo.RoomTypeName)
}

// -------------------------------------------------------------------

// RoomInfo

// optional int32 RoomId = 1;
inline bool RoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 RoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.RoomId)
  return roomid_;
}
inline void RoomInfo::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomInfo.RoomId)
}

// optional .msg.RoomStatus RoomStatus = 2;
inline bool RoomInfo::has_roomstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomInfo::set_has_roomstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomInfo::clear_has_roomstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomInfo::clear_roomstatus() {
  roomstatus_ = 0;
  clear_has_roomstatus();
}
inline ::msg::RoomStatus RoomInfo::roomstatus() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.RoomStatus)
  return static_cast< ::msg::RoomStatus >(roomstatus_);
}
inline void RoomInfo::set_roomstatus(::msg::RoomStatus value) {
  assert(::msg::RoomStatus_IsValid(value));
  set_has_roomstatus();
  roomstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomInfo.RoomStatus)
}

// optional string RoomName = 3;
inline bool RoomInfo::has_roomname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomInfo::set_has_roomname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomInfo::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomInfo::clear_roomname() {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_->clear();
  }
  clear_has_roomname();
}
inline const ::std::string& RoomInfo::roomname() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.RoomName)
  return *roomname_;
}
inline void RoomInfo::set_roomname(const ::std::string& value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.RoomInfo.RoomName)
}
inline void RoomInfo::set_roomname(const char* value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.RoomInfo.RoomName)
}
inline void RoomInfo::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.RoomInfo.RoomName)
}
inline ::std::string* RoomInfo::mutable_roomname() {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.RoomInfo.RoomName)
  return roomname_;
}
inline ::std::string* RoomInfo::release_roomname() {
  clear_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomname_;
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoomInfo::set_allocated_roomname(::std::string* roomname) {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomname_;
  }
  if (roomname) {
    set_has_roomname();
    roomname_ = roomname;
  } else {
    clear_has_roomname();
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.RoomInfo.RoomName)
}

// optional .msg.RoomTypeInfo RoomType = 4;
inline bool RoomInfo::has_roomtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomInfo::set_has_roomtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomInfo::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomInfo::clear_roomtype() {
  if (roomtype_ != NULL) roomtype_->::msg::RoomTypeInfo::Clear();
  clear_has_roomtype();
}
inline const ::msg::RoomTypeInfo& RoomInfo::roomtype() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.RoomType)
  return roomtype_ != NULL ? *roomtype_ : *default_instance_->roomtype_;
}
inline ::msg::RoomTypeInfo* RoomInfo::mutable_roomtype() {
  set_has_roomtype();
  if (roomtype_ == NULL) roomtype_ = new ::msg::RoomTypeInfo;
  // @@protoc_insertion_point(field_mutable:msg.RoomInfo.RoomType)
  return roomtype_;
}
inline ::msg::RoomTypeInfo* RoomInfo::release_roomtype() {
  clear_has_roomtype();
  ::msg::RoomTypeInfo* temp = roomtype_;
  roomtype_ = NULL;
  return temp;
}
inline void RoomInfo::set_allocated_roomtype(::msg::RoomTypeInfo* roomtype) {
  delete roomtype_;
  roomtype_ = roomtype;
  if (roomtype) {
    set_has_roomtype();
  } else {
    clear_has_roomtype();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.RoomInfo.RoomType)
}

// optional string RoomNote = 5;
inline bool RoomInfo::has_roomnote() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomInfo::set_has_roomnote() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomInfo::clear_has_roomnote() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomInfo::clear_roomnote() {
  if (roomnote_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_->clear();
  }
  clear_has_roomnote();
}
inline const ::std::string& RoomInfo::roomnote() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.RoomNote)
  return *roomnote_;
}
inline void RoomInfo::set_roomnote(const ::std::string& value) {
  set_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_ = new ::std::string;
  }
  roomnote_->assign(value);
  // @@protoc_insertion_point(field_set:msg.RoomInfo.RoomNote)
}
inline void RoomInfo::set_roomnote(const char* value) {
  set_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_ = new ::std::string;
  }
  roomnote_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.RoomInfo.RoomNote)
}
inline void RoomInfo::set_roomnote(const char* value, size_t size) {
  set_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_ = new ::std::string;
  }
  roomnote_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.RoomInfo.RoomNote)
}
inline ::std::string* RoomInfo::mutable_roomnote() {
  set_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.RoomInfo.RoomNote)
  return roomnote_;
}
inline ::std::string* RoomInfo::release_roomnote() {
  clear_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomnote_;
    roomnote_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoomInfo::set_allocated_roomnote(::std::string* roomnote) {
  if (roomnote_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomnote_;
  }
  if (roomnote) {
    set_has_roomnote();
    roomnote_ = roomnote;
  } else {
    clear_has_roomnote();
    roomnote_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.RoomInfo.RoomNote)
}

// optional int32 PlayerNum = 6;
inline bool RoomInfo::has_playernum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomInfo::set_has_playernum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomInfo::clear_has_playernum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomInfo::clear_playernum() {
  playernum_ = 0;
  clear_has_playernum();
}
inline ::google_public::protobuf::int32 RoomInfo::playernum() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.PlayerNum)
  return playernum_;
}
inline void RoomInfo::set_playernum(::google_public::protobuf::int32 value) {
  set_has_playernum();
  playernum_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomInfo.PlayerNum)
}

// optional int32 MaxPlayerNum = 7;
inline bool RoomInfo::has_maxplayernum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoomInfo::set_has_maxplayernum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoomInfo::clear_has_maxplayernum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoomInfo::clear_maxplayernum() {
  maxplayernum_ = 0;
  clear_has_maxplayernum();
}
inline ::google_public::protobuf::int32 RoomInfo::maxplayernum() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.MaxPlayerNum)
  return maxplayernum_;
}
inline void RoomInfo::set_maxplayernum(::google_public::protobuf::int32 value) {
  set_has_maxplayernum();
  maxplayernum_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomInfo.MaxPlayerNum)
}

// optional .msg.GroupInfo GroupInfo = 8;
inline bool RoomInfo::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoomInfo::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoomInfo::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoomInfo::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::msg::GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::msg::GroupInfo& RoomInfo::groupinfo() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.GroupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::msg::GroupInfo* RoomInfo::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) groupinfo_ = new ::msg::GroupInfo;
  // @@protoc_insertion_point(field_mutable:msg.RoomInfo.GroupInfo)
  return groupinfo_;
}
inline ::msg::GroupInfo* RoomInfo::release_groupinfo() {
  clear_has_groupinfo();
  ::msg::GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void RoomInfo::set_allocated_groupinfo(::msg::GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.RoomInfo.GroupInfo)
}

// optional bool IsTournament = 9;
inline bool RoomInfo::has_istournament() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoomInfo::set_has_istournament() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoomInfo::clear_has_istournament() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoomInfo::clear_istournament() {
  istournament_ = false;
  clear_has_istournament();
}
inline bool RoomInfo::istournament() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.IsTournament)
  return istournament_;
}
inline void RoomInfo::set_istournament(bool value) {
  set_has_istournament();
  istournament_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomInfo.IsTournament)
}

// optional int64 StartTime = 10;
inline bool RoomInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoomInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoomInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoomInfo::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google_public::protobuf::int64 RoomInfo::starttime() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.StartTime)
  return starttime_;
}
inline void RoomInfo::set_starttime(::google_public::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomInfo.StartTime)
}

// optional .msg.UserDetailInfo CreaterInfo = 11;
inline bool RoomInfo::has_createrinfo() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoomInfo::set_has_createrinfo() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoomInfo::clear_has_createrinfo() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoomInfo::clear_createrinfo() {
  if (createrinfo_ != NULL) createrinfo_->::msg::UserDetailInfo::Clear();
  clear_has_createrinfo();
}
inline const ::msg::UserDetailInfo& RoomInfo::createrinfo() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.CreaterInfo)
  return createrinfo_ != NULL ? *createrinfo_ : *default_instance_->createrinfo_;
}
inline ::msg::UserDetailInfo* RoomInfo::mutable_createrinfo() {
  set_has_createrinfo();
  if (createrinfo_ == NULL) createrinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.RoomInfo.CreaterInfo)
  return createrinfo_;
}
inline ::msg::UserDetailInfo* RoomInfo::release_createrinfo() {
  clear_has_createrinfo();
  ::msg::UserDetailInfo* temp = createrinfo_;
  createrinfo_ = NULL;
  return temp;
}
inline void RoomInfo::set_allocated_createrinfo(::msg::UserDetailInfo* createrinfo) {
  delete createrinfo_;
  createrinfo_ = createrinfo;
  if (createrinfo) {
    set_has_createrinfo();
  } else {
    clear_has_createrinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.RoomInfo.CreaterInfo)
}

// optional int64 EndTime = 12;
inline bool RoomInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoomInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoomInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoomInfo::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google_public::protobuf::int64 RoomInfo::endtime() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.EndTime)
  return endtime_;
}
inline void RoomInfo::set_endtime(::google_public::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomInfo.EndTime)
}

// optional string RoomIp = 13;
inline bool RoomInfo::has_roomip() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoomInfo::set_has_roomip() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoomInfo::clear_has_roomip() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoomInfo::clear_roomip() {
  if (roomip_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomip_->clear();
  }
  clear_has_roomip();
}
inline const ::std::string& RoomInfo::roomip() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.RoomIp)
  return *roomip_;
}
inline void RoomInfo::set_roomip(const ::std::string& value) {
  set_has_roomip();
  if (roomip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomip_ = new ::std::string;
  }
  roomip_->assign(value);
  // @@protoc_insertion_point(field_set:msg.RoomInfo.RoomIp)
}
inline void RoomInfo::set_roomip(const char* value) {
  set_has_roomip();
  if (roomip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomip_ = new ::std::string;
  }
  roomip_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.RoomInfo.RoomIp)
}
inline void RoomInfo::set_roomip(const char* value, size_t size) {
  set_has_roomip();
  if (roomip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomip_ = new ::std::string;
  }
  roomip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.RoomInfo.RoomIp)
}
inline ::std::string* RoomInfo::mutable_roomip() {
  set_has_roomip();
  if (roomip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.RoomInfo.RoomIp)
  return roomip_;
}
inline ::std::string* RoomInfo::release_roomip() {
  clear_has_roomip();
  if (roomip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomip_;
    roomip_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoomInfo::set_allocated_roomip(::std::string* roomip) {
  if (roomip_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomip_;
  }
  if (roomip) {
    set_has_roomip();
    roomip_ = roomip;
  } else {
    clear_has_roomip();
    roomip_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.RoomInfo.RoomIp)
}

// optional int32 RoomPort = 14;
inline bool RoomInfo::has_roomport() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoomInfo::set_has_roomport() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoomInfo::clear_has_roomport() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoomInfo::clear_roomport() {
  roomport_ = 0;
  clear_has_roomport();
}
inline ::google_public::protobuf::int32 RoomInfo::roomport() const {
  // @@protoc_insertion_point(field_get:msg.RoomInfo.RoomPort)
  return roomport_;
}
inline void RoomInfo::set_roomport(::google_public::protobuf::int32 value) {
  set_has_roomport();
  roomport_ = value;
  // @@protoc_insertion_point(field_set:msg.RoomInfo.RoomPort)
}

// -------------------------------------------------------------------

// Processor_150_GetRoomInfo_UP

// optional int32 GroupId = 1;
inline bool Processor_150_GetRoomInfo_UP::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_150_GetRoomInfo_UP::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_150_GetRoomInfo_UP::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_150_GetRoomInfo_UP::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_150_GetRoomInfo_UP::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_150_GetRoomInfo_UP.GroupId)
  return groupid_;
}
inline void Processor_150_GetRoomInfo_UP::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_150_GetRoomInfo_UP.GroupId)
}

// -------------------------------------------------------------------

// Processor_150_GetRoomInfo_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_150_GetRoomInfo_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_150_GetRoomInfo_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_150_GetRoomInfo_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_150_GetRoomInfo_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_150_GetRoomInfo_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_150_GetRoomInfo_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_150_GetRoomInfo_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_150_GetRoomInfo_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_150_GetRoomInfo_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_150_GetRoomInfo_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_150_GetRoomInfo_DOWN.Response)
}

// optional .msg.ServerInfo RoomServer = 2;
inline bool Processor_150_GetRoomInfo_DOWN::has_roomserver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_150_GetRoomInfo_DOWN::set_has_roomserver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_150_GetRoomInfo_DOWN::clear_has_roomserver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_150_GetRoomInfo_DOWN::clear_roomserver() {
  if (roomserver_ != NULL) roomserver_->::msg::ServerInfo::Clear();
  clear_has_roomserver();
}
inline const ::msg::ServerInfo& Processor_150_GetRoomInfo_DOWN::roomserver() const {
  // @@protoc_insertion_point(field_get:msg.Processor_150_GetRoomInfo_DOWN.RoomServer)
  return roomserver_ != NULL ? *roomserver_ : *default_instance_->roomserver_;
}
inline ::msg::ServerInfo* Processor_150_GetRoomInfo_DOWN::mutable_roomserver() {
  set_has_roomserver();
  if (roomserver_ == NULL) roomserver_ = new ::msg::ServerInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_150_GetRoomInfo_DOWN.RoomServer)
  return roomserver_;
}
inline ::msg::ServerInfo* Processor_150_GetRoomInfo_DOWN::release_roomserver() {
  clear_has_roomserver();
  ::msg::ServerInfo* temp = roomserver_;
  roomserver_ = NULL;
  return temp;
}
inline void Processor_150_GetRoomInfo_DOWN::set_allocated_roomserver(::msg::ServerInfo* roomserver) {
  delete roomserver_;
  roomserver_ = roomserver;
  if (roomserver) {
    set_has_roomserver();
  } else {
    clear_has_roomserver();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_150_GetRoomInfo_DOWN.RoomServer)
}

// repeated .msg.RoomInfo RoomInfo = 3;
inline int Processor_150_GetRoomInfo_DOWN::roominfo_size() const {
  return roominfo_.size();
}
inline void Processor_150_GetRoomInfo_DOWN::clear_roominfo() {
  roominfo_.Clear();
}
inline const ::msg::RoomInfo& Processor_150_GetRoomInfo_DOWN::roominfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_150_GetRoomInfo_DOWN.RoomInfo)
  return roominfo_.Get(index);
}
inline ::msg::RoomInfo* Processor_150_GetRoomInfo_DOWN::mutable_roominfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_150_GetRoomInfo_DOWN.RoomInfo)
  return roominfo_.Mutable(index);
}
inline ::msg::RoomInfo* Processor_150_GetRoomInfo_DOWN::add_roominfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_150_GetRoomInfo_DOWN.RoomInfo)
  return roominfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::RoomInfo >&
Processor_150_GetRoomInfo_DOWN::roominfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_150_GetRoomInfo_DOWN.RoomInfo)
  return roominfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::RoomInfo >*
Processor_150_GetRoomInfo_DOWN::mutable_roominfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_150_GetRoomInfo_DOWN.RoomInfo)
  return &roominfo_;
}

// -------------------------------------------------------------------

// CreateRoomInfo

// optional .msg.RoomTypeInfo RoomType = 1;
inline bool CreateRoomInfo::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomInfo::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomInfo::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomInfo::clear_roomtype() {
  if (roomtype_ != NULL) roomtype_->::msg::RoomTypeInfo::Clear();
  clear_has_roomtype();
}
inline const ::msg::RoomTypeInfo& CreateRoomInfo::roomtype() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfo.RoomType)
  return roomtype_ != NULL ? *roomtype_ : *default_instance_->roomtype_;
}
inline ::msg::RoomTypeInfo* CreateRoomInfo::mutable_roomtype() {
  set_has_roomtype();
  if (roomtype_ == NULL) roomtype_ = new ::msg::RoomTypeInfo;
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomInfo.RoomType)
  return roomtype_;
}
inline ::msg::RoomTypeInfo* CreateRoomInfo::release_roomtype() {
  clear_has_roomtype();
  ::msg::RoomTypeInfo* temp = roomtype_;
  roomtype_ = NULL;
  return temp;
}
inline void CreateRoomInfo::set_allocated_roomtype(::msg::RoomTypeInfo* roomtype) {
  delete roomtype_;
  roomtype_ = roomtype;
  if (roomtype) {
    set_has_roomtype();
  } else {
    clear_has_roomtype();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomInfo.RoomType)
}

// optional .msg.RoomProp RoomProp = 2;
inline bool CreateRoomInfo::has_roomprop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoomInfo::set_has_roomprop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoomInfo::clear_has_roomprop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoomInfo::clear_roomprop() {
  if (roomprop_ != NULL) roomprop_->::msg::RoomProp::Clear();
  clear_has_roomprop();
}
inline const ::msg::RoomProp& CreateRoomInfo::roomprop() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfo.RoomProp)
  return roomprop_ != NULL ? *roomprop_ : *default_instance_->roomprop_;
}
inline ::msg::RoomProp* CreateRoomInfo::mutable_roomprop() {
  set_has_roomprop();
  if (roomprop_ == NULL) roomprop_ = new ::msg::RoomProp;
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomInfo.RoomProp)
  return roomprop_;
}
inline ::msg::RoomProp* CreateRoomInfo::release_roomprop() {
  clear_has_roomprop();
  ::msg::RoomProp* temp = roomprop_;
  roomprop_ = NULL;
  return temp;
}
inline void CreateRoomInfo::set_allocated_roomprop(::msg::RoomProp* roomprop) {
  delete roomprop_;
  roomprop_ = roomprop;
  if (roomprop) {
    set_has_roomprop();
  } else {
    clear_has_roomprop();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomInfo.RoomProp)
}

// optional bool SupportTournament = 3;
inline bool CreateRoomInfo::has_supporttournament() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoomInfo::set_has_supporttournament() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoomInfo::clear_has_supporttournament() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoomInfo::clear_supporttournament() {
  supporttournament_ = false;
  clear_has_supporttournament();
}
inline bool CreateRoomInfo::supporttournament() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfo.SupportTournament)
  return supporttournament_;
}
inline void CreateRoomInfo::set_supporttournament(bool value) {
  set_has_supporttournament();
  supporttournament_ = value;
  // @@protoc_insertion_point(field_set:msg.CreateRoomInfo.SupportTournament)
}

// -------------------------------------------------------------------

// BlindLevel

// optional int32 SmallBlind = 1;
inline bool BlindLevel::has_smallblind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlindLevel::set_has_smallblind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlindLevel::clear_has_smallblind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlindLevel::clear_smallblind() {
  smallblind_ = 0;
  clear_has_smallblind();
}
inline ::google_public::protobuf::int32 BlindLevel::smallblind() const {
  // @@protoc_insertion_point(field_get:msg.BlindLevel.SmallBlind)
  return smallblind_;
}
inline void BlindLevel::set_smallblind(::google_public::protobuf::int32 value) {
  set_has_smallblind();
  smallblind_ = value;
  // @@protoc_insertion_point(field_set:msg.BlindLevel.SmallBlind)
}

// optional int32 BigBlind = 2;
inline bool BlindLevel::has_bigblind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlindLevel::set_has_bigblind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlindLevel::clear_has_bigblind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlindLevel::clear_bigblind() {
  bigblind_ = 0;
  clear_has_bigblind();
}
inline ::google_public::protobuf::int32 BlindLevel::bigblind() const {
  // @@protoc_insertion_point(field_get:msg.BlindLevel.BigBlind)
  return bigblind_;
}
inline void BlindLevel::set_bigblind(::google_public::protobuf::int32 value) {
  set_has_bigblind();
  bigblind_ = value;
  // @@protoc_insertion_point(field_set:msg.BlindLevel.BigBlind)
}

// optional int32 Ante = 3;
inline bool BlindLevel::has_ante() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlindLevel::set_has_ante() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlindLevel::clear_has_ante() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlindLevel::clear_ante() {
  ante_ = 0;
  clear_has_ante();
}
inline ::google_public::protobuf::int32 BlindLevel::ante() const {
  // @@protoc_insertion_point(field_get:msg.BlindLevel.Ante)
  return ante_;
}
inline void BlindLevel::set_ante(::google_public::protobuf::int32 value) {
  set_has_ante();
  ante_ = value;
  // @@protoc_insertion_point(field_set:msg.BlindLevel.Ante)
}

// optional int32 LastTime = 4;
inline bool BlindLevel::has_lasttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlindLevel::set_has_lasttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BlindLevel::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BlindLevel::clear_lasttime() {
  lasttime_ = 0;
  clear_has_lasttime();
}
inline ::google_public::protobuf::int32 BlindLevel::lasttime() const {
  // @@protoc_insertion_point(field_get:msg.BlindLevel.LastTime)
  return lasttime_;
}
inline void BlindLevel::set_lasttime(::google_public::protobuf::int32 value) {
  set_has_lasttime();
  lasttime_ = value;
  // @@protoc_insertion_point(field_set:msg.BlindLevel.LastTime)
}

// optional int32 RestTime = 5;
inline bool BlindLevel::has_resttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BlindLevel::set_has_resttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BlindLevel::clear_has_resttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BlindLevel::clear_resttime() {
  resttime_ = 0;
  clear_has_resttime();
}
inline ::google_public::protobuf::int32 BlindLevel::resttime() const {
  // @@protoc_insertion_point(field_get:msg.BlindLevel.RestTime)
  return resttime_;
}
inline void BlindLevel::set_resttime(::google_public::protobuf::int32 value) {
  set_has_resttime();
  resttime_ = value;
  // @@protoc_insertion_point(field_set:msg.BlindLevel.RestTime)
}

// -------------------------------------------------------------------

// TournamentLevel

// repeated .msg.BlindLevel Level = 1;
inline int TournamentLevel::level_size() const {
  return level_.size();
}
inline void TournamentLevel::clear_level() {
  level_.Clear();
}
inline const ::msg::BlindLevel& TournamentLevel::level(int index) const {
  // @@protoc_insertion_point(field_get:msg.TournamentLevel.Level)
  return level_.Get(index);
}
inline ::msg::BlindLevel* TournamentLevel::mutable_level(int index) {
  // @@protoc_insertion_point(field_mutable:msg.TournamentLevel.Level)
  return level_.Mutable(index);
}
inline ::msg::BlindLevel* TournamentLevel::add_level() {
  // @@protoc_insertion_point(field_add:msg.TournamentLevel.Level)
  return level_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::BlindLevel >&
TournamentLevel::level() const {
  // @@protoc_insertion_point(field_list:msg.TournamentLevel.Level)
  return level_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::BlindLevel >*
TournamentLevel::mutable_level() {
  // @@protoc_insertion_point(field_mutable_list:msg.TournamentLevel.Level)
  return &level_;
}

// -------------------------------------------------------------------

// PrizeLevel

// optional int32 PrizePercent = 1;
inline bool PrizeLevel::has_prizepercent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrizeLevel::set_has_prizepercent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrizeLevel::clear_has_prizepercent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrizeLevel::clear_prizepercent() {
  prizepercent_ = 0;
  clear_has_prizepercent();
}
inline ::google_public::protobuf::int32 PrizeLevel::prizepercent() const {
  // @@protoc_insertion_point(field_get:msg.PrizeLevel.PrizePercent)
  return prizepercent_;
}
inline void PrizeLevel::set_prizepercent(::google_public::protobuf::int32 value) {
  set_has_prizepercent();
  prizepercent_ = value;
  // @@protoc_insertion_point(field_set:msg.PrizeLevel.PrizePercent)
}

// optional int32 MinRank = 2;
inline bool PrizeLevel::has_minrank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrizeLevel::set_has_minrank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrizeLevel::clear_has_minrank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrizeLevel::clear_minrank() {
  minrank_ = 0;
  clear_has_minrank();
}
inline ::google_public::protobuf::int32 PrizeLevel::minrank() const {
  // @@protoc_insertion_point(field_get:msg.PrizeLevel.MinRank)
  return minrank_;
}
inline void PrizeLevel::set_minrank(::google_public::protobuf::int32 value) {
  set_has_minrank();
  minrank_ = value;
  // @@protoc_insertion_point(field_set:msg.PrizeLevel.MinRank)
}

// optional int32 MaxRank = 3;
inline bool PrizeLevel::has_maxrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PrizeLevel::set_has_maxrank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PrizeLevel::clear_has_maxrank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PrizeLevel::clear_maxrank() {
  maxrank_ = 0;
  clear_has_maxrank();
}
inline ::google_public::protobuf::int32 PrizeLevel::maxrank() const {
  // @@protoc_insertion_point(field_get:msg.PrizeLevel.MaxRank)
  return maxrank_;
}
inline void PrizeLevel::set_maxrank(::google_public::protobuf::int32 value) {
  set_has_maxrank();
  maxrank_ = value;
  // @@protoc_insertion_point(field_set:msg.PrizeLevel.MaxRank)
}

// optional string OtherPrize = 4;
inline bool PrizeLevel::has_otherprize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PrizeLevel::set_has_otherprize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PrizeLevel::clear_has_otherprize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PrizeLevel::clear_otherprize() {
  if (otherprize_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_->clear();
  }
  clear_has_otherprize();
}
inline const ::std::string& PrizeLevel::otherprize() const {
  // @@protoc_insertion_point(field_get:msg.PrizeLevel.OtherPrize)
  return *otherprize_;
}
inline void PrizeLevel::set_otherprize(const ::std::string& value) {
  set_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_ = new ::std::string;
  }
  otherprize_->assign(value);
  // @@protoc_insertion_point(field_set:msg.PrizeLevel.OtherPrize)
}
inline void PrizeLevel::set_otherprize(const char* value) {
  set_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_ = new ::std::string;
  }
  otherprize_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.PrizeLevel.OtherPrize)
}
inline void PrizeLevel::set_otherprize(const char* value, size_t size) {
  set_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_ = new ::std::string;
  }
  otherprize_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.PrizeLevel.OtherPrize)
}
inline ::std::string* PrizeLevel::mutable_otherprize() {
  set_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.PrizeLevel.OtherPrize)
  return otherprize_;
}
inline ::std::string* PrizeLevel::release_otherprize() {
  clear_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = otherprize_;
    otherprize_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PrizeLevel::set_allocated_otherprize(::std::string* otherprize) {
  if (otherprize_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete otherprize_;
  }
  if (otherprize) {
    set_has_otherprize();
    otherprize_ = otherprize;
  } else {
    clear_has_otherprize();
    otherprize_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PrizeLevel.OtherPrize)
}

// -------------------------------------------------------------------

// TournamentPrize

// repeated .msg.PrizeLevel Level = 1;
inline int TournamentPrize::level_size() const {
  return level_.size();
}
inline void TournamentPrize::clear_level() {
  level_.Clear();
}
inline const ::msg::PrizeLevel& TournamentPrize::level(int index) const {
  // @@protoc_insertion_point(field_get:msg.TournamentPrize.Level)
  return level_.Get(index);
}
inline ::msg::PrizeLevel* TournamentPrize::mutable_level(int index) {
  // @@protoc_insertion_point(field_mutable:msg.TournamentPrize.Level)
  return level_.Mutable(index);
}
inline ::msg::PrizeLevel* TournamentPrize::add_level() {
  // @@protoc_insertion_point(field_add:msg.TournamentPrize.Level)
  return level_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PrizeLevel >&
TournamentPrize::level() const {
  // @@protoc_insertion_point(field_list:msg.TournamentPrize.Level)
  return level_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::PrizeLevel >*
TournamentPrize::mutable_level() {
  // @@protoc_insertion_point(field_mutable_list:msg.TournamentPrize.Level)
  return &level_;
}

// -------------------------------------------------------------------

// TournamentInfo

// optional string StartTime = 1;
inline bool TournamentInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TournamentInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TournamentInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TournamentInfo::clear_starttime() {
  if (starttime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_->clear();
  }
  clear_has_starttime();
}
inline const ::std::string& TournamentInfo::starttime() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.StartTime)
  return *starttime_;
}
inline void TournamentInfo::set_starttime(const ::std::string& value) {
  set_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.StartTime)
}
inline void TournamentInfo::set_starttime(const char* value) {
  set_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.TournamentInfo.StartTime)
}
inline void TournamentInfo::set_starttime(const char* value, size_t size) {
  set_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.TournamentInfo.StartTime)
}
inline ::std::string* TournamentInfo::mutable_starttime() {
  set_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.TournamentInfo.StartTime)
  return starttime_;
}
inline ::std::string* TournamentInfo::release_starttime() {
  clear_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = starttime_;
    starttime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TournamentInfo::set_allocated_starttime(::std::string* starttime) {
  if (starttime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete starttime_;
  }
  if (starttime) {
    set_has_starttime();
    starttime_ = starttime;
  } else {
    clear_has_starttime();
    starttime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.TournamentInfo.StartTime)
}

// optional .msg.TournamentLevel TournamentLevel = 2;
inline bool TournamentInfo::has_tournamentlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TournamentInfo::set_has_tournamentlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TournamentInfo::clear_has_tournamentlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TournamentInfo::clear_tournamentlevel() {
  if (tournamentlevel_ != NULL) tournamentlevel_->::msg::TournamentLevel::Clear();
  clear_has_tournamentlevel();
}
inline const ::msg::TournamentLevel& TournamentInfo::tournamentlevel() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.TournamentLevel)
  return tournamentlevel_ != NULL ? *tournamentlevel_ : *default_instance_->tournamentlevel_;
}
inline ::msg::TournamentLevel* TournamentInfo::mutable_tournamentlevel() {
  set_has_tournamentlevel();
  if (tournamentlevel_ == NULL) tournamentlevel_ = new ::msg::TournamentLevel;
  // @@protoc_insertion_point(field_mutable:msg.TournamentInfo.TournamentLevel)
  return tournamentlevel_;
}
inline ::msg::TournamentLevel* TournamentInfo::release_tournamentlevel() {
  clear_has_tournamentlevel();
  ::msg::TournamentLevel* temp = tournamentlevel_;
  tournamentlevel_ = NULL;
  return temp;
}
inline void TournamentInfo::set_allocated_tournamentlevel(::msg::TournamentLevel* tournamentlevel) {
  delete tournamentlevel_;
  tournamentlevel_ = tournamentlevel;
  if (tournamentlevel) {
    set_has_tournamentlevel();
  } else {
    clear_has_tournamentlevel();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.TournamentInfo.TournamentLevel)
}

// optional .msg.TournamentPrize TournamentPrize = 3;
inline bool TournamentInfo::has_tournamentprize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TournamentInfo::set_has_tournamentprize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TournamentInfo::clear_has_tournamentprize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TournamentInfo::clear_tournamentprize() {
  if (tournamentprize_ != NULL) tournamentprize_->::msg::TournamentPrize::Clear();
  clear_has_tournamentprize();
}
inline const ::msg::TournamentPrize& TournamentInfo::tournamentprize() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.TournamentPrize)
  return tournamentprize_ != NULL ? *tournamentprize_ : *default_instance_->tournamentprize_;
}
inline ::msg::TournamentPrize* TournamentInfo::mutable_tournamentprize() {
  set_has_tournamentprize();
  if (tournamentprize_ == NULL) tournamentprize_ = new ::msg::TournamentPrize;
  // @@protoc_insertion_point(field_mutable:msg.TournamentInfo.TournamentPrize)
  return tournamentprize_;
}
inline ::msg::TournamentPrize* TournamentInfo::release_tournamentprize() {
  clear_has_tournamentprize();
  ::msg::TournamentPrize* temp = tournamentprize_;
  tournamentprize_ = NULL;
  return temp;
}
inline void TournamentInfo::set_allocated_tournamentprize(::msg::TournamentPrize* tournamentprize) {
  delete tournamentprize_;
  tournamentprize_ = tournamentprize;
  if (tournamentprize) {
    set_has_tournamentprize();
  } else {
    clear_has_tournamentprize();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.TournamentInfo.TournamentPrize)
}

// optional int32 MinPlayerNum = 4;
inline bool TournamentInfo::has_minplayernum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TournamentInfo::set_has_minplayernum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TournamentInfo::clear_has_minplayernum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TournamentInfo::clear_minplayernum() {
  minplayernum_ = 0;
  clear_has_minplayernum();
}
inline ::google_public::protobuf::int32 TournamentInfo::minplayernum() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.MinPlayerNum)
  return minplayernum_;
}
inline void TournamentInfo::set_minplayernum(::google_public::protobuf::int32 value) {
  set_has_minplayernum();
  minplayernum_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.MinPlayerNum)
}

// optional int32 MaxPlayerNum = 5;
inline bool TournamentInfo::has_maxplayernum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TournamentInfo::set_has_maxplayernum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TournamentInfo::clear_has_maxplayernum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TournamentInfo::clear_maxplayernum() {
  maxplayernum_ = 0;
  clear_has_maxplayernum();
}
inline ::google_public::protobuf::int32 TournamentInfo::maxplayernum() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.MaxPlayerNum)
  return maxplayernum_;
}
inline void TournamentInfo::set_maxplayernum(::google_public::protobuf::int32 value) {
  set_has_maxplayernum();
  maxplayernum_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.MaxPlayerNum)
}

// optional int32 PlayerPerTable = 6;
inline bool TournamentInfo::has_playerpertable() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TournamentInfo::set_has_playerpertable() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TournamentInfo::clear_has_playerpertable() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TournamentInfo::clear_playerpertable() {
  playerpertable_ = 0;
  clear_has_playerpertable();
}
inline ::google_public::protobuf::int32 TournamentInfo::playerpertable() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.PlayerPerTable)
  return playerpertable_;
}
inline void TournamentInfo::set_playerpertable(::google_public::protobuf::int32 value) {
  set_has_playerpertable();
  playerpertable_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.PlayerPerTable)
}

// optional int32 Buyin = 7;
inline bool TournamentInfo::has_buyin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TournamentInfo::set_has_buyin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TournamentInfo::clear_has_buyin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TournamentInfo::clear_buyin() {
  buyin_ = 0;
  clear_has_buyin();
}
inline ::google_public::protobuf::int32 TournamentInfo::buyin() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.Buyin)
  return buyin_;
}
inline void TournamentInfo::set_buyin(::google_public::protobuf::int32 value) {
  set_has_buyin();
  buyin_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.Buyin)
}

// optional int32 StartBB = 8;
inline bool TournamentInfo::has_startbb() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TournamentInfo::set_has_startbb() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TournamentInfo::clear_has_startbb() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TournamentInfo::clear_startbb() {
  startbb_ = 0;
  clear_has_startbb();
}
inline ::google_public::protobuf::int32 TournamentInfo::startbb() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.StartBB)
  return startbb_;
}
inline void TournamentInfo::set_startbb(::google_public::protobuf::int32 value) {
  set_has_startbb();
  startbb_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.StartBB)
}

// optional int32 MaxAddonLevel = 9;
inline bool TournamentInfo::has_maxaddonlevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TournamentInfo::set_has_maxaddonlevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TournamentInfo::clear_has_maxaddonlevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TournamentInfo::clear_maxaddonlevel() {
  maxaddonlevel_ = 0;
  clear_has_maxaddonlevel();
}
inline ::google_public::protobuf::int32 TournamentInfo::maxaddonlevel() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.MaxAddonLevel)
  return maxaddonlevel_;
}
inline void TournamentInfo::set_maxaddonlevel(::google_public::protobuf::int32 value) {
  set_has_maxaddonlevel();
  maxaddonlevel_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.MaxAddonLevel)
}

// optional int32 PrizePercent = 10;
inline bool TournamentInfo::has_prizepercent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TournamentInfo::set_has_prizepercent() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TournamentInfo::clear_has_prizepercent() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TournamentInfo::clear_prizepercent() {
  prizepercent_ = 0;
  clear_has_prizepercent();
}
inline ::google_public::protobuf::int32 TournamentInfo::prizepercent() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.PrizePercent)
  return prizepercent_;
}
inline void TournamentInfo::set_prizepercent(::google_public::protobuf::int32 value) {
  set_has_prizepercent();
  prizepercent_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.PrizePercent)
}

// optional int32 ActionTime = 11;
inline bool TournamentInfo::has_actiontime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TournamentInfo::set_has_actiontime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TournamentInfo::clear_has_actiontime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TournamentInfo::clear_actiontime() {
  actiontime_ = 0;
  clear_has_actiontime();
}
inline ::google_public::protobuf::int32 TournamentInfo::actiontime() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.ActionTime)
  return actiontime_;
}
inline void TournamentInfo::set_actiontime(::google_public::protobuf::int32 value) {
  set_has_actiontime();
  actiontime_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.ActionTime)
}

// optional string RoomName = 12;
inline bool TournamentInfo::has_roomname() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TournamentInfo::set_has_roomname() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TournamentInfo::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TournamentInfo::clear_roomname() {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_->clear();
  }
  clear_has_roomname();
}
inline const ::std::string& TournamentInfo::roomname() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.RoomName)
  return *roomname_;
}
inline void TournamentInfo::set_roomname(const ::std::string& value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.RoomName)
}
inline void TournamentInfo::set_roomname(const char* value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.TournamentInfo.RoomName)
}
inline void TournamentInfo::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.TournamentInfo.RoomName)
}
inline ::std::string* TournamentInfo::mutable_roomname() {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.TournamentInfo.RoomName)
  return roomname_;
}
inline ::std::string* TournamentInfo::release_roomname() {
  clear_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomname_;
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TournamentInfo::set_allocated_roomname(::std::string* roomname) {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomname_;
  }
  if (roomname) {
    set_has_roomname();
    roomname_ = roomname;
  } else {
    clear_has_roomname();
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.TournamentInfo.RoomName)
}

// optional string TemplateName = 13;
inline bool TournamentInfo::has_templatename() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TournamentInfo::set_has_templatename() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TournamentInfo::clear_has_templatename() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TournamentInfo::clear_templatename() {
  if (templatename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatename_->clear();
  }
  clear_has_templatename();
}
inline const ::std::string& TournamentInfo::templatename() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.TemplateName)
  return *templatename_;
}
inline void TournamentInfo::set_templatename(const ::std::string& value) {
  set_has_templatename();
  if (templatename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatename_ = new ::std::string;
  }
  templatename_->assign(value);
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.TemplateName)
}
inline void TournamentInfo::set_templatename(const char* value) {
  set_has_templatename();
  if (templatename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatename_ = new ::std::string;
  }
  templatename_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.TournamentInfo.TemplateName)
}
inline void TournamentInfo::set_templatename(const char* value, size_t size) {
  set_has_templatename();
  if (templatename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatename_ = new ::std::string;
  }
  templatename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.TournamentInfo.TemplateName)
}
inline ::std::string* TournamentInfo::mutable_templatename() {
  set_has_templatename();
  if (templatename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.TournamentInfo.TemplateName)
  return templatename_;
}
inline ::std::string* TournamentInfo::release_templatename() {
  clear_has_templatename();
  if (templatename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = templatename_;
    templatename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TournamentInfo::set_allocated_templatename(::std::string* templatename) {
  if (templatename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete templatename_;
  }
  if (templatename) {
    set_has_templatename();
    templatename_ = templatename;
  } else {
    clear_has_templatename();
    templatename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.TournamentInfo.TemplateName)
}

// optional bool IsSitAndGo = 14;
inline bool TournamentInfo::has_issitandgo() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TournamentInfo::set_has_issitandgo() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TournamentInfo::clear_has_issitandgo() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TournamentInfo::clear_issitandgo() {
  issitandgo_ = false;
  clear_has_issitandgo();
}
inline bool TournamentInfo::issitandgo() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.IsSitAndGo)
  return issitandgo_;
}
inline void TournamentInfo::set_issitandgo(bool value) {
  set_has_issitandgo();
  issitandgo_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.IsSitAndGo)
}

// optional int32 BlindTime = 15;
inline bool TournamentInfo::has_blindtime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TournamentInfo::set_has_blindtime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TournamentInfo::clear_has_blindtime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TournamentInfo::clear_blindtime() {
  blindtime_ = 0;
  clear_has_blindtime();
}
inline ::google_public::protobuf::int32 TournamentInfo::blindtime() const {
  // @@protoc_insertion_point(field_get:msg.TournamentInfo.BlindTime)
  return blindtime_;
}
inline void TournamentInfo::set_blindtime(::google_public::protobuf::int32 value) {
  set_has_blindtime();
  blindtime_ = value;
  // @@protoc_insertion_point(field_set:msg.TournamentInfo.BlindTime)
}

// -------------------------------------------------------------------

// RoomProp

// repeated .msg.Property Property = 1;
inline int RoomProp::property_size() const {
  return property_.size();
}
inline void RoomProp::clear_property() {
  property_.Clear();
}
inline const ::msg::Property& RoomProp::property(int index) const {
  // @@protoc_insertion_point(field_get:msg.RoomProp.Property)
  return property_.Get(index);
}
inline ::msg::Property* RoomProp::mutable_property(int index) {
  // @@protoc_insertion_point(field_mutable:msg.RoomProp.Property)
  return property_.Mutable(index);
}
inline ::msg::Property* RoomProp::add_property() {
  // @@protoc_insertion_point(field_add:msg.RoomProp.Property)
  return property_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Property >&
RoomProp::property() const {
  // @@protoc_insertion_point(field_list:msg.RoomProp.Property)
  return property_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::Property >*
RoomProp::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:msg.RoomProp.Property)
  return &property_;
}

// -------------------------------------------------------------------

// Processor_151_GetRoomInfomation

// optional .msg.RoomInfomation RoomInfomation = 1;
inline bool Processor_151_GetRoomInfomation::has_roominfomation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_151_GetRoomInfomation::set_has_roominfomation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_151_GetRoomInfomation::clear_has_roominfomation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_151_GetRoomInfomation::clear_roominfomation() {
  if (roominfomation_ != NULL) roominfomation_->::msg::RoomInfomation::Clear();
  clear_has_roominfomation();
}
inline const ::msg::RoomInfomation& Processor_151_GetRoomInfomation::roominfomation() const {
  // @@protoc_insertion_point(field_get:msg.Processor_151_GetRoomInfomation.RoomInfomation)
  return roominfomation_ != NULL ? *roominfomation_ : *default_instance_->roominfomation_;
}
inline ::msg::RoomInfomation* Processor_151_GetRoomInfomation::mutable_roominfomation() {
  set_has_roominfomation();
  if (roominfomation_ == NULL) roominfomation_ = new ::msg::RoomInfomation;
  // @@protoc_insertion_point(field_mutable:msg.Processor_151_GetRoomInfomation.RoomInfomation)
  return roominfomation_;
}
inline ::msg::RoomInfomation* Processor_151_GetRoomInfomation::release_roominfomation() {
  clear_has_roominfomation();
  ::msg::RoomInfomation* temp = roominfomation_;
  roominfomation_ = NULL;
  return temp;
}
inline void Processor_151_GetRoomInfomation::set_allocated_roominfomation(::msg::RoomInfomation* roominfomation) {
  delete roominfomation_;
  roominfomation_ = roominfomation;
  if (roominfomation) {
    set_has_roominfomation();
  } else {
    clear_has_roominfomation();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_151_GetRoomInfomation.RoomInfomation)
}

// -------------------------------------------------------------------

// Processor_152_CreateRoom

// optional .msg.RoomInfo RoomInfo = 1;
inline bool Processor_152_CreateRoom::has_roominfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_152_CreateRoom::set_has_roominfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_152_CreateRoom::clear_has_roominfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_152_CreateRoom::clear_roominfo() {
  if (roominfo_ != NULL) roominfo_->::msg::RoomInfo::Clear();
  clear_has_roominfo();
}
inline const ::msg::RoomInfo& Processor_152_CreateRoom::roominfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_152_CreateRoom.RoomInfo)
  return roominfo_ != NULL ? *roominfo_ : *default_instance_->roominfo_;
}
inline ::msg::RoomInfo* Processor_152_CreateRoom::mutable_roominfo() {
  set_has_roominfo();
  if (roominfo_ == NULL) roominfo_ = new ::msg::RoomInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_152_CreateRoom.RoomInfo)
  return roominfo_;
}
inline ::msg::RoomInfo* Processor_152_CreateRoom::release_roominfo() {
  clear_has_roominfo();
  ::msg::RoomInfo* temp = roominfo_;
  roominfo_ = NULL;
  return temp;
}
inline void Processor_152_CreateRoom::set_allocated_roominfo(::msg::RoomInfo* roominfo) {
  delete roominfo_;
  roominfo_ = roominfo;
  if (roominfo) {
    set_has_roominfo();
  } else {
    clear_has_roominfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_152_CreateRoom.RoomInfo)
}

// optional .msg.RoomProp RoomProp = 2;
inline bool Processor_152_CreateRoom::has_roomprop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_152_CreateRoom::set_has_roomprop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_152_CreateRoom::clear_has_roomprop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_152_CreateRoom::clear_roomprop() {
  if (roomprop_ != NULL) roomprop_->::msg::RoomProp::Clear();
  clear_has_roomprop();
}
inline const ::msg::RoomProp& Processor_152_CreateRoom::roomprop() const {
  // @@protoc_insertion_point(field_get:msg.Processor_152_CreateRoom.RoomProp)
  return roomprop_ != NULL ? *roomprop_ : *default_instance_->roomprop_;
}
inline ::msg::RoomProp* Processor_152_CreateRoom::mutable_roomprop() {
  set_has_roomprop();
  if (roomprop_ == NULL) roomprop_ = new ::msg::RoomProp;
  // @@protoc_insertion_point(field_mutable:msg.Processor_152_CreateRoom.RoomProp)
  return roomprop_;
}
inline ::msg::RoomProp* Processor_152_CreateRoom::release_roomprop() {
  clear_has_roomprop();
  ::msg::RoomProp* temp = roomprop_;
  roomprop_ = NULL;
  return temp;
}
inline void Processor_152_CreateRoom::set_allocated_roomprop(::msg::RoomProp* roomprop) {
  delete roomprop_;
  roomprop_ = roomprop;
  if (roomprop) {
    set_has_roomprop();
  } else {
    clear_has_roomprop();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_152_CreateRoom.RoomProp)
}

// optional .msg.TournamentInfo TournamentInfo = 3;
inline bool Processor_152_CreateRoom::has_tournamentinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_152_CreateRoom::set_has_tournamentinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_152_CreateRoom::clear_has_tournamentinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_152_CreateRoom::clear_tournamentinfo() {
  if (tournamentinfo_ != NULL) tournamentinfo_->::msg::TournamentInfo::Clear();
  clear_has_tournamentinfo();
}
inline const ::msg::TournamentInfo& Processor_152_CreateRoom::tournamentinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_152_CreateRoom.TournamentInfo)
  return tournamentinfo_ != NULL ? *tournamentinfo_ : *default_instance_->tournamentinfo_;
}
inline ::msg::TournamentInfo* Processor_152_CreateRoom::mutable_tournamentinfo() {
  set_has_tournamentinfo();
  if (tournamentinfo_ == NULL) tournamentinfo_ = new ::msg::TournamentInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_152_CreateRoom.TournamentInfo)
  return tournamentinfo_;
}
inline ::msg::TournamentInfo* Processor_152_CreateRoom::release_tournamentinfo() {
  clear_has_tournamentinfo();
  ::msg::TournamentInfo* temp = tournamentinfo_;
  tournamentinfo_ = NULL;
  return temp;
}
inline void Processor_152_CreateRoom::set_allocated_tournamentinfo(::msg::TournamentInfo* tournamentinfo) {
  delete tournamentinfo_;
  tournamentinfo_ = tournamentinfo;
  if (tournamentinfo) {
    set_has_tournamentinfo();
  } else {
    clear_has_tournamentinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_152_CreateRoom.TournamentInfo)
}

// -------------------------------------------------------------------

// Processor_152_CreateRoom_down

// optional int32 RoomID = 1;
inline bool Processor_152_CreateRoom_down::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_152_CreateRoom_down::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_152_CreateRoom_down::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_152_CreateRoom_down::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_152_CreateRoom_down::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_152_CreateRoom_down.RoomID)
  return roomid_;
}
inline void Processor_152_CreateRoom_down::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_152_CreateRoom_down.RoomID)
}

// optional .msg.Response response = 2;
inline bool Processor_152_CreateRoom_down::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_152_CreateRoom_down::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_152_CreateRoom_down::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_152_CreateRoom_down::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_152_CreateRoom_down::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_152_CreateRoom_down.response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_152_CreateRoom_down::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_152_CreateRoom_down.response)
  return response_;
}
inline ::msg::Response* Processor_152_CreateRoom_down::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_152_CreateRoom_down::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_152_CreateRoom_down.response)
}

// -------------------------------------------------------------------

// Processor_154_CancelTournament

// optional int32 RoomID = 1;
inline bool Processor_154_CancelTournament::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_154_CancelTournament::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_154_CancelTournament::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_154_CancelTournament::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_154_CancelTournament::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_154_CancelTournament.RoomID)
  return roomid_;
}
inline void Processor_154_CancelTournament::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_154_CancelTournament.RoomID)
}

// -------------------------------------------------------------------

// Processor_160_SendChatMessage

// optional .msg.ChatMessage ChatMessage = 1;
inline bool Processor_160_SendChatMessage::has_chatmessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_160_SendChatMessage::set_has_chatmessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_160_SendChatMessage::clear_has_chatmessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_160_SendChatMessage::clear_chatmessage() {
  if (chatmessage_ != NULL) chatmessage_->::msg::ChatMessage::Clear();
  clear_has_chatmessage();
}
inline const ::msg::ChatMessage& Processor_160_SendChatMessage::chatmessage() const {
  // @@protoc_insertion_point(field_get:msg.Processor_160_SendChatMessage.ChatMessage)
  return chatmessage_ != NULL ? *chatmessage_ : *default_instance_->chatmessage_;
}
inline ::msg::ChatMessage* Processor_160_SendChatMessage::mutable_chatmessage() {
  set_has_chatmessage();
  if (chatmessage_ == NULL) chatmessage_ = new ::msg::ChatMessage;
  // @@protoc_insertion_point(field_mutable:msg.Processor_160_SendChatMessage.ChatMessage)
  return chatmessage_;
}
inline ::msg::ChatMessage* Processor_160_SendChatMessage::release_chatmessage() {
  clear_has_chatmessage();
  ::msg::ChatMessage* temp = chatmessage_;
  chatmessage_ = NULL;
  return temp;
}
inline void Processor_160_SendChatMessage::set_allocated_chatmessage(::msg::ChatMessage* chatmessage) {
  delete chatmessage_;
  chatmessage_ = chatmessage;
  if (chatmessage) {
    set_has_chatmessage();
  } else {
    clear_has_chatmessage();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_160_SendChatMessage.ChatMessage)
}

// -------------------------------------------------------------------

// Processor_160_SendChatMessage_Down

// optional .msg.Response Response = 1;
inline bool Processor_160_SendChatMessage_Down::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_160_SendChatMessage_Down::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_160_SendChatMessage_Down::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_160_SendChatMessage_Down::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_160_SendChatMessage_Down::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_160_SendChatMessage_Down.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_160_SendChatMessage_Down::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_160_SendChatMessage_Down.Response)
  return response_;
}
inline ::msg::Response* Processor_160_SendChatMessage_Down::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_160_SendChatMessage_Down::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_160_SendChatMessage_Down.Response)
}

// optional string SubmitTime = 2;
inline bool Processor_160_SendChatMessage_Down::has_submittime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_160_SendChatMessage_Down::set_has_submittime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_160_SendChatMessage_Down::clear_has_submittime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_160_SendChatMessage_Down::clear_submittime() {
  if (submittime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    submittime_->clear();
  }
  clear_has_submittime();
}
inline const ::std::string& Processor_160_SendChatMessage_Down::submittime() const {
  // @@protoc_insertion_point(field_get:msg.Processor_160_SendChatMessage_Down.SubmitTime)
  return *submittime_;
}
inline void Processor_160_SendChatMessage_Down::set_submittime(const ::std::string& value) {
  set_has_submittime();
  if (submittime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    submittime_ = new ::std::string;
  }
  submittime_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_160_SendChatMessage_Down.SubmitTime)
}
inline void Processor_160_SendChatMessage_Down::set_submittime(const char* value) {
  set_has_submittime();
  if (submittime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    submittime_ = new ::std::string;
  }
  submittime_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_160_SendChatMessage_Down.SubmitTime)
}
inline void Processor_160_SendChatMessage_Down::set_submittime(const char* value, size_t size) {
  set_has_submittime();
  if (submittime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    submittime_ = new ::std::string;
  }
  submittime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_160_SendChatMessage_Down.SubmitTime)
}
inline ::std::string* Processor_160_SendChatMessage_Down::mutable_submittime() {
  set_has_submittime();
  if (submittime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    submittime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_160_SendChatMessage_Down.SubmitTime)
  return submittime_;
}
inline ::std::string* Processor_160_SendChatMessage_Down::release_submittime() {
  clear_has_submittime();
  if (submittime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = submittime_;
    submittime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_160_SendChatMessage_Down::set_allocated_submittime(::std::string* submittime) {
  if (submittime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete submittime_;
  }
  if (submittime) {
    set_has_submittime();
    submittime_ = submittime;
  } else {
    clear_has_submittime();
    submittime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_160_SendChatMessage_Down.SubmitTime)
}

// -------------------------------------------------------------------

// Processor_161_ReceiveChatMessage

// repeated .msg.ChatMessage ChatMessage = 1;
inline int Processor_161_ReceiveChatMessage::chatmessage_size() const {
  return chatmessage_.size();
}
inline void Processor_161_ReceiveChatMessage::clear_chatmessage() {
  chatmessage_.Clear();
}
inline const ::msg::ChatMessage& Processor_161_ReceiveChatMessage::chatmessage(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_161_ReceiveChatMessage.ChatMessage)
  return chatmessage_.Get(index);
}
inline ::msg::ChatMessage* Processor_161_ReceiveChatMessage::mutable_chatmessage(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_161_ReceiveChatMessage.ChatMessage)
  return chatmessage_.Mutable(index);
}
inline ::msg::ChatMessage* Processor_161_ReceiveChatMessage::add_chatmessage() {
  // @@protoc_insertion_point(field_add:msg.Processor_161_ReceiveChatMessage.ChatMessage)
  return chatmessage_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage >&
Processor_161_ReceiveChatMessage::chatmessage() const {
  // @@protoc_insertion_point(field_list:msg.Processor_161_ReceiveChatMessage.ChatMessage)
  return chatmessage_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage >*
Processor_161_ReceiveChatMessage::mutable_chatmessage() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_161_ReceiveChatMessage.ChatMessage)
  return &chatmessage_;
}

// -------------------------------------------------------------------

// Processor_161_ReceiveChatMessage_UP

// optional int32 LastMsgID = 1;
inline bool Processor_161_ReceiveChatMessage_UP::has_lastmsgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_161_ReceiveChatMessage_UP::set_has_lastmsgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_161_ReceiveChatMessage_UP::clear_has_lastmsgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_161_ReceiveChatMessage_UP::clear_lastmsgid() {
  lastmsgid_ = 0;
  clear_has_lastmsgid();
}
inline ::google_public::protobuf::int32 Processor_161_ReceiveChatMessage_UP::lastmsgid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_161_ReceiveChatMessage_UP.LastMsgID)
  return lastmsgid_;
}
inline void Processor_161_ReceiveChatMessage_UP::set_lastmsgid(::google_public::protobuf::int32 value) {
  set_has_lastmsgid();
  lastmsgid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_161_ReceiveChatMessage_UP.LastMsgID)
}

// -------------------------------------------------------------------

// Processor_170_GetHistoryScore_Up

// optional .msg.RoomType RoomType = 1;
inline bool Processor_170_GetHistoryScore_Up::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_170_GetHistoryScore_Up::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_170_GetHistoryScore_Up::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_170_GetHistoryScore_Up::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::msg::RoomType Processor_170_GetHistoryScore_Up::roomtype() const {
  // @@protoc_insertion_point(field_get:msg.Processor_170_GetHistoryScore_Up.RoomType)
  return static_cast< ::msg::RoomType >(roomtype_);
}
inline void Processor_170_GetHistoryScore_Up::set_roomtype(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_170_GetHistoryScore_Up.RoomType)
}

// optional bool IsTournament = 2;
inline bool Processor_170_GetHistoryScore_Up::has_istournament() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_170_GetHistoryScore_Up::set_has_istournament() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_170_GetHistoryScore_Up::clear_has_istournament() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_170_GetHistoryScore_Up::clear_istournament() {
  istournament_ = false;
  clear_has_istournament();
}
inline bool Processor_170_GetHistoryScore_Up::istournament() const {
  // @@protoc_insertion_point(field_get:msg.Processor_170_GetHistoryScore_Up.IsTournament)
  return istournament_;
}
inline void Processor_170_GetHistoryScore_Up::set_istournament(bool value) {
  set_has_istournament();
  istournament_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_170_GetHistoryScore_Up.IsTournament)
}

// optional string StartTime = 3;
inline bool Processor_170_GetHistoryScore_Up::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_170_GetHistoryScore_Up::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_170_GetHistoryScore_Up::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_170_GetHistoryScore_Up::clear_starttime() {
  if (starttime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_->clear();
  }
  clear_has_starttime();
}
inline const ::std::string& Processor_170_GetHistoryScore_Up::starttime() const {
  // @@protoc_insertion_point(field_get:msg.Processor_170_GetHistoryScore_Up.StartTime)
  return *starttime_;
}
inline void Processor_170_GetHistoryScore_Up::set_starttime(const ::std::string& value) {
  set_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_170_GetHistoryScore_Up.StartTime)
}
inline void Processor_170_GetHistoryScore_Up::set_starttime(const char* value) {
  set_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_170_GetHistoryScore_Up.StartTime)
}
inline void Processor_170_GetHistoryScore_Up::set_starttime(const char* value, size_t size) {
  set_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_170_GetHistoryScore_Up.StartTime)
}
inline ::std::string* Processor_170_GetHistoryScore_Up::mutable_starttime() {
  set_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_170_GetHistoryScore_Up.StartTime)
  return starttime_;
}
inline ::std::string* Processor_170_GetHistoryScore_Up::release_starttime() {
  clear_has_starttime();
  if (starttime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = starttime_;
    starttime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_170_GetHistoryScore_Up::set_allocated_starttime(::std::string* starttime) {
  if (starttime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete starttime_;
  }
  if (starttime) {
    set_has_starttime();
    starttime_ = starttime;
  } else {
    clear_has_starttime();
    starttime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_170_GetHistoryScore_Up.StartTime)
}

// optional string EndTime = 4;
inline bool Processor_170_GetHistoryScore_Up::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_170_GetHistoryScore_Up::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_170_GetHistoryScore_Up::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_170_GetHistoryScore_Up::clear_endtime() {
  if (endtime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_->clear();
  }
  clear_has_endtime();
}
inline const ::std::string& Processor_170_GetHistoryScore_Up::endtime() const {
  // @@protoc_insertion_point(field_get:msg.Processor_170_GetHistoryScore_Up.EndTime)
  return *endtime_;
}
inline void Processor_170_GetHistoryScore_Up::set_endtime(const ::std::string& value) {
  set_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_170_GetHistoryScore_Up.EndTime)
}
inline void Processor_170_GetHistoryScore_Up::set_endtime(const char* value) {
  set_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_170_GetHistoryScore_Up.EndTime)
}
inline void Processor_170_GetHistoryScore_Up::set_endtime(const char* value, size_t size) {
  set_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_170_GetHistoryScore_Up.EndTime)
}
inline ::std::string* Processor_170_GetHistoryScore_Up::mutable_endtime() {
  set_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_170_GetHistoryScore_Up.EndTime)
  return endtime_;
}
inline ::std::string* Processor_170_GetHistoryScore_Up::release_endtime() {
  clear_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endtime_;
    endtime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_170_GetHistoryScore_Up::set_allocated_endtime(::std::string* endtime) {
  if (endtime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endtime_;
  }
  if (endtime) {
    set_has_endtime();
    endtime_ = endtime;
  } else {
    clear_has_endtime();
    endtime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_170_GetHistoryScore_Up.EndTime)
}

// optional int32 groupid = 5;
inline bool Processor_170_GetHistoryScore_Up::has_groupid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_170_GetHistoryScore_Up::set_has_groupid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_170_GetHistoryScore_Up::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_170_GetHistoryScore_Up::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_170_GetHistoryScore_Up::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_170_GetHistoryScore_Up.groupid)
  return groupid_;
}
inline void Processor_170_GetHistoryScore_Up::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_170_GetHistoryScore_Up.groupid)
}

// -------------------------------------------------------------------

// HistoryScore

// optional int32 RoomID = 1;
inline bool HistoryScore::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryScore::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryScore::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryScore::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 HistoryScore::roomid() const {
  // @@protoc_insertion_point(field_get:msg.HistoryScore.RoomID)
  return roomid_;
}
inline void HistoryScore::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.HistoryScore.RoomID)
}

// optional string EndTime = 2;
inline bool HistoryScore::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryScore::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryScore::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryScore::clear_endtime() {
  if (endtime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_->clear();
  }
  clear_has_endtime();
}
inline const ::std::string& HistoryScore::endtime() const {
  // @@protoc_insertion_point(field_get:msg.HistoryScore.EndTime)
  return *endtime_;
}
inline void HistoryScore::set_endtime(const ::std::string& value) {
  set_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set:msg.HistoryScore.EndTime)
}
inline void HistoryScore::set_endtime(const char* value) {
  set_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.HistoryScore.EndTime)
}
inline void HistoryScore::set_endtime(const char* value, size_t size) {
  set_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.HistoryScore.EndTime)
}
inline ::std::string* HistoryScore::mutable_endtime() {
  set_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.HistoryScore.EndTime)
  return endtime_;
}
inline ::std::string* HistoryScore::release_endtime() {
  clear_has_endtime();
  if (endtime_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endtime_;
    endtime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HistoryScore::set_allocated_endtime(::std::string* endtime) {
  if (endtime_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endtime_;
  }
  if (endtime) {
    set_has_endtime();
    endtime_ = endtime;
  } else {
    clear_has_endtime();
    endtime_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.HistoryScore.EndTime)
}

// optional string RoomName = 3;
inline bool HistoryScore::has_roomname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryScore::set_has_roomname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryScore::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryScore::clear_roomname() {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_->clear();
  }
  clear_has_roomname();
}
inline const ::std::string& HistoryScore::roomname() const {
  // @@protoc_insertion_point(field_get:msg.HistoryScore.RoomName)
  return *roomname_;
}
inline void HistoryScore::set_roomname(const ::std::string& value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.HistoryScore.RoomName)
}
inline void HistoryScore::set_roomname(const char* value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.HistoryScore.RoomName)
}
inline void HistoryScore::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.HistoryScore.RoomName)
}
inline ::std::string* HistoryScore::mutable_roomname() {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.HistoryScore.RoomName)
  return roomname_;
}
inline ::std::string* HistoryScore::release_roomname() {
  clear_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomname_;
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HistoryScore::set_allocated_roomname(::std::string* roomname) {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomname_;
  }
  if (roomname) {
    set_has_roomname();
    roomname_ = roomname;
  } else {
    clear_has_roomname();
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.HistoryScore.RoomName)
}

// optional int32 Score = 4;
inline bool HistoryScore::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryScore::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryScore::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google_public::protobuf::int32 HistoryScore::score() const {
  // @@protoc_insertion_point(field_get:msg.HistoryScore.Score)
  return score_;
}
inline void HistoryScore::set_score(::google_public::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg.HistoryScore.Score)
}

// optional int64 PlayTime = 5;
inline bool HistoryScore::has_playtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HistoryScore::set_has_playtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HistoryScore::clear_has_playtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HistoryScore::clear_playtime() {
  playtime_ = GOOGLE_LONGLONG(0);
  clear_has_playtime();
}
inline ::google_public::protobuf::int64 HistoryScore::playtime() const {
  // @@protoc_insertion_point(field_get:msg.HistoryScore.PlayTime)
  return playtime_;
}
inline void HistoryScore::set_playtime(::google_public::protobuf::int64 value) {
  set_has_playtime();
  playtime_ = value;
  // @@protoc_insertion_point(field_set:msg.HistoryScore.PlayTime)
}

// optional int32 PlayHands = 6;
inline bool HistoryScore::has_playhands() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HistoryScore::set_has_playhands() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HistoryScore::clear_has_playhands() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HistoryScore::clear_playhands() {
  playhands_ = 0;
  clear_has_playhands();
}
inline ::google_public::protobuf::int32 HistoryScore::playhands() const {
  // @@protoc_insertion_point(field_get:msg.HistoryScore.PlayHands)
  return playhands_;
}
inline void HistoryScore::set_playhands(::google_public::protobuf::int32 value) {
  set_has_playhands();
  playhands_ = value;
  // @@protoc_insertion_point(field_set:msg.HistoryScore.PlayHands)
}

// optional string GroupName = 7;
inline bool HistoryScore::has_groupname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HistoryScore::set_has_groupname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HistoryScore::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HistoryScore::clear_groupname() {
  if (groupname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_->clear();
  }
  clear_has_groupname();
}
inline const ::std::string& HistoryScore::groupname() const {
  // @@protoc_insertion_point(field_get:msg.HistoryScore.GroupName)
  return *groupname_;
}
inline void HistoryScore::set_groupname(const ::std::string& value) {
  set_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.HistoryScore.GroupName)
}
inline void HistoryScore::set_groupname(const char* value) {
  set_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.HistoryScore.GroupName)
}
inline void HistoryScore::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.HistoryScore.GroupName)
}
inline ::std::string* HistoryScore::mutable_groupname() {
  set_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.HistoryScore.GroupName)
  return groupname_;
}
inline ::std::string* HistoryScore::release_groupname() {
  clear_has_groupname();
  if (groupname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = groupname_;
    groupname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HistoryScore::set_allocated_groupname(::std::string* groupname) {
  if (groupname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupname_;
  }
  if (groupname) {
    set_has_groupname();
    groupname_ = groupname;
  } else {
    clear_has_groupname();
    groupname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.HistoryScore.GroupName)
}

// repeated string Label = 8;
inline int HistoryScore::label_size() const {
  return label_.size();
}
inline void HistoryScore::clear_label() {
  label_.Clear();
}
inline const ::std::string& HistoryScore::label(int index) const {
  // @@protoc_insertion_point(field_get:msg.HistoryScore.Label)
  return label_.Get(index);
}
inline ::std::string* HistoryScore::mutable_label(int index) {
  // @@protoc_insertion_point(field_mutable:msg.HistoryScore.Label)
  return label_.Mutable(index);
}
inline void HistoryScore::set_label(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:msg.HistoryScore.Label)
  label_.Mutable(index)->assign(value);
}
inline void HistoryScore::set_label(int index, const char* value) {
  label_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.HistoryScore.Label)
}
inline void HistoryScore::set_label(int index, const char* value, size_t size) {
  label_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.HistoryScore.Label)
}
inline ::std::string* HistoryScore::add_label() {
  return label_.Add();
}
inline void HistoryScore::add_label(const ::std::string& value) {
  label_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:msg.HistoryScore.Label)
}
inline void HistoryScore::add_label(const char* value) {
  label_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:msg.HistoryScore.Label)
}
inline void HistoryScore::add_label(const char* value, size_t size) {
  label_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:msg.HistoryScore.Label)
}
inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>&
HistoryScore::label() const {
  // @@protoc_insertion_point(field_list:msg.HistoryScore.Label)
  return label_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::std::string>*
HistoryScore::mutable_label() {
  // @@protoc_insertion_point(field_mutable_list:msg.HistoryScore.Label)
  return &label_;
}

// -------------------------------------------------------------------

// Processor_170_GetHistoryScore_Down

// repeated .msg.HistoryScore Score = 1;
inline int Processor_170_GetHistoryScore_Down::score_size() const {
  return score_.size();
}
inline void Processor_170_GetHistoryScore_Down::clear_score() {
  score_.Clear();
}
inline const ::msg::HistoryScore& Processor_170_GetHistoryScore_Down::score(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_170_GetHistoryScore_Down.Score)
  return score_.Get(index);
}
inline ::msg::HistoryScore* Processor_170_GetHistoryScore_Down::mutable_score(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_170_GetHistoryScore_Down.Score)
  return score_.Mutable(index);
}
inline ::msg::HistoryScore* Processor_170_GetHistoryScore_Down::add_score() {
  // @@protoc_insertion_point(field_add:msg.Processor_170_GetHistoryScore_Down.Score)
  return score_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::HistoryScore >&
Processor_170_GetHistoryScore_Down::score() const {
  // @@protoc_insertion_point(field_list:msg.Processor_170_GetHistoryScore_Down.Score)
  return score_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::HistoryScore >*
Processor_170_GetHistoryScore_Down::mutable_score() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_170_GetHistoryScore_Down.Score)
  return &score_;
}

// -------------------------------------------------------------------

// Processor_171_GetGroupUserRank_UP

// optional int32 GroupId = 1;
inline bool Processor_171_GetGroupUserRank_UP::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_171_GetGroupUserRank_UP::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_171_GetGroupUserRank_UP::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_171_GetGroupUserRank_UP::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 Processor_171_GetGroupUserRank_UP::groupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_171_GetGroupUserRank_UP.GroupId)
  return groupid_;
}
inline void Processor_171_GetGroupUserRank_UP::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_171_GetGroupUserRank_UP.GroupId)
}

// optional .msg.RoomType RoomType = 2;
inline bool Processor_171_GetGroupUserRank_UP::has_roomtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_171_GetGroupUserRank_UP::set_has_roomtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_171_GetGroupUserRank_UP::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_171_GetGroupUserRank_UP::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::msg::RoomType Processor_171_GetGroupUserRank_UP::roomtype() const {
  // @@protoc_insertion_point(field_get:msg.Processor_171_GetGroupUserRank_UP.RoomType)
  return static_cast< ::msg::RoomType >(roomtype_);
}
inline void Processor_171_GetGroupUserRank_UP::set_roomtype(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_171_GetGroupUserRank_UP.RoomType)
}

// optional bool IsTournament = 3;
inline bool Processor_171_GetGroupUserRank_UP::has_istournament() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_171_GetGroupUserRank_UP::set_has_istournament() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_171_GetGroupUserRank_UP::clear_has_istournament() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_171_GetGroupUserRank_UP::clear_istournament() {
  istournament_ = false;
  clear_has_istournament();
}
inline bool Processor_171_GetGroupUserRank_UP::istournament() const {
  // @@protoc_insertion_point(field_get:msg.Processor_171_GetGroupUserRank_UP.IsTournament)
  return istournament_;
}
inline void Processor_171_GetGroupUserRank_UP::set_istournament(bool value) {
  set_has_istournament();
  istournament_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_171_GetGroupUserRank_UP.IsTournament)
}

// -------------------------------------------------------------------

// Processor_171_GetGroupUserRank_DOWN

// optional .msg.GroupInfo GroupInfo = 1;
inline bool Processor_171_GetGroupUserRank_DOWN::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_171_GetGroupUserRank_DOWN::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_171_GetGroupUserRank_DOWN::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_171_GetGroupUserRank_DOWN::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::msg::GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::msg::GroupInfo& Processor_171_GetGroupUserRank_DOWN::groupinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_171_GetGroupUserRank_DOWN.GroupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::msg::GroupInfo* Processor_171_GetGroupUserRank_DOWN::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) groupinfo_ = new ::msg::GroupInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_171_GetGroupUserRank_DOWN.GroupInfo)
  return groupinfo_;
}
inline ::msg::GroupInfo* Processor_171_GetGroupUserRank_DOWN::release_groupinfo() {
  clear_has_groupinfo();
  ::msg::GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void Processor_171_GetGroupUserRank_DOWN::set_allocated_groupinfo(::msg::GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_171_GetGroupUserRank_DOWN.GroupInfo)
}

// optional .msg.RoomType RoomType = 2;
inline bool Processor_171_GetGroupUserRank_DOWN::has_roomtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_171_GetGroupUserRank_DOWN::set_has_roomtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_171_GetGroupUserRank_DOWN::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_171_GetGroupUserRank_DOWN::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::msg::RoomType Processor_171_GetGroupUserRank_DOWN::roomtype() const {
  // @@protoc_insertion_point(field_get:msg.Processor_171_GetGroupUserRank_DOWN.RoomType)
  return static_cast< ::msg::RoomType >(roomtype_);
}
inline void Processor_171_GetGroupUserRank_DOWN::set_roomtype(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_171_GetGroupUserRank_DOWN.RoomType)
}

// optional bool IsTournament = 3;
inline bool Processor_171_GetGroupUserRank_DOWN::has_istournament() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_171_GetGroupUserRank_DOWN::set_has_istournament() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_171_GetGroupUserRank_DOWN::clear_has_istournament() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_171_GetGroupUserRank_DOWN::clear_istournament() {
  istournament_ = false;
  clear_has_istournament();
}
inline bool Processor_171_GetGroupUserRank_DOWN::istournament() const {
  // @@protoc_insertion_point(field_get:msg.Processor_171_GetGroupUserRank_DOWN.IsTournament)
  return istournament_;
}
inline void Processor_171_GetGroupUserRank_DOWN::set_istournament(bool value) {
  set_has_istournament();
  istournament_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_171_GetGroupUserRank_DOWN.IsTournament)
}

// optional .msg.PlayerScores PlayerScores = 4;
inline bool Processor_171_GetGroupUserRank_DOWN::has_playerscores() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_171_GetGroupUserRank_DOWN::set_has_playerscores() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_171_GetGroupUserRank_DOWN::clear_has_playerscores() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_171_GetGroupUserRank_DOWN::clear_playerscores() {
  if (playerscores_ != NULL) playerscores_->::msg::PlayerScores::Clear();
  clear_has_playerscores();
}
inline const ::msg::PlayerScores& Processor_171_GetGroupUserRank_DOWN::playerscores() const {
  // @@protoc_insertion_point(field_get:msg.Processor_171_GetGroupUserRank_DOWN.PlayerScores)
  return playerscores_ != NULL ? *playerscores_ : *default_instance_->playerscores_;
}
inline ::msg::PlayerScores* Processor_171_GetGroupUserRank_DOWN::mutable_playerscores() {
  set_has_playerscores();
  if (playerscores_ == NULL) playerscores_ = new ::msg::PlayerScores;
  // @@protoc_insertion_point(field_mutable:msg.Processor_171_GetGroupUserRank_DOWN.PlayerScores)
  return playerscores_;
}
inline ::msg::PlayerScores* Processor_171_GetGroupUserRank_DOWN::release_playerscores() {
  clear_has_playerscores();
  ::msg::PlayerScores* temp = playerscores_;
  playerscores_ = NULL;
  return temp;
}
inline void Processor_171_GetGroupUserRank_DOWN::set_allocated_playerscores(::msg::PlayerScores* playerscores) {
  delete playerscores_;
  playerscores_ = playerscores;
  if (playerscores) {
    set_has_playerscores();
  } else {
    clear_has_playerscores();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_171_GetGroupUserRank_DOWN.PlayerScores)
}

// -------------------------------------------------------------------

// Processor_181_JoinTournament

// optional int32 RoomID = 1;
inline bool Processor_181_JoinTournament::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_181_JoinTournament::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_181_JoinTournament::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_181_JoinTournament::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_181_JoinTournament::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_181_JoinTournament.RoomID)
  return roomid_;
}
inline void Processor_181_JoinTournament::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_181_JoinTournament.RoomID)
}

// optional bool IsJoin = 2;
inline bool Processor_181_JoinTournament::has_isjoin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_181_JoinTournament::set_has_isjoin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_181_JoinTournament::clear_has_isjoin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_181_JoinTournament::clear_isjoin() {
  isjoin_ = false;
  clear_has_isjoin();
}
inline bool Processor_181_JoinTournament::isjoin() const {
  // @@protoc_insertion_point(field_get:msg.Processor_181_JoinTournament.IsJoin)
  return isjoin_;
}
inline void Processor_181_JoinTournament::set_isjoin(bool value) {
  set_has_isjoin();
  isjoin_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_181_JoinTournament.IsJoin)
}

// -------------------------------------------------------------------

// Processor_182_TournamentStart

// optional int32 RoomID = 1;
inline bool Processor_182_TournamentStart::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_182_TournamentStart::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_182_TournamentStart::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_182_TournamentStart::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_182_TournamentStart::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_182_TournamentStart.RoomID)
  return roomid_;
}
inline void Processor_182_TournamentStart::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_182_TournamentStart.RoomID)
}

// -------------------------------------------------------------------

// Processor_190_ReceiveMessage

// optional string Message = 1;
inline bool Processor_190_ReceiveMessage::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_190_ReceiveMessage::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_190_ReceiveMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_190_ReceiveMessage::clear_message() {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& Processor_190_ReceiveMessage::message() const {
  // @@protoc_insertion_point(field_get:msg.Processor_190_ReceiveMessage.Message)
  return *message_;
}
inline void Processor_190_ReceiveMessage::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_190_ReceiveMessage.Message)
}
inline void Processor_190_ReceiveMessage::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_190_ReceiveMessage.Message)
}
inline void Processor_190_ReceiveMessage::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_190_ReceiveMessage.Message)
}
inline ::std::string* Processor_190_ReceiveMessage::mutable_message() {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_190_ReceiveMessage.Message)
  return message_;
}
inline ::std::string* Processor_190_ReceiveMessage::release_message() {
  clear_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_190_ReceiveMessage::set_allocated_message(::std::string* message) {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_190_ReceiveMessage.Message)
}

// optional int32 id = 2;
inline bool Processor_190_ReceiveMessage::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_190_ReceiveMessage::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_190_ReceiveMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_190_ReceiveMessage::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google_public::protobuf::int32 Processor_190_ReceiveMessage::id() const {
  // @@protoc_insertion_point(field_get:msg.Processor_190_ReceiveMessage.id)
  return id_;
}
inline void Processor_190_ReceiveMessage::set_id(::google_public::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_190_ReceiveMessage.id)
}

// -------------------------------------------------------------------

// Processor_190_ReceiveMessage_UP

// optional bool choice = 1;
inline bool Processor_190_ReceiveMessage_UP::has_choice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_190_ReceiveMessage_UP::set_has_choice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_190_ReceiveMessage_UP::clear_has_choice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_190_ReceiveMessage_UP::clear_choice() {
  choice_ = false;
  clear_has_choice();
}
inline bool Processor_190_ReceiveMessage_UP::choice() const {
  // @@protoc_insertion_point(field_get:msg.Processor_190_ReceiveMessage_UP.choice)
  return choice_;
}
inline void Processor_190_ReceiveMessage_UP::set_choice(bool value) {
  set_has_choice();
  choice_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_190_ReceiveMessage_UP.choice)
}

// optional int32 id = 2;
inline bool Processor_190_ReceiveMessage_UP::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_190_ReceiveMessage_UP::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_190_ReceiveMessage_UP::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_190_ReceiveMessage_UP::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google_public::protobuf::int32 Processor_190_ReceiveMessage_UP::id() const {
  // @@protoc_insertion_point(field_get:msg.Processor_190_ReceiveMessage_UP.id)
  return id_;
}
inline void Processor_190_ReceiveMessage_UP::set_id(::google_public::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_190_ReceiveMessage_UP.id)
}

// -------------------------------------------------------------------

// Processor_191_NotifyChange

// optional bool RoomChange = 1;
inline bool Processor_191_NotifyChange::has_roomchange() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_191_NotifyChange::set_has_roomchange() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_191_NotifyChange::clear_has_roomchange() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_191_NotifyChange::clear_roomchange() {
  roomchange_ = false;
  clear_has_roomchange();
}
inline bool Processor_191_NotifyChange::roomchange() const {
  // @@protoc_insertion_point(field_get:msg.Processor_191_NotifyChange.RoomChange)
  return roomchange_;
}
inline void Processor_191_NotifyChange::set_roomchange(bool value) {
  set_has_roomchange();
  roomchange_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_191_NotifyChange.RoomChange)
}

// optional bool FriendChange = 2;
inline bool Processor_191_NotifyChange::has_friendchange() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_191_NotifyChange::set_has_friendchange() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_191_NotifyChange::clear_has_friendchange() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_191_NotifyChange::clear_friendchange() {
  friendchange_ = false;
  clear_has_friendchange();
}
inline bool Processor_191_NotifyChange::friendchange() const {
  // @@protoc_insertion_point(field_get:msg.Processor_191_NotifyChange.FriendChange)
  return friendchange_;
}
inline void Processor_191_NotifyChange::set_friendchange(bool value) {
  set_has_friendchange();
  friendchange_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_191_NotifyChange.FriendChange)
}

// optional bool GroupChange = 3;
inline bool Processor_191_NotifyChange::has_groupchange() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_191_NotifyChange::set_has_groupchange() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_191_NotifyChange::clear_has_groupchange() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_191_NotifyChange::clear_groupchange() {
  groupchange_ = false;
  clear_has_groupchange();
}
inline bool Processor_191_NotifyChange::groupchange() const {
  // @@protoc_insertion_point(field_get:msg.Processor_191_NotifyChange.GroupChange)
  return groupchange_;
}
inline void Processor_191_NotifyChange::set_groupchange(bool value) {
  set_has_groupchange();
  groupchange_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_191_NotifyChange.GroupChange)
}

// -------------------------------------------------------------------

// Moment

// optional .msg.UserDetailInfo UserInfo = 1;
inline bool Moment::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Moment::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Moment::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Moment::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userinfo();
}
inline const ::msg::UserDetailInfo& Moment::userinfo() const {
  // @@protoc_insertion_point(field_get:msg.Moment.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::msg::UserDetailInfo* Moment::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.Moment.UserInfo)
  return userinfo_;
}
inline ::msg::UserDetailInfo* Moment::release_userinfo() {
  clear_has_userinfo();
  ::msg::UserDetailInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void Moment::set_allocated_userinfo(::msg::UserDetailInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Moment.UserInfo)
}

// optional int32 MomentId = 2;
inline bool Moment::has_momentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Moment::set_has_momentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Moment::clear_has_momentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Moment::clear_momentid() {
  momentid_ = 0;
  clear_has_momentid();
}
inline ::google_public::protobuf::int32 Moment::momentid() const {
  // @@protoc_insertion_point(field_get:msg.Moment.MomentId)
  return momentid_;
}
inline void Moment::set_momentid(::google_public::protobuf::int32 value) {
  set_has_momentid();
  momentid_ = value;
  // @@protoc_insertion_point(field_set:msg.Moment.MomentId)
}

// optional .msg.MomentInfo MomentInfo = 3;
inline bool Moment::has_momentinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Moment::set_has_momentinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Moment::clear_has_momentinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Moment::clear_momentinfo() {
  if (momentinfo_ != NULL) momentinfo_->::msg::MomentInfo::Clear();
  clear_has_momentinfo();
}
inline const ::msg::MomentInfo& Moment::momentinfo() const {
  // @@protoc_insertion_point(field_get:msg.Moment.MomentInfo)
  return momentinfo_ != NULL ? *momentinfo_ : *default_instance_->momentinfo_;
}
inline ::msg::MomentInfo* Moment::mutable_momentinfo() {
  set_has_momentinfo();
  if (momentinfo_ == NULL) momentinfo_ = new ::msg::MomentInfo;
  // @@protoc_insertion_point(field_mutable:msg.Moment.MomentInfo)
  return momentinfo_;
}
inline ::msg::MomentInfo* Moment::release_momentinfo() {
  clear_has_momentinfo();
  ::msg::MomentInfo* temp = momentinfo_;
  momentinfo_ = NULL;
  return temp;
}
inline void Moment::set_allocated_momentinfo(::msg::MomentInfo* momentinfo) {
  delete momentinfo_;
  momentinfo_ = momentinfo;
  if (momentinfo) {
    set_has_momentinfo();
  } else {
    clear_has_momentinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Moment.MomentInfo)
}

// optional .msg.MomentDisplayType DisplayType = 4;
inline bool Moment::has_displaytype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Moment::set_has_displaytype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Moment::clear_has_displaytype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Moment::clear_displaytype() {
  displaytype_ = 1;
  clear_has_displaytype();
}
inline ::msg::MomentDisplayType Moment::displaytype() const {
  // @@protoc_insertion_point(field_get:msg.Moment.DisplayType)
  return static_cast< ::msg::MomentDisplayType >(displaytype_);
}
inline void Moment::set_displaytype(::msg::MomentDisplayType value) {
  assert(::msg::MomentDisplayType_IsValid(value));
  set_has_displaytype();
  displaytype_ = value;
  // @@protoc_insertion_point(field_set:msg.Moment.DisplayType)
}

// optional int64 Time = 5;
inline bool Moment::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Moment::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Moment::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Moment::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google_public::protobuf::int64 Moment::time() const {
  // @@protoc_insertion_point(field_get:msg.Moment.Time)
  return time_;
}
inline void Moment::set_time(::google_public::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:msg.Moment.Time)
}

// optional .msg.CommentInfos CommentInfos = 6;
inline bool Moment::has_commentinfos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Moment::set_has_commentinfos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Moment::clear_has_commentinfos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Moment::clear_commentinfos() {
  if (commentinfos_ != NULL) commentinfos_->::msg::CommentInfos::Clear();
  clear_has_commentinfos();
}
inline const ::msg::CommentInfos& Moment::commentinfos() const {
  // @@protoc_insertion_point(field_get:msg.Moment.CommentInfos)
  return commentinfos_ != NULL ? *commentinfos_ : *default_instance_->commentinfos_;
}
inline ::msg::CommentInfos* Moment::mutable_commentinfos() {
  set_has_commentinfos();
  if (commentinfos_ == NULL) commentinfos_ = new ::msg::CommentInfos;
  // @@protoc_insertion_point(field_mutable:msg.Moment.CommentInfos)
  return commentinfos_;
}
inline ::msg::CommentInfos* Moment::release_commentinfos() {
  clear_has_commentinfos();
  ::msg::CommentInfos* temp = commentinfos_;
  commentinfos_ = NULL;
  return temp;
}
inline void Moment::set_allocated_commentinfos(::msg::CommentInfos* commentinfos) {
  delete commentinfos_;
  commentinfos_ = commentinfos;
  if (commentinfos) {
    set_has_commentinfos();
  } else {
    clear_has_commentinfos();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Moment.CommentInfos)
}

// -------------------------------------------------------------------

// CommentInfos

// repeated .msg.CommentInfo CommentInfo = 1;
inline int CommentInfos::commentinfo_size() const {
  return commentinfo_.size();
}
inline void CommentInfos::clear_commentinfo() {
  commentinfo_.Clear();
}
inline const ::msg::CommentInfo& CommentInfos::commentinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.CommentInfos.CommentInfo)
  return commentinfo_.Get(index);
}
inline ::msg::CommentInfo* CommentInfos::mutable_commentinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.CommentInfos.CommentInfo)
  return commentinfo_.Mutable(index);
}
inline ::msg::CommentInfo* CommentInfos::add_commentinfo() {
  // @@protoc_insertion_point(field_add:msg.CommentInfos.CommentInfo)
  return commentinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo >&
CommentInfos::commentinfo() const {
  // @@protoc_insertion_point(field_list:msg.CommentInfos.CommentInfo)
  return commentinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo >*
CommentInfos::mutable_commentinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.CommentInfos.CommentInfo)
  return &commentinfo_;
}

// -------------------------------------------------------------------

// MomentInfo

// optional int32 MomentType = 1;
inline bool MomentInfo::has_momenttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MomentInfo::set_has_momenttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MomentInfo::clear_has_momenttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MomentInfo::clear_momenttype() {
  momenttype_ = 0;
  clear_has_momenttype();
}
inline ::google_public::protobuf::int32 MomentInfo::momenttype() const {
  // @@protoc_insertion_point(field_get:msg.MomentInfo.MomentType)
  return momenttype_;
}
inline void MomentInfo::set_momenttype(::google_public::protobuf::int32 value) {
  set_has_momenttype();
  momenttype_ = value;
  // @@protoc_insertion_point(field_set:msg.MomentInfo.MomentType)
}

// optional .msg.NormalMomentInfo NormalMomentInfo = 2;
inline bool MomentInfo::has_normalmomentinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MomentInfo::set_has_normalmomentinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MomentInfo::clear_has_normalmomentinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MomentInfo::clear_normalmomentinfo() {
  if (normalmomentinfo_ != NULL) normalmomentinfo_->::msg::NormalMomentInfo::Clear();
  clear_has_normalmomentinfo();
}
inline const ::msg::NormalMomentInfo& MomentInfo::normalmomentinfo() const {
  // @@protoc_insertion_point(field_get:msg.MomentInfo.NormalMomentInfo)
  return normalmomentinfo_ != NULL ? *normalmomentinfo_ : *default_instance_->normalmomentinfo_;
}
inline ::msg::NormalMomentInfo* MomentInfo::mutable_normalmomentinfo() {
  set_has_normalmomentinfo();
  if (normalmomentinfo_ == NULL) normalmomentinfo_ = new ::msg::NormalMomentInfo;
  // @@protoc_insertion_point(field_mutable:msg.MomentInfo.NormalMomentInfo)
  return normalmomentinfo_;
}
inline ::msg::NormalMomentInfo* MomentInfo::release_normalmomentinfo() {
  clear_has_normalmomentinfo();
  ::msg::NormalMomentInfo* temp = normalmomentinfo_;
  normalmomentinfo_ = NULL;
  return temp;
}
inline void MomentInfo::set_allocated_normalmomentinfo(::msg::NormalMomentInfo* normalmomentinfo) {
  delete normalmomentinfo_;
  normalmomentinfo_ = normalmomentinfo;
  if (normalmomentinfo) {
    set_has_normalmomentinfo();
  } else {
    clear_has_normalmomentinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.MomentInfo.NormalMomentInfo)
}

// -------------------------------------------------------------------

// NormalMomentInfo

// optional string WordContent = 1;
inline bool NormalMomentInfo::has_wordcontent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NormalMomentInfo::set_has_wordcontent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NormalMomentInfo::clear_has_wordcontent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NormalMomentInfo::clear_wordcontent() {
  if (wordcontent_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wordcontent_->clear();
  }
  clear_has_wordcontent();
}
inline const ::std::string& NormalMomentInfo::wordcontent() const {
  // @@protoc_insertion_point(field_get:msg.NormalMomentInfo.WordContent)
  return *wordcontent_;
}
inline void NormalMomentInfo::set_wordcontent(const ::std::string& value) {
  set_has_wordcontent();
  if (wordcontent_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wordcontent_ = new ::std::string;
  }
  wordcontent_->assign(value);
  // @@protoc_insertion_point(field_set:msg.NormalMomentInfo.WordContent)
}
inline void NormalMomentInfo::set_wordcontent(const char* value) {
  set_has_wordcontent();
  if (wordcontent_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wordcontent_ = new ::std::string;
  }
  wordcontent_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.NormalMomentInfo.WordContent)
}
inline void NormalMomentInfo::set_wordcontent(const char* value, size_t size) {
  set_has_wordcontent();
  if (wordcontent_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wordcontent_ = new ::std::string;
  }
  wordcontent_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.NormalMomentInfo.WordContent)
}
inline ::std::string* NormalMomentInfo::mutable_wordcontent() {
  set_has_wordcontent();
  if (wordcontent_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    wordcontent_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.NormalMomentInfo.WordContent)
  return wordcontent_;
}
inline ::std::string* NormalMomentInfo::release_wordcontent() {
  clear_has_wordcontent();
  if (wordcontent_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = wordcontent_;
    wordcontent_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NormalMomentInfo::set_allocated_wordcontent(::std::string* wordcontent) {
  if (wordcontent_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete wordcontent_;
  }
  if (wordcontent) {
    set_has_wordcontent();
    wordcontent_ = wordcontent;
  } else {
    clear_has_wordcontent();
    wordcontent_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.NormalMomentInfo.WordContent)
}

// repeated string PicName = 2;
inline int NormalMomentInfo::picname_size() const {
  return picname_.size();
}
inline void NormalMomentInfo::clear_picname() {
  picname_.Clear();
}
inline const ::std::string& NormalMomentInfo::picname(int index) const {
  // @@protoc_insertion_point(field_get:msg.NormalMomentInfo.PicName)
  return picname_.Get(index);
}
inline ::std::string* NormalMomentInfo::mutable_picname(int index) {
  // @@protoc_insertion_point(field_mutable:msg.NormalMomentInfo.PicName)
  return picname_.Mutable(index);
}
inline void NormalMomentInfo::set_picname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:msg.NormalMomentInfo.PicName)
  picname_.Mutable(index)->assign(value);
}
inline void NormalMomentInfo::set_picname(int index, const char* value) {
  picname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.NormalMomentInfo.PicName)
}
inline void NormalMomentInfo::set_picname(int index, const char* value, size_t size) {
  picname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.NormalMomentInfo.PicName)
}
inline ::std::string* NormalMomentInfo::add_picname() {
  return picname_.Add();
}
inline void NormalMomentInfo::add_picname(const ::std::string& value) {
  picname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:msg.NormalMomentInfo.PicName)
}
inline void NormalMomentInfo::add_picname(const char* value) {
  picname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:msg.NormalMomentInfo.PicName)
}
inline void NormalMomentInfo::add_picname(const char* value, size_t size) {
  picname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:msg.NormalMomentInfo.PicName)
}
inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>&
NormalMomentInfo::picname() const {
  // @@protoc_insertion_point(field_list:msg.NormalMomentInfo.PicName)
  return picname_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::std::string>*
NormalMomentInfo::mutable_picname() {
  // @@protoc_insertion_point(field_mutable_list:msg.NormalMomentInfo.PicName)
  return &picname_;
}

// optional int32 HandId = 3;
inline bool NormalMomentInfo::has_handid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NormalMomentInfo::set_has_handid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NormalMomentInfo::clear_has_handid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NormalMomentInfo::clear_handid() {
  handid_ = 0;
  clear_has_handid();
}
inline ::google_public::protobuf::int32 NormalMomentInfo::handid() const {
  // @@protoc_insertion_point(field_get:msg.NormalMomentInfo.HandId)
  return handid_;
}
inline void NormalMomentInfo::set_handid(::google_public::protobuf::int32 value) {
  set_has_handid();
  handid_ = value;
  // @@protoc_insertion_point(field_set:msg.NormalMomentInfo.HandId)
}

// -------------------------------------------------------------------

// Processor_200_PublishMoment

// optional .msg.Moment Moment = 1;
inline bool Processor_200_PublishMoment::has_moment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_200_PublishMoment::set_has_moment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_200_PublishMoment::clear_has_moment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_200_PublishMoment::clear_moment() {
  if (moment_ != NULL) moment_->::msg::Moment::Clear();
  clear_has_moment();
}
inline const ::msg::Moment& Processor_200_PublishMoment::moment() const {
  // @@protoc_insertion_point(field_get:msg.Processor_200_PublishMoment.Moment)
  return moment_ != NULL ? *moment_ : *default_instance_->moment_;
}
inline ::msg::Moment* Processor_200_PublishMoment::mutable_moment() {
  set_has_moment();
  if (moment_ == NULL) moment_ = new ::msg::Moment;
  // @@protoc_insertion_point(field_mutable:msg.Processor_200_PublishMoment.Moment)
  return moment_;
}
inline ::msg::Moment* Processor_200_PublishMoment::release_moment() {
  clear_has_moment();
  ::msg::Moment* temp = moment_;
  moment_ = NULL;
  return temp;
}
inline void Processor_200_PublishMoment::set_allocated_moment(::msg::Moment* moment) {
  delete moment_;
  moment_ = moment;
  if (moment) {
    set_has_moment();
  } else {
    clear_has_moment();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_200_PublishMoment.Moment)
}

// -------------------------------------------------------------------

// Processor_201_GetMoment_UP

// optional int32 MomentId = 1;
inline bool Processor_201_GetMoment_UP::has_momentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_201_GetMoment_UP::set_has_momentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_201_GetMoment_UP::clear_has_momentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_201_GetMoment_UP::clear_momentid() {
  momentid_ = 0;
  clear_has_momentid();
}
inline ::google_public::protobuf::int32 Processor_201_GetMoment_UP::momentid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_201_GetMoment_UP.MomentId)
  return momentid_;
}
inline void Processor_201_GetMoment_UP::set_momentid(::google_public::protobuf::int32 value) {
  set_has_momentid();
  momentid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_201_GetMoment_UP.MomentId)
}

// optional bool IsDown = 2;
inline bool Processor_201_GetMoment_UP::has_isdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_201_GetMoment_UP::set_has_isdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_201_GetMoment_UP::clear_has_isdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_201_GetMoment_UP::clear_isdown() {
  isdown_ = false;
  clear_has_isdown();
}
inline bool Processor_201_GetMoment_UP::isdown() const {
  // @@protoc_insertion_point(field_get:msg.Processor_201_GetMoment_UP.IsDown)
  return isdown_;
}
inline void Processor_201_GetMoment_UP::set_isdown(bool value) {
  set_has_isdown();
  isdown_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_201_GetMoment_UP.IsDown)
}

// optional .msg.MomentDisplayType Type = 3;
inline bool Processor_201_GetMoment_UP::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_201_GetMoment_UP::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_201_GetMoment_UP::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_201_GetMoment_UP::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg::MomentDisplayType Processor_201_GetMoment_UP::type() const {
  // @@protoc_insertion_point(field_get:msg.Processor_201_GetMoment_UP.Type)
  return static_cast< ::msg::MomentDisplayType >(type_);
}
inline void Processor_201_GetMoment_UP::set_type(::msg::MomentDisplayType value) {
  assert(::msg::MomentDisplayType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_201_GetMoment_UP.Type)
}

// -------------------------------------------------------------------

// Processor_201_GetMoment_DOWN

// repeated .msg.Moment Moment = 1;
inline int Processor_201_GetMoment_DOWN::moment_size() const {
  return moment_.size();
}
inline void Processor_201_GetMoment_DOWN::clear_moment() {
  moment_.Clear();
}
inline const ::msg::Moment& Processor_201_GetMoment_DOWN::moment(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_201_GetMoment_DOWN.Moment)
  return moment_.Get(index);
}
inline ::msg::Moment* Processor_201_GetMoment_DOWN::mutable_moment(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_201_GetMoment_DOWN.Moment)
  return moment_.Mutable(index);
}
inline ::msg::Moment* Processor_201_GetMoment_DOWN::add_moment() {
  // @@protoc_insertion_point(field_add:msg.Processor_201_GetMoment_DOWN.Moment)
  return moment_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Moment >&
Processor_201_GetMoment_DOWN::moment() const {
  // @@protoc_insertion_point(field_list:msg.Processor_201_GetMoment_DOWN.Moment)
  return moment_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::Moment >*
Processor_201_GetMoment_DOWN::mutable_moment() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_201_GetMoment_DOWN.Moment)
  return &moment_;
}

// -------------------------------------------------------------------

// Processor_202_DeleteMoment

// optional int32 MomentId = 1;
inline bool Processor_202_DeleteMoment::has_momentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_202_DeleteMoment::set_has_momentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_202_DeleteMoment::clear_has_momentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_202_DeleteMoment::clear_momentid() {
  momentid_ = 0;
  clear_has_momentid();
}
inline ::google_public::protobuf::int32 Processor_202_DeleteMoment::momentid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_202_DeleteMoment.MomentId)
  return momentid_;
}
inline void Processor_202_DeleteMoment::set_momentid(::google_public::protobuf::int32 value) {
  set_has_momentid();
  momentid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_202_DeleteMoment.MomentId)
}

// -------------------------------------------------------------------

// CommentInfo

// optional int32 MomentId = 1;
inline bool CommentInfo::has_momentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommentInfo::set_has_momentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommentInfo::clear_has_momentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommentInfo::clear_momentid() {
  momentid_ = 0;
  clear_has_momentid();
}
inline ::google_public::protobuf::int32 CommentInfo::momentid() const {
  // @@protoc_insertion_point(field_get:msg.CommentInfo.MomentId)
  return momentid_;
}
inline void CommentInfo::set_momentid(::google_public::protobuf::int32 value) {
  set_has_momentid();
  momentid_ = value;
  // @@protoc_insertion_point(field_set:msg.CommentInfo.MomentId)
}

// optional int32 CommentId = 2;
inline bool CommentInfo::has_commentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommentInfo::set_has_commentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommentInfo::clear_has_commentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommentInfo::clear_commentid() {
  commentid_ = 0;
  clear_has_commentid();
}
inline ::google_public::protobuf::int32 CommentInfo::commentid() const {
  // @@protoc_insertion_point(field_get:msg.CommentInfo.CommentId)
  return commentid_;
}
inline void CommentInfo::set_commentid(::google_public::protobuf::int32 value) {
  set_has_commentid();
  commentid_ = value;
  // @@protoc_insertion_point(field_set:msg.CommentInfo.CommentId)
}

// optional .msg.CommentType Type = 3;
inline bool CommentInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommentInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommentInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommentInfo::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg::CommentType CommentInfo::type() const {
  // @@protoc_insertion_point(field_get:msg.CommentInfo.Type)
  return static_cast< ::msg::CommentType >(type_);
}
inline void CommentInfo::set_type(::msg::CommentType value) {
  assert(::msg::CommentType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.CommentInfo.Type)
}

// optional .msg.UserDetailInfo UserInfo = 4;
inline bool CommentInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CommentInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CommentInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CommentInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userinfo();
}
inline const ::msg::UserDetailInfo& CommentInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:msg.CommentInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::msg::UserDetailInfo* CommentInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.CommentInfo.UserInfo)
  return userinfo_;
}
inline ::msg::UserDetailInfo* CommentInfo::release_userinfo() {
  clear_has_userinfo();
  ::msg::UserDetailInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void CommentInfo::set_allocated_userinfo(::msg::UserDetailInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CommentInfo.UserInfo)
}

// optional string Content = 5;
inline bool CommentInfo::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CommentInfo::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CommentInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CommentInfo::clear_content() {
  if (content_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CommentInfo::content() const {
  // @@protoc_insertion_point(field_get:msg.CommentInfo.Content)
  return *content_;
}
inline void CommentInfo::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:msg.CommentInfo.Content)
}
inline void CommentInfo::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.CommentInfo.Content)
}
inline void CommentInfo::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.CommentInfo.Content)
}
inline ::std::string* CommentInfo::mutable_content() {
  set_has_content();
  if (content_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.CommentInfo.Content)
  return content_;
}
inline ::std::string* CommentInfo::release_content() {
  clear_has_content();
  if (content_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CommentInfo::set_allocated_content(::std::string* content) {
  if (content_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CommentInfo.Content)
}

// optional int64 Time = 6;
inline bool CommentInfo::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CommentInfo::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CommentInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CommentInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google_public::protobuf::int64 CommentInfo::time() const {
  // @@protoc_insertion_point(field_get:msg.CommentInfo.Time)
  return time_;
}
inline void CommentInfo::set_time(::google_public::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:msg.CommentInfo.Time)
}

// optional int32 parentComment = 7;
inline bool CommentInfo::has_parentcomment() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CommentInfo::set_has_parentcomment() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CommentInfo::clear_has_parentcomment() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CommentInfo::clear_parentcomment() {
  parentcomment_ = 0;
  clear_has_parentcomment();
}
inline ::google_public::protobuf::int32 CommentInfo::parentcomment() const {
  // @@protoc_insertion_point(field_get:msg.CommentInfo.parentComment)
  return parentcomment_;
}
inline void CommentInfo::set_parentcomment(::google_public::protobuf::int32 value) {
  set_has_parentcomment();
  parentcomment_ = value;
  // @@protoc_insertion_point(field_set:msg.CommentInfo.parentComment)
}

// optional bool isDelete = 8;
inline bool CommentInfo::has_isdelete() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CommentInfo::set_has_isdelete() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CommentInfo::clear_has_isdelete() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CommentInfo::clear_isdelete() {
  isdelete_ = false;
  clear_has_isdelete();
}
inline bool CommentInfo::isdelete() const {
  // @@protoc_insertion_point(field_get:msg.CommentInfo.isDelete)
  return isdelete_;
}
inline void CommentInfo::set_isdelete(bool value) {
  set_has_isdelete();
  isdelete_ = value;
  // @@protoc_insertion_point(field_set:msg.CommentInfo.isDelete)
}

// -------------------------------------------------------------------

// Processor_203_PublishComment

// optional .msg.CommentInfo CommentInfo = 1;
inline bool Processor_203_PublishComment::has_commentinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_203_PublishComment::set_has_commentinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_203_PublishComment::clear_has_commentinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_203_PublishComment::clear_commentinfo() {
  if (commentinfo_ != NULL) commentinfo_->::msg::CommentInfo::Clear();
  clear_has_commentinfo();
}
inline const ::msg::CommentInfo& Processor_203_PublishComment::commentinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_203_PublishComment.CommentInfo)
  return commentinfo_ != NULL ? *commentinfo_ : *default_instance_->commentinfo_;
}
inline ::msg::CommentInfo* Processor_203_PublishComment::mutable_commentinfo() {
  set_has_commentinfo();
  if (commentinfo_ == NULL) commentinfo_ = new ::msg::CommentInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_203_PublishComment.CommentInfo)
  return commentinfo_;
}
inline ::msg::CommentInfo* Processor_203_PublishComment::release_commentinfo() {
  clear_has_commentinfo();
  ::msg::CommentInfo* temp = commentinfo_;
  commentinfo_ = NULL;
  return temp;
}
inline void Processor_203_PublishComment::set_allocated_commentinfo(::msg::CommentInfo* commentinfo) {
  delete commentinfo_;
  commentinfo_ = commentinfo;
  if (commentinfo) {
    set_has_commentinfo();
  } else {
    clear_has_commentinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_203_PublishComment.CommentInfo)
}

// -------------------------------------------------------------------

// Processor_204_GetComment_UP

// optional int32 MomentId = 1;
inline bool Processor_204_GetComment_UP::has_momentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_204_GetComment_UP::set_has_momentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_204_GetComment_UP::clear_has_momentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_204_GetComment_UP::clear_momentid() {
  momentid_ = 0;
  clear_has_momentid();
}
inline ::google_public::protobuf::int32 Processor_204_GetComment_UP::momentid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_204_GetComment_UP.MomentId)
  return momentid_;
}
inline void Processor_204_GetComment_UP::set_momentid(::google_public::protobuf::int32 value) {
  set_has_momentid();
  momentid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_204_GetComment_UP.MomentId)
}

// -------------------------------------------------------------------

// Processor_204_GetComment_DOWN

// repeated .msg.CommentInfo CommentInfo = 1;
inline int Processor_204_GetComment_DOWN::commentinfo_size() const {
  return commentinfo_.size();
}
inline void Processor_204_GetComment_DOWN::clear_commentinfo() {
  commentinfo_.Clear();
}
inline const ::msg::CommentInfo& Processor_204_GetComment_DOWN::commentinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_204_GetComment_DOWN.CommentInfo)
  return commentinfo_.Get(index);
}
inline ::msg::CommentInfo* Processor_204_GetComment_DOWN::mutable_commentinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_204_GetComment_DOWN.CommentInfo)
  return commentinfo_.Mutable(index);
}
inline ::msg::CommentInfo* Processor_204_GetComment_DOWN::add_commentinfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_204_GetComment_DOWN.CommentInfo)
  return commentinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo >&
Processor_204_GetComment_DOWN::commentinfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_204_GetComment_DOWN.CommentInfo)
  return commentinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::CommentInfo >*
Processor_204_GetComment_DOWN::mutable_commentinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_204_GetComment_DOWN.CommentInfo)
  return &commentinfo_;
}

// -------------------------------------------------------------------

// Processor_205_DeleteMoment

// optional int32 MomentId = 1;
inline bool Processor_205_DeleteMoment::has_momentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_205_DeleteMoment::set_has_momentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_205_DeleteMoment::clear_has_momentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_205_DeleteMoment::clear_momentid() {
  momentid_ = 0;
  clear_has_momentid();
}
inline ::google_public::protobuf::int32 Processor_205_DeleteMoment::momentid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_205_DeleteMoment.MomentId)
  return momentid_;
}
inline void Processor_205_DeleteMoment::set_momentid(::google_public::protobuf::int32 value) {
  set_has_momentid();
  momentid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_205_DeleteMoment.MomentId)
}

// optional int32 CommentId = 2;
inline bool Processor_205_DeleteMoment::has_commentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_205_DeleteMoment::set_has_commentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_205_DeleteMoment::clear_has_commentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_205_DeleteMoment::clear_commentid() {
  commentid_ = 0;
  clear_has_commentid();
}
inline ::google_public::protobuf::int32 Processor_205_DeleteMoment::commentid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_205_DeleteMoment.CommentId)
  return commentid_;
}
inline void Processor_205_DeleteMoment::set_commentid(::google_public::protobuf::int32 value) {
  set_has_commentid();
  commentid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_205_DeleteMoment.CommentId)
}

// -------------------------------------------------------------------

// Processor_400_LoginRoom_UP

// optional string Key = 1;
inline bool Processor_400_LoginRoom_UP::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_400_LoginRoom_UP::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_400_LoginRoom_UP::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_400_LoginRoom_UP::clear_key() {
  if (key_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& Processor_400_LoginRoom_UP::key() const {
  // @@protoc_insertion_point(field_get:msg.Processor_400_LoginRoom_UP.Key)
  return *key_;
}
inline void Processor_400_LoginRoom_UP::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_400_LoginRoom_UP.Key)
}
inline void Processor_400_LoginRoom_UP::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_400_LoginRoom_UP.Key)
}
inline void Processor_400_LoginRoom_UP::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_400_LoginRoom_UP.Key)
}
inline ::std::string* Processor_400_LoginRoom_UP::mutable_key() {
  set_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_400_LoginRoom_UP.Key)
  return key_;
}
inline ::std::string* Processor_400_LoginRoom_UP::release_key() {
  clear_has_key();
  if (key_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_400_LoginRoom_UP::set_allocated_key(::std::string* key) {
  if (key_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_400_LoginRoom_UP.Key)
}

// -------------------------------------------------------------------

// Processor_400_LoginRoom_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_400_LoginRoom_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_400_LoginRoom_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_400_LoginRoom_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_400_LoginRoom_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_400_LoginRoom_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_400_LoginRoom_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_400_LoginRoom_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_400_LoginRoom_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_400_LoginRoom_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_400_LoginRoom_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_400_LoginRoom_DOWN.Response)
}

// repeated int32 RoomID = 2;
inline int Processor_400_LoginRoom_DOWN::roomid_size() const {
  return roomid_.size();
}
inline void Processor_400_LoginRoom_DOWN::clear_roomid() {
  roomid_.Clear();
}
inline ::google_public::protobuf::int32 Processor_400_LoginRoom_DOWN::roomid(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_400_LoginRoom_DOWN.RoomID)
  return roomid_.Get(index);
}
inline void Processor_400_LoginRoom_DOWN::set_roomid(int index, ::google_public::protobuf::int32 value) {
  roomid_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.Processor_400_LoginRoom_DOWN.RoomID)
}
inline void Processor_400_LoginRoom_DOWN::add_roomid(::google_public::protobuf::int32 value) {
  roomid_.Add(value);
  // @@protoc_insertion_point(field_add:msg.Processor_400_LoginRoom_DOWN.RoomID)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
Processor_400_LoginRoom_DOWN::roomid() const {
  // @@protoc_insertion_point(field_list:msg.Processor_400_LoginRoom_DOWN.RoomID)
  return roomid_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
Processor_400_LoginRoom_DOWN::mutable_roomid() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_400_LoginRoom_DOWN.RoomID)
  return &roomid_;
}

// -------------------------------------------------------------------

// Processor_410_EnterRoom

// optional int32 RoomId = 1;
inline bool Processor_410_EnterRoom::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_410_EnterRoom::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_410_EnterRoom::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_410_EnterRoom::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_410_EnterRoom::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_410_EnterRoom.RoomId)
  return roomid_;
}
inline void Processor_410_EnterRoom::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_410_EnterRoom.RoomId)
}

// -------------------------------------------------------------------

// Processor_410_EnterRoom_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_410_EnterRoom_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_410_EnterRoom_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_410_EnterRoom_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_410_EnterRoom_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_410_EnterRoom_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_410_EnterRoom_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_410_EnterRoom_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_410_EnterRoom_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_410_EnterRoom_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_410_EnterRoom_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_410_EnterRoom_DOWN.Response)
}

// optional .msg.TournamentInfo TournamentInfo = 2;
inline bool Processor_410_EnterRoom_DOWN::has_tournamentinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_410_EnterRoom_DOWN::set_has_tournamentinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_410_EnterRoom_DOWN::clear_has_tournamentinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_410_EnterRoom_DOWN::clear_tournamentinfo() {
  if (tournamentinfo_ != NULL) tournamentinfo_->::msg::TournamentInfo::Clear();
  clear_has_tournamentinfo();
}
inline const ::msg::TournamentInfo& Processor_410_EnterRoom_DOWN::tournamentinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_410_EnterRoom_DOWN.TournamentInfo)
  return tournamentinfo_ != NULL ? *tournamentinfo_ : *default_instance_->tournamentinfo_;
}
inline ::msg::TournamentInfo* Processor_410_EnterRoom_DOWN::mutable_tournamentinfo() {
  set_has_tournamentinfo();
  if (tournamentinfo_ == NULL) tournamentinfo_ = new ::msg::TournamentInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_410_EnterRoom_DOWN.TournamentInfo)
  return tournamentinfo_;
}
inline ::msg::TournamentInfo* Processor_410_EnterRoom_DOWN::release_tournamentinfo() {
  clear_has_tournamentinfo();
  ::msg::TournamentInfo* temp = tournamentinfo_;
  tournamentinfo_ = NULL;
  return temp;
}
inline void Processor_410_EnterRoom_DOWN::set_allocated_tournamentinfo(::msg::TournamentInfo* tournamentinfo) {
  delete tournamentinfo_;
  tournamentinfo_ = tournamentinfo;
  if (tournamentinfo) {
    set_has_tournamentinfo();
  } else {
    clear_has_tournamentinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_410_EnterRoom_DOWN.TournamentInfo)
}

// repeated .msg.UserDetailInfo UserInfo = 3;
inline int Processor_410_EnterRoom_DOWN::userinfo_size() const {
  return userinfo_.size();
}
inline void Processor_410_EnterRoom_DOWN::clear_userinfo() {
  userinfo_.Clear();
}
inline const ::msg::UserDetailInfo& Processor_410_EnterRoom_DOWN::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_410_EnterRoom_DOWN.UserInfo)
  return userinfo_.Get(index);
}
inline ::msg::UserDetailInfo* Processor_410_EnterRoom_DOWN::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_410_EnterRoom_DOWN.UserInfo)
  return userinfo_.Mutable(index);
}
inline ::msg::UserDetailInfo* Processor_410_EnterRoom_DOWN::add_userinfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_410_EnterRoom_DOWN.UserInfo)
  return userinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >&
Processor_410_EnterRoom_DOWN::userinfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_410_EnterRoom_DOWN.UserInfo)
  return userinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserDetailInfo >*
Processor_410_EnterRoom_DOWN::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_410_EnterRoom_DOWN.UserInfo)
  return &userinfo_;
}

// optional .msg.RoomInfo RoomInfo = 4;
inline bool Processor_410_EnterRoom_DOWN::has_roominfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_410_EnterRoom_DOWN::set_has_roominfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_410_EnterRoom_DOWN::clear_has_roominfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_410_EnterRoom_DOWN::clear_roominfo() {
  if (roominfo_ != NULL) roominfo_->::msg::RoomInfo::Clear();
  clear_has_roominfo();
}
inline const ::msg::RoomInfo& Processor_410_EnterRoom_DOWN::roominfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_410_EnterRoom_DOWN.RoomInfo)
  return roominfo_ != NULL ? *roominfo_ : *default_instance_->roominfo_;
}
inline ::msg::RoomInfo* Processor_410_EnterRoom_DOWN::mutable_roominfo() {
  set_has_roominfo();
  if (roominfo_ == NULL) roominfo_ = new ::msg::RoomInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_410_EnterRoom_DOWN.RoomInfo)
  return roominfo_;
}
inline ::msg::RoomInfo* Processor_410_EnterRoom_DOWN::release_roominfo() {
  clear_has_roominfo();
  ::msg::RoomInfo* temp = roominfo_;
  roominfo_ = NULL;
  return temp;
}
inline void Processor_410_EnterRoom_DOWN::set_allocated_roominfo(::msg::RoomInfo* roominfo) {
  delete roominfo_;
  roominfo_ = roominfo;
  if (roominfo) {
    set_has_roominfo();
  } else {
    clear_has_roominfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_410_EnterRoom_DOWN.RoomInfo)
}

// -------------------------------------------------------------------

// Processor_411_SendSeatInfo

// optional int32 RoomId = 1;
inline bool Processor_411_SendSeatInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_411_SendSeatInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_411_SendSeatInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_411_SendSeatInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_411_SendSeatInfo::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_411_SendSeatInfo.RoomId)
  return roomid_;
}
inline void Processor_411_SendSeatInfo::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_411_SendSeatInfo.RoomId)
}

// optional .msg.SittingStatus SittingStatus = 2;
inline bool Processor_411_SendSeatInfo::has_sittingstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_411_SendSeatInfo::set_has_sittingstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_411_SendSeatInfo::clear_has_sittingstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_411_SendSeatInfo::clear_sittingstatus() {
  sittingstatus_ = 0;
  clear_has_sittingstatus();
}
inline ::msg::SittingStatus Processor_411_SendSeatInfo::sittingstatus() const {
  // @@protoc_insertion_point(field_get:msg.Processor_411_SendSeatInfo.SittingStatus)
  return static_cast< ::msg::SittingStatus >(sittingstatus_);
}
inline void Processor_411_SendSeatInfo::set_sittingstatus(::msg::SittingStatus value) {
  assert(::msg::SittingStatus_IsValid(value));
  set_has_sittingstatus();
  sittingstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_411_SendSeatInfo.SittingStatus)
}

// optional int32 SitNum = 3;
inline bool Processor_411_SendSeatInfo::has_sitnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_411_SendSeatInfo::set_has_sitnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_411_SendSeatInfo::clear_has_sitnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_411_SendSeatInfo::clear_sitnum() {
  sitnum_ = 0;
  clear_has_sitnum();
}
inline ::google_public::protobuf::int32 Processor_411_SendSeatInfo::sitnum() const {
  // @@protoc_insertion_point(field_get:msg.Processor_411_SendSeatInfo.SitNum)
  return sitnum_;
}
inline void Processor_411_SendSeatInfo::set_sitnum(::google_public::protobuf::int32 value) {
  set_has_sitnum();
  sitnum_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_411_SendSeatInfo.SitNum)
}

// -------------------------------------------------------------------

// Processor_411_SendSeatInfo_Down

// optional .msg.Response Response = 1;
inline bool Processor_411_SendSeatInfo_Down::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_411_SendSeatInfo_Down::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_411_SendSeatInfo_Down::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_411_SendSeatInfo_Down::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_411_SendSeatInfo_Down::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_411_SendSeatInfo_Down.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_411_SendSeatInfo_Down::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_411_SendSeatInfo_Down.Response)
  return response_;
}
inline ::msg::Response* Processor_411_SendSeatInfo_Down::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_411_SendSeatInfo_Down::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_411_SendSeatInfo_Down.Response)
}

// optional bool IsHitNotEnough = 2;
inline bool Processor_411_SendSeatInfo_Down::has_ishitnotenough() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_411_SendSeatInfo_Down::set_has_ishitnotenough() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_411_SendSeatInfo_Down::clear_has_ishitnotenough() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_411_SendSeatInfo_Down::clear_ishitnotenough() {
  ishitnotenough_ = false;
  clear_has_ishitnotenough();
}
inline bool Processor_411_SendSeatInfo_Down::ishitnotenough() const {
  // @@protoc_insertion_point(field_get:msg.Processor_411_SendSeatInfo_Down.IsHitNotEnough)
  return ishitnotenough_;
}
inline void Processor_411_SendSeatInfo_Down::set_ishitnotenough(bool value) {
  set_has_ishitnotenough();
  ishitnotenough_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_411_SendSeatInfo_Down.IsHitNotEnough)
}

// -------------------------------------------------------------------

// PlayerSitStatus

// optional .msg.UserDetailInfo Info = 1;
inline bool PlayerSitStatus::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerSitStatus::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerSitStatus::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerSitStatus::clear_info() {
  if (info_ != NULL) info_->::msg::UserDetailInfo::Clear();
  clear_has_info();
}
inline const ::msg::UserDetailInfo& PlayerSitStatus::info() const {
  // @@protoc_insertion_point(field_get:msg.PlayerSitStatus.Info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::msg::UserDetailInfo* PlayerSitStatus::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.PlayerSitStatus.Info)
  return info_;
}
inline ::msg::UserDetailInfo* PlayerSitStatus::release_info() {
  clear_has_info();
  ::msg::UserDetailInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void PlayerSitStatus::set_allocated_info(::msg::UserDetailInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PlayerSitStatus.Info)
}

// optional .msg.SittingStatus Status = 2;
inline bool PlayerSitStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerSitStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerSitStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerSitStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::msg::SittingStatus PlayerSitStatus::status() const {
  // @@protoc_insertion_point(field_get:msg.PlayerSitStatus.Status)
  return static_cast< ::msg::SittingStatus >(status_);
}
inline void PlayerSitStatus::set_status(::msg::SittingStatus value) {
  assert(::msg::SittingStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerSitStatus.Status)
}

// optional int32 SitNum = 3;
inline bool PlayerSitStatus::has_sitnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerSitStatus::set_has_sitnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerSitStatus::clear_has_sitnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerSitStatus::clear_sitnum() {
  sitnum_ = 0;
  clear_has_sitnum();
}
inline ::google_public::protobuf::int32 PlayerSitStatus::sitnum() const {
  // @@protoc_insertion_point(field_get:msg.PlayerSitStatus.SitNum)
  return sitnum_;
}
inline void PlayerSitStatus::set_sitnum(::google_public::protobuf::int32 value) {
  set_has_sitnum();
  sitnum_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerSitStatus.SitNum)
}

// -------------------------------------------------------------------

// Processor_412_ReceiveSeatInfo

// optional int32 RoomId = 1;
inline bool Processor_412_ReceiveSeatInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_412_ReceiveSeatInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_412_ReceiveSeatInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_412_ReceiveSeatInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_412_ReceiveSeatInfo::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_412_ReceiveSeatInfo.RoomId)
  return roomid_;
}
inline void Processor_412_ReceiveSeatInfo::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_412_ReceiveSeatInfo.RoomId)
}

// repeated .msg.PlayerSitStatus PlayerSitStatus = 2;
inline int Processor_412_ReceiveSeatInfo::playersitstatus_size() const {
  return playersitstatus_.size();
}
inline void Processor_412_ReceiveSeatInfo::clear_playersitstatus() {
  playersitstatus_.Clear();
}
inline const ::msg::PlayerSitStatus& Processor_412_ReceiveSeatInfo::playersitstatus(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_412_ReceiveSeatInfo.PlayerSitStatus)
  return playersitstatus_.Get(index);
}
inline ::msg::PlayerSitStatus* Processor_412_ReceiveSeatInfo::mutable_playersitstatus(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_412_ReceiveSeatInfo.PlayerSitStatus)
  return playersitstatus_.Mutable(index);
}
inline ::msg::PlayerSitStatus* Processor_412_ReceiveSeatInfo::add_playersitstatus() {
  // @@protoc_insertion_point(field_add:msg.Processor_412_ReceiveSeatInfo.PlayerSitStatus)
  return playersitstatus_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerSitStatus >&
Processor_412_ReceiveSeatInfo::playersitstatus() const {
  // @@protoc_insertion_point(field_list:msg.Processor_412_ReceiveSeatInfo.PlayerSitStatus)
  return playersitstatus_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerSitStatus >*
Processor_412_ReceiveSeatInfo::mutable_playersitstatus() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_412_ReceiveSeatInfo.PlayerSitStatus)
  return &playersitstatus_;
}

// -------------------------------------------------------------------

// Processor_413_ReceiveGameStart

// optional int32 RoomId = 1;
inline bool Processor_413_ReceiveGameStart::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_413_ReceiveGameStart::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_413_ReceiveGameStart::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_413_ReceiveGameStart::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_413_ReceiveGameStart::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_413_ReceiveGameStart.RoomId)
  return roomid_;
}
inline void Processor_413_ReceiveGameStart::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_413_ReceiveGameStart.RoomId)
}

// optional string Message = 2;
inline bool Processor_413_ReceiveGameStart::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_413_ReceiveGameStart::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_413_ReceiveGameStart::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_413_ReceiveGameStart::clear_message() {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& Processor_413_ReceiveGameStart::message() const {
  // @@protoc_insertion_point(field_get:msg.Processor_413_ReceiveGameStart.Message)
  return *message_;
}
inline void Processor_413_ReceiveGameStart::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_413_ReceiveGameStart.Message)
}
inline void Processor_413_ReceiveGameStart::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_413_ReceiveGameStart.Message)
}
inline void Processor_413_ReceiveGameStart::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_413_ReceiveGameStart.Message)
}
inline ::std::string* Processor_413_ReceiveGameStart::mutable_message() {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_413_ReceiveGameStart.Message)
  return message_;
}
inline ::std::string* Processor_413_ReceiveGameStart::release_message() {
  clear_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_413_ReceiveGameStart::set_allocated_message(::std::string* message) {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_413_ReceiveGameStart.Message)
}

// optional int32 DealerPos = 3;
inline bool Processor_413_ReceiveGameStart::has_dealerpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_413_ReceiveGameStart::set_has_dealerpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_413_ReceiveGameStart::clear_has_dealerpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_413_ReceiveGameStart::clear_dealerpos() {
  dealerpos_ = 0;
  clear_has_dealerpos();
}
inline ::google_public::protobuf::int32 Processor_413_ReceiveGameStart::dealerpos() const {
  // @@protoc_insertion_point(field_get:msg.Processor_413_ReceiveGameStart.DealerPos)
  return dealerpos_;
}
inline void Processor_413_ReceiveGameStart::set_dealerpos(::google_public::protobuf::int32 value) {
  set_has_dealerpos();
  dealerpos_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_413_ReceiveGameStart.DealerPos)
}

// optional int32 HandID = 4;
inline bool Processor_413_ReceiveGameStart::has_handid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_413_ReceiveGameStart::set_has_handid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_413_ReceiveGameStart::clear_has_handid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_413_ReceiveGameStart::clear_handid() {
  handid_ = 0;
  clear_has_handid();
}
inline ::google_public::protobuf::int32 Processor_413_ReceiveGameStart::handid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_413_ReceiveGameStart.HandID)
  return handid_;
}
inline void Processor_413_ReceiveGameStart::set_handid(::google_public::protobuf::int32 value) {
  set_has_handid();
  handid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_413_ReceiveGameStart.HandID)
}

// -------------------------------------------------------------------

// Processor_414_ReceiveGameEnd

// optional int32 RoomId = 1;
inline bool Processor_414_ReceiveGameEnd::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_414_ReceiveGameEnd::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_414_ReceiveGameEnd::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_414_ReceiveGameEnd::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_414_ReceiveGameEnd::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_414_ReceiveGameEnd.RoomId)
  return roomid_;
}
inline void Processor_414_ReceiveGameEnd::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_414_ReceiveGameEnd.RoomId)
}

// -------------------------------------------------------------------

// Processor_415_DisableAutoAction

// optional int32 RoomId = 1;
inline bool Processor_415_DisableAutoAction::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_415_DisableAutoAction::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_415_DisableAutoAction::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_415_DisableAutoAction::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_415_DisableAutoAction::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_415_DisableAutoAction.RoomId)
  return roomid_;
}
inline void Processor_415_DisableAutoAction::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_415_DisableAutoAction.RoomId)
}

// -------------------------------------------------------------------

// ActionRequest

// optional int32 ActionPlayerId = 1;
inline bool ActionRequest::has_actionplayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionRequest::set_has_actionplayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionRequest::clear_has_actionplayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionRequest::clear_actionplayerid() {
  actionplayerid_ = 0;
  clear_has_actionplayerid();
}
inline ::google_public::protobuf::int32 ActionRequest::actionplayerid() const {
  // @@protoc_insertion_point(field_get:msg.ActionRequest.ActionPlayerId)
  return actionplayerid_;
}
inline void ActionRequest::set_actionplayerid(::google_public::protobuf::int32 value) {
  set_has_actionplayerid();
  actionplayerid_ = value;
  // @@protoc_insertion_point(field_set:msg.ActionRequest.ActionPlayerId)
}

// optional int32 CountDown = 2;
inline bool ActionRequest::has_countdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionRequest::set_has_countdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionRequest::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionRequest::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
inline ::google_public::protobuf::int32 ActionRequest::countdown() const {
  // @@protoc_insertion_point(field_get:msg.ActionRequest.CountDown)
  return countdown_;
}
inline void ActionRequest::set_countdown(::google_public::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:msg.ActionRequest.CountDown)
}

// optional bool IsUsingTimeBank = 3;
inline bool ActionRequest::has_isusingtimebank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionRequest::set_has_isusingtimebank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionRequest::clear_has_isusingtimebank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionRequest::clear_isusingtimebank() {
  isusingtimebank_ = false;
  clear_has_isusingtimebank();
}
inline bool ActionRequest::isusingtimebank() const {
  // @@protoc_insertion_point(field_get:msg.ActionRequest.IsUsingTimeBank)
  return isusingtimebank_;
}
inline void ActionRequest::set_isusingtimebank(bool value) {
  set_has_isusingtimebank();
  isusingtimebank_ = value;
  // @@protoc_insertion_point(field_set:msg.ActionRequest.IsUsingTimeBank)
}

// -------------------------------------------------------------------

// Processor_417_ReceiveOtherPlayerAction

// optional int32 RoomId = 1;
inline bool Processor_417_ReceiveOtherPlayerAction::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_417_ReceiveOtherPlayerAction::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_417_ReceiveOtherPlayerAction::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_417_ReceiveOtherPlayerAction::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_417_ReceiveOtherPlayerAction::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_417_ReceiveOtherPlayerAction.RoomId)
  return roomid_;
}
inline void Processor_417_ReceiveOtherPlayerAction::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_417_ReceiveOtherPlayerAction.RoomId)
}

// optional .msg.ActionRequest ActionRequest = 2;
inline bool Processor_417_ReceiveOtherPlayerAction::has_actionrequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_417_ReceiveOtherPlayerAction::set_has_actionrequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_417_ReceiveOtherPlayerAction::clear_has_actionrequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_417_ReceiveOtherPlayerAction::clear_actionrequest() {
  if (actionrequest_ != NULL) actionrequest_->::msg::ActionRequest::Clear();
  clear_has_actionrequest();
}
inline const ::msg::ActionRequest& Processor_417_ReceiveOtherPlayerAction::actionrequest() const {
  // @@protoc_insertion_point(field_get:msg.Processor_417_ReceiveOtherPlayerAction.ActionRequest)
  return actionrequest_ != NULL ? *actionrequest_ : *default_instance_->actionrequest_;
}
inline ::msg::ActionRequest* Processor_417_ReceiveOtherPlayerAction::mutable_actionrequest() {
  set_has_actionrequest();
  if (actionrequest_ == NULL) actionrequest_ = new ::msg::ActionRequest;
  // @@protoc_insertion_point(field_mutable:msg.Processor_417_ReceiveOtherPlayerAction.ActionRequest)
  return actionrequest_;
}
inline ::msg::ActionRequest* Processor_417_ReceiveOtherPlayerAction::release_actionrequest() {
  clear_has_actionrequest();
  ::msg::ActionRequest* temp = actionrequest_;
  actionrequest_ = NULL;
  return temp;
}
inline void Processor_417_ReceiveOtherPlayerAction::set_allocated_actionrequest(::msg::ActionRequest* actionrequest) {
  delete actionrequest_;
  actionrequest_ = actionrequest;
  if (actionrequest) {
    set_has_actionrequest();
  } else {
    clear_has_actionrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_417_ReceiveOtherPlayerAction.ActionRequest)
}

// -------------------------------------------------------------------

// Processor_420_PokerGetScore_UP

// optional int32 RoomId = 1;
inline bool Processor_420_PokerGetScore_UP::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_420_PokerGetScore_UP::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_420_PokerGetScore_UP::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_420_PokerGetScore_UP::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_420_PokerGetScore_UP::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_420_PokerGetScore_UP.RoomId)
  return roomid_;
}
inline void Processor_420_PokerGetScore_UP::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_420_PokerGetScore_UP.RoomId)
}

// -------------------------------------------------------------------

// PlayerScore

// optional .msg.UserDetailInfo UserDetailInfo = 1;
inline bool PlayerScore::has_userdetailinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerScore::set_has_userdetailinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerScore::clear_has_userdetailinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerScore::clear_userdetailinfo() {
  if (userdetailinfo_ != NULL) userdetailinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userdetailinfo();
}
inline const ::msg::UserDetailInfo& PlayerScore::userdetailinfo() const {
  // @@protoc_insertion_point(field_get:msg.PlayerScore.UserDetailInfo)
  return userdetailinfo_ != NULL ? *userdetailinfo_ : *default_instance_->userdetailinfo_;
}
inline ::msg::UserDetailInfo* PlayerScore::mutable_userdetailinfo() {
  set_has_userdetailinfo();
  if (userdetailinfo_ == NULL) userdetailinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.PlayerScore.UserDetailInfo)
  return userdetailinfo_;
}
inline ::msg::UserDetailInfo* PlayerScore::release_userdetailinfo() {
  clear_has_userdetailinfo();
  ::msg::UserDetailInfo* temp = userdetailinfo_;
  userdetailinfo_ = NULL;
  return temp;
}
inline void PlayerScore::set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo) {
  delete userdetailinfo_;
  userdetailinfo_ = userdetailinfo;
  if (userdetailinfo) {
    set_has_userdetailinfo();
  } else {
    clear_has_userdetailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PlayerScore.UserDetailInfo)
}

// optional int32 TotalBuyin = 2;
inline bool PlayerScore::has_totalbuyin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerScore::set_has_totalbuyin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerScore::clear_has_totalbuyin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerScore::clear_totalbuyin() {
  totalbuyin_ = 0;
  clear_has_totalbuyin();
}
inline ::google_public::protobuf::int32 PlayerScore::totalbuyin() const {
  // @@protoc_insertion_point(field_get:msg.PlayerScore.TotalBuyin)
  return totalbuyin_;
}
inline void PlayerScore::set_totalbuyin(::google_public::protobuf::int32 value) {
  set_has_totalbuyin();
  totalbuyin_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerScore.TotalBuyin)
}

// optional int32 TotalWin = 3;
inline bool PlayerScore::has_totalwin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerScore::set_has_totalwin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerScore::clear_has_totalwin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerScore::clear_totalwin() {
  totalwin_ = 0;
  clear_has_totalwin();
}
inline ::google_public::protobuf::int32 PlayerScore::totalwin() const {
  // @@protoc_insertion_point(field_get:msg.PlayerScore.TotalWin)
  return totalwin_;
}
inline void PlayerScore::set_totalwin(::google_public::protobuf::int32 value) {
  set_has_totalwin();
  totalwin_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerScore.TotalWin)
}

// optional int32 Rank = 4;
inline bool PlayerScore::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerScore::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerScore::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerScore::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google_public::protobuf::int32 PlayerScore::rank() const {
  // @@protoc_insertion_point(field_get:msg.PlayerScore.Rank)
  return rank_;
}
inline void PlayerScore::set_rank(::google_public::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerScore.Rank)
}

// optional string OtherPrize = 5;
inline bool PlayerScore::has_otherprize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerScore::set_has_otherprize() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerScore::clear_has_otherprize() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerScore::clear_otherprize() {
  if (otherprize_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_->clear();
  }
  clear_has_otherprize();
}
inline const ::std::string& PlayerScore::otherprize() const {
  // @@protoc_insertion_point(field_get:msg.PlayerScore.OtherPrize)
  return *otherprize_;
}
inline void PlayerScore::set_otherprize(const ::std::string& value) {
  set_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_ = new ::std::string;
  }
  otherprize_->assign(value);
  // @@protoc_insertion_point(field_set:msg.PlayerScore.OtherPrize)
}
inline void PlayerScore::set_otherprize(const char* value) {
  set_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_ = new ::std::string;
  }
  otherprize_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.PlayerScore.OtherPrize)
}
inline void PlayerScore::set_otherprize(const char* value, size_t size) {
  set_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_ = new ::std::string;
  }
  otherprize_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.PlayerScore.OtherPrize)
}
inline ::std::string* PlayerScore::mutable_otherprize() {
  set_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    otherprize_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.PlayerScore.OtherPrize)
  return otherprize_;
}
inline ::std::string* PlayerScore::release_otherprize() {
  clear_has_otherprize();
  if (otherprize_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = otherprize_;
    otherprize_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlayerScore::set_allocated_otherprize(::std::string* otherprize) {
  if (otherprize_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete otherprize_;
  }
  if (otherprize) {
    set_has_otherprize();
    otherprize_ = otherprize;
  } else {
    clear_has_otherprize();
    otherprize_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PlayerScore.OtherPrize)
}

// optional int64 PlayTime = 6;
inline bool PlayerScore::has_playtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerScore::set_has_playtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerScore::clear_has_playtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerScore::clear_playtime() {
  playtime_ = GOOGLE_LONGLONG(0);
  clear_has_playtime();
}
inline ::google_public::protobuf::int64 PlayerScore::playtime() const {
  // @@protoc_insertion_point(field_get:msg.PlayerScore.PlayTime)
  return playtime_;
}
inline void PlayerScore::set_playtime(::google_public::protobuf::int64 value) {
  set_has_playtime();
  playtime_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerScore.PlayTime)
}

// optional int32 PlayHands = 7;
inline bool PlayerScore::has_playhands() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerScore::set_has_playhands() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerScore::clear_has_playhands() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerScore::clear_playhands() {
  playhands_ = 0;
  clear_has_playhands();
}
inline ::google_public::protobuf::int32 PlayerScore::playhands() const {
  // @@protoc_insertion_point(field_get:msg.PlayerScore.PlayHands)
  return playhands_;
}
inline void PlayerScore::set_playhands(::google_public::protobuf::int32 value) {
  set_has_playhands();
  playhands_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerScore.PlayHands)
}

// optional int32 HPLost = 8;
inline bool PlayerScore::has_hplost() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerScore::set_has_hplost() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerScore::clear_has_hplost() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerScore::clear_hplost() {
  hplost_ = 0;
  clear_has_hplost();
}
inline ::google_public::protobuf::int32 PlayerScore::hplost() const {
  // @@protoc_insertion_point(field_get:msg.PlayerScore.HPLost)
  return hplost_;
}
inline void PlayerScore::set_hplost(::google_public::protobuf::int32 value) {
  set_has_hplost();
  hplost_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerScore.HPLost)
}

// -------------------------------------------------------------------

// PlayerScores

// repeated .msg.PlayerScore Score = 1;
inline int PlayerScores::score_size() const {
  return score_.size();
}
inline void PlayerScores::clear_score() {
  score_.Clear();
}
inline const ::msg::PlayerScore& PlayerScores::score(int index) const {
  // @@protoc_insertion_point(field_get:msg.PlayerScores.Score)
  return score_.Get(index);
}
inline ::msg::PlayerScore* PlayerScores::mutable_score(int index) {
  // @@protoc_insertion_point(field_mutable:msg.PlayerScores.Score)
  return score_.Mutable(index);
}
inline ::msg::PlayerScore* PlayerScores::add_score() {
  // @@protoc_insertion_point(field_add:msg.PlayerScores.Score)
  return score_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore >&
PlayerScores::score() const {
  // @@protoc_insertion_point(field_list:msg.PlayerScores.Score)
  return score_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore >*
PlayerScores::mutable_score() {
  // @@protoc_insertion_point(field_mutable_list:msg.PlayerScores.Score)
  return &score_;
}

// -------------------------------------------------------------------

// Processor_420_PokerGetScore_DOWN

// optional int32 RoomID = 1;
inline bool Processor_420_PokerGetScore_DOWN::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_420_PokerGetScore_DOWN::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_420_PokerGetScore_DOWN::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_420_PokerGetScore_DOWN.RoomID)
  return roomid_;
}
inline void Processor_420_PokerGetScore_DOWN::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_420_PokerGetScore_DOWN.RoomID)
}

// optional string RoomName = 2;
inline bool Processor_420_PokerGetScore_DOWN::has_roomname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_420_PokerGetScore_DOWN::set_has_roomname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_roomname() {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_->clear();
  }
  clear_has_roomname();
}
inline const ::std::string& Processor_420_PokerGetScore_DOWN::roomname() const {
  // @@protoc_insertion_point(field_get:msg.Processor_420_PokerGetScore_DOWN.RoomName)
  return *roomname_;
}
inline void Processor_420_PokerGetScore_DOWN::set_roomname(const ::std::string& value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_420_PokerGetScore_DOWN.RoomName)
}
inline void Processor_420_PokerGetScore_DOWN::set_roomname(const char* value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_420_PokerGetScore_DOWN.RoomName)
}
inline void Processor_420_PokerGetScore_DOWN::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_420_PokerGetScore_DOWN.RoomName)
}
inline ::std::string* Processor_420_PokerGetScore_DOWN::mutable_roomname() {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_420_PokerGetScore_DOWN.RoomName)
  return roomname_;
}
inline ::std::string* Processor_420_PokerGetScore_DOWN::release_roomname() {
  clear_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomname_;
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_420_PokerGetScore_DOWN::set_allocated_roomname(::std::string* roomname) {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomname_;
  }
  if (roomname) {
    set_has_roomname();
    roomname_ = roomname;
  } else {
    clear_has_roomname();
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_420_PokerGetScore_DOWN.RoomName)
}

// optional string RoomNote = 3;
inline bool Processor_420_PokerGetScore_DOWN::has_roomnote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_420_PokerGetScore_DOWN::set_has_roomnote() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_has_roomnote() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_roomnote() {
  if (roomnote_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_->clear();
  }
  clear_has_roomnote();
}
inline const ::std::string& Processor_420_PokerGetScore_DOWN::roomnote() const {
  // @@protoc_insertion_point(field_get:msg.Processor_420_PokerGetScore_DOWN.RoomNote)
  return *roomnote_;
}
inline void Processor_420_PokerGetScore_DOWN::set_roomnote(const ::std::string& value) {
  set_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_ = new ::std::string;
  }
  roomnote_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_420_PokerGetScore_DOWN.RoomNote)
}
inline void Processor_420_PokerGetScore_DOWN::set_roomnote(const char* value) {
  set_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_ = new ::std::string;
  }
  roomnote_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_420_PokerGetScore_DOWN.RoomNote)
}
inline void Processor_420_PokerGetScore_DOWN::set_roomnote(const char* value, size_t size) {
  set_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_ = new ::std::string;
  }
  roomnote_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_420_PokerGetScore_DOWN.RoomNote)
}
inline ::std::string* Processor_420_PokerGetScore_DOWN::mutable_roomnote() {
  set_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomnote_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_420_PokerGetScore_DOWN.RoomNote)
  return roomnote_;
}
inline ::std::string* Processor_420_PokerGetScore_DOWN::release_roomnote() {
  clear_has_roomnote();
  if (roomnote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomnote_;
    roomnote_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_420_PokerGetScore_DOWN::set_allocated_roomnote(::std::string* roomnote) {
  if (roomnote_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomnote_;
  }
  if (roomnote) {
    set_has_roomnote();
    roomnote_ = roomnote;
  } else {
    clear_has_roomnote();
    roomnote_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_420_PokerGetScore_DOWN.RoomNote)
}

// optional string Time = 4;
inline bool Processor_420_PokerGetScore_DOWN::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_420_PokerGetScore_DOWN::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_time() {
  if (time_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_->clear();
  }
  clear_has_time();
}
inline const ::std::string& Processor_420_PokerGetScore_DOWN::time() const {
  // @@protoc_insertion_point(field_get:msg.Processor_420_PokerGetScore_DOWN.Time)
  return *time_;
}
inline void Processor_420_PokerGetScore_DOWN::set_time(const ::std::string& value) {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_420_PokerGetScore_DOWN.Time)
}
inline void Processor_420_PokerGetScore_DOWN::set_time(const char* value) {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_420_PokerGetScore_DOWN.Time)
}
inline void Processor_420_PokerGetScore_DOWN::set_time(const char* value, size_t size) {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_420_PokerGetScore_DOWN.Time)
}
inline ::std::string* Processor_420_PokerGetScore_DOWN::mutable_time() {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_420_PokerGetScore_DOWN.Time)
  return time_;
}
inline ::std::string* Processor_420_PokerGetScore_DOWN::release_time() {
  clear_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = time_;
    time_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_420_PokerGetScore_DOWN::set_allocated_time(::std::string* time) {
  if (time_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete time_;
  }
  if (time) {
    set_has_time();
    time_ = time;
  } else {
    clear_has_time();
    time_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_420_PokerGetScore_DOWN.Time)
}

// optional int32 HandCount = 5;
inline bool Processor_420_PokerGetScore_DOWN::has_handcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_420_PokerGetScore_DOWN::set_has_handcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_has_handcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_handcount() {
  handcount_ = 0;
  clear_has_handcount();
}
inline ::google_public::protobuf::int32 Processor_420_PokerGetScore_DOWN::handcount() const {
  // @@protoc_insertion_point(field_get:msg.Processor_420_PokerGetScore_DOWN.HandCount)
  return handcount_;
}
inline void Processor_420_PokerGetScore_DOWN::set_handcount(::google_public::protobuf::int32 value) {
  set_has_handcount();
  handcount_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_420_PokerGetScore_DOWN.HandCount)
}

// optional .msg.PlayerScores PlayerScores = 6;
inline bool Processor_420_PokerGetScore_DOWN::has_playerscores() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Processor_420_PokerGetScore_DOWN::set_has_playerscores() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_has_playerscores() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_playerscores() {
  if (playerscores_ != NULL) playerscores_->::msg::PlayerScores::Clear();
  clear_has_playerscores();
}
inline const ::msg::PlayerScores& Processor_420_PokerGetScore_DOWN::playerscores() const {
  // @@protoc_insertion_point(field_get:msg.Processor_420_PokerGetScore_DOWN.PlayerScores)
  return playerscores_ != NULL ? *playerscores_ : *default_instance_->playerscores_;
}
inline ::msg::PlayerScores* Processor_420_PokerGetScore_DOWN::mutable_playerscores() {
  set_has_playerscores();
  if (playerscores_ == NULL) playerscores_ = new ::msg::PlayerScores;
  // @@protoc_insertion_point(field_mutable:msg.Processor_420_PokerGetScore_DOWN.PlayerScores)
  return playerscores_;
}
inline ::msg::PlayerScores* Processor_420_PokerGetScore_DOWN::release_playerscores() {
  clear_has_playerscores();
  ::msg::PlayerScores* temp = playerscores_;
  playerscores_ = NULL;
  return temp;
}
inline void Processor_420_PokerGetScore_DOWN::set_allocated_playerscores(::msg::PlayerScores* playerscores) {
  delete playerscores_;
  playerscores_ = playerscores;
  if (playerscores) {
    set_has_playerscores();
  } else {
    clear_has_playerscores();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_420_PokerGetScore_DOWN.PlayerScores)
}

// optional .msg.RoomType RoomType = 7;
inline bool Processor_420_PokerGetScore_DOWN::has_roomtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Processor_420_PokerGetScore_DOWN::set_has_roomtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::msg::RoomType Processor_420_PokerGetScore_DOWN::roomtype() const {
  // @@protoc_insertion_point(field_get:msg.Processor_420_PokerGetScore_DOWN.RoomType)
  return static_cast< ::msg::RoomType >(roomtype_);
}
inline void Processor_420_PokerGetScore_DOWN::set_roomtype(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_420_PokerGetScore_DOWN.RoomType)
}

// optional bool IsTournament = 8;
inline bool Processor_420_PokerGetScore_DOWN::has_istournament() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Processor_420_PokerGetScore_DOWN::set_has_istournament() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_has_istournament() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Processor_420_PokerGetScore_DOWN::clear_istournament() {
  istournament_ = false;
  clear_has_istournament();
}
inline bool Processor_420_PokerGetScore_DOWN::istournament() const {
  // @@protoc_insertion_point(field_get:msg.Processor_420_PokerGetScore_DOWN.IsTournament)
  return istournament_;
}
inline void Processor_420_PokerGetScore_DOWN::set_istournament(bool value) {
  set_has_istournament();
  istournament_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_420_PokerGetScore_DOWN.IsTournament)
}

// -------------------------------------------------------------------

// Processor_430_SendGameVoice

// optional int32 RoomId = 1;
inline bool Processor_430_SendGameVoice::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_430_SendGameVoice::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_430_SendGameVoice::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_430_SendGameVoice::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_430_SendGameVoice::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_430_SendGameVoice.RoomId)
  return roomid_;
}
inline void Processor_430_SendGameVoice::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_430_SendGameVoice.RoomId)
}

// optional string Voice = 2;
inline bool Processor_430_SendGameVoice::has_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_430_SendGameVoice::set_has_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_430_SendGameVoice::clear_has_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_430_SendGameVoice::clear_voice() {
  if (voice_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_->clear();
  }
  clear_has_voice();
}
inline const ::std::string& Processor_430_SendGameVoice::voice() const {
  // @@protoc_insertion_point(field_get:msg.Processor_430_SendGameVoice.Voice)
  return *voice_;
}
inline void Processor_430_SendGameVoice::set_voice(const ::std::string& value) {
  set_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  voice_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_430_SendGameVoice.Voice)
}
inline void Processor_430_SendGameVoice::set_voice(const char* value) {
  set_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  voice_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_430_SendGameVoice.Voice)
}
inline void Processor_430_SendGameVoice::set_voice(const char* value, size_t size) {
  set_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  voice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_430_SendGameVoice.Voice)
}
inline ::std::string* Processor_430_SendGameVoice::mutable_voice() {
  set_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_430_SendGameVoice.Voice)
  return voice_;
}
inline ::std::string* Processor_430_SendGameVoice::release_voice() {
  clear_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = voice_;
    voice_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_430_SendGameVoice::set_allocated_voice(::std::string* voice) {
  if (voice_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete voice_;
  }
  if (voice) {
    set_has_voice();
    voice_ = voice;
  } else {
    clear_has_voice();
    voice_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_430_SendGameVoice.Voice)
}

// optional string Time = 3;
inline bool Processor_430_SendGameVoice::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_430_SendGameVoice::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_430_SendGameVoice::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_430_SendGameVoice::clear_time() {
  if (time_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_->clear();
  }
  clear_has_time();
}
inline const ::std::string& Processor_430_SendGameVoice::time() const {
  // @@protoc_insertion_point(field_get:msg.Processor_430_SendGameVoice.Time)
  return *time_;
}
inline void Processor_430_SendGameVoice::set_time(const ::std::string& value) {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_430_SendGameVoice.Time)
}
inline void Processor_430_SendGameVoice::set_time(const char* value) {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_430_SendGameVoice.Time)
}
inline void Processor_430_SendGameVoice::set_time(const char* value, size_t size) {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_430_SendGameVoice.Time)
}
inline ::std::string* Processor_430_SendGameVoice::mutable_time() {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_430_SendGameVoice.Time)
  return time_;
}
inline ::std::string* Processor_430_SendGameVoice::release_time() {
  clear_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = time_;
    time_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_430_SendGameVoice::set_allocated_time(::std::string* time) {
  if (time_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete time_;
  }
  if (time) {
    set_has_time();
    time_ = time;
  } else {
    clear_has_time();
    time_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_430_SendGameVoice.Time)
}

// -------------------------------------------------------------------

// Processor_431_ReceiveGameVoice

// optional int32 RoomId = 1;
inline bool Processor_431_ReceiveGameVoice::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_431_ReceiveGameVoice::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_431_ReceiveGameVoice::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_431_ReceiveGameVoice::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_431_ReceiveGameVoice::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_431_ReceiveGameVoice.RoomId)
  return roomid_;
}
inline void Processor_431_ReceiveGameVoice::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_431_ReceiveGameVoice.RoomId)
}

// optional int32 UserID = 2;
inline bool Processor_431_ReceiveGameVoice::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_431_ReceiveGameVoice::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_431_ReceiveGameVoice::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_431_ReceiveGameVoice::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_431_ReceiveGameVoice::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_431_ReceiveGameVoice.UserID)
  return userid_;
}
inline void Processor_431_ReceiveGameVoice::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_431_ReceiveGameVoice.UserID)
}

// optional string Voice = 3;
inline bool Processor_431_ReceiveGameVoice::has_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_431_ReceiveGameVoice::set_has_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_431_ReceiveGameVoice::clear_has_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_431_ReceiveGameVoice::clear_voice() {
  if (voice_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_->clear();
  }
  clear_has_voice();
}
inline const ::std::string& Processor_431_ReceiveGameVoice::voice() const {
  // @@protoc_insertion_point(field_get:msg.Processor_431_ReceiveGameVoice.Voice)
  return *voice_;
}
inline void Processor_431_ReceiveGameVoice::set_voice(const ::std::string& value) {
  set_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  voice_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_431_ReceiveGameVoice.Voice)
}
inline void Processor_431_ReceiveGameVoice::set_voice(const char* value) {
  set_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  voice_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_431_ReceiveGameVoice.Voice)
}
inline void Processor_431_ReceiveGameVoice::set_voice(const char* value, size_t size) {
  set_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  voice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_431_ReceiveGameVoice.Voice)
}
inline ::std::string* Processor_431_ReceiveGameVoice::mutable_voice() {
  set_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_431_ReceiveGameVoice.Voice)
  return voice_;
}
inline ::std::string* Processor_431_ReceiveGameVoice::release_voice() {
  clear_has_voice();
  if (voice_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = voice_;
    voice_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_431_ReceiveGameVoice::set_allocated_voice(::std::string* voice) {
  if (voice_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete voice_;
  }
  if (voice) {
    set_has_voice();
    voice_ = voice;
  } else {
    clear_has_voice();
    voice_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_431_ReceiveGameVoice.Voice)
}

// optional string Time = 4;
inline bool Processor_431_ReceiveGameVoice::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_431_ReceiveGameVoice::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_431_ReceiveGameVoice::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_431_ReceiveGameVoice::clear_time() {
  if (time_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_->clear();
  }
  clear_has_time();
}
inline const ::std::string& Processor_431_ReceiveGameVoice::time() const {
  // @@protoc_insertion_point(field_get:msg.Processor_431_ReceiveGameVoice.Time)
  return *time_;
}
inline void Processor_431_ReceiveGameVoice::set_time(const ::std::string& value) {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_431_ReceiveGameVoice.Time)
}
inline void Processor_431_ReceiveGameVoice::set_time(const char* value) {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_431_ReceiveGameVoice.Time)
}
inline void Processor_431_ReceiveGameVoice::set_time(const char* value, size_t size) {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_431_ReceiveGameVoice.Time)
}
inline ::std::string* Processor_431_ReceiveGameVoice::mutable_time() {
  set_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_431_ReceiveGameVoice.Time)
  return time_;
}
inline ::std::string* Processor_431_ReceiveGameVoice::release_time() {
  clear_has_time();
  if (time_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = time_;
    time_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_431_ReceiveGameVoice::set_allocated_time(::std::string* time) {
  if (time_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete time_;
  }
  if (time) {
    set_has_time();
    time_ = time;
  } else {
    clear_has_time();
    time_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_431_ReceiveGameVoice.Time)
}

// -------------------------------------------------------------------

// Processor_440_SetGameStatus

// optional int32 RoomId = 1;
inline bool Processor_440_SetGameStatus::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_440_SetGameStatus::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_440_SetGameStatus::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_440_SetGameStatus::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_440_SetGameStatus::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_440_SetGameStatus.RoomId)
  return roomid_;
}
inline void Processor_440_SetGameStatus::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_440_SetGameStatus.RoomId)
}

// optional .msg.GameStatus status = 2;
inline bool Processor_440_SetGameStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_440_SetGameStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_440_SetGameStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_440_SetGameStatus::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::msg::GameStatus Processor_440_SetGameStatus::status() const {
  // @@protoc_insertion_point(field_get:msg.Processor_440_SetGameStatus.status)
  return static_cast< ::msg::GameStatus >(status_);
}
inline void Processor_440_SetGameStatus::set_status(::msg::GameStatus value) {
  assert(::msg::GameStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_440_SetGameStatus.status)
}

// -------------------------------------------------------------------

// Processor_441_KickPlayer

// optional int32 RoomId = 1;
inline bool Processor_441_KickPlayer::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_441_KickPlayer::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_441_KickPlayer::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_441_KickPlayer::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_441_KickPlayer::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_441_KickPlayer.RoomId)
  return roomid_;
}
inline void Processor_441_KickPlayer::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_441_KickPlayer.RoomId)
}

// optional int32 KickUserID = 2;
inline bool Processor_441_KickPlayer::has_kickuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_441_KickPlayer::set_has_kickuserid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_441_KickPlayer::clear_has_kickuserid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_441_KickPlayer::clear_kickuserid() {
  kickuserid_ = 0;
  clear_has_kickuserid();
}
inline ::google_public::protobuf::int32 Processor_441_KickPlayer::kickuserid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_441_KickPlayer.KickUserID)
  return kickuserid_;
}
inline void Processor_441_KickPlayer::set_kickuserid(::google_public::protobuf::int32 value) {
  set_has_kickuserid();
  kickuserid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_441_KickPlayer.KickUserID)
}

// -------------------------------------------------------------------

// Processor_442_ReceiveGameStatus

// optional int32 RoomId = 1;
inline bool Processor_442_ReceiveGameStatus::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_442_ReceiveGameStatus::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_442_ReceiveGameStatus::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_442_ReceiveGameStatus::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_442_ReceiveGameStatus::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_442_ReceiveGameStatus.RoomId)
  return roomid_;
}
inline void Processor_442_ReceiveGameStatus::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_442_ReceiveGameStatus.RoomId)
}

// optional .msg.GameStatus status = 2;
inline bool Processor_442_ReceiveGameStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_442_ReceiveGameStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_442_ReceiveGameStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_442_ReceiveGameStatus::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::msg::GameStatus Processor_442_ReceiveGameStatus::status() const {
  // @@protoc_insertion_point(field_get:msg.Processor_442_ReceiveGameStatus.status)
  return static_cast< ::msg::GameStatus >(status_);
}
inline void Processor_442_ReceiveGameStatus::set_status(::msg::GameStatus value) {
  assert(::msg::GameStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_442_ReceiveGameStatus.status)
}

// -------------------------------------------------------------------

// Processor_490_ReceiveRoomClose

// optional int32 RoomId = 1;
inline bool Processor_490_ReceiveRoomClose::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_490_ReceiveRoomClose::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_490_ReceiveRoomClose::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_490_ReceiveRoomClose::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_490_ReceiveRoomClose::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_490_ReceiveRoomClose.RoomId)
  return roomid_;
}
inline void Processor_490_ReceiveRoomClose::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_490_ReceiveRoomClose.RoomId)
}

// -------------------------------------------------------------------

// Processor_491_ReceiveRoomMessage

// optional int32 RoomId = 1;
inline bool Processor_491_ReceiveRoomMessage::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_491_ReceiveRoomMessage::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_491_ReceiveRoomMessage::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_491_ReceiveRoomMessage::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_491_ReceiveRoomMessage::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_491_ReceiveRoomMessage.RoomId)
  return roomid_;
}
inline void Processor_491_ReceiveRoomMessage::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_491_ReceiveRoomMessage.RoomId)
}

// optional string Message = 2;
inline bool Processor_491_ReceiveRoomMessage::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_491_ReceiveRoomMessage::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_491_ReceiveRoomMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_491_ReceiveRoomMessage::clear_message() {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& Processor_491_ReceiveRoomMessage::message() const {
  // @@protoc_insertion_point(field_get:msg.Processor_491_ReceiveRoomMessage.Message)
  return *message_;
}
inline void Processor_491_ReceiveRoomMessage::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_491_ReceiveRoomMessage.Message)
}
inline void Processor_491_ReceiveRoomMessage::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_491_ReceiveRoomMessage.Message)
}
inline void Processor_491_ReceiveRoomMessage::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_491_ReceiveRoomMessage.Message)
}
inline ::std::string* Processor_491_ReceiveRoomMessage::mutable_message() {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_491_ReceiveRoomMessage.Message)
  return message_;
}
inline ::std::string* Processor_491_ReceiveRoomMessage::release_message() {
  clear_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_491_ReceiveRoomMessage::set_allocated_message(::std::string* message) {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_491_ReceiveRoomMessage.Message)
}

// -------------------------------------------------------------------

// Processor_495_ReceiveRequest

// optional string message = 1;
inline bool Processor_495_ReceiveRequest::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_495_ReceiveRequest::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_495_ReceiveRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_495_ReceiveRequest::clear_message() {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& Processor_495_ReceiveRequest::message() const {
  // @@protoc_insertion_point(field_get:msg.Processor_495_ReceiveRequest.message)
  return *message_;
}
inline void Processor_495_ReceiveRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_495_ReceiveRequest.message)
}
inline void Processor_495_ReceiveRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_495_ReceiveRequest.message)
}
inline void Processor_495_ReceiveRequest::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_495_ReceiveRequest.message)
}
inline ::std::string* Processor_495_ReceiveRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_495_ReceiveRequest.message)
  return message_;
}
inline ::std::string* Processor_495_ReceiveRequest::release_message() {
  clear_has_message();
  if (message_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_495_ReceiveRequest::set_allocated_message(::std::string* message) {
  if (message_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_495_ReceiveRequest.message)
}

// optional int32 id = 2;
inline bool Processor_495_ReceiveRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_495_ReceiveRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_495_ReceiveRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_495_ReceiveRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google_public::protobuf::int32 Processor_495_ReceiveRequest::id() const {
  // @@protoc_insertion_point(field_get:msg.Processor_495_ReceiveRequest.id)
  return id_;
}
inline void Processor_495_ReceiveRequest::set_id(::google_public::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_495_ReceiveRequest.id)
}

// -------------------------------------------------------------------

// Processor_496_ReplyRequest

// optional bool choice = 1;
inline bool Processor_496_ReplyRequest::has_choice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_496_ReplyRequest::set_has_choice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_496_ReplyRequest::clear_has_choice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_496_ReplyRequest::clear_choice() {
  choice_ = false;
  clear_has_choice();
}
inline bool Processor_496_ReplyRequest::choice() const {
  // @@protoc_insertion_point(field_get:msg.Processor_496_ReplyRequest.choice)
  return choice_;
}
inline void Processor_496_ReplyRequest::set_choice(bool value) {
  set_has_choice();
  choice_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_496_ReplyRequest.choice)
}

// optional int32 id = 2;
inline bool Processor_496_ReplyRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_496_ReplyRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_496_ReplyRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_496_ReplyRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google_public::protobuf::int32 Processor_496_ReplyRequest::id() const {
  // @@protoc_insertion_point(field_get:msg.Processor_496_ReplyRequest.id)
  return id_;
}
inline void Processor_496_ReplyRequest::set_id(::google_public::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_496_ReplyRequest.id)
}

// -------------------------------------------------------------------

// CommonRoomInfo

// optional int32 OwnerID = 1;
inline bool CommonRoomInfo::has_ownerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonRoomInfo::set_has_ownerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonRoomInfo::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonRoomInfo::clear_ownerid() {
  ownerid_ = 0;
  clear_has_ownerid();
}
inline ::google_public::protobuf::int32 CommonRoomInfo::ownerid() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.OwnerID)
  return ownerid_;
}
inline void CommonRoomInfo::set_ownerid(::google_public::protobuf::int32 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.OwnerID)
}

// optional .msg.GameStatus Status = 2;
inline bool CommonRoomInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommonRoomInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommonRoomInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommonRoomInfo::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::msg::GameStatus CommonRoomInfo::status() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.Status)
  return static_cast< ::msg::GameStatus >(status_);
}
inline void CommonRoomInfo::set_status(::msg::GameStatus value) {
  assert(::msg::GameStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.Status)
}

// optional int32 MaxSeatNum = 3;
inline bool CommonRoomInfo::has_maxseatnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommonRoomInfo::set_has_maxseatnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommonRoomInfo::clear_has_maxseatnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommonRoomInfo::clear_maxseatnum() {
  maxseatnum_ = 0;
  clear_has_maxseatnum();
}
inline ::google_public::protobuf::int32 CommonRoomInfo::maxseatnum() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.MaxSeatNum)
  return maxseatnum_;
}
inline void CommonRoomInfo::set_maxseatnum(::google_public::protobuf::int32 value) {
  set_has_maxseatnum();
  maxseatnum_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.MaxSeatNum)
}

// optional int32 HandID = 4;
inline bool CommonRoomInfo::has_handid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CommonRoomInfo::set_has_handid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CommonRoomInfo::clear_has_handid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CommonRoomInfo::clear_handid() {
  handid_ = 0;
  clear_has_handid();
}
inline ::google_public::protobuf::int32 CommonRoomInfo::handid() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.HandID)
  return handid_;
}
inline void CommonRoomInfo::set_handid(::google_public::protobuf::int32 value) {
  set_has_handid();
  handid_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.HandID)
}

// optional string TableNote = 5;
inline bool CommonRoomInfo::has_tablenote() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CommonRoomInfo::set_has_tablenote() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CommonRoomInfo::clear_has_tablenote() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CommonRoomInfo::clear_tablenote() {
  if (tablenote_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_->clear();
  }
  clear_has_tablenote();
}
inline const ::std::string& CommonRoomInfo::tablenote() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.TableNote)
  return *tablenote_;
}
inline void CommonRoomInfo::set_tablenote(const ::std::string& value) {
  set_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_ = new ::std::string;
  }
  tablenote_->assign(value);
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.TableNote)
}
inline void CommonRoomInfo::set_tablenote(const char* value) {
  set_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_ = new ::std::string;
  }
  tablenote_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.CommonRoomInfo.TableNote)
}
inline void CommonRoomInfo::set_tablenote(const char* value, size_t size) {
  set_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_ = new ::std::string;
  }
  tablenote_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.CommonRoomInfo.TableNote)
}
inline ::std::string* CommonRoomInfo::mutable_tablenote() {
  set_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.CommonRoomInfo.TableNote)
  return tablenote_;
}
inline ::std::string* CommonRoomInfo::release_tablenote() {
  clear_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tablenote_;
    tablenote_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CommonRoomInfo::set_allocated_tablenote(::std::string* tablenote) {
  if (tablenote_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablenote_;
  }
  if (tablenote) {
    set_has_tablenote();
    tablenote_ = tablenote;
  } else {
    clear_has_tablenote();
    tablenote_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CommonRoomInfo.TableNote)
}

// optional .msg.RoomType RoomType = 6;
inline bool CommonRoomInfo::has_roomtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CommonRoomInfo::set_has_roomtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CommonRoomInfo::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CommonRoomInfo::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::msg::RoomType CommonRoomInfo::roomtype() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.RoomType)
  return static_cast< ::msg::RoomType >(roomtype_);
}
inline void CommonRoomInfo::set_roomtype(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.RoomType)
}

// optional int32 RoomId = 7;
inline bool CommonRoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CommonRoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CommonRoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CommonRoomInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 CommonRoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.RoomId)
  return roomid_;
}
inline void CommonRoomInfo::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.RoomId)
}

// optional int32 GroupId = 8;
inline bool CommonRoomInfo::has_groupid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CommonRoomInfo::set_has_groupid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CommonRoomInfo::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CommonRoomInfo::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google_public::protobuf::int32 CommonRoomInfo::groupid() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.GroupId)
  return groupid_;
}
inline void CommonRoomInfo::set_groupid(::google_public::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.GroupId)
}

// optional int32 DealerPos = 9;
inline bool CommonRoomInfo::has_dealerpos() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CommonRoomInfo::set_has_dealerpos() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CommonRoomInfo::clear_has_dealerpos() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CommonRoomInfo::clear_dealerpos() {
  dealerpos_ = 0;
  clear_has_dealerpos();
}
inline ::google_public::protobuf::int32 CommonRoomInfo::dealerpos() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.DealerPos)
  return dealerpos_;
}
inline void CommonRoomInfo::set_dealerpos(::google_public::protobuf::int32 value) {
  set_has_dealerpos();
  dealerpos_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.DealerPos)
}

// optional bool IsManager = 10;
inline bool CommonRoomInfo::has_ismanager() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CommonRoomInfo::set_has_ismanager() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CommonRoomInfo::clear_has_ismanager() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CommonRoomInfo::clear_ismanager() {
  ismanager_ = false;
  clear_has_ismanager();
}
inline bool CommonRoomInfo::ismanager() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.IsManager)
  return ismanager_;
}
inline void CommonRoomInfo::set_ismanager(bool value) {
  set_has_ismanager();
  ismanager_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.IsManager)
}

// optional bool IsPlaying = 11;
inline bool CommonRoomInfo::has_isplaying() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CommonRoomInfo::set_has_isplaying() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CommonRoomInfo::clear_has_isplaying() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CommonRoomInfo::clear_isplaying() {
  isplaying_ = false;
  clear_has_isplaying();
}
inline bool CommonRoomInfo::isplaying() const {
  // @@protoc_insertion_point(field_get:msg.CommonRoomInfo.IsPlaying)
  return isplaying_;
}
inline void CommonRoomInfo::set_isplaying(bool value) {
  set_has_isplaying();
  isplaying_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonRoomInfo.IsPlaying)
}

// -------------------------------------------------------------------

// CommonPlayerInfo

// optional .msg.UserDetailInfo UserInfo = 1;
inline bool CommonPlayerInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonPlayerInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonPlayerInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonPlayerInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userinfo();
}
inline const ::msg::UserDetailInfo& CommonPlayerInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:msg.CommonPlayerInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::msg::UserDetailInfo* CommonPlayerInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.CommonPlayerInfo.UserInfo)
  return userinfo_;
}
inline ::msg::UserDetailInfo* CommonPlayerInfo::release_userinfo() {
  clear_has_userinfo();
  ::msg::UserDetailInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void CommonPlayerInfo::set_allocated_userinfo(::msg::UserDetailInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CommonPlayerInfo.UserInfo)
}

// optional .msg.SittingStatus SittingStatus = 2;
inline bool CommonPlayerInfo::has_sittingstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommonPlayerInfo::set_has_sittingstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommonPlayerInfo::clear_has_sittingstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommonPlayerInfo::clear_sittingstatus() {
  sittingstatus_ = 0;
  clear_has_sittingstatus();
}
inline ::msg::SittingStatus CommonPlayerInfo::sittingstatus() const {
  // @@protoc_insertion_point(field_get:msg.CommonPlayerInfo.SittingStatus)
  return static_cast< ::msg::SittingStatus >(sittingstatus_);
}
inline void CommonPlayerInfo::set_sittingstatus(::msg::SittingStatus value) {
  assert(::msg::SittingStatus_IsValid(value));
  set_has_sittingstatus();
  sittingstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonPlayerInfo.SittingStatus)
}

// optional int32 SitNum = 3;
inline bool CommonPlayerInfo::has_sitnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommonPlayerInfo::set_has_sitnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommonPlayerInfo::clear_has_sitnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommonPlayerInfo::clear_sitnum() {
  sitnum_ = 0;
  clear_has_sitnum();
}
inline ::google_public::protobuf::int32 CommonPlayerInfo::sitnum() const {
  // @@protoc_insertion_point(field_get:msg.CommonPlayerInfo.SitNum)
  return sitnum_;
}
inline void CommonPlayerInfo::set_sitnum(::google_public::protobuf::int32 value) {
  set_has_sitnum();
  sitnum_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonPlayerInfo.SitNum)
}

// optional bool AutoAction = 4;
inline bool CommonPlayerInfo::has_autoaction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CommonPlayerInfo::set_has_autoaction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CommonPlayerInfo::clear_has_autoaction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CommonPlayerInfo::clear_autoaction() {
  autoaction_ = false;
  clear_has_autoaction();
}
inline bool CommonPlayerInfo::autoaction() const {
  // @@protoc_insertion_point(field_get:msg.CommonPlayerInfo.AutoAction)
  return autoaction_;
}
inline void CommonPlayerInfo::set_autoaction(bool value) {
  set_has_autoaction();
  autoaction_ = value;
  // @@protoc_insertion_point(field_set:msg.CommonPlayerInfo.AutoAction)
}

// -------------------------------------------------------------------

// Processor_500_PokerRefreshAll

// optional .msg.CommonRoomInfo CommonRoomInfo = 1;
inline bool Processor_500_PokerRefreshAll::has_commonroominfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_500_PokerRefreshAll::set_has_commonroominfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_500_PokerRefreshAll::clear_has_commonroominfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_500_PokerRefreshAll::clear_commonroominfo() {
  if (commonroominfo_ != NULL) commonroominfo_->::msg::CommonRoomInfo::Clear();
  clear_has_commonroominfo();
}
inline const ::msg::CommonRoomInfo& Processor_500_PokerRefreshAll::commonroominfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_500_PokerRefreshAll.CommonRoomInfo)
  return commonroominfo_ != NULL ? *commonroominfo_ : *default_instance_->commonroominfo_;
}
inline ::msg::CommonRoomInfo* Processor_500_PokerRefreshAll::mutable_commonroominfo() {
  set_has_commonroominfo();
  if (commonroominfo_ == NULL) commonroominfo_ = new ::msg::CommonRoomInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_500_PokerRefreshAll.CommonRoomInfo)
  return commonroominfo_;
}
inline ::msg::CommonRoomInfo* Processor_500_PokerRefreshAll::release_commonroominfo() {
  clear_has_commonroominfo();
  ::msg::CommonRoomInfo* temp = commonroominfo_;
  commonroominfo_ = NULL;
  return temp;
}
inline void Processor_500_PokerRefreshAll::set_allocated_commonroominfo(::msg::CommonRoomInfo* commonroominfo) {
  delete commonroominfo_;
  commonroominfo_ = commonroominfo;
  if (commonroominfo) {
    set_has_commonroominfo();
  } else {
    clear_has_commonroominfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_500_PokerRefreshAll.CommonRoomInfo)
}

// optional int32 MinBuy = 2;
inline bool Processor_500_PokerRefreshAll::has_minbuy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_500_PokerRefreshAll::set_has_minbuy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_500_PokerRefreshAll::clear_has_minbuy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_500_PokerRefreshAll::clear_minbuy() {
  minbuy_ = 0;
  clear_has_minbuy();
}
inline ::google_public::protobuf::int32 Processor_500_PokerRefreshAll::minbuy() const {
  // @@protoc_insertion_point(field_get:msg.Processor_500_PokerRefreshAll.MinBuy)
  return minbuy_;
}
inline void Processor_500_PokerRefreshAll::set_minbuy(::google_public::protobuf::int32 value) {
  set_has_minbuy();
  minbuy_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_500_PokerRefreshAll.MinBuy)
}

// optional int32 MaxBuy = 3;
inline bool Processor_500_PokerRefreshAll::has_maxbuy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_500_PokerRefreshAll::set_has_maxbuy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_500_PokerRefreshAll::clear_has_maxbuy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_500_PokerRefreshAll::clear_maxbuy() {
  maxbuy_ = 0;
  clear_has_maxbuy();
}
inline ::google_public::protobuf::int32 Processor_500_PokerRefreshAll::maxbuy() const {
  // @@protoc_insertion_point(field_get:msg.Processor_500_PokerRefreshAll.MaxBuy)
  return maxbuy_;
}
inline void Processor_500_PokerRefreshAll::set_maxbuy(::google_public::protobuf::int32 value) {
  set_has_maxbuy();
  maxbuy_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_500_PokerRefreshAll.MaxBuy)
}

// optional int32 BuyUnit = 4;
inline bool Processor_500_PokerRefreshAll::has_buyunit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_500_PokerRefreshAll::set_has_buyunit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_500_PokerRefreshAll::clear_has_buyunit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_500_PokerRefreshAll::clear_buyunit() {
  buyunit_ = 0;
  clear_has_buyunit();
}
inline ::google_public::protobuf::int32 Processor_500_PokerRefreshAll::buyunit() const {
  // @@protoc_insertion_point(field_get:msg.Processor_500_PokerRefreshAll.BuyUnit)
  return buyunit_;
}
inline void Processor_500_PokerRefreshAll::set_buyunit(::google_public::protobuf::int32 value) {
  set_has_buyunit();
  buyunit_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_500_PokerRefreshAll.BuyUnit)
}

// optional .msg.TableAndUserUpdate PropUpdate = 5;
inline bool Processor_500_PokerRefreshAll::has_propupdate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_500_PokerRefreshAll::set_has_propupdate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_500_PokerRefreshAll::clear_has_propupdate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_500_PokerRefreshAll::clear_propupdate() {
  if (propupdate_ != NULL) propupdate_->::msg::TableAndUserUpdate::Clear();
  clear_has_propupdate();
}
inline const ::msg::TableAndUserUpdate& Processor_500_PokerRefreshAll::propupdate() const {
  // @@protoc_insertion_point(field_get:msg.Processor_500_PokerRefreshAll.PropUpdate)
  return propupdate_ != NULL ? *propupdate_ : *default_instance_->propupdate_;
}
inline ::msg::TableAndUserUpdate* Processor_500_PokerRefreshAll::mutable_propupdate() {
  set_has_propupdate();
  if (propupdate_ == NULL) propupdate_ = new ::msg::TableAndUserUpdate;
  // @@protoc_insertion_point(field_mutable:msg.Processor_500_PokerRefreshAll.PropUpdate)
  return propupdate_;
}
inline ::msg::TableAndUserUpdate* Processor_500_PokerRefreshAll::release_propupdate() {
  clear_has_propupdate();
  ::msg::TableAndUserUpdate* temp = propupdate_;
  propupdate_ = NULL;
  return temp;
}
inline void Processor_500_PokerRefreshAll::set_allocated_propupdate(::msg::TableAndUserUpdate* propupdate) {
  delete propupdate_;
  propupdate_ = propupdate;
  if (propupdate) {
    set_has_propupdate();
  } else {
    clear_has_propupdate();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_500_PokerRefreshAll.PropUpdate)
}

// optional .msg.PokerPlayerSetting Settings = 6;
inline bool Processor_500_PokerRefreshAll::has_settings() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Processor_500_PokerRefreshAll::set_has_settings() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Processor_500_PokerRefreshAll::clear_has_settings() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Processor_500_PokerRefreshAll::clear_settings() {
  if (settings_ != NULL) settings_->::msg::PokerPlayerSetting::Clear();
  clear_has_settings();
}
inline const ::msg::PokerPlayerSetting& Processor_500_PokerRefreshAll::settings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_500_PokerRefreshAll.Settings)
  return settings_ != NULL ? *settings_ : *default_instance_->settings_;
}
inline ::msg::PokerPlayerSetting* Processor_500_PokerRefreshAll::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) settings_ = new ::msg::PokerPlayerSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_500_PokerRefreshAll.Settings)
  return settings_;
}
inline ::msg::PokerPlayerSetting* Processor_500_PokerRefreshAll::release_settings() {
  clear_has_settings();
  ::msg::PokerPlayerSetting* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void Processor_500_PokerRefreshAll::set_allocated_settings(::msg::PokerPlayerSetting* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_500_PokerRefreshAll.Settings)
}

// optional .msg.PokerActionRequest ActionRequest = 7;
inline bool Processor_500_PokerRefreshAll::has_actionrequest() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Processor_500_PokerRefreshAll::set_has_actionrequest() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Processor_500_PokerRefreshAll::clear_has_actionrequest() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Processor_500_PokerRefreshAll::clear_actionrequest() {
  if (actionrequest_ != NULL) actionrequest_->::msg::PokerActionRequest::Clear();
  clear_has_actionrequest();
}
inline const ::msg::PokerActionRequest& Processor_500_PokerRefreshAll::actionrequest() const {
  // @@protoc_insertion_point(field_get:msg.Processor_500_PokerRefreshAll.ActionRequest)
  return actionrequest_ != NULL ? *actionrequest_ : *default_instance_->actionrequest_;
}
inline ::msg::PokerActionRequest* Processor_500_PokerRefreshAll::mutable_actionrequest() {
  set_has_actionrequest();
  if (actionrequest_ == NULL) actionrequest_ = new ::msg::PokerActionRequest;
  // @@protoc_insertion_point(field_mutable:msg.Processor_500_PokerRefreshAll.ActionRequest)
  return actionrequest_;
}
inline ::msg::PokerActionRequest* Processor_500_PokerRefreshAll::release_actionrequest() {
  clear_has_actionrequest();
  ::msg::PokerActionRequest* temp = actionrequest_;
  actionrequest_ = NULL;
  return temp;
}
inline void Processor_500_PokerRefreshAll::set_allocated_actionrequest(::msg::PokerActionRequest* actionrequest) {
  delete actionrequest_;
  actionrequest_ = actionrequest;
  if (actionrequest) {
    set_has_actionrequest();
  } else {
    clear_has_actionrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_500_PokerRefreshAll.ActionRequest)
}

// optional bool IsTournament = 8;
inline bool Processor_500_PokerRefreshAll::has_istournament() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Processor_500_PokerRefreshAll::set_has_istournament() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Processor_500_PokerRefreshAll::clear_has_istournament() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Processor_500_PokerRefreshAll::clear_istournament() {
  istournament_ = false;
  clear_has_istournament();
}
inline bool Processor_500_PokerRefreshAll::istournament() const {
  // @@protoc_insertion_point(field_get:msg.Processor_500_PokerRefreshAll.IsTournament)
  return istournament_;
}
inline void Processor_500_PokerRefreshAll::set_istournament(bool value) {
  set_has_istournament();
  istournament_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_500_PokerRefreshAll.IsTournament)
}

// repeated bool ShowCard = 9;
inline int Processor_500_PokerRefreshAll::showcard_size() const {
  return showcard_.size();
}
inline void Processor_500_PokerRefreshAll::clear_showcard() {
  showcard_.Clear();
}
inline bool Processor_500_PokerRefreshAll::showcard(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_500_PokerRefreshAll.ShowCard)
  return showcard_.Get(index);
}
inline void Processor_500_PokerRefreshAll::set_showcard(int index, bool value) {
  showcard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.Processor_500_PokerRefreshAll.ShowCard)
}
inline void Processor_500_PokerRefreshAll::add_showcard(bool value) {
  showcard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.Processor_500_PokerRefreshAll.ShowCard)
}
inline const ::google_public::protobuf::RepeatedField< bool >&
Processor_500_PokerRefreshAll::showcard() const {
  // @@protoc_insertion_point(field_list:msg.Processor_500_PokerRefreshAll.ShowCard)
  return showcard_;
}
inline ::google_public::protobuf::RepeatedField< bool >*
Processor_500_PokerRefreshAll::mutable_showcard() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_500_PokerRefreshAll.ShowCard)
  return &showcard_;
}

// -------------------------------------------------------------------

// PokerPlayerSetting

// optional bool AutoCall = 1;
inline bool PokerPlayerSetting::has_autocall() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PokerPlayerSetting::set_has_autocall() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PokerPlayerSetting::clear_has_autocall() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PokerPlayerSetting::clear_autocall() {
  autocall_ = false;
  clear_has_autocall();
}
inline bool PokerPlayerSetting::autocall() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerSetting.AutoCall)
  return autocall_;
}
inline void PokerPlayerSetting::set_autocall(bool value) {
  set_has_autocall();
  autocall_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerSetting.AutoCall)
}

// optional bool CallOrFold = 2;
inline bool PokerPlayerSetting::has_callorfold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PokerPlayerSetting::set_has_callorfold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PokerPlayerSetting::clear_has_callorfold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PokerPlayerSetting::clear_callorfold() {
  callorfold_ = false;
  clear_has_callorfold();
}
inline bool PokerPlayerSetting::callorfold() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerSetting.CallOrFold)
  return callorfold_;
}
inline void PokerPlayerSetting::set_callorfold(bool value) {
  set_has_callorfold();
  callorfold_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerSetting.CallOrFold)
}

// optional bool Straddle = 3;
inline bool PokerPlayerSetting::has_straddle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PokerPlayerSetting::set_has_straddle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PokerPlayerSetting::clear_has_straddle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PokerPlayerSetting::clear_straddle() {
  straddle_ = false;
  clear_has_straddle();
}
inline bool PokerPlayerSetting::straddle() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerSetting.Straddle)
  return straddle_;
}
inline void PokerPlayerSetting::set_straddle(bool value) {
  set_has_straddle();
  straddle_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerSetting.Straddle)
}

// optional bool SitoutNextHand = 4;
inline bool PokerPlayerSetting::has_sitoutnexthand() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PokerPlayerSetting::set_has_sitoutnexthand() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PokerPlayerSetting::clear_has_sitoutnexthand() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PokerPlayerSetting::clear_sitoutnexthand() {
  sitoutnexthand_ = false;
  clear_has_sitoutnexthand();
}
inline bool PokerPlayerSetting::sitoutnexthand() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerSetting.SitoutNextHand)
  return sitoutnexthand_;
}
inline void PokerPlayerSetting::set_sitoutnexthand(bool value) {
  set_has_sitoutnexthand();
  sitoutnexthand_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerSetting.SitoutNextHand)
}

// -------------------------------------------------------------------

// PokerPlayerInfo

// optional .msg.CommonPlayerInfo PlayerInfo = 16;
inline bool PokerPlayerInfo::has_playerinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PokerPlayerInfo::set_has_playerinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PokerPlayerInfo::clear_has_playerinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PokerPlayerInfo::clear_playerinfo() {
  if (playerinfo_ != NULL) playerinfo_->::msg::CommonPlayerInfo::Clear();
  clear_has_playerinfo();
}
inline const ::msg::CommonPlayerInfo& PokerPlayerInfo::playerinfo() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.PlayerInfo)
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
}
inline ::msg::CommonPlayerInfo* PokerPlayerInfo::mutable_playerinfo() {
  set_has_playerinfo();
  if (playerinfo_ == NULL) playerinfo_ = new ::msg::CommonPlayerInfo;
  // @@protoc_insertion_point(field_mutable:msg.PokerPlayerInfo.PlayerInfo)
  return playerinfo_;
}
inline ::msg::CommonPlayerInfo* PokerPlayerInfo::release_playerinfo() {
  clear_has_playerinfo();
  ::msg::CommonPlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
inline void PokerPlayerInfo::set_allocated_playerinfo(::msg::CommonPlayerInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    set_has_playerinfo();
  } else {
    clear_has_playerinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerPlayerInfo.PlayerInfo)
}

// repeated int32 HoleCards = 4;
inline int PokerPlayerInfo::holecards_size() const {
  return holecards_.size();
}
inline void PokerPlayerInfo::clear_holecards() {
  holecards_.Clear();
}
inline ::google_public::protobuf::int32 PokerPlayerInfo::holecards(int index) const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.HoleCards)
  return holecards_.Get(index);
}
inline void PokerPlayerInfo::set_holecards(int index, ::google_public::protobuf::int32 value) {
  holecards_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.HoleCards)
}
inline void PokerPlayerInfo::add_holecards(::google_public::protobuf::int32 value) {
  holecards_.Add(value);
  // @@protoc_insertion_point(field_add:msg.PokerPlayerInfo.HoleCards)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
PokerPlayerInfo::holecards() const {
  // @@protoc_insertion_point(field_list:msg.PokerPlayerInfo.HoleCards)
  return holecards_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
PokerPlayerInfo::mutable_holecards() {
  // @@protoc_insertion_point(field_mutable_list:msg.PokerPlayerInfo.HoleCards)
  return &holecards_;
}

// optional int32 BetChips = 5;
inline bool PokerPlayerInfo::has_betchips() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PokerPlayerInfo::set_has_betchips() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PokerPlayerInfo::clear_has_betchips() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PokerPlayerInfo::clear_betchips() {
  betchips_ = 0;
  clear_has_betchips();
}
inline ::google_public::protobuf::int32 PokerPlayerInfo::betchips() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.BetChips)
  return betchips_;
}
inline void PokerPlayerInfo::set_betchips(::google_public::protobuf::int32 value) {
  set_has_betchips();
  betchips_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.BetChips)
}

// optional int32 Chips = 6;
inline bool PokerPlayerInfo::has_chips() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PokerPlayerInfo::set_has_chips() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PokerPlayerInfo::clear_has_chips() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PokerPlayerInfo::clear_chips() {
  chips_ = 0;
  clear_has_chips();
}
inline ::google_public::protobuf::int32 PokerPlayerInfo::chips() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.Chips)
  return chips_;
}
inline void PokerPlayerInfo::set_chips(::google_public::protobuf::int32 value) {
  set_has_chips();
  chips_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.Chips)
}

// optional .msg.ActionStatus ActionStatus = 7;
inline bool PokerPlayerInfo::has_actionstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PokerPlayerInfo::set_has_actionstatus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PokerPlayerInfo::clear_has_actionstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PokerPlayerInfo::clear_actionstatus() {
  actionstatus_ = 0;
  clear_has_actionstatus();
}
inline ::msg::ActionStatus PokerPlayerInfo::actionstatus() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.ActionStatus)
  return static_cast< ::msg::ActionStatus >(actionstatus_);
}
inline void PokerPlayerInfo::set_actionstatus(::msg::ActionStatus value) {
  assert(::msg::ActionStatus_IsValid(value));
  set_has_actionstatus();
  actionstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.ActionStatus)
}

// optional string HiHandType = 8;
inline bool PokerPlayerInfo::has_hihandtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PokerPlayerInfo::set_has_hihandtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PokerPlayerInfo::clear_has_hihandtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PokerPlayerInfo::clear_hihandtype() {
  if (hihandtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hihandtype_->clear();
  }
  clear_has_hihandtype();
}
inline const ::std::string& PokerPlayerInfo::hihandtype() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.HiHandType)
  return *hihandtype_;
}
inline void PokerPlayerInfo::set_hihandtype(const ::std::string& value) {
  set_has_hihandtype();
  if (hihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hihandtype_ = new ::std::string;
  }
  hihandtype_->assign(value);
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.HiHandType)
}
inline void PokerPlayerInfo::set_hihandtype(const char* value) {
  set_has_hihandtype();
  if (hihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hihandtype_ = new ::std::string;
  }
  hihandtype_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.PokerPlayerInfo.HiHandType)
}
inline void PokerPlayerInfo::set_hihandtype(const char* value, size_t size) {
  set_has_hihandtype();
  if (hihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hihandtype_ = new ::std::string;
  }
  hihandtype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.PokerPlayerInfo.HiHandType)
}
inline ::std::string* PokerPlayerInfo::mutable_hihandtype() {
  set_has_hihandtype();
  if (hihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hihandtype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.PokerPlayerInfo.HiHandType)
  return hihandtype_;
}
inline ::std::string* PokerPlayerInfo::release_hihandtype() {
  clear_has_hihandtype();
  if (hihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = hihandtype_;
    hihandtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PokerPlayerInfo::set_allocated_hihandtype(::std::string* hihandtype) {
  if (hihandtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hihandtype_;
  }
  if (hihandtype) {
    set_has_hihandtype();
    hihandtype_ = hihandtype;
  } else {
    clear_has_hihandtype();
    hihandtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerPlayerInfo.HiHandType)
}

// optional string LoHandType = 9;
inline bool PokerPlayerInfo::has_lohandtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PokerPlayerInfo::set_has_lohandtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PokerPlayerInfo::clear_has_lohandtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PokerPlayerInfo::clear_lohandtype() {
  if (lohandtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lohandtype_->clear();
  }
  clear_has_lohandtype();
}
inline const ::std::string& PokerPlayerInfo::lohandtype() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.LoHandType)
  return *lohandtype_;
}
inline void PokerPlayerInfo::set_lohandtype(const ::std::string& value) {
  set_has_lohandtype();
  if (lohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lohandtype_ = new ::std::string;
  }
  lohandtype_->assign(value);
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.LoHandType)
}
inline void PokerPlayerInfo::set_lohandtype(const char* value) {
  set_has_lohandtype();
  if (lohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lohandtype_ = new ::std::string;
  }
  lohandtype_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.PokerPlayerInfo.LoHandType)
}
inline void PokerPlayerInfo::set_lohandtype(const char* value, size_t size) {
  set_has_lohandtype();
  if (lohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lohandtype_ = new ::std::string;
  }
  lohandtype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.PokerPlayerInfo.LoHandType)
}
inline ::std::string* PokerPlayerInfo::mutable_lohandtype() {
  set_has_lohandtype();
  if (lohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lohandtype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.PokerPlayerInfo.LoHandType)
  return lohandtype_;
}
inline ::std::string* PokerPlayerInfo::release_lohandtype() {
  clear_has_lohandtype();
  if (lohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lohandtype_;
    lohandtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PokerPlayerInfo::set_allocated_lohandtype(::std::string* lohandtype) {
  if (lohandtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lohandtype_;
  }
  if (lohandtype) {
    set_has_lohandtype();
    lohandtype_ = lohandtype;
  } else {
    clear_has_lohandtype();
    lohandtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerPlayerInfo.LoHandType)
}

// repeated int32 HiCards = 10;
inline int PokerPlayerInfo::hicards_size() const {
  return hicards_.size();
}
inline void PokerPlayerInfo::clear_hicards() {
  hicards_.Clear();
}
inline ::google_public::protobuf::int32 PokerPlayerInfo::hicards(int index) const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.HiCards)
  return hicards_.Get(index);
}
inline void PokerPlayerInfo::set_hicards(int index, ::google_public::protobuf::int32 value) {
  hicards_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.HiCards)
}
inline void PokerPlayerInfo::add_hicards(::google_public::protobuf::int32 value) {
  hicards_.Add(value);
  // @@protoc_insertion_point(field_add:msg.PokerPlayerInfo.HiCards)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
PokerPlayerInfo::hicards() const {
  // @@protoc_insertion_point(field_list:msg.PokerPlayerInfo.HiCards)
  return hicards_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
PokerPlayerInfo::mutable_hicards() {
  // @@protoc_insertion_point(field_mutable_list:msg.PokerPlayerInfo.HiCards)
  return &hicards_;
}

// repeated int32 LoCards = 11;
inline int PokerPlayerInfo::locards_size() const {
  return locards_.size();
}
inline void PokerPlayerInfo::clear_locards() {
  locards_.Clear();
}
inline ::google_public::protobuf::int32 PokerPlayerInfo::locards(int index) const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.LoCards)
  return locards_.Get(index);
}
inline void PokerPlayerInfo::set_locards(int index, ::google_public::protobuf::int32 value) {
  locards_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.LoCards)
}
inline void PokerPlayerInfo::add_locards(::google_public::protobuf::int32 value) {
  locards_.Add(value);
  // @@protoc_insertion_point(field_add:msg.PokerPlayerInfo.LoCards)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
PokerPlayerInfo::locards() const {
  // @@protoc_insertion_point(field_list:msg.PokerPlayerInfo.LoCards)
  return locards_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
PokerPlayerInfo::mutable_locards() {
  // @@protoc_insertion_point(field_mutable_list:msg.PokerPlayerInfo.LoCards)
  return &locards_;
}

// optional string SecondHiHandType = 12;
inline bool PokerPlayerInfo::has_secondhihandtype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PokerPlayerInfo::set_has_secondhihandtype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PokerPlayerInfo::clear_has_secondhihandtype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PokerPlayerInfo::clear_secondhihandtype() {
  if (secondhihandtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondhihandtype_->clear();
  }
  clear_has_secondhihandtype();
}
inline const ::std::string& PokerPlayerInfo::secondhihandtype() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.SecondHiHandType)
  return *secondhihandtype_;
}
inline void PokerPlayerInfo::set_secondhihandtype(const ::std::string& value) {
  set_has_secondhihandtype();
  if (secondhihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondhihandtype_ = new ::std::string;
  }
  secondhihandtype_->assign(value);
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.SecondHiHandType)
}
inline void PokerPlayerInfo::set_secondhihandtype(const char* value) {
  set_has_secondhihandtype();
  if (secondhihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondhihandtype_ = new ::std::string;
  }
  secondhihandtype_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.PokerPlayerInfo.SecondHiHandType)
}
inline void PokerPlayerInfo::set_secondhihandtype(const char* value, size_t size) {
  set_has_secondhihandtype();
  if (secondhihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondhihandtype_ = new ::std::string;
  }
  secondhihandtype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.PokerPlayerInfo.SecondHiHandType)
}
inline ::std::string* PokerPlayerInfo::mutable_secondhihandtype() {
  set_has_secondhihandtype();
  if (secondhihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondhihandtype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.PokerPlayerInfo.SecondHiHandType)
  return secondhihandtype_;
}
inline ::std::string* PokerPlayerInfo::release_secondhihandtype() {
  clear_has_secondhihandtype();
  if (secondhihandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = secondhihandtype_;
    secondhihandtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PokerPlayerInfo::set_allocated_secondhihandtype(::std::string* secondhihandtype) {
  if (secondhihandtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secondhihandtype_;
  }
  if (secondhihandtype) {
    set_has_secondhihandtype();
    secondhihandtype_ = secondhihandtype;
  } else {
    clear_has_secondhihandtype();
    secondhihandtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerPlayerInfo.SecondHiHandType)
}

// optional string SecondLoHandType = 13;
inline bool PokerPlayerInfo::has_secondlohandtype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PokerPlayerInfo::set_has_secondlohandtype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PokerPlayerInfo::clear_has_secondlohandtype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PokerPlayerInfo::clear_secondlohandtype() {
  if (secondlohandtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondlohandtype_->clear();
  }
  clear_has_secondlohandtype();
}
inline const ::std::string& PokerPlayerInfo::secondlohandtype() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.SecondLoHandType)
  return *secondlohandtype_;
}
inline void PokerPlayerInfo::set_secondlohandtype(const ::std::string& value) {
  set_has_secondlohandtype();
  if (secondlohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondlohandtype_ = new ::std::string;
  }
  secondlohandtype_->assign(value);
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.SecondLoHandType)
}
inline void PokerPlayerInfo::set_secondlohandtype(const char* value) {
  set_has_secondlohandtype();
  if (secondlohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondlohandtype_ = new ::std::string;
  }
  secondlohandtype_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.PokerPlayerInfo.SecondLoHandType)
}
inline void PokerPlayerInfo::set_secondlohandtype(const char* value, size_t size) {
  set_has_secondlohandtype();
  if (secondlohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondlohandtype_ = new ::std::string;
  }
  secondlohandtype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.PokerPlayerInfo.SecondLoHandType)
}
inline ::std::string* PokerPlayerInfo::mutable_secondlohandtype() {
  set_has_secondlohandtype();
  if (secondlohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secondlohandtype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.PokerPlayerInfo.SecondLoHandType)
  return secondlohandtype_;
}
inline ::std::string* PokerPlayerInfo::release_secondlohandtype() {
  clear_has_secondlohandtype();
  if (secondlohandtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = secondlohandtype_;
    secondlohandtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PokerPlayerInfo::set_allocated_secondlohandtype(::std::string* secondlohandtype) {
  if (secondlohandtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secondlohandtype_;
  }
  if (secondlohandtype) {
    set_has_secondlohandtype();
    secondlohandtype_ = secondlohandtype;
  } else {
    clear_has_secondlohandtype();
    secondlohandtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerPlayerInfo.SecondLoHandType)
}

// repeated int32 SecondHiCards = 14;
inline int PokerPlayerInfo::secondhicards_size() const {
  return secondhicards_.size();
}
inline void PokerPlayerInfo::clear_secondhicards() {
  secondhicards_.Clear();
}
inline ::google_public::protobuf::int32 PokerPlayerInfo::secondhicards(int index) const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.SecondHiCards)
  return secondhicards_.Get(index);
}
inline void PokerPlayerInfo::set_secondhicards(int index, ::google_public::protobuf::int32 value) {
  secondhicards_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.SecondHiCards)
}
inline void PokerPlayerInfo::add_secondhicards(::google_public::protobuf::int32 value) {
  secondhicards_.Add(value);
  // @@protoc_insertion_point(field_add:msg.PokerPlayerInfo.SecondHiCards)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
PokerPlayerInfo::secondhicards() const {
  // @@protoc_insertion_point(field_list:msg.PokerPlayerInfo.SecondHiCards)
  return secondhicards_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
PokerPlayerInfo::mutable_secondhicards() {
  // @@protoc_insertion_point(field_mutable_list:msg.PokerPlayerInfo.SecondHiCards)
  return &secondhicards_;
}

// repeated int32 SecondLoCards = 15;
inline int PokerPlayerInfo::secondlocards_size() const {
  return secondlocards_.size();
}
inline void PokerPlayerInfo::clear_secondlocards() {
  secondlocards_.Clear();
}
inline ::google_public::protobuf::int32 PokerPlayerInfo::secondlocards(int index) const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerInfo.SecondLoCards)
  return secondlocards_.Get(index);
}
inline void PokerPlayerInfo::set_secondlocards(int index, ::google_public::protobuf::int32 value) {
  secondlocards_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.PokerPlayerInfo.SecondLoCards)
}
inline void PokerPlayerInfo::add_secondlocards(::google_public::protobuf::int32 value) {
  secondlocards_.Add(value);
  // @@protoc_insertion_point(field_add:msg.PokerPlayerInfo.SecondLoCards)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
PokerPlayerInfo::secondlocards() const {
  // @@protoc_insertion_point(field_list:msg.PokerPlayerInfo.SecondLoCards)
  return secondlocards_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
PokerPlayerInfo::mutable_secondlocards() {
  // @@protoc_insertion_point(field_mutable_list:msg.PokerPlayerInfo.SecondLoCards)
  return &secondlocards_;
}

// -------------------------------------------------------------------

// TableInfo

// repeated int32 HoleCards = 1;
inline int TableInfo::holecards_size() const {
  return holecards_.size();
}
inline void TableInfo::clear_holecards() {
  holecards_.Clear();
}
inline ::google_public::protobuf::int32 TableInfo::holecards(int index) const {
  // @@protoc_insertion_point(field_get:msg.TableInfo.HoleCards)
  return holecards_.Get(index);
}
inline void TableInfo::set_holecards(int index, ::google_public::protobuf::int32 value) {
  holecards_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.TableInfo.HoleCards)
}
inline void TableInfo::add_holecards(::google_public::protobuf::int32 value) {
  holecards_.Add(value);
  // @@protoc_insertion_point(field_add:msg.TableInfo.HoleCards)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
TableInfo::holecards() const {
  // @@protoc_insertion_point(field_list:msg.TableInfo.HoleCards)
  return holecards_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
TableInfo::mutable_holecards() {
  // @@protoc_insertion_point(field_mutable_list:msg.TableInfo.HoleCards)
  return &holecards_;
}

// repeated int32 SecondHoleCards = 2;
inline int TableInfo::secondholecards_size() const {
  return secondholecards_.size();
}
inline void TableInfo::clear_secondholecards() {
  secondholecards_.Clear();
}
inline ::google_public::protobuf::int32 TableInfo::secondholecards(int index) const {
  // @@protoc_insertion_point(field_get:msg.TableInfo.SecondHoleCards)
  return secondholecards_.Get(index);
}
inline void TableInfo::set_secondholecards(int index, ::google_public::protobuf::int32 value) {
  secondholecards_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.TableInfo.SecondHoleCards)
}
inline void TableInfo::add_secondholecards(::google_public::protobuf::int32 value) {
  secondholecards_.Add(value);
  // @@protoc_insertion_point(field_add:msg.TableInfo.SecondHoleCards)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
TableInfo::secondholecards() const {
  // @@protoc_insertion_point(field_list:msg.TableInfo.SecondHoleCards)
  return secondholecards_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
TableInfo::mutable_secondholecards() {
  // @@protoc_insertion_point(field_mutable_list:msg.TableInfo.SecondHoleCards)
  return &secondholecards_;
}

// optional int32 Chips = 3;
inline bool TableInfo::has_chips() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TableInfo::set_has_chips() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TableInfo::clear_has_chips() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TableInfo::clear_chips() {
  chips_ = 0;
  clear_has_chips();
}
inline ::google_public::protobuf::int32 TableInfo::chips() const {
  // @@protoc_insertion_point(field_get:msg.TableInfo.Chips)
  return chips_;
}
inline void TableInfo::set_chips(::google_public::protobuf::int32 value) {
  set_has_chips();
  chips_ = value;
  // @@protoc_insertion_point(field_set:msg.TableInfo.Chips)
}

// optional int32 BigBlind = 4;
inline bool TableInfo::has_bigblind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TableInfo::set_has_bigblind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TableInfo::clear_has_bigblind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TableInfo::clear_bigblind() {
  bigblind_ = 0;
  clear_has_bigblind();
}
inline ::google_public::protobuf::int32 TableInfo::bigblind() const {
  // @@protoc_insertion_point(field_get:msg.TableInfo.BigBlind)
  return bigblind_;
}
inline void TableInfo::set_bigblind(::google_public::protobuf::int32 value) {
  set_has_bigblind();
  bigblind_ = value;
  // @@protoc_insertion_point(field_set:msg.TableInfo.BigBlind)
}

// -------------------------------------------------------------------

// TableAndUserUpdate

// repeated .msg.PokerPlayerInfo PokerPlayerInfo = 1;
inline int TableAndUserUpdate::pokerplayerinfo_size() const {
  return pokerplayerinfo_.size();
}
inline void TableAndUserUpdate::clear_pokerplayerinfo() {
  pokerplayerinfo_.Clear();
}
inline const ::msg::PokerPlayerInfo& TableAndUserUpdate::pokerplayerinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.TableAndUserUpdate.PokerPlayerInfo)
  return pokerplayerinfo_.Get(index);
}
inline ::msg::PokerPlayerInfo* TableAndUserUpdate::mutable_pokerplayerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.TableAndUserUpdate.PokerPlayerInfo)
  return pokerplayerinfo_.Mutable(index);
}
inline ::msg::PokerPlayerInfo* TableAndUserUpdate::add_pokerplayerinfo() {
  // @@protoc_insertion_point(field_add:msg.TableAndUserUpdate.PokerPlayerInfo)
  return pokerplayerinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo >&
TableAndUserUpdate::pokerplayerinfo() const {
  // @@protoc_insertion_point(field_list:msg.TableAndUserUpdate.PokerPlayerInfo)
  return pokerplayerinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo >*
TableAndUserUpdate::mutable_pokerplayerinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.TableAndUserUpdate.PokerPlayerInfo)
  return &pokerplayerinfo_;
}

// optional .msg.TableInfo TableInfo = 2;
inline bool TableAndUserUpdate::has_tableinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableAndUserUpdate::set_has_tableinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableAndUserUpdate::clear_has_tableinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableAndUserUpdate::clear_tableinfo() {
  if (tableinfo_ != NULL) tableinfo_->::msg::TableInfo::Clear();
  clear_has_tableinfo();
}
inline const ::msg::TableInfo& TableAndUserUpdate::tableinfo() const {
  // @@protoc_insertion_point(field_get:msg.TableAndUserUpdate.TableInfo)
  return tableinfo_ != NULL ? *tableinfo_ : *default_instance_->tableinfo_;
}
inline ::msg::TableInfo* TableAndUserUpdate::mutable_tableinfo() {
  set_has_tableinfo();
  if (tableinfo_ == NULL) tableinfo_ = new ::msg::TableInfo;
  // @@protoc_insertion_point(field_mutable:msg.TableAndUserUpdate.TableInfo)
  return tableinfo_;
}
inline ::msg::TableInfo* TableAndUserUpdate::release_tableinfo() {
  clear_has_tableinfo();
  ::msg::TableInfo* temp = tableinfo_;
  tableinfo_ = NULL;
  return temp;
}
inline void TableAndUserUpdate::set_allocated_tableinfo(::msg::TableInfo* tableinfo) {
  delete tableinfo_;
  tableinfo_ = tableinfo;
  if (tableinfo) {
    set_has_tableinfo();
  } else {
    clear_has_tableinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.TableAndUserUpdate.TableInfo)
}

// -------------------------------------------------------------------

// PokerActionRequest

// optional .msg.ActionRequest ActionRequest = 1;
inline bool PokerActionRequest::has_actionrequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PokerActionRequest::set_has_actionrequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PokerActionRequest::clear_has_actionrequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PokerActionRequest::clear_actionrequest() {
  if (actionrequest_ != NULL) actionrequest_->::msg::ActionRequest::Clear();
  clear_has_actionrequest();
}
inline const ::msg::ActionRequest& PokerActionRequest::actionrequest() const {
  // @@protoc_insertion_point(field_get:msg.PokerActionRequest.ActionRequest)
  return actionrequest_ != NULL ? *actionrequest_ : *default_instance_->actionrequest_;
}
inline ::msg::ActionRequest* PokerActionRequest::mutable_actionrequest() {
  set_has_actionrequest();
  if (actionrequest_ == NULL) actionrequest_ = new ::msg::ActionRequest;
  // @@protoc_insertion_point(field_mutable:msg.PokerActionRequest.ActionRequest)
  return actionrequest_;
}
inline ::msg::ActionRequest* PokerActionRequest::release_actionrequest() {
  clear_has_actionrequest();
  ::msg::ActionRequest* temp = actionrequest_;
  actionrequest_ = NULL;
  return temp;
}
inline void PokerActionRequest::set_allocated_actionrequest(::msg::ActionRequest* actionrequest) {
  delete actionrequest_;
  actionrequest_ = actionrequest;
  if (actionrequest) {
    set_has_actionrequest();
  } else {
    clear_has_actionrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerActionRequest.ActionRequest)
}

// optional .msg.ActionChoice ActionChoice = 2;
inline bool PokerActionRequest::has_actionchoice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PokerActionRequest::set_has_actionchoice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PokerActionRequest::clear_has_actionchoice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PokerActionRequest::clear_actionchoice() {
  actionchoice_ = 1;
  clear_has_actionchoice();
}
inline ::msg::ActionChoice PokerActionRequest::actionchoice() const {
  // @@protoc_insertion_point(field_get:msg.PokerActionRequest.ActionChoice)
  return static_cast< ::msg::ActionChoice >(actionchoice_);
}
inline void PokerActionRequest::set_actionchoice(::msg::ActionChoice value) {
  assert(::msg::ActionChoice_IsValid(value));
  set_has_actionchoice();
  actionchoice_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerActionRequest.ActionChoice)
}

// optional int32 BetMax = 3;
inline bool PokerActionRequest::has_betmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PokerActionRequest::set_has_betmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PokerActionRequest::clear_has_betmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PokerActionRequest::clear_betmax() {
  betmax_ = 0;
  clear_has_betmax();
}
inline ::google_public::protobuf::int32 PokerActionRequest::betmax() const {
  // @@protoc_insertion_point(field_get:msg.PokerActionRequest.BetMax)
  return betmax_;
}
inline void PokerActionRequest::set_betmax(::google_public::protobuf::int32 value) {
  set_has_betmax();
  betmax_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerActionRequest.BetMax)
}

// optional int32 BetMin = 4;
inline bool PokerActionRequest::has_betmin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PokerActionRequest::set_has_betmin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PokerActionRequest::clear_has_betmin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PokerActionRequest::clear_betmin() {
  betmin_ = 0;
  clear_has_betmin();
}
inline ::google_public::protobuf::int32 PokerActionRequest::betmin() const {
  // @@protoc_insertion_point(field_get:msg.PokerActionRequest.BetMin)
  return betmin_;
}
inline void PokerActionRequest::set_betmin(::google_public::protobuf::int32 value) {
  set_has_betmin();
  betmin_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerActionRequest.BetMin)
}

// optional int32 Unit = 5;
inline bool PokerActionRequest::has_unit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PokerActionRequest::set_has_unit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PokerActionRequest::clear_has_unit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PokerActionRequest::clear_unit() {
  unit_ = 0;
  clear_has_unit();
}
inline ::google_public::protobuf::int32 PokerActionRequest::unit() const {
  // @@protoc_insertion_point(field_get:msg.PokerActionRequest.Unit)
  return unit_;
}
inline void PokerActionRequest::set_unit(::google_public::protobuf::int32 value) {
  set_has_unit();
  unit_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerActionRequest.Unit)
}

// optional int32 BetPot = 6;
inline bool PokerActionRequest::has_betpot() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PokerActionRequest::set_has_betpot() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PokerActionRequest::clear_has_betpot() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PokerActionRequest::clear_betpot() {
  betpot_ = 0;
  clear_has_betpot();
}
inline ::google_public::protobuf::int32 PokerActionRequest::betpot() const {
  // @@protoc_insertion_point(field_get:msg.PokerActionRequest.BetPot)
  return betpot_;
}
inline void PokerActionRequest::set_betpot(::google_public::protobuf::int32 value) {
  set_has_betpot();
  betpot_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerActionRequest.BetPot)
}

// optional int32 NeedCallChips = 7;
inline bool PokerActionRequest::has_needcallchips() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PokerActionRequest::set_has_needcallchips() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PokerActionRequest::clear_has_needcallchips() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PokerActionRequest::clear_needcallchips() {
  needcallchips_ = 0;
  clear_has_needcallchips();
}
inline ::google_public::protobuf::int32 PokerActionRequest::needcallchips() const {
  // @@protoc_insertion_point(field_get:msg.PokerActionRequest.NeedCallChips)
  return needcallchips_;
}
inline void PokerActionRequest::set_needcallchips(::google_public::protobuf::int32 value) {
  set_has_needcallchips();
  needcallchips_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerActionRequest.NeedCallChips)
}

// -------------------------------------------------------------------

// Processor_501_PokerRequestAction

// optional int32 RoomId = 1;
inline bool Processor_501_PokerRequestAction::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_501_PokerRequestAction::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_501_PokerRequestAction::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_501_PokerRequestAction::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_501_PokerRequestAction::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_501_PokerRequestAction.RoomId)
  return roomid_;
}
inline void Processor_501_PokerRequestAction::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_501_PokerRequestAction.RoomId)
}

// optional .msg.PokerActionRequest ActionRequest = 2;
inline bool Processor_501_PokerRequestAction::has_actionrequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_501_PokerRequestAction::set_has_actionrequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_501_PokerRequestAction::clear_has_actionrequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_501_PokerRequestAction::clear_actionrequest() {
  if (actionrequest_ != NULL) actionrequest_->::msg::PokerActionRequest::Clear();
  clear_has_actionrequest();
}
inline const ::msg::PokerActionRequest& Processor_501_PokerRequestAction::actionrequest() const {
  // @@protoc_insertion_point(field_get:msg.Processor_501_PokerRequestAction.ActionRequest)
  return actionrequest_ != NULL ? *actionrequest_ : *default_instance_->actionrequest_;
}
inline ::msg::PokerActionRequest* Processor_501_PokerRequestAction::mutable_actionrequest() {
  set_has_actionrequest();
  if (actionrequest_ == NULL) actionrequest_ = new ::msg::PokerActionRequest;
  // @@protoc_insertion_point(field_mutable:msg.Processor_501_PokerRequestAction.ActionRequest)
  return actionrequest_;
}
inline ::msg::PokerActionRequest* Processor_501_PokerRequestAction::release_actionrequest() {
  clear_has_actionrequest();
  ::msg::PokerActionRequest* temp = actionrequest_;
  actionrequest_ = NULL;
  return temp;
}
inline void Processor_501_PokerRequestAction::set_allocated_actionrequest(::msg::PokerActionRequest* actionrequest) {
  delete actionrequest_;
  actionrequest_ = actionrequest;
  if (actionrequest) {
    set_has_actionrequest();
  } else {
    clear_has_actionrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_501_PokerRequestAction.ActionRequest)
}

// -------------------------------------------------------------------

// Processor_502_PokerSendAction

// optional int32 RoomId = 1;
inline bool Processor_502_PokerSendAction::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_502_PokerSendAction::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_502_PokerSendAction::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_502_PokerSendAction::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_502_PokerSendAction::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_502_PokerSendAction.RoomId)
  return roomid_;
}
inline void Processor_502_PokerSendAction::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_502_PokerSendAction.RoomId)
}

// optional .msg.ActionStatus ActionStatus = 2;
inline bool Processor_502_PokerSendAction::has_actionstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_502_PokerSendAction::set_has_actionstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_502_PokerSendAction::clear_has_actionstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_502_PokerSendAction::clear_actionstatus() {
  actionstatus_ = 0;
  clear_has_actionstatus();
}
inline ::msg::ActionStatus Processor_502_PokerSendAction::actionstatus() const {
  // @@protoc_insertion_point(field_get:msg.Processor_502_PokerSendAction.ActionStatus)
  return static_cast< ::msg::ActionStatus >(actionstatus_);
}
inline void Processor_502_PokerSendAction::set_actionstatus(::msg::ActionStatus value) {
  assert(::msg::ActionStatus_IsValid(value));
  set_has_actionstatus();
  actionstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_502_PokerSendAction.ActionStatus)
}

// optional int32 Amount = 3;
inline bool Processor_502_PokerSendAction::has_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_502_PokerSendAction::set_has_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_502_PokerSendAction::clear_has_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_502_PokerSendAction::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google_public::protobuf::int32 Processor_502_PokerSendAction::amount() const {
  // @@protoc_insertion_point(field_get:msg.Processor_502_PokerSendAction.Amount)
  return amount_;
}
inline void Processor_502_PokerSendAction::set_amount(::google_public::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_502_PokerSendAction.Amount)
}

// -------------------------------------------------------------------

// Processor_503_PokerReceivePropUpdate

// optional int32 RoomId = 1;
inline bool Processor_503_PokerReceivePropUpdate::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_503_PokerReceivePropUpdate::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_503_PokerReceivePropUpdate::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_503_PokerReceivePropUpdate::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_503_PokerReceivePropUpdate::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_503_PokerReceivePropUpdate.RoomId)
  return roomid_;
}
inline void Processor_503_PokerReceivePropUpdate::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_503_PokerReceivePropUpdate.RoomId)
}

// optional .msg.TableAndUserUpdate PropUpdate = 2;
inline bool Processor_503_PokerReceivePropUpdate::has_propupdate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_503_PokerReceivePropUpdate::set_has_propupdate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_503_PokerReceivePropUpdate::clear_has_propupdate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_503_PokerReceivePropUpdate::clear_propupdate() {
  if (propupdate_ != NULL) propupdate_->::msg::TableAndUserUpdate::Clear();
  clear_has_propupdate();
}
inline const ::msg::TableAndUserUpdate& Processor_503_PokerReceivePropUpdate::propupdate() const {
  // @@protoc_insertion_point(field_get:msg.Processor_503_PokerReceivePropUpdate.PropUpdate)
  return propupdate_ != NULL ? *propupdate_ : *default_instance_->propupdate_;
}
inline ::msg::TableAndUserUpdate* Processor_503_PokerReceivePropUpdate::mutable_propupdate() {
  set_has_propupdate();
  if (propupdate_ == NULL) propupdate_ = new ::msg::TableAndUserUpdate;
  // @@protoc_insertion_point(field_mutable:msg.Processor_503_PokerReceivePropUpdate.PropUpdate)
  return propupdate_;
}
inline ::msg::TableAndUserUpdate* Processor_503_PokerReceivePropUpdate::release_propupdate() {
  clear_has_propupdate();
  ::msg::TableAndUserUpdate* temp = propupdate_;
  propupdate_ = NULL;
  return temp;
}
inline void Processor_503_PokerReceivePropUpdate::set_allocated_propupdate(::msg::TableAndUserUpdate* propupdate) {
  delete propupdate_;
  propupdate_ = propupdate;
  if (propupdate) {
    set_has_propupdate();
  } else {
    clear_has_propupdate();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_503_PokerReceivePropUpdate.PropUpdate)
}

// -------------------------------------------------------------------

// Processor_510_PokerAddChips

// optional int32 RoomId = 1;
inline bool Processor_510_PokerAddChips::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_510_PokerAddChips::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_510_PokerAddChips::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_510_PokerAddChips::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_510_PokerAddChips::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_510_PokerAddChips.RoomId)
  return roomid_;
}
inline void Processor_510_PokerAddChips::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_510_PokerAddChips.RoomId)
}

// optional int32 Amount = 2;
inline bool Processor_510_PokerAddChips::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_510_PokerAddChips::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_510_PokerAddChips::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_510_PokerAddChips::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google_public::protobuf::int32 Processor_510_PokerAddChips::amount() const {
  // @@protoc_insertion_point(field_get:msg.Processor_510_PokerAddChips.Amount)
  return amount_;
}
inline void Processor_510_PokerAddChips::set_amount(::google_public::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_510_PokerAddChips.Amount)
}

// -------------------------------------------------------------------

// Processor_511_PokerReceiveNeedChip

// optional int32 RoomId = 1;
inline bool Processor_511_PokerReceiveNeedChip::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_511_PokerReceiveNeedChip::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_511_PokerReceiveNeedChip::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_511_PokerReceiveNeedChip::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_511_PokerReceiveNeedChip::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_511_PokerReceiveNeedChip.RoomId)
  return roomid_;
}
inline void Processor_511_PokerReceiveNeedChip::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_511_PokerReceiveNeedChip.RoomId)
}

// -------------------------------------------------------------------

// Processor_512_PokerRequestChoice

// optional int32 RoomId = 1;
inline bool Processor_512_PokerRequestChoice::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_512_PokerRequestChoice::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_512_PokerRequestChoice::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_512_PokerRequestChoice::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_512_PokerRequestChoice::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_512_PokerRequestChoice.RoomId)
  return roomid_;
}
inline void Processor_512_PokerRequestChoice::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_512_PokerRequestChoice.RoomId)
}

// optional .msg.ChoiceType ChoiceType = 2;
inline bool Processor_512_PokerRequestChoice::has_choicetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_512_PokerRequestChoice::set_has_choicetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_512_PokerRequestChoice::clear_has_choicetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_512_PokerRequestChoice::clear_choicetype() {
  choicetype_ = 0;
  clear_has_choicetype();
}
inline ::msg::ChoiceType Processor_512_PokerRequestChoice::choicetype() const {
  // @@protoc_insertion_point(field_get:msg.Processor_512_PokerRequestChoice.ChoiceType)
  return static_cast< ::msg::ChoiceType >(choicetype_);
}
inline void Processor_512_PokerRequestChoice::set_choicetype(::msg::ChoiceType value) {
  assert(::msg::ChoiceType_IsValid(value));
  set_has_choicetype();
  choicetype_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_512_PokerRequestChoice.ChoiceType)
}

// -------------------------------------------------------------------

// Processor_513_PokerReplyChoice

// optional int32 RoomId = 1;
inline bool Processor_513_PokerReplyChoice::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_513_PokerReplyChoice::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_513_PokerReplyChoice::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_513_PokerReplyChoice::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_513_PokerReplyChoice::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_513_PokerReplyChoice.RoomId)
  return roomid_;
}
inline void Processor_513_PokerReplyChoice::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_513_PokerReplyChoice.RoomId)
}

// optional .msg.ChoiceType ChoiceType = 2;
inline bool Processor_513_PokerReplyChoice::has_choicetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_513_PokerReplyChoice::set_has_choicetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_513_PokerReplyChoice::clear_has_choicetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_513_PokerReplyChoice::clear_choicetype() {
  choicetype_ = 0;
  clear_has_choicetype();
}
inline ::msg::ChoiceType Processor_513_PokerReplyChoice::choicetype() const {
  // @@protoc_insertion_point(field_get:msg.Processor_513_PokerReplyChoice.ChoiceType)
  return static_cast< ::msg::ChoiceType >(choicetype_);
}
inline void Processor_513_PokerReplyChoice::set_choicetype(::msg::ChoiceType value) {
  assert(::msg::ChoiceType_IsValid(value));
  set_has_choicetype();
  choicetype_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_513_PokerReplyChoice.ChoiceType)
}

// optional bool result = 3;
inline bool Processor_513_PokerReplyChoice::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_513_PokerReplyChoice::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_513_PokerReplyChoice::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_513_PokerReplyChoice::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool Processor_513_PokerReplyChoice::result() const {
  // @@protoc_insertion_point(field_get:msg.Processor_513_PokerReplyChoice.result)
  return result_;
}
inline void Processor_513_PokerReplyChoice::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_513_PokerReplyChoice.result)
}

// -------------------------------------------------------------------

// Processor_514_PokerReceiveTableNote

// optional int32 RoomId = 1;
inline bool Processor_514_PokerReceiveTableNote::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_514_PokerReceiveTableNote::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_514_PokerReceiveTableNote::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_514_PokerReceiveTableNote::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_514_PokerReceiveTableNote::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_514_PokerReceiveTableNote.RoomId)
  return roomid_;
}
inline void Processor_514_PokerReceiveTableNote::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_514_PokerReceiveTableNote.RoomId)
}

// optional string TableNote = 2;
inline bool Processor_514_PokerReceiveTableNote::has_tablenote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_514_PokerReceiveTableNote::set_has_tablenote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_514_PokerReceiveTableNote::clear_has_tablenote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_514_PokerReceiveTableNote::clear_tablenote() {
  if (tablenote_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_->clear();
  }
  clear_has_tablenote();
}
inline const ::std::string& Processor_514_PokerReceiveTableNote::tablenote() const {
  // @@protoc_insertion_point(field_get:msg.Processor_514_PokerReceiveTableNote.TableNote)
  return *tablenote_;
}
inline void Processor_514_PokerReceiveTableNote::set_tablenote(const ::std::string& value) {
  set_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_ = new ::std::string;
  }
  tablenote_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_514_PokerReceiveTableNote.TableNote)
}
inline void Processor_514_PokerReceiveTableNote::set_tablenote(const char* value) {
  set_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_ = new ::std::string;
  }
  tablenote_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_514_PokerReceiveTableNote.TableNote)
}
inline void Processor_514_PokerReceiveTableNote::set_tablenote(const char* value, size_t size) {
  set_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_ = new ::std::string;
  }
  tablenote_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_514_PokerReceiveTableNote.TableNote)
}
inline ::std::string* Processor_514_PokerReceiveTableNote::mutable_tablenote() {
  set_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablenote_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_514_PokerReceiveTableNote.TableNote)
  return tablenote_;
}
inline ::std::string* Processor_514_PokerReceiveTableNote::release_tablenote() {
  clear_has_tablenote();
  if (tablenote_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tablenote_;
    tablenote_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_514_PokerReceiveTableNote::set_allocated_tablenote(::std::string* tablenote) {
  if (tablenote_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablenote_;
  }
  if (tablenote) {
    set_has_tablenote();
    tablenote_ = tablenote;
  } else {
    clear_has_tablenote();
    tablenote_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_514_PokerReceiveTableNote.TableNote)
}

// -------------------------------------------------------------------

// Processor_515_PokerSendSetting

// optional int32 RoomId = 1;
inline bool Processor_515_PokerSendSetting::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_515_PokerSendSetting::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_515_PokerSendSetting::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_515_PokerSendSetting::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_515_PokerSendSetting::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_515_PokerSendSetting.RoomId)
  return roomid_;
}
inline void Processor_515_PokerSendSetting::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_515_PokerSendSetting.RoomId)
}

// optional .msg.PokerPlayerSetting Settings = 2;
inline bool Processor_515_PokerSendSetting::has_settings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_515_PokerSendSetting::set_has_settings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_515_PokerSendSetting::clear_has_settings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_515_PokerSendSetting::clear_settings() {
  if (settings_ != NULL) settings_->::msg::PokerPlayerSetting::Clear();
  clear_has_settings();
}
inline const ::msg::PokerPlayerSetting& Processor_515_PokerSendSetting::settings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_515_PokerSendSetting.Settings)
  return settings_ != NULL ? *settings_ : *default_instance_->settings_;
}
inline ::msg::PokerPlayerSetting* Processor_515_PokerSendSetting::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) settings_ = new ::msg::PokerPlayerSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_515_PokerSendSetting.Settings)
  return settings_;
}
inline ::msg::PokerPlayerSetting* Processor_515_PokerSendSetting::release_settings() {
  clear_has_settings();
  ::msg::PokerPlayerSetting* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void Processor_515_PokerSendSetting::set_allocated_settings(::msg::PokerPlayerSetting* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_515_PokerSendSetting.Settings)
}

// -------------------------------------------------------------------

// Processor_516_PokerReceiveSettingChange

// optional int32 RoomId = 1;
inline bool Processor_516_PokerReceiveSettingChange::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_516_PokerReceiveSettingChange::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_516_PokerReceiveSettingChange::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_516_PokerReceiveSettingChange::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_516_PokerReceiveSettingChange::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_516_PokerReceiveSettingChange.RoomId)
  return roomid_;
}
inline void Processor_516_PokerReceiveSettingChange::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_516_PokerReceiveSettingChange.RoomId)
}

// optional .msg.PokerPlayerSetting Settings = 2;
inline bool Processor_516_PokerReceiveSettingChange::has_settings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_516_PokerReceiveSettingChange::set_has_settings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_516_PokerReceiveSettingChange::clear_has_settings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_516_PokerReceiveSettingChange::clear_settings() {
  if (settings_ != NULL) settings_->::msg::PokerPlayerSetting::Clear();
  clear_has_settings();
}
inline const ::msg::PokerPlayerSetting& Processor_516_PokerReceiveSettingChange::settings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_516_PokerReceiveSettingChange.Settings)
  return settings_ != NULL ? *settings_ : *default_instance_->settings_;
}
inline ::msg::PokerPlayerSetting* Processor_516_PokerReceiveSettingChange::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) settings_ = new ::msg::PokerPlayerSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_516_PokerReceiveSettingChange.Settings)
  return settings_;
}
inline ::msg::PokerPlayerSetting* Processor_516_PokerReceiveSettingChange::release_settings() {
  clear_has_settings();
  ::msg::PokerPlayerSetting* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void Processor_516_PokerReceiveSettingChange::set_allocated_settings(::msg::PokerPlayerSetting* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_516_PokerReceiveSettingChange.Settings)
}

// -------------------------------------------------------------------

// Processor_517_PokerSendShowCard

// optional int32 RoomId = 1;
inline bool Processor_517_PokerSendShowCard::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_517_PokerSendShowCard::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_517_PokerSendShowCard::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_517_PokerSendShowCard::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_517_PokerSendShowCard::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_517_PokerSendShowCard.RoomId)
  return roomid_;
}
inline void Processor_517_PokerSendShowCard::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_517_PokerSendShowCard.RoomId)
}

// repeated bool ShowCard = 2;
inline int Processor_517_PokerSendShowCard::showcard_size() const {
  return showcard_.size();
}
inline void Processor_517_PokerSendShowCard::clear_showcard() {
  showcard_.Clear();
}
inline bool Processor_517_PokerSendShowCard::showcard(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_517_PokerSendShowCard.ShowCard)
  return showcard_.Get(index);
}
inline void Processor_517_PokerSendShowCard::set_showcard(int index, bool value) {
  showcard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.Processor_517_PokerSendShowCard.ShowCard)
}
inline void Processor_517_PokerSendShowCard::add_showcard(bool value) {
  showcard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.Processor_517_PokerSendShowCard.ShowCard)
}
inline const ::google_public::protobuf::RepeatedField< bool >&
Processor_517_PokerSendShowCard::showcard() const {
  // @@protoc_insertion_point(field_list:msg.Processor_517_PokerSendShowCard.ShowCard)
  return showcard_;
}
inline ::google_public::protobuf::RepeatedField< bool >*
Processor_517_PokerSendShowCard::mutable_showcard() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_517_PokerSendShowCard.ShowCard)
  return &showcard_;
}

// -------------------------------------------------------------------

// PlayerWin

// optional int32 UserID = 1;
inline bool PlayerWin::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerWin::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerWin::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerWin::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 PlayerWin::userid() const {
  // @@protoc_insertion_point(field_get:msg.PlayerWin.UserID)
  return userid_;
}
inline void PlayerWin::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerWin.UserID)
}

// optional int32 PlayerWinChips = 2;
inline bool PlayerWin::has_playerwinchips() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerWin::set_has_playerwinchips() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerWin::clear_has_playerwinchips() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerWin::clear_playerwinchips() {
  playerwinchips_ = 0;
  clear_has_playerwinchips();
}
inline ::google_public::protobuf::int32 PlayerWin::playerwinchips() const {
  // @@protoc_insertion_point(field_get:msg.PlayerWin.PlayerWinChips)
  return playerwinchips_;
}
inline void PlayerWin::set_playerwinchips(::google_public::protobuf::int32 value) {
  set_has_playerwinchips();
  playerwinchips_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerWin.PlayerWinChips)
}

// -------------------------------------------------------------------

// PlayerHandResult

// optional .msg.UserDetailInfo UserDetailInfo = 1;
inline bool PlayerHandResult::has_userdetailinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerHandResult::set_has_userdetailinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerHandResult::clear_has_userdetailinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerHandResult::clear_userdetailinfo() {
  if (userdetailinfo_ != NULL) userdetailinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userdetailinfo();
}
inline const ::msg::UserDetailInfo& PlayerHandResult::userdetailinfo() const {
  // @@protoc_insertion_point(field_get:msg.PlayerHandResult.UserDetailInfo)
  return userdetailinfo_ != NULL ? *userdetailinfo_ : *default_instance_->userdetailinfo_;
}
inline ::msg::UserDetailInfo* PlayerHandResult::mutable_userdetailinfo() {
  set_has_userdetailinfo();
  if (userdetailinfo_ == NULL) userdetailinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.PlayerHandResult.UserDetailInfo)
  return userdetailinfo_;
}
inline ::msg::UserDetailInfo* PlayerHandResult::release_userdetailinfo() {
  clear_has_userdetailinfo();
  ::msg::UserDetailInfo* temp = userdetailinfo_;
  userdetailinfo_ = NULL;
  return temp;
}
inline void PlayerHandResult::set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo) {
  delete userdetailinfo_;
  userdetailinfo_ = userdetailinfo;
  if (userdetailinfo) {
    set_has_userdetailinfo();
  } else {
    clear_has_userdetailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PlayerHandResult.UserDetailInfo)
}

// optional int32 PlayerWinChips = 2;
inline bool PlayerHandResult::has_playerwinchips() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerHandResult::set_has_playerwinchips() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerHandResult::clear_has_playerwinchips() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerHandResult::clear_playerwinchips() {
  playerwinchips_ = 0;
  clear_has_playerwinchips();
}
inline ::google_public::protobuf::int32 PlayerHandResult::playerwinchips() const {
  // @@protoc_insertion_point(field_get:msg.PlayerHandResult.PlayerWinChips)
  return playerwinchips_;
}
inline void PlayerHandResult::set_playerwinchips(::google_public::protobuf::int32 value) {
  set_has_playerwinchips();
  playerwinchips_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerHandResult.PlayerWinChips)
}

// optional int32 PlayerBetChips = 3;
inline bool PlayerHandResult::has_playerbetchips() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerHandResult::set_has_playerbetchips() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerHandResult::clear_has_playerbetchips() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerHandResult::clear_playerbetchips() {
  playerbetchips_ = 0;
  clear_has_playerbetchips();
}
inline ::google_public::protobuf::int32 PlayerHandResult::playerbetchips() const {
  // @@protoc_insertion_point(field_get:msg.PlayerHandResult.PlayerBetChips)
  return playerbetchips_;
}
inline void PlayerHandResult::set_playerbetchips(::google_public::protobuf::int32 value) {
  set_has_playerbetchips();
  playerbetchips_ = value;
  // @@protoc_insertion_point(field_set:msg.PlayerHandResult.PlayerBetChips)
}

// -------------------------------------------------------------------

// Pot

// optional int32 PotAmount = 1;
inline bool Pot::has_potamount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pot::set_has_potamount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pot::clear_has_potamount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pot::clear_potamount() {
  potamount_ = 0;
  clear_has_potamount();
}
inline ::google_public::protobuf::int32 Pot::potamount() const {
  // @@protoc_insertion_point(field_get:msg.Pot.PotAmount)
  return potamount_;
}
inline void Pot::set_potamount(::google_public::protobuf::int32 value) {
  set_has_potamount();
  potamount_ = value;
  // @@protoc_insertion_point(field_set:msg.Pot.PotAmount)
}

// repeated .msg.PlayerWin PlayerWin = 2;
inline int Pot::playerwin_size() const {
  return playerwin_.size();
}
inline void Pot::clear_playerwin() {
  playerwin_.Clear();
}
inline const ::msg::PlayerWin& Pot::playerwin(int index) const {
  // @@protoc_insertion_point(field_get:msg.Pot.PlayerWin)
  return playerwin_.Get(index);
}
inline ::msg::PlayerWin* Pot::mutable_playerwin(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Pot.PlayerWin)
  return playerwin_.Mutable(index);
}
inline ::msg::PlayerWin* Pot::add_playerwin() {
  // @@protoc_insertion_point(field_add:msg.Pot.PlayerWin)
  return playerwin_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerWin >&
Pot::playerwin() const {
  // @@protoc_insertion_point(field_list:msg.Pot.PlayerWin)
  return playerwin_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerWin >*
Pot::mutable_playerwin() {
  // @@protoc_insertion_point(field_mutable_list:msg.Pot.PlayerWin)
  return &playerwin_;
}

// -------------------------------------------------------------------

// HandResultInfo

// optional bool HasLow = 1;
inline bool HandResultInfo::has_haslow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandResultInfo::set_has_haslow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandResultInfo::clear_has_haslow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandResultInfo::clear_haslow() {
  haslow_ = false;
  clear_has_haslow();
}
inline bool HandResultInfo::haslow() const {
  // @@protoc_insertion_point(field_get:msg.HandResultInfo.HasLow)
  return haslow_;
}
inline void HandResultInfo::set_haslow(bool value) {
  set_has_haslow();
  haslow_ = value;
  // @@protoc_insertion_point(field_set:msg.HandResultInfo.HasLow)
}

// repeated .msg.Pot Pot = 2;
inline int HandResultInfo::pot_size() const {
  return pot_.size();
}
inline void HandResultInfo::clear_pot() {
  pot_.Clear();
}
inline const ::msg::Pot& HandResultInfo::pot(int index) const {
  // @@protoc_insertion_point(field_get:msg.HandResultInfo.Pot)
  return pot_.Get(index);
}
inline ::msg::Pot* HandResultInfo::mutable_pot(int index) {
  // @@protoc_insertion_point(field_mutable:msg.HandResultInfo.Pot)
  return pot_.Mutable(index);
}
inline ::msg::Pot* HandResultInfo::add_pot() {
  // @@protoc_insertion_point(field_add:msg.HandResultInfo.Pot)
  return pot_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Pot >&
HandResultInfo::pot() const {
  // @@protoc_insertion_point(field_list:msg.HandResultInfo.Pot)
  return pot_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::Pot >*
HandResultInfo::mutable_pot() {
  // @@protoc_insertion_point(field_mutable_list:msg.HandResultInfo.Pot)
  return &pot_;
}

// repeated .msg.PlayerHandResult PlayerResult = 3;
inline int HandResultInfo::playerresult_size() const {
  return playerresult_.size();
}
inline void HandResultInfo::clear_playerresult() {
  playerresult_.Clear();
}
inline const ::msg::PlayerHandResult& HandResultInfo::playerresult(int index) const {
  // @@protoc_insertion_point(field_get:msg.HandResultInfo.PlayerResult)
  return playerresult_.Get(index);
}
inline ::msg::PlayerHandResult* HandResultInfo::mutable_playerresult(int index) {
  // @@protoc_insertion_point(field_mutable:msg.HandResultInfo.PlayerResult)
  return playerresult_.Mutable(index);
}
inline ::msg::PlayerHandResult* HandResultInfo::add_playerresult() {
  // @@protoc_insertion_point(field_add:msg.HandResultInfo.PlayerResult)
  return playerresult_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerHandResult >&
HandResultInfo::playerresult() const {
  // @@protoc_insertion_point(field_list:msg.HandResultInfo.PlayerResult)
  return playerresult_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerHandResult >*
HandResultInfo::mutable_playerresult() {
  // @@protoc_insertion_point(field_mutable_list:msg.HandResultInfo.PlayerResult)
  return &playerresult_;
}

// optional bool HasSecondCards = 4;
inline bool HandResultInfo::has_hassecondcards() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HandResultInfo::set_has_hassecondcards() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HandResultInfo::clear_has_hassecondcards() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HandResultInfo::clear_hassecondcards() {
  hassecondcards_ = false;
  clear_has_hassecondcards();
}
inline bool HandResultInfo::hassecondcards() const {
  // @@protoc_insertion_point(field_get:msg.HandResultInfo.HasSecondCards)
  return hassecondcards_;
}
inline void HandResultInfo::set_hassecondcards(bool value) {
  set_has_hassecondcards();
  hassecondcards_ = value;
  // @@protoc_insertion_point(field_set:msg.HandResultInfo.HasSecondCards)
}

// optional bool SecondHasLow = 5;
inline bool HandResultInfo::has_secondhaslow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HandResultInfo::set_has_secondhaslow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HandResultInfo::clear_has_secondhaslow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HandResultInfo::clear_secondhaslow() {
  secondhaslow_ = false;
  clear_has_secondhaslow();
}
inline bool HandResultInfo::secondhaslow() const {
  // @@protoc_insertion_point(field_get:msg.HandResultInfo.SecondHasLow)
  return secondhaslow_;
}
inline void HandResultInfo::set_secondhaslow(bool value) {
  set_has_secondhaslow();
  secondhaslow_ = value;
  // @@protoc_insertion_point(field_set:msg.HandResultInfo.SecondHasLow)
}

// -------------------------------------------------------------------

// Processor_520_PokerReceiveHandResult

// optional int32 RoomID = 1;
inline bool Processor_520_PokerReceiveHandResult::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_520_PokerReceiveHandResult::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_520_PokerReceiveHandResult::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_520_PokerReceiveHandResult::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_520_PokerReceiveHandResult::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_520_PokerReceiveHandResult.RoomID)
  return roomid_;
}
inline void Processor_520_PokerReceiveHandResult::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_520_PokerReceiveHandResult.RoomID)
}

// optional int32 HandId = 2;
inline bool Processor_520_PokerReceiveHandResult::has_handid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_520_PokerReceiveHandResult::set_has_handid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_520_PokerReceiveHandResult::clear_has_handid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_520_PokerReceiveHandResult::clear_handid() {
  handid_ = 0;
  clear_has_handid();
}
inline ::google_public::protobuf::int32 Processor_520_PokerReceiveHandResult::handid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_520_PokerReceiveHandResult.HandId)
  return handid_;
}
inline void Processor_520_PokerReceiveHandResult::set_handid(::google_public::protobuf::int32 value) {
  set_has_handid();
  handid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_520_PokerReceiveHandResult.HandId)
}

// optional .msg.HandResultInfo HandResultInfo = 3;
inline bool Processor_520_PokerReceiveHandResult::has_handresultinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_520_PokerReceiveHandResult::set_has_handresultinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_520_PokerReceiveHandResult::clear_has_handresultinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_520_PokerReceiveHandResult::clear_handresultinfo() {
  if (handresultinfo_ != NULL) handresultinfo_->::msg::HandResultInfo::Clear();
  clear_has_handresultinfo();
}
inline const ::msg::HandResultInfo& Processor_520_PokerReceiveHandResult::handresultinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_520_PokerReceiveHandResult.HandResultInfo)
  return handresultinfo_ != NULL ? *handresultinfo_ : *default_instance_->handresultinfo_;
}
inline ::msg::HandResultInfo* Processor_520_PokerReceiveHandResult::mutable_handresultinfo() {
  set_has_handresultinfo();
  if (handresultinfo_ == NULL) handresultinfo_ = new ::msg::HandResultInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_520_PokerReceiveHandResult.HandResultInfo)
  return handresultinfo_;
}
inline ::msg::HandResultInfo* Processor_520_PokerReceiveHandResult::release_handresultinfo() {
  clear_has_handresultinfo();
  ::msg::HandResultInfo* temp = handresultinfo_;
  handresultinfo_ = NULL;
  return temp;
}
inline void Processor_520_PokerReceiveHandResult::set_allocated_handresultinfo(::msg::HandResultInfo* handresultinfo) {
  delete handresultinfo_;
  handresultinfo_ = handresultinfo;
  if (handresultinfo) {
    set_has_handresultinfo();
  } else {
    clear_has_handresultinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_520_PokerReceiveHandResult.HandResultInfo)
}

// -------------------------------------------------------------------

// Processor_530_PokerGetTourmentStatus_UP

// optional int32 RoomID = 1;
inline bool Processor_530_PokerGetTourmentStatus_UP::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_530_PokerGetTourmentStatus_UP::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_530_PokerGetTourmentStatus_UP::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_530_PokerGetTourmentStatus_UP::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_530_PokerGetTourmentStatus_UP::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_UP.RoomID)
  return roomid_;
}
inline void Processor_530_PokerGetTourmentStatus_UP::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_530_PokerGetTourmentStatus_UP.RoomID)
}

// -------------------------------------------------------------------

// Processor_530_PokerGetTourmentStatus_DOWN

// optional int32 RoomID = 1;
inline bool Processor_530_PokerGetTourmentStatus_DOWN::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_530_PokerGetTourmentStatus_DOWN::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.RoomID)
  return roomid_;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_530_PokerGetTourmentStatus_DOWN.RoomID)
}

// optional .msg.TournamentInfo TournamentInfo = 2;
inline bool Processor_530_PokerGetTourmentStatus_DOWN::has_tournamentinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_has_tournamentinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_has_tournamentinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_tournamentinfo() {
  if (tournamentinfo_ != NULL) tournamentinfo_->::msg::TournamentInfo::Clear();
  clear_has_tournamentinfo();
}
inline const ::msg::TournamentInfo& Processor_530_PokerGetTourmentStatus_DOWN::tournamentinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.TournamentInfo)
  return tournamentinfo_ != NULL ? *tournamentinfo_ : *default_instance_->tournamentinfo_;
}
inline ::msg::TournamentInfo* Processor_530_PokerGetTourmentStatus_DOWN::mutable_tournamentinfo() {
  set_has_tournamentinfo();
  if (tournamentinfo_ == NULL) tournamentinfo_ = new ::msg::TournamentInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_530_PokerGetTourmentStatus_DOWN.TournamentInfo)
  return tournamentinfo_;
}
inline ::msg::TournamentInfo* Processor_530_PokerGetTourmentStatus_DOWN::release_tournamentinfo() {
  clear_has_tournamentinfo();
  ::msg::TournamentInfo* temp = tournamentinfo_;
  tournamentinfo_ = NULL;
  return temp;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_allocated_tournamentinfo(::msg::TournamentInfo* tournamentinfo) {
  delete tournamentinfo_;
  tournamentinfo_ = tournamentinfo;
  if (tournamentinfo) {
    set_has_tournamentinfo();
  } else {
    clear_has_tournamentinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_530_PokerGetTourmentStatus_DOWN.TournamentInfo)
}

// optional int32 CurrentLevel = 3;
inline bool Processor_530_PokerGetTourmentStatus_DOWN::has_currentlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_has_currentlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_has_currentlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_currentlevel() {
  currentlevel_ = 0;
  clear_has_currentlevel();
}
inline ::google_public::protobuf::int32 Processor_530_PokerGetTourmentStatus_DOWN::currentlevel() const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.CurrentLevel)
  return currentlevel_;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_currentlevel(::google_public::protobuf::int32 value) {
  set_has_currentlevel();
  currentlevel_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_530_PokerGetTourmentStatus_DOWN.CurrentLevel)
}

// optional int32 LastTime = 4;
inline bool Processor_530_PokerGetTourmentStatus_DOWN::has_lasttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_has_lasttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_lasttime() {
  lasttime_ = 0;
  clear_has_lasttime();
}
inline ::google_public::protobuf::int32 Processor_530_PokerGetTourmentStatus_DOWN::lasttime() const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.LastTime)
  return lasttime_;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_lasttime(::google_public::protobuf::int32 value) {
  set_has_lasttime();
  lasttime_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_530_PokerGetTourmentStatus_DOWN.LastTime)
}

// optional int32 TotalPlayerNum = 5;
inline bool Processor_530_PokerGetTourmentStatus_DOWN::has_totalplayernum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_has_totalplayernum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_has_totalplayernum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_totalplayernum() {
  totalplayernum_ = 0;
  clear_has_totalplayernum();
}
inline ::google_public::protobuf::int32 Processor_530_PokerGetTourmentStatus_DOWN::totalplayernum() const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.TotalPlayerNum)
  return totalplayernum_;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_totalplayernum(::google_public::protobuf::int32 value) {
  set_has_totalplayernum();
  totalplayernum_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_530_PokerGetTourmentStatus_DOWN.TotalPlayerNum)
}

// optional int32 TotalChips = 6;
inline bool Processor_530_PokerGetTourmentStatus_DOWN::has_totalchips() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_has_totalchips() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_has_totalchips() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_totalchips() {
  totalchips_ = 0;
  clear_has_totalchips();
}
inline ::google_public::protobuf::int32 Processor_530_PokerGetTourmentStatus_DOWN::totalchips() const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.TotalChips)
  return totalchips_;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_totalchips(::google_public::protobuf::int32 value) {
  set_has_totalchips();
  totalchips_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_530_PokerGetTourmentStatus_DOWN.TotalChips)
}

// repeated .msg.TourmentTableInfo TableInfo = 7;
inline int Processor_530_PokerGetTourmentStatus_DOWN::tableinfo_size() const {
  return tableinfo_.size();
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_tableinfo() {
  tableinfo_.Clear();
}
inline const ::msg::TourmentTableInfo& Processor_530_PokerGetTourmentStatus_DOWN::tableinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.TableInfo)
  return tableinfo_.Get(index);
}
inline ::msg::TourmentTableInfo* Processor_530_PokerGetTourmentStatus_DOWN::mutable_tableinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_530_PokerGetTourmentStatus_DOWN.TableInfo)
  return tableinfo_.Mutable(index);
}
inline ::msg::TourmentTableInfo* Processor_530_PokerGetTourmentStatus_DOWN::add_tableinfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_530_PokerGetTourmentStatus_DOWN.TableInfo)
  return tableinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::TourmentTableInfo >&
Processor_530_PokerGetTourmentStatus_DOWN::tableinfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_530_PokerGetTourmentStatus_DOWN.TableInfo)
  return tableinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::TourmentTableInfo >*
Processor_530_PokerGetTourmentStatus_DOWN::mutable_tableinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_530_PokerGetTourmentStatus_DOWN.TableInfo)
  return &tableinfo_;
}

// optional .msg.TournamentStatus Status = 8;
inline bool Processor_530_PokerGetTourmentStatus_DOWN::has_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_has_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_has_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::msg::TournamentStatus Processor_530_PokerGetTourmentStatus_DOWN::status() const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.Status)
  return static_cast< ::msg::TournamentStatus >(status_);
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_status(::msg::TournamentStatus value) {
  assert(::msg::TournamentStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_530_PokerGetTourmentStatus_DOWN.Status)
}

// optional int32 PrizePool = 9;
inline bool Processor_530_PokerGetTourmentStatus_DOWN::has_prizepool() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_has_prizepool() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_has_prizepool() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_prizepool() {
  prizepool_ = 0;
  clear_has_prizepool();
}
inline ::google_public::protobuf::int32 Processor_530_PokerGetTourmentStatus_DOWN::prizepool() const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.PrizePool)
  return prizepool_;
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::set_prizepool(::google_public::protobuf::int32 value) {
  set_has_prizepool();
  prizepool_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_530_PokerGetTourmentStatus_DOWN.PrizePool)
}

// repeated .msg.PlayerScore LosePlayers = 10;
inline int Processor_530_PokerGetTourmentStatus_DOWN::loseplayers_size() const {
  return loseplayers_.size();
}
inline void Processor_530_PokerGetTourmentStatus_DOWN::clear_loseplayers() {
  loseplayers_.Clear();
}
inline const ::msg::PlayerScore& Processor_530_PokerGetTourmentStatus_DOWN::loseplayers(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_530_PokerGetTourmentStatus_DOWN.LosePlayers)
  return loseplayers_.Get(index);
}
inline ::msg::PlayerScore* Processor_530_PokerGetTourmentStatus_DOWN::mutable_loseplayers(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_530_PokerGetTourmentStatus_DOWN.LosePlayers)
  return loseplayers_.Mutable(index);
}
inline ::msg::PlayerScore* Processor_530_PokerGetTourmentStatus_DOWN::add_loseplayers() {
  // @@protoc_insertion_point(field_add:msg.Processor_530_PokerGetTourmentStatus_DOWN.LosePlayers)
  return loseplayers_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore >&
Processor_530_PokerGetTourmentStatus_DOWN::loseplayers() const {
  // @@protoc_insertion_point(field_list:msg.Processor_530_PokerGetTourmentStatus_DOWN.LosePlayers)
  return loseplayers_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::PlayerScore >*
Processor_530_PokerGetTourmentStatus_DOWN::mutable_loseplayers() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_530_PokerGetTourmentStatus_DOWN.LosePlayers)
  return &loseplayers_;
}

// -------------------------------------------------------------------

// TourmentTableInfo

// optional int32 TableID = 1;
inline bool TourmentTableInfo::has_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TourmentTableInfo::set_has_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TourmentTableInfo::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TourmentTableInfo::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google_public::protobuf::int32 TourmentTableInfo::tableid() const {
  // @@protoc_insertion_point(field_get:msg.TourmentTableInfo.TableID)
  return tableid_;
}
inline void TourmentTableInfo::set_tableid(::google_public::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
  // @@protoc_insertion_point(field_set:msg.TourmentTableInfo.TableID)
}

// repeated .msg.PokerPlayerInfo Player = 2;
inline int TourmentTableInfo::player_size() const {
  return player_.size();
}
inline void TourmentTableInfo::clear_player() {
  player_.Clear();
}
inline const ::msg::PokerPlayerInfo& TourmentTableInfo::player(int index) const {
  // @@protoc_insertion_point(field_get:msg.TourmentTableInfo.Player)
  return player_.Get(index);
}
inline ::msg::PokerPlayerInfo* TourmentTableInfo::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:msg.TourmentTableInfo.Player)
  return player_.Mutable(index);
}
inline ::msg::PokerPlayerInfo* TourmentTableInfo::add_player() {
  // @@protoc_insertion_point(field_add:msg.TourmentTableInfo.Player)
  return player_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo >&
TourmentTableInfo::player() const {
  // @@protoc_insertion_point(field_list:msg.TourmentTableInfo.Player)
  return player_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::PokerPlayerInfo >*
TourmentTableInfo::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:msg.TourmentTableInfo.Player)
  return &player_;
}

// -------------------------------------------------------------------

// Processor_531_PokerTourmentChangeTable

// optional int32 TableID = 1;
inline bool Processor_531_PokerTourmentChangeTable::has_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_531_PokerTourmentChangeTable::set_has_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_531_PokerTourmentChangeTable::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_531_PokerTourmentChangeTable::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google_public::protobuf::int32 Processor_531_PokerTourmentChangeTable::tableid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_531_PokerTourmentChangeTable.TableID)
  return tableid_;
}
inline void Processor_531_PokerTourmentChangeTable::set_tableid(::google_public::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_531_PokerTourmentChangeTable.TableID)
}

// optional int32 RoomID = 2;
inline bool Processor_531_PokerTourmentChangeTable::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_531_PokerTourmentChangeTable::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_531_PokerTourmentChangeTable::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_531_PokerTourmentChangeTable::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_531_PokerTourmentChangeTable::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_531_PokerTourmentChangeTable.RoomID)
  return roomid_;
}
inline void Processor_531_PokerTourmentChangeTable::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_531_PokerTourmentChangeTable.RoomID)
}

// -------------------------------------------------------------------

// Processor_532_PokerTournamentRequestAddon

// optional int32 RoomId = 1;
inline bool Processor_532_PokerTournamentRequestAddon::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_532_PokerTournamentRequestAddon::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_532_PokerTournamentRequestAddon::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_532_PokerTournamentRequestAddon::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_532_PokerTournamentRequestAddon::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_532_PokerTournamentRequestAddon.RoomId)
  return roomid_;
}
inline void Processor_532_PokerTournamentRequestAddon::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_532_PokerTournamentRequestAddon.RoomId)
}

// optional int32 Buyin = 2;
inline bool Processor_532_PokerTournamentRequestAddon::has_buyin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_532_PokerTournamentRequestAddon::set_has_buyin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_532_PokerTournamentRequestAddon::clear_has_buyin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_532_PokerTournamentRequestAddon::clear_buyin() {
  buyin_ = 0;
  clear_has_buyin();
}
inline ::google_public::protobuf::int32 Processor_532_PokerTournamentRequestAddon::buyin() const {
  // @@protoc_insertion_point(field_get:msg.Processor_532_PokerTournamentRequestAddon.Buyin)
  return buyin_;
}
inline void Processor_532_PokerTournamentRequestAddon::set_buyin(::google_public::protobuf::int32 value) {
  set_has_buyin();
  buyin_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_532_PokerTournamentRequestAddon.Buyin)
}

// -------------------------------------------------------------------

// Processor_533_PokerTournamentAddon

// optional int32 RoomId = 1;
inline bool Processor_533_PokerTournamentAddon::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_533_PokerTournamentAddon::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_533_PokerTournamentAddon::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_533_PokerTournamentAddon::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_533_PokerTournamentAddon::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_533_PokerTournamentAddon.RoomId)
  return roomid_;
}
inline void Processor_533_PokerTournamentAddon::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_533_PokerTournamentAddon.RoomId)
}

// optional bool Addon = 2;
inline bool Processor_533_PokerTournamentAddon::has_addon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_533_PokerTournamentAddon::set_has_addon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_533_PokerTournamentAddon::clear_has_addon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_533_PokerTournamentAddon::clear_addon() {
  addon_ = false;
  clear_has_addon();
}
inline bool Processor_533_PokerTournamentAddon::addon() const {
  // @@protoc_insertion_point(field_get:msg.Processor_533_PokerTournamentAddon.Addon)
  return addon_;
}
inline void Processor_533_PokerTournamentAddon::set_addon(bool value) {
  set_has_addon();
  addon_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_533_PokerTournamentAddon.Addon)
}

// -------------------------------------------------------------------

// OFCPlayerInfo

// optional .msg.CommonPlayerInfo PlayerInfo = 1;
inline bool OFCPlayerInfo::has_playerinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OFCPlayerInfo::set_has_playerinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OFCPlayerInfo::clear_has_playerinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OFCPlayerInfo::clear_playerinfo() {
  if (playerinfo_ != NULL) playerinfo_->::msg::CommonPlayerInfo::Clear();
  clear_has_playerinfo();
}
inline const ::msg::CommonPlayerInfo& OFCPlayerInfo::playerinfo() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.PlayerInfo)
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
}
inline ::msg::CommonPlayerInfo* OFCPlayerInfo::mutable_playerinfo() {
  set_has_playerinfo();
  if (playerinfo_ == NULL) playerinfo_ = new ::msg::CommonPlayerInfo;
  // @@protoc_insertion_point(field_mutable:msg.OFCPlayerInfo.PlayerInfo)
  return playerinfo_;
}
inline ::msg::CommonPlayerInfo* OFCPlayerInfo::release_playerinfo() {
  clear_has_playerinfo();
  ::msg::CommonPlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
inline void OFCPlayerInfo::set_allocated_playerinfo(::msg::CommonPlayerInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    set_has_playerinfo();
  } else {
    clear_has_playerinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.OFCPlayerInfo.PlayerInfo)
}

// optional int32 PlayerScore = 2;
inline bool OFCPlayerInfo::has_playerscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OFCPlayerInfo::set_has_playerscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OFCPlayerInfo::clear_has_playerscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OFCPlayerInfo::clear_playerscore() {
  playerscore_ = 0;
  clear_has_playerscore();
}
inline ::google_public::protobuf::int32 OFCPlayerInfo::playerscore() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.PlayerScore)
  return playerscore_;
}
inline void OFCPlayerInfo::set_playerscore(::google_public::protobuf::int32 value) {
  set_has_playerscore();
  playerscore_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.PlayerScore)
}

// repeated .msg.OFCPlayerCard Card = 3;
inline int OFCPlayerInfo::card_size() const {
  return card_.size();
}
inline void OFCPlayerInfo::clear_card() {
  card_.Clear();
}
inline const ::msg::OFCPlayerCard& OFCPlayerInfo::card(int index) const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.Card)
  return card_.Get(index);
}
inline ::msg::OFCPlayerCard* OFCPlayerInfo::mutable_card(int index) {
  // @@protoc_insertion_point(field_mutable:msg.OFCPlayerInfo.Card)
  return card_.Mutable(index);
}
inline ::msg::OFCPlayerCard* OFCPlayerInfo::add_card() {
  // @@protoc_insertion_point(field_add:msg.OFCPlayerInfo.Card)
  return card_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard >&
OFCPlayerInfo::card() const {
  // @@protoc_insertion_point(field_list:msg.OFCPlayerInfo.Card)
  return card_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard >*
OFCPlayerInfo::mutable_card() {
  // @@protoc_insertion_point(field_mutable_list:msg.OFCPlayerInfo.Card)
  return &card_;
}

// repeated int32 HoleCard = 4;
inline int OFCPlayerInfo::holecard_size() const {
  return holecard_.size();
}
inline void OFCPlayerInfo::clear_holecard() {
  holecard_.Clear();
}
inline ::google_public::protobuf::int32 OFCPlayerInfo::holecard(int index) const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.HoleCard)
  return holecard_.Get(index);
}
inline void OFCPlayerInfo::set_holecard(int index, ::google_public::protobuf::int32 value) {
  holecard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.HoleCard)
}
inline void OFCPlayerInfo::add_holecard(::google_public::protobuf::int32 value) {
  holecard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.OFCPlayerInfo.HoleCard)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
OFCPlayerInfo::holecard() const {
  // @@protoc_insertion_point(field_list:msg.OFCPlayerInfo.HoleCard)
  return holecard_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
OFCPlayerInfo::mutable_holecard() {
  // @@protoc_insertion_point(field_mutable_list:msg.OFCPlayerInfo.HoleCard)
  return &holecard_;
}

// optional string FirstRowType = 5;
inline bool OFCPlayerInfo::has_firstrowtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OFCPlayerInfo::set_has_firstrowtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OFCPlayerInfo::clear_has_firstrowtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OFCPlayerInfo::clear_firstrowtype() {
  if (firstrowtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstrowtype_->clear();
  }
  clear_has_firstrowtype();
}
inline const ::std::string& OFCPlayerInfo::firstrowtype() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.FirstRowType)
  return *firstrowtype_;
}
inline void OFCPlayerInfo::set_firstrowtype(const ::std::string& value) {
  set_has_firstrowtype();
  if (firstrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstrowtype_ = new ::std::string;
  }
  firstrowtype_->assign(value);
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.FirstRowType)
}
inline void OFCPlayerInfo::set_firstrowtype(const char* value) {
  set_has_firstrowtype();
  if (firstrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstrowtype_ = new ::std::string;
  }
  firstrowtype_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.OFCPlayerInfo.FirstRowType)
}
inline void OFCPlayerInfo::set_firstrowtype(const char* value, size_t size) {
  set_has_firstrowtype();
  if (firstrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstrowtype_ = new ::std::string;
  }
  firstrowtype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.OFCPlayerInfo.FirstRowType)
}
inline ::std::string* OFCPlayerInfo::mutable_firstrowtype() {
  set_has_firstrowtype();
  if (firstrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    firstrowtype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.OFCPlayerInfo.FirstRowType)
  return firstrowtype_;
}
inline ::std::string* OFCPlayerInfo::release_firstrowtype() {
  clear_has_firstrowtype();
  if (firstrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = firstrowtype_;
    firstrowtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OFCPlayerInfo::set_allocated_firstrowtype(::std::string* firstrowtype) {
  if (firstrowtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete firstrowtype_;
  }
  if (firstrowtype) {
    set_has_firstrowtype();
    firstrowtype_ = firstrowtype;
  } else {
    clear_has_firstrowtype();
    firstrowtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.OFCPlayerInfo.FirstRowType)
}

// optional string MiddleRowType = 6;
inline bool OFCPlayerInfo::has_middlerowtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OFCPlayerInfo::set_has_middlerowtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OFCPlayerInfo::clear_has_middlerowtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OFCPlayerInfo::clear_middlerowtype() {
  if (middlerowtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    middlerowtype_->clear();
  }
  clear_has_middlerowtype();
}
inline const ::std::string& OFCPlayerInfo::middlerowtype() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.MiddleRowType)
  return *middlerowtype_;
}
inline void OFCPlayerInfo::set_middlerowtype(const ::std::string& value) {
  set_has_middlerowtype();
  if (middlerowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    middlerowtype_ = new ::std::string;
  }
  middlerowtype_->assign(value);
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.MiddleRowType)
}
inline void OFCPlayerInfo::set_middlerowtype(const char* value) {
  set_has_middlerowtype();
  if (middlerowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    middlerowtype_ = new ::std::string;
  }
  middlerowtype_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.OFCPlayerInfo.MiddleRowType)
}
inline void OFCPlayerInfo::set_middlerowtype(const char* value, size_t size) {
  set_has_middlerowtype();
  if (middlerowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    middlerowtype_ = new ::std::string;
  }
  middlerowtype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.OFCPlayerInfo.MiddleRowType)
}
inline ::std::string* OFCPlayerInfo::mutable_middlerowtype() {
  set_has_middlerowtype();
  if (middlerowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    middlerowtype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.OFCPlayerInfo.MiddleRowType)
  return middlerowtype_;
}
inline ::std::string* OFCPlayerInfo::release_middlerowtype() {
  clear_has_middlerowtype();
  if (middlerowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = middlerowtype_;
    middlerowtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OFCPlayerInfo::set_allocated_middlerowtype(::std::string* middlerowtype) {
  if (middlerowtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete middlerowtype_;
  }
  if (middlerowtype) {
    set_has_middlerowtype();
    middlerowtype_ = middlerowtype;
  } else {
    clear_has_middlerowtype();
    middlerowtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.OFCPlayerInfo.MiddleRowType)
}

// optional string LastRowType = 7;
inline bool OFCPlayerInfo::has_lastrowtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OFCPlayerInfo::set_has_lastrowtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OFCPlayerInfo::clear_has_lastrowtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OFCPlayerInfo::clear_lastrowtype() {
  if (lastrowtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastrowtype_->clear();
  }
  clear_has_lastrowtype();
}
inline const ::std::string& OFCPlayerInfo::lastrowtype() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.LastRowType)
  return *lastrowtype_;
}
inline void OFCPlayerInfo::set_lastrowtype(const ::std::string& value) {
  set_has_lastrowtype();
  if (lastrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastrowtype_ = new ::std::string;
  }
  lastrowtype_->assign(value);
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.LastRowType)
}
inline void OFCPlayerInfo::set_lastrowtype(const char* value) {
  set_has_lastrowtype();
  if (lastrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastrowtype_ = new ::std::string;
  }
  lastrowtype_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.OFCPlayerInfo.LastRowType)
}
inline void OFCPlayerInfo::set_lastrowtype(const char* value, size_t size) {
  set_has_lastrowtype();
  if (lastrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastrowtype_ = new ::std::string;
  }
  lastrowtype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.OFCPlayerInfo.LastRowType)
}
inline ::std::string* OFCPlayerInfo::mutable_lastrowtype() {
  set_has_lastrowtype();
  if (lastrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastrowtype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.OFCPlayerInfo.LastRowType)
  return lastrowtype_;
}
inline ::std::string* OFCPlayerInfo::release_lastrowtype() {
  clear_has_lastrowtype();
  if (lastrowtype_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lastrowtype_;
    lastrowtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OFCPlayerInfo::set_allocated_lastrowtype(::std::string* lastrowtype) {
  if (lastrowtype_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lastrowtype_;
  }
  if (lastrowtype) {
    set_has_lastrowtype();
    lastrowtype_ = lastrowtype;
  } else {
    clear_has_lastrowtype();
    lastrowtype_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.OFCPlayerInfo.LastRowType)
}

// optional int32 FirstRowScore = 8;
inline bool OFCPlayerInfo::has_firstrowscore() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OFCPlayerInfo::set_has_firstrowscore() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OFCPlayerInfo::clear_has_firstrowscore() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OFCPlayerInfo::clear_firstrowscore() {
  firstrowscore_ = 0;
  clear_has_firstrowscore();
}
inline ::google_public::protobuf::int32 OFCPlayerInfo::firstrowscore() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.FirstRowScore)
  return firstrowscore_;
}
inline void OFCPlayerInfo::set_firstrowscore(::google_public::protobuf::int32 value) {
  set_has_firstrowscore();
  firstrowscore_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.FirstRowScore)
}

// optional int32 MiddleRowScore = 9;
inline bool OFCPlayerInfo::has_middlerowscore() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OFCPlayerInfo::set_has_middlerowscore() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OFCPlayerInfo::clear_has_middlerowscore() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OFCPlayerInfo::clear_middlerowscore() {
  middlerowscore_ = 0;
  clear_has_middlerowscore();
}
inline ::google_public::protobuf::int32 OFCPlayerInfo::middlerowscore() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.MiddleRowScore)
  return middlerowscore_;
}
inline void OFCPlayerInfo::set_middlerowscore(::google_public::protobuf::int32 value) {
  set_has_middlerowscore();
  middlerowscore_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.MiddleRowScore)
}

// optional int32 LastRowScore = 10;
inline bool OFCPlayerInfo::has_lastrowscore() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OFCPlayerInfo::set_has_lastrowscore() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OFCPlayerInfo::clear_has_lastrowscore() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OFCPlayerInfo::clear_lastrowscore() {
  lastrowscore_ = 0;
  clear_has_lastrowscore();
}
inline ::google_public::protobuf::int32 OFCPlayerInfo::lastrowscore() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.LastRowScore)
  return lastrowscore_;
}
inline void OFCPlayerInfo::set_lastrowscore(::google_public::protobuf::int32 value) {
  set_has_lastrowscore();
  lastrowscore_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.LastRowScore)
}

// optional int32 FantasyCards = 11;
inline bool OFCPlayerInfo::has_fantasycards() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OFCPlayerInfo::set_has_fantasycards() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OFCPlayerInfo::clear_has_fantasycards() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OFCPlayerInfo::clear_fantasycards() {
  fantasycards_ = 0;
  clear_has_fantasycards();
}
inline ::google_public::protobuf::int32 OFCPlayerInfo::fantasycards() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.FantasyCards)
  return fantasycards_;
}
inline void OFCPlayerInfo::set_fantasycards(::google_public::protobuf::int32 value) {
  set_has_fantasycards();
  fantasycards_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.FantasyCards)
}

// optional .msg.OFCActionStatus ActionStatus = 12;
inline bool OFCPlayerInfo::has_actionstatus() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OFCPlayerInfo::set_has_actionstatus() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OFCPlayerInfo::clear_has_actionstatus() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OFCPlayerInfo::clear_actionstatus() {
  actionstatus_ = 0;
  clear_has_actionstatus();
}
inline ::msg::OFCActionStatus OFCPlayerInfo::actionstatus() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.ActionStatus)
  return static_cast< ::msg::OFCActionStatus >(actionstatus_);
}
inline void OFCPlayerInfo::set_actionstatus(::msg::OFCActionStatus value) {
  assert(::msg::OFCActionStatus_IsValid(value));
  set_has_actionstatus();
  actionstatus_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.ActionStatus)
}

// optional .msg.ActionRequest ActionRequest = 13;
inline bool OFCPlayerInfo::has_actionrequest() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OFCPlayerInfo::set_has_actionrequest() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OFCPlayerInfo::clear_has_actionrequest() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OFCPlayerInfo::clear_actionrequest() {
  if (actionrequest_ != NULL) actionrequest_->::msg::ActionRequest::Clear();
  clear_has_actionrequest();
}
inline const ::msg::ActionRequest& OFCPlayerInfo::actionrequest() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.ActionRequest)
  return actionrequest_ != NULL ? *actionrequest_ : *default_instance_->actionrequest_;
}
inline ::msg::ActionRequest* OFCPlayerInfo::mutable_actionrequest() {
  set_has_actionrequest();
  if (actionrequest_ == NULL) actionrequest_ = new ::msg::ActionRequest;
  // @@protoc_insertion_point(field_mutable:msg.OFCPlayerInfo.ActionRequest)
  return actionrequest_;
}
inline ::msg::ActionRequest* OFCPlayerInfo::release_actionrequest() {
  clear_has_actionrequest();
  ::msg::ActionRequest* temp = actionrequest_;
  actionrequest_ = NULL;
  return temp;
}
inline void OFCPlayerInfo::set_allocated_actionrequest(::msg::ActionRequest* actionrequest) {
  delete actionrequest_;
  actionrequest_ = actionrequest;
  if (actionrequest) {
    set_has_actionrequest();
  } else {
    clear_has_actionrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.OFCPlayerInfo.ActionRequest)
}

// optional .msg.OFCCardType FirstCardType = 14;
inline bool OFCPlayerInfo::has_firstcardtype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OFCPlayerInfo::set_has_firstcardtype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OFCPlayerInfo::clear_has_firstcardtype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OFCPlayerInfo::clear_firstcardtype() {
  firstcardtype_ = 0;
  clear_has_firstcardtype();
}
inline ::msg::OFCCardType OFCPlayerInfo::firstcardtype() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.FirstCardType)
  return static_cast< ::msg::OFCCardType >(firstcardtype_);
}
inline void OFCPlayerInfo::set_firstcardtype(::msg::OFCCardType value) {
  assert(::msg::OFCCardType_IsValid(value));
  set_has_firstcardtype();
  firstcardtype_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.FirstCardType)
}

// optional .msg.OFCCardType MiddleCardType = 15;
inline bool OFCPlayerInfo::has_middlecardtype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OFCPlayerInfo::set_has_middlecardtype() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OFCPlayerInfo::clear_has_middlecardtype() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OFCPlayerInfo::clear_middlecardtype() {
  middlecardtype_ = 0;
  clear_has_middlecardtype();
}
inline ::msg::OFCCardType OFCPlayerInfo::middlecardtype() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.MiddleCardType)
  return static_cast< ::msg::OFCCardType >(middlecardtype_);
}
inline void OFCPlayerInfo::set_middlecardtype(::msg::OFCCardType value) {
  assert(::msg::OFCCardType_IsValid(value));
  set_has_middlecardtype();
  middlecardtype_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.MiddleCardType)
}

// optional .msg.OFCCardType LastCardType = 16;
inline bool OFCPlayerInfo::has_lastcardtype() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void OFCPlayerInfo::set_has_lastcardtype() {
  _has_bits_[0] |= 0x00008000u;
}
inline void OFCPlayerInfo::clear_has_lastcardtype() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void OFCPlayerInfo::clear_lastcardtype() {
  lastcardtype_ = 0;
  clear_has_lastcardtype();
}
inline ::msg::OFCCardType OFCPlayerInfo::lastcardtype() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.LastCardType)
  return static_cast< ::msg::OFCCardType >(lastcardtype_);
}
inline void OFCPlayerInfo::set_lastcardtype(::msg::OFCCardType value) {
  assert(::msg::OFCCardType_IsValid(value));
  set_has_lastcardtype();
  lastcardtype_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.LastCardType)
}

// optional bool Refantasy = 17;
inline bool OFCPlayerInfo::has_refantasy() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void OFCPlayerInfo::set_has_refantasy() {
  _has_bits_[0] |= 0x00010000u;
}
inline void OFCPlayerInfo::clear_has_refantasy() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void OFCPlayerInfo::clear_refantasy() {
  refantasy_ = false;
  clear_has_refantasy();
}
inline bool OFCPlayerInfo::refantasy() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerInfo.Refantasy)
  return refantasy_;
}
inline void OFCPlayerInfo::set_refantasy(bool value) {
  set_has_refantasy();
  refantasy_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerInfo.Refantasy)
}

// -------------------------------------------------------------------

// OFCPlayerSetting

// optional bool SitoutNextHand = 1;
inline bool OFCPlayerSetting::has_sitoutnexthand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OFCPlayerSetting::set_has_sitoutnexthand() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OFCPlayerSetting::clear_has_sitoutnexthand() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OFCPlayerSetting::clear_sitoutnexthand() {
  sitoutnexthand_ = false;
  clear_has_sitoutnexthand();
}
inline bool OFCPlayerSetting::sitoutnexthand() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerSetting.SitoutNextHand)
  return sitoutnexthand_;
}
inline void OFCPlayerSetting::set_sitoutnexthand(bool value) {
  set_has_sitoutnexthand();
  sitoutnexthand_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerSetting.SitoutNextHand)
}

// -------------------------------------------------------------------

// OFCPropUpdate

// repeated .msg.OFCPlayerInfo PlayerInfo = 1;
inline int OFCPropUpdate::playerinfo_size() const {
  return playerinfo_.size();
}
inline void OFCPropUpdate::clear_playerinfo() {
  playerinfo_.Clear();
}
inline const ::msg::OFCPlayerInfo& OFCPropUpdate::playerinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.OFCPropUpdate.PlayerInfo)
  return playerinfo_.Get(index);
}
inline ::msg::OFCPlayerInfo* OFCPropUpdate::mutable_playerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.OFCPropUpdate.PlayerInfo)
  return playerinfo_.Mutable(index);
}
inline ::msg::OFCPlayerInfo* OFCPropUpdate::add_playerinfo() {
  // @@protoc_insertion_point(field_add:msg.OFCPropUpdate.PlayerInfo)
  return playerinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerInfo >&
OFCPropUpdate::playerinfo() const {
  // @@protoc_insertion_point(field_list:msg.OFCPropUpdate.PlayerInfo)
  return playerinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerInfo >*
OFCPropUpdate::mutable_playerinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.OFCPropUpdate.PlayerInfo)
  return &playerinfo_;
}

// -------------------------------------------------------------------

// OFCResult

// repeated .msg.OFCPlayerHandResult OFCPlayerHandResult = 1;
inline int OFCResult::ofcplayerhandresult_size() const {
  return ofcplayerhandresult_.size();
}
inline void OFCResult::clear_ofcplayerhandresult() {
  ofcplayerhandresult_.Clear();
}
inline const ::msg::OFCPlayerHandResult& OFCResult::ofcplayerhandresult(int index) const {
  // @@protoc_insertion_point(field_get:msg.OFCResult.OFCPlayerHandResult)
  return ofcplayerhandresult_.Get(index);
}
inline ::msg::OFCPlayerHandResult* OFCResult::mutable_ofcplayerhandresult(int index) {
  // @@protoc_insertion_point(field_mutable:msg.OFCResult.OFCPlayerHandResult)
  return ofcplayerhandresult_.Mutable(index);
}
inline ::msg::OFCPlayerHandResult* OFCResult::add_ofcplayerhandresult() {
  // @@protoc_insertion_point(field_add:msg.OFCResult.OFCPlayerHandResult)
  return ofcplayerhandresult_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerHandResult >&
OFCResult::ofcplayerhandresult() const {
  // @@protoc_insertion_point(field_list:msg.OFCResult.OFCPlayerHandResult)
  return ofcplayerhandresult_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerHandResult >*
OFCResult::mutable_ofcplayerhandresult() {
  // @@protoc_insertion_point(field_mutable_list:msg.OFCResult.OFCPlayerHandResult)
  return &ofcplayerhandresult_;
}

// repeated .msg.UserCompare UserCompare = 2;
inline int OFCResult::usercompare_size() const {
  return usercompare_.size();
}
inline void OFCResult::clear_usercompare() {
  usercompare_.Clear();
}
inline const ::msg::UserCompare& OFCResult::usercompare(int index) const {
  // @@protoc_insertion_point(field_get:msg.OFCResult.UserCompare)
  return usercompare_.Get(index);
}
inline ::msg::UserCompare* OFCResult::mutable_usercompare(int index) {
  // @@protoc_insertion_point(field_mutable:msg.OFCResult.UserCompare)
  return usercompare_.Mutable(index);
}
inline ::msg::UserCompare* OFCResult::add_usercompare() {
  // @@protoc_insertion_point(field_add:msg.OFCResult.UserCompare)
  return usercompare_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserCompare >&
OFCResult::usercompare() const {
  // @@protoc_insertion_point(field_list:msg.OFCResult.UserCompare)
  return usercompare_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserCompare >*
OFCResult::mutable_usercompare() {
  // @@protoc_insertion_point(field_mutable_list:msg.OFCResult.UserCompare)
  return &usercompare_;
}

// -------------------------------------------------------------------

// Processor_600_OFCRefreshAll

// optional .msg.CommonRoomInfo CommonRoomInfo = 1;
inline bool Processor_600_OFCRefreshAll::has_commonroominfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_600_OFCRefreshAll::set_has_commonroominfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_600_OFCRefreshAll::clear_has_commonroominfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_600_OFCRefreshAll::clear_commonroominfo() {
  if (commonroominfo_ != NULL) commonroominfo_->::msg::CommonRoomInfo::Clear();
  clear_has_commonroominfo();
}
inline const ::msg::CommonRoomInfo& Processor_600_OFCRefreshAll::commonroominfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_600_OFCRefreshAll.CommonRoomInfo)
  return commonroominfo_ != NULL ? *commonroominfo_ : *default_instance_->commonroominfo_;
}
inline ::msg::CommonRoomInfo* Processor_600_OFCRefreshAll::mutable_commonroominfo() {
  set_has_commonroominfo();
  if (commonroominfo_ == NULL) commonroominfo_ = new ::msg::CommonRoomInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_600_OFCRefreshAll.CommonRoomInfo)
  return commonroominfo_;
}
inline ::msg::CommonRoomInfo* Processor_600_OFCRefreshAll::release_commonroominfo() {
  clear_has_commonroominfo();
  ::msg::CommonRoomInfo* temp = commonroominfo_;
  commonroominfo_ = NULL;
  return temp;
}
inline void Processor_600_OFCRefreshAll::set_allocated_commonroominfo(::msg::CommonRoomInfo* commonroominfo) {
  delete commonroominfo_;
  commonroominfo_ = commonroominfo;
  if (commonroominfo) {
    set_has_commonroominfo();
  } else {
    clear_has_commonroominfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_600_OFCRefreshAll.CommonRoomInfo)
}

// optional .msg.OFCPropUpdate PropUpdate = 2;
inline bool Processor_600_OFCRefreshAll::has_propupdate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_600_OFCRefreshAll::set_has_propupdate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_600_OFCRefreshAll::clear_has_propupdate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_600_OFCRefreshAll::clear_propupdate() {
  if (propupdate_ != NULL) propupdate_->::msg::OFCPropUpdate::Clear();
  clear_has_propupdate();
}
inline const ::msg::OFCPropUpdate& Processor_600_OFCRefreshAll::propupdate() const {
  // @@protoc_insertion_point(field_get:msg.Processor_600_OFCRefreshAll.PropUpdate)
  return propupdate_ != NULL ? *propupdate_ : *default_instance_->propupdate_;
}
inline ::msg::OFCPropUpdate* Processor_600_OFCRefreshAll::mutable_propupdate() {
  set_has_propupdate();
  if (propupdate_ == NULL) propupdate_ = new ::msg::OFCPropUpdate;
  // @@protoc_insertion_point(field_mutable:msg.Processor_600_OFCRefreshAll.PropUpdate)
  return propupdate_;
}
inline ::msg::OFCPropUpdate* Processor_600_OFCRefreshAll::release_propupdate() {
  clear_has_propupdate();
  ::msg::OFCPropUpdate* temp = propupdate_;
  propupdate_ = NULL;
  return temp;
}
inline void Processor_600_OFCRefreshAll::set_allocated_propupdate(::msg::OFCPropUpdate* propupdate) {
  delete propupdate_;
  propupdate_ = propupdate;
  if (propupdate) {
    set_has_propupdate();
  } else {
    clear_has_propupdate();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_600_OFCRefreshAll.PropUpdate)
}

// optional .msg.OFCPlayerSetting Settings = 3;
inline bool Processor_600_OFCRefreshAll::has_settings() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_600_OFCRefreshAll::set_has_settings() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_600_OFCRefreshAll::clear_has_settings() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_600_OFCRefreshAll::clear_settings() {
  if (settings_ != NULL) settings_->::msg::OFCPlayerSetting::Clear();
  clear_has_settings();
}
inline const ::msg::OFCPlayerSetting& Processor_600_OFCRefreshAll::settings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_600_OFCRefreshAll.Settings)
  return settings_ != NULL ? *settings_ : *default_instance_->settings_;
}
inline ::msg::OFCPlayerSetting* Processor_600_OFCRefreshAll::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) settings_ = new ::msg::OFCPlayerSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_600_OFCRefreshAll.Settings)
  return settings_;
}
inline ::msg::OFCPlayerSetting* Processor_600_OFCRefreshAll::release_settings() {
  clear_has_settings();
  ::msg::OFCPlayerSetting* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void Processor_600_OFCRefreshAll::set_allocated_settings(::msg::OFCPlayerSetting* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_600_OFCRefreshAll.Settings)
}

// -------------------------------------------------------------------

// Processor_601_OFCReceivePropUpdate

// optional int32 RoomId = 1;
inline bool Processor_601_OFCReceivePropUpdate::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_601_OFCReceivePropUpdate::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_601_OFCReceivePropUpdate::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_601_OFCReceivePropUpdate::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_601_OFCReceivePropUpdate::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_601_OFCReceivePropUpdate.RoomId)
  return roomid_;
}
inline void Processor_601_OFCReceivePropUpdate::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_601_OFCReceivePropUpdate.RoomId)
}

// optional .msg.OFCPropUpdate Update = 2;
inline bool Processor_601_OFCReceivePropUpdate::has_update() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_601_OFCReceivePropUpdate::set_has_update() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_601_OFCReceivePropUpdate::clear_has_update() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_601_OFCReceivePropUpdate::clear_update() {
  if (update_ != NULL) update_->::msg::OFCPropUpdate::Clear();
  clear_has_update();
}
inline const ::msg::OFCPropUpdate& Processor_601_OFCReceivePropUpdate::update() const {
  // @@protoc_insertion_point(field_get:msg.Processor_601_OFCReceivePropUpdate.Update)
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::msg::OFCPropUpdate* Processor_601_OFCReceivePropUpdate::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::msg::OFCPropUpdate;
  // @@protoc_insertion_point(field_mutable:msg.Processor_601_OFCReceivePropUpdate.Update)
  return update_;
}
inline ::msg::OFCPropUpdate* Processor_601_OFCReceivePropUpdate::release_update() {
  clear_has_update();
  ::msg::OFCPropUpdate* temp = update_;
  update_ = NULL;
  return temp;
}
inline void Processor_601_OFCReceivePropUpdate::set_allocated_update(::msg::OFCPropUpdate* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_601_OFCReceivePropUpdate.Update)
}

// -------------------------------------------------------------------

// OFCPlayerCard

// optional .msg.OFCCardLocation CardLocation = 1;
inline bool OFCPlayerCard::has_cardlocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OFCPlayerCard::set_has_cardlocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OFCPlayerCard::clear_has_cardlocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OFCPlayerCard::clear_cardlocation() {
  cardlocation_ = 0;
  clear_has_cardlocation();
}
inline ::msg::OFCCardLocation OFCPlayerCard::cardlocation() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerCard.CardLocation)
  return static_cast< ::msg::OFCCardLocation >(cardlocation_);
}
inline void OFCPlayerCard::set_cardlocation(::msg::OFCCardLocation value) {
  assert(::msg::OFCCardLocation_IsValid(value));
  set_has_cardlocation();
  cardlocation_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerCard.CardLocation)
}

// optional int32 Card = 2;
inline bool OFCPlayerCard::has_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OFCPlayerCard::set_has_card() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OFCPlayerCard::clear_has_card() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OFCPlayerCard::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google_public::protobuf::int32 OFCPlayerCard::card() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerCard.Card)
  return card_;
}
inline void OFCPlayerCard::set_card(::google_public::protobuf::int32 value) {
  set_has_card();
  card_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerCard.Card)
}

// -------------------------------------------------------------------

// Processor_602_OFCSendPlayerCard

// optional int32 RoomId = 1;
inline bool Processor_602_OFCSendPlayerCard::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_602_OFCSendPlayerCard::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_602_OFCSendPlayerCard::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_602_OFCSendPlayerCard::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_602_OFCSendPlayerCard::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_602_OFCSendPlayerCard.RoomId)
  return roomid_;
}
inline void Processor_602_OFCSendPlayerCard::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_602_OFCSendPlayerCard.RoomId)
}

// repeated .msg.OFCCardLocation CardLocation = 2;
inline int Processor_602_OFCSendPlayerCard::cardlocation_size() const {
  return cardlocation_.size();
}
inline void Processor_602_OFCSendPlayerCard::clear_cardlocation() {
  cardlocation_.Clear();
}
inline ::msg::OFCCardLocation Processor_602_OFCSendPlayerCard::cardlocation(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_602_OFCSendPlayerCard.CardLocation)
  return static_cast< ::msg::OFCCardLocation >(cardlocation_.Get(index));
}
inline void Processor_602_OFCSendPlayerCard::set_cardlocation(int index, ::msg::OFCCardLocation value) {
  assert(::msg::OFCCardLocation_IsValid(value));
  cardlocation_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.Processor_602_OFCSendPlayerCard.CardLocation)
}
inline void Processor_602_OFCSendPlayerCard::add_cardlocation(::msg::OFCCardLocation value) {
  assert(::msg::OFCCardLocation_IsValid(value));
  cardlocation_.Add(value);
  // @@protoc_insertion_point(field_add:msg.Processor_602_OFCSendPlayerCard.CardLocation)
}
inline const ::google_public::protobuf::RepeatedField<int>&
Processor_602_OFCSendPlayerCard::cardlocation() const {
  // @@protoc_insertion_point(field_list:msg.Processor_602_OFCSendPlayerCard.CardLocation)
  return cardlocation_;
}
inline ::google_public::protobuf::RepeatedField<int>*
Processor_602_OFCSendPlayerCard::mutable_cardlocation() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_602_OFCSendPlayerCard.CardLocation)
  return &cardlocation_;
}

// -------------------------------------------------------------------

// UserCompare

// repeated int32 UserID = 1;
inline int UserCompare::userid_size() const {
  return userid_.size();
}
inline void UserCompare::clear_userid() {
  userid_.Clear();
}
inline ::google_public::protobuf::int32 UserCompare::userid(int index) const {
  // @@protoc_insertion_point(field_get:msg.UserCompare.UserID)
  return userid_.Get(index);
}
inline void UserCompare::set_userid(int index, ::google_public::protobuf::int32 value) {
  userid_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.UserCompare.UserID)
}
inline void UserCompare::add_userid(::google_public::protobuf::int32 value) {
  userid_.Add(value);
  // @@protoc_insertion_point(field_add:msg.UserCompare.UserID)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
UserCompare::userid() const {
  // @@protoc_insertion_point(field_list:msg.UserCompare.UserID)
  return userid_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
UserCompare::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:msg.UserCompare.UserID)
  return &userid_;
}

// optional int32 FirstRowComparScore = 2;
inline bool UserCompare::has_firstrowcomparscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCompare::set_has_firstrowcomparscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCompare::clear_has_firstrowcomparscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCompare::clear_firstrowcomparscore() {
  firstrowcomparscore_ = 0;
  clear_has_firstrowcomparscore();
}
inline ::google_public::protobuf::int32 UserCompare::firstrowcomparscore() const {
  // @@protoc_insertion_point(field_get:msg.UserCompare.FirstRowComparScore)
  return firstrowcomparscore_;
}
inline void UserCompare::set_firstrowcomparscore(::google_public::protobuf::int32 value) {
  set_has_firstrowcomparscore();
  firstrowcomparscore_ = value;
  // @@protoc_insertion_point(field_set:msg.UserCompare.FirstRowComparScore)
}

// optional int32 MiddleRowCompareScore = 3;
inline bool UserCompare::has_middlerowcomparescore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCompare::set_has_middlerowcomparescore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserCompare::clear_has_middlerowcomparescore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserCompare::clear_middlerowcomparescore() {
  middlerowcomparescore_ = 0;
  clear_has_middlerowcomparescore();
}
inline ::google_public::protobuf::int32 UserCompare::middlerowcomparescore() const {
  // @@protoc_insertion_point(field_get:msg.UserCompare.MiddleRowCompareScore)
  return middlerowcomparescore_;
}
inline void UserCompare::set_middlerowcomparescore(::google_public::protobuf::int32 value) {
  set_has_middlerowcomparescore();
  middlerowcomparescore_ = value;
  // @@protoc_insertion_point(field_set:msg.UserCompare.MiddleRowCompareScore)
}

// optional int32 LastRowCompareScore = 4;
inline bool UserCompare::has_lastrowcomparescore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserCompare::set_has_lastrowcomparescore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserCompare::clear_has_lastrowcomparescore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserCompare::clear_lastrowcomparescore() {
  lastrowcomparescore_ = 0;
  clear_has_lastrowcomparescore();
}
inline ::google_public::protobuf::int32 UserCompare::lastrowcomparescore() const {
  // @@protoc_insertion_point(field_get:msg.UserCompare.LastRowCompareScore)
  return lastrowcomparescore_;
}
inline void UserCompare::set_lastrowcomparescore(::google_public::protobuf::int32 value) {
  set_has_lastrowcomparescore();
  lastrowcomparescore_ = value;
  // @@protoc_insertion_point(field_set:msg.UserCompare.LastRowCompareScore)
}

// optional int32 CompareScore = 5;
inline bool UserCompare::has_comparescore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserCompare::set_has_comparescore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserCompare::clear_has_comparescore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserCompare::clear_comparescore() {
  comparescore_ = 0;
  clear_has_comparescore();
}
inline ::google_public::protobuf::int32 UserCompare::comparescore() const {
  // @@protoc_insertion_point(field_get:msg.UserCompare.CompareScore)
  return comparescore_;
}
inline void UserCompare::set_comparescore(::google_public::protobuf::int32 value) {
  set_has_comparescore();
  comparescore_ = value;
  // @@protoc_insertion_point(field_set:msg.UserCompare.CompareScore)
}

// -------------------------------------------------------------------

// OFCPlayerHandResult

// optional int32 PlayerId = 1;
inline bool OFCPlayerHandResult::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OFCPlayerHandResult::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OFCPlayerHandResult::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OFCPlayerHandResult::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google_public::protobuf::int32 OFCPlayerHandResult::playerid() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerHandResult.PlayerId)
  return playerid_;
}
inline void OFCPlayerHandResult::set_playerid(::google_public::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerHandResult.PlayerId)
}

// optional int32 Score = 2;
inline bool OFCPlayerHandResult::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OFCPlayerHandResult::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OFCPlayerHandResult::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OFCPlayerHandResult::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google_public::protobuf::int32 OFCPlayerHandResult::score() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerHandResult.Score)
  return score_;
}
inline void OFCPlayerHandResult::set_score(::google_public::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerHandResult.Score)
}

// -------------------------------------------------------------------

// Processor_610_OFCReceiveResult

// optional int32 RoomId = 1;
inline bool Processor_610_OFCReceiveResult::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_610_OFCReceiveResult::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_610_OFCReceiveResult::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_610_OFCReceiveResult::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_610_OFCReceiveResult::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_610_OFCReceiveResult.RoomId)
  return roomid_;
}
inline void Processor_610_OFCReceiveResult::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_610_OFCReceiveResult.RoomId)
}

// optional int32 HandId = 2;
inline bool Processor_610_OFCReceiveResult::has_handid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_610_OFCReceiveResult::set_has_handid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_610_OFCReceiveResult::clear_has_handid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_610_OFCReceiveResult::clear_handid() {
  handid_ = 0;
  clear_has_handid();
}
inline ::google_public::protobuf::int32 Processor_610_OFCReceiveResult::handid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_610_OFCReceiveResult.HandId)
  return handid_;
}
inline void Processor_610_OFCReceiveResult::set_handid(::google_public::protobuf::int32 value) {
  set_has_handid();
  handid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_610_OFCReceiveResult.HandId)
}

// optional .msg.OFCResult Result = 3;
inline bool Processor_610_OFCReceiveResult::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_610_OFCReceiveResult::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_610_OFCReceiveResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_610_OFCReceiveResult::clear_result() {
  if (result_ != NULL) result_->::msg::OFCResult::Clear();
  clear_has_result();
}
inline const ::msg::OFCResult& Processor_610_OFCReceiveResult::result() const {
  // @@protoc_insertion_point(field_get:msg.Processor_610_OFCReceiveResult.Result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::msg::OFCResult* Processor_610_OFCReceiveResult::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::msg::OFCResult;
  // @@protoc_insertion_point(field_mutable:msg.Processor_610_OFCReceiveResult.Result)
  return result_;
}
inline ::msg::OFCResult* Processor_610_OFCReceiveResult::release_result() {
  clear_has_result();
  ::msg::OFCResult* temp = result_;
  result_ = NULL;
  return temp;
}
inline void Processor_610_OFCReceiveResult::set_allocated_result(::msg::OFCResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_610_OFCReceiveResult.Result)
}

// -------------------------------------------------------------------

// Processor_615_OFCSendSetting

// optional int32 RoomId = 1;
inline bool Processor_615_OFCSendSetting::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_615_OFCSendSetting::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_615_OFCSendSetting::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_615_OFCSendSetting::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_615_OFCSendSetting::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_615_OFCSendSetting.RoomId)
  return roomid_;
}
inline void Processor_615_OFCSendSetting::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_615_OFCSendSetting.RoomId)
}

// optional .msg.OFCPlayerSetting Settings = 2;
inline bool Processor_615_OFCSendSetting::has_settings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_615_OFCSendSetting::set_has_settings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_615_OFCSendSetting::clear_has_settings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_615_OFCSendSetting::clear_settings() {
  if (settings_ != NULL) settings_->::msg::OFCPlayerSetting::Clear();
  clear_has_settings();
}
inline const ::msg::OFCPlayerSetting& Processor_615_OFCSendSetting::settings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_615_OFCSendSetting.Settings)
  return settings_ != NULL ? *settings_ : *default_instance_->settings_;
}
inline ::msg::OFCPlayerSetting* Processor_615_OFCSendSetting::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) settings_ = new ::msg::OFCPlayerSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_615_OFCSendSetting.Settings)
  return settings_;
}
inline ::msg::OFCPlayerSetting* Processor_615_OFCSendSetting::release_settings() {
  clear_has_settings();
  ::msg::OFCPlayerSetting* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void Processor_615_OFCSendSetting::set_allocated_settings(::msg::OFCPlayerSetting* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_615_OFCSendSetting.Settings)
}

// -------------------------------------------------------------------

// Processor_616_OFCReceiveSettingChange

// optional int32 RoomId = 1;
inline bool Processor_616_OFCReceiveSettingChange::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_616_OFCReceiveSettingChange::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_616_OFCReceiveSettingChange::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_616_OFCReceiveSettingChange::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_616_OFCReceiveSettingChange::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_616_OFCReceiveSettingChange.RoomId)
  return roomid_;
}
inline void Processor_616_OFCReceiveSettingChange::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_616_OFCReceiveSettingChange.RoomId)
}

// optional .msg.OFCPlayerSetting Settings = 2;
inline bool Processor_616_OFCReceiveSettingChange::has_settings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_616_OFCReceiveSettingChange::set_has_settings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_616_OFCReceiveSettingChange::clear_has_settings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_616_OFCReceiveSettingChange::clear_settings() {
  if (settings_ != NULL) settings_->::msg::OFCPlayerSetting::Clear();
  clear_has_settings();
}
inline const ::msg::OFCPlayerSetting& Processor_616_OFCReceiveSettingChange::settings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_616_OFCReceiveSettingChange.Settings)
  return settings_ != NULL ? *settings_ : *default_instance_->settings_;
}
inline ::msg::OFCPlayerSetting* Processor_616_OFCReceiveSettingChange::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) settings_ = new ::msg::OFCPlayerSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_616_OFCReceiveSettingChange.Settings)
  return settings_;
}
inline ::msg::OFCPlayerSetting* Processor_616_OFCReceiveSettingChange::release_settings() {
  clear_has_settings();
  ::msg::OFCPlayerSetting* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void Processor_616_OFCReceiveSettingChange::set_allocated_settings(::msg::OFCPlayerSetting* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_616_OFCReceiveSettingChange.Settings)
}

// -------------------------------------------------------------------

// MahjongPlayerInfo

// optional .msg.CommonPlayerInfo PlayerInfo = 1;
inline bool MahjongPlayerInfo::has_playerinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MahjongPlayerInfo::set_has_playerinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MahjongPlayerInfo::clear_has_playerinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MahjongPlayerInfo::clear_playerinfo() {
  if (playerinfo_ != NULL) playerinfo_->::msg::CommonPlayerInfo::Clear();
  clear_has_playerinfo();
}
inline const ::msg::CommonPlayerInfo& MahjongPlayerInfo::playerinfo() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.PlayerInfo)
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
}
inline ::msg::CommonPlayerInfo* MahjongPlayerInfo::mutable_playerinfo() {
  set_has_playerinfo();
  if (playerinfo_ == NULL) playerinfo_ = new ::msg::CommonPlayerInfo;
  // @@protoc_insertion_point(field_mutable:msg.MahjongPlayerInfo.PlayerInfo)
  return playerinfo_;
}
inline ::msg::CommonPlayerInfo* MahjongPlayerInfo::release_playerinfo() {
  clear_has_playerinfo();
  ::msg::CommonPlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
inline void MahjongPlayerInfo::set_allocated_playerinfo(::msg::CommonPlayerInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    set_has_playerinfo();
  } else {
    clear_has_playerinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.MahjongPlayerInfo.PlayerInfo)
}

// optional int32 PlayerScore = 2;
inline bool MahjongPlayerInfo::has_playerscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MahjongPlayerInfo::set_has_playerscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MahjongPlayerInfo::clear_has_playerscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MahjongPlayerInfo::clear_playerscore() {
  playerscore_ = 0;
  clear_has_playerscore();
}
inline ::google_public::protobuf::int32 MahjongPlayerInfo::playerscore() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.PlayerScore)
  return playerscore_;
}
inline void MahjongPlayerInfo::set_playerscore(::google_public::protobuf::int32 value) {
  set_has_playerscore();
  playerscore_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPlayerInfo.PlayerScore)
}

// repeated .msg.MahjongCard Card = 3;
inline int MahjongPlayerInfo::card_size() const {
  return card_.size();
}
inline void MahjongPlayerInfo::clear_card() {
  card_.Clear();
}
inline ::msg::MahjongCard MahjongPlayerInfo::card(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.Card)
  return static_cast< ::msg::MahjongCard >(card_.Get(index));
}
inline void MahjongPlayerInfo::set_card(int index, ::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  card_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongPlayerInfo.Card)
}
inline void MahjongPlayerInfo::add_card(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  card_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongPlayerInfo.Card)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongPlayerInfo::card() const {
  // @@protoc_insertion_point(field_list:msg.MahjongPlayerInfo.Card)
  return card_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongPlayerInfo::mutable_card() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongPlayerInfo.Card)
  return &card_;
}

// repeated .msg.MahjongCard Discard = 4;
inline int MahjongPlayerInfo::discard_size() const {
  return discard_.size();
}
inline void MahjongPlayerInfo::clear_discard() {
  discard_.Clear();
}
inline ::msg::MahjongCard MahjongPlayerInfo::discard(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.Discard)
  return static_cast< ::msg::MahjongCard >(discard_.Get(index));
}
inline void MahjongPlayerInfo::set_discard(int index, ::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  discard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongPlayerInfo.Discard)
}
inline void MahjongPlayerInfo::add_discard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  discard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongPlayerInfo.Discard)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongPlayerInfo::discard() const {
  // @@protoc_insertion_point(field_list:msg.MahjongPlayerInfo.Discard)
  return discard_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongPlayerInfo::mutable_discard() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongPlayerInfo.Discard)
  return &discard_;
}

// repeated .msg.MahjongFu Fu = 5;
inline int MahjongPlayerInfo::fu_size() const {
  return fu_.size();
}
inline void MahjongPlayerInfo::clear_fu() {
  fu_.Clear();
}
inline const ::msg::MahjongFu& MahjongPlayerInfo::fu(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.Fu)
  return fu_.Get(index);
}
inline ::msg::MahjongFu* MahjongPlayerInfo::mutable_fu(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MahjongPlayerInfo.Fu)
  return fu_.Mutable(index);
}
inline ::msg::MahjongFu* MahjongPlayerInfo::add_fu() {
  // @@protoc_insertion_point(field_add:msg.MahjongPlayerInfo.Fu)
  return fu_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >&
MahjongPlayerInfo::fu() const {
  // @@protoc_insertion_point(field_list:msg.MahjongPlayerInfo.Fu)
  return fu_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >*
MahjongPlayerInfo::mutable_fu() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongPlayerInfo.Fu)
  return &fu_;
}

// optional .msg.MahjongActionRequest ActionRequest = 6;
inline bool MahjongPlayerInfo::has_actionrequest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MahjongPlayerInfo::set_has_actionrequest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MahjongPlayerInfo::clear_has_actionrequest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MahjongPlayerInfo::clear_actionrequest() {
  if (actionrequest_ != NULL) actionrequest_->::msg::MahjongActionRequest::Clear();
  clear_has_actionrequest();
}
inline const ::msg::MahjongActionRequest& MahjongPlayerInfo::actionrequest() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.ActionRequest)
  return actionrequest_ != NULL ? *actionrequest_ : *default_instance_->actionrequest_;
}
inline ::msg::MahjongActionRequest* MahjongPlayerInfo::mutable_actionrequest() {
  set_has_actionrequest();
  if (actionrequest_ == NULL) actionrequest_ = new ::msg::MahjongActionRequest;
  // @@protoc_insertion_point(field_mutable:msg.MahjongPlayerInfo.ActionRequest)
  return actionrequest_;
}
inline ::msg::MahjongActionRequest* MahjongPlayerInfo::release_actionrequest() {
  clear_has_actionrequest();
  ::msg::MahjongActionRequest* temp = actionrequest_;
  actionrequest_ = NULL;
  return temp;
}
inline void MahjongPlayerInfo::set_allocated_actionrequest(::msg::MahjongActionRequest* actionrequest) {
  delete actionrequest_;
  actionrequest_ = actionrequest;
  if (actionrequest) {
    set_has_actionrequest();
  } else {
    clear_has_actionrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.MahjongPlayerInfo.ActionRequest)
}

// repeated .msg.MahjongScoreChange ScoreChange = 7;
inline int MahjongPlayerInfo::scorechange_size() const {
  return scorechange_.size();
}
inline void MahjongPlayerInfo::clear_scorechange() {
  scorechange_.Clear();
}
inline const ::msg::MahjongScoreChange& MahjongPlayerInfo::scorechange(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.ScoreChange)
  return scorechange_.Get(index);
}
inline ::msg::MahjongScoreChange* MahjongPlayerInfo::mutable_scorechange(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MahjongPlayerInfo.ScoreChange)
  return scorechange_.Mutable(index);
}
inline ::msg::MahjongScoreChange* MahjongPlayerInfo::add_scorechange() {
  // @@protoc_insertion_point(field_add:msg.MahjongPlayerInfo.ScoreChange)
  return scorechange_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongScoreChange >&
MahjongPlayerInfo::scorechange() const {
  // @@protoc_insertion_point(field_list:msg.MahjongPlayerInfo.ScoreChange)
  return scorechange_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongScoreChange >*
MahjongPlayerInfo::mutable_scorechange() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongPlayerInfo.ScoreChange)
  return &scorechange_;
}

// optional .msg.MahjongCard DrawCard = 8;
inline bool MahjongPlayerInfo::has_drawcard() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MahjongPlayerInfo::set_has_drawcard() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MahjongPlayerInfo::clear_has_drawcard() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MahjongPlayerInfo::clear_drawcard() {
  drawcard_ = 0;
  clear_has_drawcard();
}
inline ::msg::MahjongCard MahjongPlayerInfo::drawcard() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.DrawCard)
  return static_cast< ::msg::MahjongCard >(drawcard_);
}
inline void MahjongPlayerInfo::set_drawcard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_drawcard();
  drawcard_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPlayerInfo.DrawCard)
}

// optional bool CanWinByOther = 9;
inline bool MahjongPlayerInfo::has_canwinbyother() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MahjongPlayerInfo::set_has_canwinbyother() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MahjongPlayerInfo::clear_has_canwinbyother() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MahjongPlayerInfo::clear_canwinbyother() {
  canwinbyother_ = false;
  clear_has_canwinbyother();
}
inline bool MahjongPlayerInfo::canwinbyother() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.CanWinByOther)
  return canwinbyother_;
}
inline void MahjongPlayerInfo::set_canwinbyother(bool value) {
  set_has_canwinbyother();
  canwinbyother_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPlayerInfo.CanWinByOther)
}

// optional .msg.MahjongSuit Suit = 10;
inline bool MahjongPlayerInfo::has_suit() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MahjongPlayerInfo::set_has_suit() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MahjongPlayerInfo::clear_has_suit() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MahjongPlayerInfo::clear_suit() {
  suit_ = 0;
  clear_has_suit();
}
inline ::msg::MahjongSuit MahjongPlayerInfo::suit() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.Suit)
  return static_cast< ::msg::MahjongSuit >(suit_);
}
inline void MahjongPlayerInfo::set_suit(::msg::MahjongSuit value) {
  assert(::msg::MahjongSuit_IsValid(value));
  set_has_suit();
  suit_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPlayerInfo.Suit)
}

// repeated .msg.MahjongTing Ting = 11;
inline int MahjongPlayerInfo::ting_size() const {
  return ting_.size();
}
inline void MahjongPlayerInfo::clear_ting() {
  ting_.Clear();
}
inline const ::msg::MahjongTing& MahjongPlayerInfo::ting(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerInfo.Ting)
  return ting_.Get(index);
}
inline ::msg::MahjongTing* MahjongPlayerInfo::mutable_ting(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MahjongPlayerInfo.Ting)
  return ting_.Mutable(index);
}
inline ::msg::MahjongTing* MahjongPlayerInfo::add_ting() {
  // @@protoc_insertion_point(field_add:msg.MahjongPlayerInfo.Ting)
  return ting_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing >&
MahjongPlayerInfo::ting() const {
  // @@protoc_insertion_point(field_list:msg.MahjongPlayerInfo.Ting)
  return ting_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing >*
MahjongPlayerInfo::mutable_ting() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongPlayerInfo.Ting)
  return &ting_;
}

// -------------------------------------------------------------------

// MahjongFu

// repeated .msg.MahjongCard Card = 1;
inline int MahjongFu::card_size() const {
  return card_.size();
}
inline void MahjongFu::clear_card() {
  card_.Clear();
}
inline ::msg::MahjongCard MahjongFu::card(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongFu.Card)
  return static_cast< ::msg::MahjongCard >(card_.Get(index));
}
inline void MahjongFu::set_card(int index, ::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  card_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongFu.Card)
}
inline void MahjongFu::add_card(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  card_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongFu.Card)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongFu::card() const {
  // @@protoc_insertion_point(field_list:msg.MahjongFu.Card)
  return card_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongFu::mutable_card() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongFu.Card)
  return &card_;
}

// optional .msg.MahjongPosition Source = 2;
inline bool MahjongFu::has_source() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MahjongFu::set_has_source() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MahjongFu::clear_has_source() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MahjongFu::clear_source() {
  source_ = 1;
  clear_has_source();
}
inline ::msg::MahjongPosition MahjongFu::source() const {
  // @@protoc_insertion_point(field_get:msg.MahjongFu.Source)
  return static_cast< ::msg::MahjongPosition >(source_);
}
inline void MahjongFu::set_source(::msg::MahjongPosition value) {
  assert(::msg::MahjongPosition_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongFu.Source)
}

// optional .msg.MahjongFuType Type = 3;
inline bool MahjongFu::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MahjongFu::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MahjongFu::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MahjongFu::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::msg::MahjongFuType MahjongFu::type() const {
  // @@protoc_insertion_point(field_get:msg.MahjongFu.Type)
  return static_cast< ::msg::MahjongFuType >(type_);
}
inline void MahjongFu::set_type(::msg::MahjongFuType value) {
  assert(::msg::MahjongFuType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongFu.Type)
}

// optional .msg.MahjongCard GetCard = 4;
inline bool MahjongFu::has_getcard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MahjongFu::set_has_getcard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MahjongFu::clear_has_getcard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MahjongFu::clear_getcard() {
  getcard_ = 0;
  clear_has_getcard();
}
inline ::msg::MahjongCard MahjongFu::getcard() const {
  // @@protoc_insertion_point(field_get:msg.MahjongFu.GetCard)
  return static_cast< ::msg::MahjongCard >(getcard_);
}
inline void MahjongFu::set_getcard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_getcard();
  getcard_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongFu.GetCard)
}

// -------------------------------------------------------------------

// MahjongScoreChange

// repeated .msg.MahjongCard Card = 1;
inline int MahjongScoreChange::card_size() const {
  return card_.size();
}
inline void MahjongScoreChange::clear_card() {
  card_.Clear();
}
inline ::msg::MahjongCard MahjongScoreChange::card(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongScoreChange.Card)
  return static_cast< ::msg::MahjongCard >(card_.Get(index));
}
inline void MahjongScoreChange::set_card(int index, ::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  card_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongScoreChange.Card)
}
inline void MahjongScoreChange::add_card(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  card_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongScoreChange.Card)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongScoreChange::card() const {
  // @@protoc_insertion_point(field_list:msg.MahjongScoreChange.Card)
  return card_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongScoreChange::mutable_card() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongScoreChange.Card)
  return &card_;
}

// repeated .msg.MahjongFu Fu = 2;
inline int MahjongScoreChange::fu_size() const {
  return fu_.size();
}
inline void MahjongScoreChange::clear_fu() {
  fu_.Clear();
}
inline const ::msg::MahjongFu& MahjongScoreChange::fu(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongScoreChange.Fu)
  return fu_.Get(index);
}
inline ::msg::MahjongFu* MahjongScoreChange::mutable_fu(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MahjongScoreChange.Fu)
  return fu_.Mutable(index);
}
inline ::msg::MahjongFu* MahjongScoreChange::add_fu() {
  // @@protoc_insertion_point(field_add:msg.MahjongScoreChange.Fu)
  return fu_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >&
MahjongScoreChange::fu() const {
  // @@protoc_insertion_point(field_list:msg.MahjongScoreChange.Fu)
  return fu_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >*
MahjongScoreChange::mutable_fu() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongScoreChange.Fu)
  return &fu_;
}

// optional .msg.MahjongPosition Source = 3;
inline bool MahjongScoreChange::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MahjongScoreChange::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MahjongScoreChange::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MahjongScoreChange::clear_source() {
  source_ = 1;
  clear_has_source();
}
inline ::msg::MahjongPosition MahjongScoreChange::source() const {
  // @@protoc_insertion_point(field_get:msg.MahjongScoreChange.Source)
  return static_cast< ::msg::MahjongPosition >(source_);
}
inline void MahjongScoreChange::set_source(::msg::MahjongPosition value) {
  assert(::msg::MahjongPosition_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongScoreChange.Source)
}

// optional .msg.MahjongCard HuCard = 4;
inline bool MahjongScoreChange::has_hucard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MahjongScoreChange::set_has_hucard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MahjongScoreChange::clear_has_hucard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MahjongScoreChange::clear_hucard() {
  hucard_ = 0;
  clear_has_hucard();
}
inline ::msg::MahjongCard MahjongScoreChange::hucard() const {
  // @@protoc_insertion_point(field_get:msg.MahjongScoreChange.HuCard)
  return static_cast< ::msg::MahjongCard >(hucard_);
}
inline void MahjongScoreChange::set_hucard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_hucard();
  hucard_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongScoreChange.HuCard)
}

// repeated .msg.SiChuanMahjongWinType Type = 5;
inline int MahjongScoreChange::type_size() const {
  return type_.size();
}
inline void MahjongScoreChange::clear_type() {
  type_.Clear();
}
inline ::msg::SiChuanMahjongWinType MahjongScoreChange::type(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongScoreChange.Type)
  return static_cast< ::msg::SiChuanMahjongWinType >(type_.Get(index));
}
inline void MahjongScoreChange::set_type(int index, ::msg::SiChuanMahjongWinType value) {
  assert(::msg::SiChuanMahjongWinType_IsValid(value));
  type_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongScoreChange.Type)
}
inline void MahjongScoreChange::add_type(::msg::SiChuanMahjongWinType value) {
  assert(::msg::SiChuanMahjongWinType_IsValid(value));
  type_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongScoreChange.Type)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongScoreChange::type() const {
  // @@protoc_insertion_point(field_list:msg.MahjongScoreChange.Type)
  return type_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongScoreChange::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongScoreChange.Type)
  return &type_;
}

// optional int32 Score = 6;
inline bool MahjongScoreChange::has_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MahjongScoreChange::set_has_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MahjongScoreChange::clear_has_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MahjongScoreChange::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google_public::protobuf::int32 MahjongScoreChange::score() const {
  // @@protoc_insertion_point(field_get:msg.MahjongScoreChange.Score)
  return score_;
}
inline void MahjongScoreChange::set_score(::google_public::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongScoreChange.Score)
}

// optional bool MultiWin = 7;
inline bool MahjongScoreChange::has_multiwin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MahjongScoreChange::set_has_multiwin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MahjongScoreChange::clear_has_multiwin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MahjongScoreChange::clear_multiwin() {
  multiwin_ = false;
  clear_has_multiwin();
}
inline bool MahjongScoreChange::multiwin() const {
  // @@protoc_insertion_point(field_get:msg.MahjongScoreChange.MultiWin)
  return multiwin_;
}
inline void MahjongScoreChange::set_multiwin(bool value) {
  set_has_multiwin();
  multiwin_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongScoreChange.MultiWin)
}

// -------------------------------------------------------------------

// MahjongPlayerSetting

// optional bool LeaveNextHand = 1;
inline bool MahjongPlayerSetting::has_leavenexthand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MahjongPlayerSetting::set_has_leavenexthand() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MahjongPlayerSetting::clear_has_leavenexthand() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MahjongPlayerSetting::clear_leavenexthand() {
  leavenexthand_ = false;
  clear_has_leavenexthand();
}
inline bool MahjongPlayerSetting::leavenexthand() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerSetting.LeaveNextHand)
  return leavenexthand_;
}
inline void MahjongPlayerSetting::set_leavenexthand(bool value) {
  set_has_leavenexthand();
  leavenexthand_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPlayerSetting.LeaveNextHand)
}

// optional bool AutoHu = 2;
inline bool MahjongPlayerSetting::has_autohu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MahjongPlayerSetting::set_has_autohu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MahjongPlayerSetting::clear_has_autohu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MahjongPlayerSetting::clear_autohu() {
  autohu_ = false;
  clear_has_autohu();
}
inline bool MahjongPlayerSetting::autohu() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerSetting.AutoHu)
  return autohu_;
}
inline void MahjongPlayerSetting::set_autohu(bool value) {
  set_has_autohu();
  autohu_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPlayerSetting.AutoHu)
}

// optional bool DiscardAll = 3;
inline bool MahjongPlayerSetting::has_discardall() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MahjongPlayerSetting::set_has_discardall() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MahjongPlayerSetting::clear_has_discardall() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MahjongPlayerSetting::clear_discardall() {
  discardall_ = false;
  clear_has_discardall();
}
inline bool MahjongPlayerSetting::discardall() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPlayerSetting.DiscardAll)
  return discardall_;
}
inline void MahjongPlayerSetting::set_discardall(bool value) {
  set_has_discardall();
  discardall_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPlayerSetting.DiscardAll)
}

// -------------------------------------------------------------------

// MahjongPropUpdate

// repeated .msg.MahjongPlayerInfo PlayerInfo = 1;
inline int MahjongPropUpdate::playerinfo_size() const {
  return playerinfo_.size();
}
inline void MahjongPropUpdate::clear_playerinfo() {
  playerinfo_.Clear();
}
inline const ::msg::MahjongPlayerInfo& MahjongPropUpdate::playerinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongPropUpdate.PlayerInfo)
  return playerinfo_.Get(index);
}
inline ::msg::MahjongPlayerInfo* MahjongPropUpdate::mutable_playerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MahjongPropUpdate.PlayerInfo)
  return playerinfo_.Mutable(index);
}
inline ::msg::MahjongPlayerInfo* MahjongPropUpdate::add_playerinfo() {
  // @@protoc_insertion_point(field_add:msg.MahjongPropUpdate.PlayerInfo)
  return playerinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPlayerInfo >&
MahjongPropUpdate::playerinfo() const {
  // @@protoc_insertion_point(field_list:msg.MahjongPropUpdate.PlayerInfo)
  return playerinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPlayerInfo >*
MahjongPropUpdate::mutable_playerinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongPropUpdate.PlayerInfo)
  return &playerinfo_;
}

// optional int32 LastCards = 2;
inline bool MahjongPropUpdate::has_lastcards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MahjongPropUpdate::set_has_lastcards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MahjongPropUpdate::clear_has_lastcards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MahjongPropUpdate::clear_lastcards() {
  lastcards_ = 0;
  clear_has_lastcards();
}
inline ::google_public::protobuf::int32 MahjongPropUpdate::lastcards() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPropUpdate.LastCards)
  return lastcards_;
}
inline void MahjongPropUpdate::set_lastcards(::google_public::protobuf::int32 value) {
  set_has_lastcards();
  lastcards_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPropUpdate.LastCards)
}

// optional int32 StartPosition = 3;
inline bool MahjongPropUpdate::has_startposition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MahjongPropUpdate::set_has_startposition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MahjongPropUpdate::clear_has_startposition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MahjongPropUpdate::clear_startposition() {
  startposition_ = 0;
  clear_has_startposition();
}
inline ::google_public::protobuf::int32 MahjongPropUpdate::startposition() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPropUpdate.StartPosition)
  return startposition_;
}
inline void MahjongPropUpdate::set_startposition(::google_public::protobuf::int32 value) {
  set_has_startposition();
  startposition_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPropUpdate.StartPosition)
}

// optional .msg.MahjongCard CurrentDiscard = 4;
inline bool MahjongPropUpdate::has_currentdiscard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MahjongPropUpdate::set_has_currentdiscard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MahjongPropUpdate::clear_has_currentdiscard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MahjongPropUpdate::clear_currentdiscard() {
  currentdiscard_ = 0;
  clear_has_currentdiscard();
}
inline ::msg::MahjongCard MahjongPropUpdate::currentdiscard() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPropUpdate.CurrentDiscard)
  return static_cast< ::msg::MahjongCard >(currentdiscard_);
}
inline void MahjongPropUpdate::set_currentdiscard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_currentdiscard();
  currentdiscard_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPropUpdate.CurrentDiscard)
}

// optional int32 CurrentDiscardUserID = 5;
inline bool MahjongPropUpdate::has_currentdiscarduserid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MahjongPropUpdate::set_has_currentdiscarduserid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MahjongPropUpdate::clear_has_currentdiscarduserid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MahjongPropUpdate::clear_currentdiscarduserid() {
  currentdiscarduserid_ = 0;
  clear_has_currentdiscarduserid();
}
inline ::google_public::protobuf::int32 MahjongPropUpdate::currentdiscarduserid() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPropUpdate.CurrentDiscardUserID)
  return currentdiscarduserid_;
}
inline void MahjongPropUpdate::set_currentdiscarduserid(::google_public::protobuf::int32 value) {
  set_has_currentdiscarduserid();
  currentdiscarduserid_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPropUpdate.CurrentDiscardUserID)
}

// optional .msg.MahjongCardZone CurrentDiscardZone = 6;
inline bool MahjongPropUpdate::has_currentdiscardzone() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MahjongPropUpdate::set_has_currentdiscardzone() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MahjongPropUpdate::clear_has_currentdiscardzone() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MahjongPropUpdate::clear_currentdiscardzone() {
  currentdiscardzone_ = 1;
  clear_has_currentdiscardzone();
}
inline ::msg::MahjongCardZone MahjongPropUpdate::currentdiscardzone() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPropUpdate.CurrentDiscardZone)
  return static_cast< ::msg::MahjongCardZone >(currentdiscardzone_);
}
inline void MahjongPropUpdate::set_currentdiscardzone(::msg::MahjongCardZone value) {
  assert(::msg::MahjongCardZone_IsValid(value));
  set_has_currentdiscardzone();
  currentdiscardzone_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPropUpdate.CurrentDiscardZone)
}

// optional int32 EastSeatNo = 7;
inline bool MahjongPropUpdate::has_eastseatno() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MahjongPropUpdate::set_has_eastseatno() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MahjongPropUpdate::clear_has_eastseatno() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MahjongPropUpdate::clear_eastseatno() {
  eastseatno_ = 0;
  clear_has_eastseatno();
}
inline ::google_public::protobuf::int32 MahjongPropUpdate::eastseatno() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPropUpdate.EastSeatNo)
  return eastseatno_;
}
inline void MahjongPropUpdate::set_eastseatno(::google_public::protobuf::int32 value) {
  set_has_eastseatno();
  eastseatno_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPropUpdate.EastSeatNo)
}

// -------------------------------------------------------------------

// MahjongTing

// optional .msg.MahjongCard Card = 1;
inline bool MahjongTing::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MahjongTing::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MahjongTing::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MahjongTing::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::msg::MahjongCard MahjongTing::card() const {
  // @@protoc_insertion_point(field_get:msg.MahjongTing.Card)
  return static_cast< ::msg::MahjongCard >(card_);
}
inline void MahjongTing::set_card(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_card();
  card_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongTing.Card)
}

// optional int32 Number = 2;
inline bool MahjongTing::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MahjongTing::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MahjongTing::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MahjongTing::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google_public::protobuf::int32 MahjongTing::number() const {
  // @@protoc_insertion_point(field_get:msg.MahjongTing.Number)
  return number_;
}
inline void MahjongTing::set_number(::google_public::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongTing.Number)
}

// optional int32 Score = 3;
inline bool MahjongTing::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MahjongTing::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MahjongTing::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MahjongTing::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google_public::protobuf::int32 MahjongTing::score() const {
  // @@protoc_insertion_point(field_get:msg.MahjongTing.Score)
  return score_;
}
inline void MahjongTing::set_score(::google_public::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongTing.Score)
}

// -------------------------------------------------------------------

// MahjongPossibleTing

// optional .msg.MahjongCard Card = 1;
inline bool MahjongPossibleTing::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MahjongPossibleTing::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MahjongPossibleTing::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MahjongPossibleTing::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::msg::MahjongCard MahjongPossibleTing::card() const {
  // @@protoc_insertion_point(field_get:msg.MahjongPossibleTing.Card)
  return static_cast< ::msg::MahjongCard >(card_);
}
inline void MahjongPossibleTing::set_card(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_card();
  card_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongPossibleTing.Card)
}

// repeated .msg.MahjongTing Ting = 2;
inline int MahjongPossibleTing::ting_size() const {
  return ting_.size();
}
inline void MahjongPossibleTing::clear_ting() {
  ting_.Clear();
}
inline const ::msg::MahjongTing& MahjongPossibleTing::ting(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongPossibleTing.Ting)
  return ting_.Get(index);
}
inline ::msg::MahjongTing* MahjongPossibleTing::mutable_ting(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MahjongPossibleTing.Ting)
  return ting_.Mutable(index);
}
inline ::msg::MahjongTing* MahjongPossibleTing::add_ting() {
  // @@protoc_insertion_point(field_add:msg.MahjongPossibleTing.Ting)
  return ting_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing >&
MahjongPossibleTing::ting() const {
  // @@protoc_insertion_point(field_list:msg.MahjongPossibleTing.Ting)
  return ting_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongTing >*
MahjongPossibleTing::mutable_ting() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongPossibleTing.Ting)
  return &ting_;
}

// -------------------------------------------------------------------

// MahjongActionRequest

// optional .msg.ActionRequest ActionRequest = 1;
inline bool MahjongActionRequest::has_actionrequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MahjongActionRequest::set_has_actionrequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MahjongActionRequest::clear_has_actionrequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MahjongActionRequest::clear_actionrequest() {
  if (actionrequest_ != NULL) actionrequest_->::msg::ActionRequest::Clear();
  clear_has_actionrequest();
}
inline const ::msg::ActionRequest& MahjongActionRequest::actionrequest() const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.ActionRequest)
  return actionrequest_ != NULL ? *actionrequest_ : *default_instance_->actionrequest_;
}
inline ::msg::ActionRequest* MahjongActionRequest::mutable_actionrequest() {
  set_has_actionrequest();
  if (actionrequest_ == NULL) actionrequest_ = new ::msg::ActionRequest;
  // @@protoc_insertion_point(field_mutable:msg.MahjongActionRequest.ActionRequest)
  return actionrequest_;
}
inline ::msg::ActionRequest* MahjongActionRequest::release_actionrequest() {
  clear_has_actionrequest();
  ::msg::ActionRequest* temp = actionrequest_;
  actionrequest_ = NULL;
  return temp;
}
inline void MahjongActionRequest::set_allocated_actionrequest(::msg::ActionRequest* actionrequest) {
  delete actionrequest_;
  actionrequest_ = actionrequest;
  if (actionrequest) {
    set_has_actionrequest();
  } else {
    clear_has_actionrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.MahjongActionRequest.ActionRequest)
}

// optional .msg.MahjongRequestType Type = 2;
inline bool MahjongActionRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MahjongActionRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MahjongActionRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MahjongActionRequest::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg::MahjongRequestType MahjongActionRequest::type() const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.Type)
  return static_cast< ::msg::MahjongRequestType >(type_);
}
inline void MahjongActionRequest::set_type(::msg::MahjongRequestType value) {
  assert(::msg::MahjongRequestType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.Type)
}

// optional bool CanHu = 3;
inline bool MahjongActionRequest::has_canhu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MahjongActionRequest::set_has_canhu() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MahjongActionRequest::clear_has_canhu() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MahjongActionRequest::clear_canhu() {
  canhu_ = false;
  clear_has_canhu();
}
inline bool MahjongActionRequest::canhu() const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.CanHu)
  return canhu_;
}
inline void MahjongActionRequest::set_canhu(bool value) {
  set_has_canhu();
  canhu_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.CanHu)
}

// optional bool CanGang = 4;
inline bool MahjongActionRequest::has_cangang() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MahjongActionRequest::set_has_cangang() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MahjongActionRequest::clear_has_cangang() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MahjongActionRequest::clear_cangang() {
  cangang_ = false;
  clear_has_cangang();
}
inline bool MahjongActionRequest::cangang() const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.CanGang)
  return cangang_;
}
inline void MahjongActionRequest::set_cangang(bool value) {
  set_has_cangang();
  cangang_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.CanGang)
}

// optional bool CanPeng = 5;
inline bool MahjongActionRequest::has_canpeng() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MahjongActionRequest::set_has_canpeng() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MahjongActionRequest::clear_has_canpeng() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MahjongActionRequest::clear_canpeng() {
  canpeng_ = false;
  clear_has_canpeng();
}
inline bool MahjongActionRequest::canpeng() const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.CanPeng)
  return canpeng_;
}
inline void MahjongActionRequest::set_canpeng(bool value) {
  set_has_canpeng();
  canpeng_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.CanPeng)
}

// optional bool CanChi = 6;
inline bool MahjongActionRequest::has_canchi() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MahjongActionRequest::set_has_canchi() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MahjongActionRequest::clear_has_canchi() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MahjongActionRequest::clear_canchi() {
  canchi_ = false;
  clear_has_canchi();
}
inline bool MahjongActionRequest::canchi() const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.CanChi)
  return canchi_;
}
inline void MahjongActionRequest::set_canchi(bool value) {
  set_has_canchi();
  canchi_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.CanChi)
}

// repeated .msg.MahjongPossibleTing PossibleTing = 7;
inline int MahjongActionRequest::possibleting_size() const {
  return possibleting_.size();
}
inline void MahjongActionRequest::clear_possibleting() {
  possibleting_.Clear();
}
inline const ::msg::MahjongPossibleTing& MahjongActionRequest::possibleting(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.PossibleTing)
  return possibleting_.Get(index);
}
inline ::msg::MahjongPossibleTing* MahjongActionRequest::mutable_possibleting(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MahjongActionRequest.PossibleTing)
  return possibleting_.Mutable(index);
}
inline ::msg::MahjongPossibleTing* MahjongActionRequest::add_possibleting() {
  // @@protoc_insertion_point(field_add:msg.MahjongActionRequest.PossibleTing)
  return possibleting_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPossibleTing >&
MahjongActionRequest::possibleting() const {
  // @@protoc_insertion_point(field_list:msg.MahjongActionRequest.PossibleTing)
  return possibleting_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongPossibleTing >*
MahjongActionRequest::mutable_possibleting() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongActionRequest.PossibleTing)
  return &possibleting_;
}

// optional .msg.SiChuanMahjongWinType WinType = 8;
inline bool MahjongActionRequest::has_wintype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MahjongActionRequest::set_has_wintype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MahjongActionRequest::clear_has_wintype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MahjongActionRequest::clear_wintype() {
  wintype_ = 0;
  clear_has_wintype();
}
inline ::msg::SiChuanMahjongWinType MahjongActionRequest::wintype() const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.WinType)
  return static_cast< ::msg::SiChuanMahjongWinType >(wintype_);
}
inline void MahjongActionRequest::set_wintype(::msg::SiChuanMahjongWinType value) {
  assert(::msg::SiChuanMahjongWinType_IsValid(value));
  set_has_wintype();
  wintype_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.WinType)
}

// optional int32 WinScore = 9;
inline bool MahjongActionRequest::has_winscore() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MahjongActionRequest::set_has_winscore() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MahjongActionRequest::clear_has_winscore() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MahjongActionRequest::clear_winscore() {
  winscore_ = 0;
  clear_has_winscore();
}
inline ::google_public::protobuf::int32 MahjongActionRequest::winscore() const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.WinScore)
  return winscore_;
}
inline void MahjongActionRequest::set_winscore(::google_public::protobuf::int32 value) {
  set_has_winscore();
  winscore_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.WinScore)
}

// repeated .msg.MahjongCard DefaultSwitchCard = 10;
inline int MahjongActionRequest::defaultswitchcard_size() const {
  return defaultswitchcard_.size();
}
inline void MahjongActionRequest::clear_defaultswitchcard() {
  defaultswitchcard_.Clear();
}
inline ::msg::MahjongCard MahjongActionRequest::defaultswitchcard(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.DefaultSwitchCard)
  return static_cast< ::msg::MahjongCard >(defaultswitchcard_.Get(index));
}
inline void MahjongActionRequest::set_defaultswitchcard(int index, ::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  defaultswitchcard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.DefaultSwitchCard)
}
inline void MahjongActionRequest::add_defaultswitchcard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  defaultswitchcard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongActionRequest.DefaultSwitchCard)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongActionRequest::defaultswitchcard() const {
  // @@protoc_insertion_point(field_list:msg.MahjongActionRequest.DefaultSwitchCard)
  return defaultswitchcard_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongActionRequest::mutable_defaultswitchcard() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongActionRequest.DefaultSwitchCard)
  return &defaultswitchcard_;
}

// optional .msg.MahjongSuit DefaultBlankSuit = 11;
inline bool MahjongActionRequest::has_defaultblanksuit() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MahjongActionRequest::set_has_defaultblanksuit() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MahjongActionRequest::clear_has_defaultblanksuit() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MahjongActionRequest::clear_defaultblanksuit() {
  defaultblanksuit_ = 0;
  clear_has_defaultblanksuit();
}
inline ::msg::MahjongSuit MahjongActionRequest::defaultblanksuit() const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.DefaultBlankSuit)
  return static_cast< ::msg::MahjongSuit >(defaultblanksuit_);
}
inline void MahjongActionRequest::set_defaultblanksuit(::msg::MahjongSuit value) {
  assert(::msg::MahjongSuit_IsValid(value));
  set_has_defaultblanksuit();
  defaultblanksuit_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.DefaultBlankSuit)
}

// repeated .msg.MahjongCard GangCard = 12;
inline int MahjongActionRequest::gangcard_size() const {
  return gangcard_.size();
}
inline void MahjongActionRequest::clear_gangcard() {
  gangcard_.Clear();
}
inline ::msg::MahjongCard MahjongActionRequest::gangcard(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongActionRequest.GangCard)
  return static_cast< ::msg::MahjongCard >(gangcard_.Get(index));
}
inline void MahjongActionRequest::set_gangcard(int index, ::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  gangcard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongActionRequest.GangCard)
}
inline void MahjongActionRequest::add_gangcard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  gangcard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongActionRequest.GangCard)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongActionRequest::gangcard() const {
  // @@protoc_insertion_point(field_list:msg.MahjongActionRequest.GangCard)
  return gangcard_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongActionRequest::mutable_gangcard() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongActionRequest.GangCard)
  return &gangcard_;
}

// -------------------------------------------------------------------

// Processor_700_MahjongRefreshAll

// optional .msg.CommonRoomInfo CommonRoomInfo = 1;
inline bool Processor_700_MahjongRefreshAll::has_commonroominfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_700_MahjongRefreshAll::set_has_commonroominfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_700_MahjongRefreshAll::clear_has_commonroominfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_700_MahjongRefreshAll::clear_commonroominfo() {
  if (commonroominfo_ != NULL) commonroominfo_->::msg::CommonRoomInfo::Clear();
  clear_has_commonroominfo();
}
inline const ::msg::CommonRoomInfo& Processor_700_MahjongRefreshAll::commonroominfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_700_MahjongRefreshAll.CommonRoomInfo)
  return commonroominfo_ != NULL ? *commonroominfo_ : *default_instance_->commonroominfo_;
}
inline ::msg::CommonRoomInfo* Processor_700_MahjongRefreshAll::mutable_commonroominfo() {
  set_has_commonroominfo();
  if (commonroominfo_ == NULL) commonroominfo_ = new ::msg::CommonRoomInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_700_MahjongRefreshAll.CommonRoomInfo)
  return commonroominfo_;
}
inline ::msg::CommonRoomInfo* Processor_700_MahjongRefreshAll::release_commonroominfo() {
  clear_has_commonroominfo();
  ::msg::CommonRoomInfo* temp = commonroominfo_;
  commonroominfo_ = NULL;
  return temp;
}
inline void Processor_700_MahjongRefreshAll::set_allocated_commonroominfo(::msg::CommonRoomInfo* commonroominfo) {
  delete commonroominfo_;
  commonroominfo_ = commonroominfo;
  if (commonroominfo) {
    set_has_commonroominfo();
  } else {
    clear_has_commonroominfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_700_MahjongRefreshAll.CommonRoomInfo)
}

// optional .msg.MahjongPropUpdate PropUpdate = 2;
inline bool Processor_700_MahjongRefreshAll::has_propupdate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_700_MahjongRefreshAll::set_has_propupdate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_700_MahjongRefreshAll::clear_has_propupdate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_700_MahjongRefreshAll::clear_propupdate() {
  if (propupdate_ != NULL) propupdate_->::msg::MahjongPropUpdate::Clear();
  clear_has_propupdate();
}
inline const ::msg::MahjongPropUpdate& Processor_700_MahjongRefreshAll::propupdate() const {
  // @@protoc_insertion_point(field_get:msg.Processor_700_MahjongRefreshAll.PropUpdate)
  return propupdate_ != NULL ? *propupdate_ : *default_instance_->propupdate_;
}
inline ::msg::MahjongPropUpdate* Processor_700_MahjongRefreshAll::mutable_propupdate() {
  set_has_propupdate();
  if (propupdate_ == NULL) propupdate_ = new ::msg::MahjongPropUpdate;
  // @@protoc_insertion_point(field_mutable:msg.Processor_700_MahjongRefreshAll.PropUpdate)
  return propupdate_;
}
inline ::msg::MahjongPropUpdate* Processor_700_MahjongRefreshAll::release_propupdate() {
  clear_has_propupdate();
  ::msg::MahjongPropUpdate* temp = propupdate_;
  propupdate_ = NULL;
  return temp;
}
inline void Processor_700_MahjongRefreshAll::set_allocated_propupdate(::msg::MahjongPropUpdate* propupdate) {
  delete propupdate_;
  propupdate_ = propupdate;
  if (propupdate) {
    set_has_propupdate();
  } else {
    clear_has_propupdate();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_700_MahjongRefreshAll.PropUpdate)
}

// optional .msg.MahjongPlayerSetting Settings = 3;
inline bool Processor_700_MahjongRefreshAll::has_settings() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_700_MahjongRefreshAll::set_has_settings() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_700_MahjongRefreshAll::clear_has_settings() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_700_MahjongRefreshAll::clear_settings() {
  if (settings_ != NULL) settings_->::msg::MahjongPlayerSetting::Clear();
  clear_has_settings();
}
inline const ::msg::MahjongPlayerSetting& Processor_700_MahjongRefreshAll::settings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_700_MahjongRefreshAll.Settings)
  return settings_ != NULL ? *settings_ : *default_instance_->settings_;
}
inline ::msg::MahjongPlayerSetting* Processor_700_MahjongRefreshAll::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) settings_ = new ::msg::MahjongPlayerSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_700_MahjongRefreshAll.Settings)
  return settings_;
}
inline ::msg::MahjongPlayerSetting* Processor_700_MahjongRefreshAll::release_settings() {
  clear_has_settings();
  ::msg::MahjongPlayerSetting* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void Processor_700_MahjongRefreshAll::set_allocated_settings(::msg::MahjongPlayerSetting* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_700_MahjongRefreshAll.Settings)
}

// -------------------------------------------------------------------

// Processor_701_MahjongReceivePropUpdate

// optional int32 RoomId = 1;
inline bool Processor_701_MahjongReceivePropUpdate::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_701_MahjongReceivePropUpdate::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_701_MahjongReceivePropUpdate::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_701_MahjongReceivePropUpdate::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_701_MahjongReceivePropUpdate::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_701_MahjongReceivePropUpdate.RoomId)
  return roomid_;
}
inline void Processor_701_MahjongReceivePropUpdate::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_701_MahjongReceivePropUpdate.RoomId)
}

// optional .msg.MahjongPropUpdate Update = 2;
inline bool Processor_701_MahjongReceivePropUpdate::has_update() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_701_MahjongReceivePropUpdate::set_has_update() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_701_MahjongReceivePropUpdate::clear_has_update() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_701_MahjongReceivePropUpdate::clear_update() {
  if (update_ != NULL) update_->::msg::MahjongPropUpdate::Clear();
  clear_has_update();
}
inline const ::msg::MahjongPropUpdate& Processor_701_MahjongReceivePropUpdate::update() const {
  // @@protoc_insertion_point(field_get:msg.Processor_701_MahjongReceivePropUpdate.Update)
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::msg::MahjongPropUpdate* Processor_701_MahjongReceivePropUpdate::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::msg::MahjongPropUpdate;
  // @@protoc_insertion_point(field_mutable:msg.Processor_701_MahjongReceivePropUpdate.Update)
  return update_;
}
inline ::msg::MahjongPropUpdate* Processor_701_MahjongReceivePropUpdate::release_update() {
  clear_has_update();
  ::msg::MahjongPropUpdate* temp = update_;
  update_ = NULL;
  return temp;
}
inline void Processor_701_MahjongReceivePropUpdate::set_allocated_update(::msg::MahjongPropUpdate* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_701_MahjongReceivePropUpdate.Update)
}

// -------------------------------------------------------------------

// Processor_702_MahjongSendPlayerChoice

// optional int32 RoomId = 1;
inline bool Processor_702_MahjongSendPlayerChoice::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_702_MahjongSendPlayerChoice::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_702_MahjongSendPlayerChoice::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_702_MahjongSendPlayerChoice.RoomId)
  return roomid_;
}
inline void Processor_702_MahjongSendPlayerChoice::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_702_MahjongSendPlayerChoice.RoomId)
}

// optional .msg.MahjongCard Card = 2;
inline bool Processor_702_MahjongSendPlayerChoice::has_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_702_MahjongSendPlayerChoice::set_has_card() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_has_card() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::msg::MahjongCard Processor_702_MahjongSendPlayerChoice::card() const {
  // @@protoc_insertion_point(field_get:msg.Processor_702_MahjongSendPlayerChoice.Card)
  return static_cast< ::msg::MahjongCard >(card_);
}
inline void Processor_702_MahjongSendPlayerChoice::set_card(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_card();
  card_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_702_MahjongSendPlayerChoice.Card)
}

// optional .msg.MahjongActionChoice Choice = 3;
inline bool Processor_702_MahjongSendPlayerChoice::has_choice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_702_MahjongSendPlayerChoice::set_has_choice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_has_choice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_choice() {
  choice_ = 1;
  clear_has_choice();
}
inline ::msg::MahjongActionChoice Processor_702_MahjongSendPlayerChoice::choice() const {
  // @@protoc_insertion_point(field_get:msg.Processor_702_MahjongSendPlayerChoice.Choice)
  return static_cast< ::msg::MahjongActionChoice >(choice_);
}
inline void Processor_702_MahjongSendPlayerChoice::set_choice(::msg::MahjongActionChoice value) {
  assert(::msg::MahjongActionChoice_IsValid(value));
  set_has_choice();
  choice_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_702_MahjongSendPlayerChoice.Choice)
}

// repeated .msg.MahjongCard SwitchCard = 4;
inline int Processor_702_MahjongSendPlayerChoice::switchcard_size() const {
  return switchcard_.size();
}
inline void Processor_702_MahjongSendPlayerChoice::clear_switchcard() {
  switchcard_.Clear();
}
inline ::msg::MahjongCard Processor_702_MahjongSendPlayerChoice::switchcard(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_702_MahjongSendPlayerChoice.SwitchCard)
  return static_cast< ::msg::MahjongCard >(switchcard_.Get(index));
}
inline void Processor_702_MahjongSendPlayerChoice::set_switchcard(int index, ::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  switchcard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.Processor_702_MahjongSendPlayerChoice.SwitchCard)
}
inline void Processor_702_MahjongSendPlayerChoice::add_switchcard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  switchcard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.Processor_702_MahjongSendPlayerChoice.SwitchCard)
}
inline const ::google_public::protobuf::RepeatedField<int>&
Processor_702_MahjongSendPlayerChoice::switchcard() const {
  // @@protoc_insertion_point(field_list:msg.Processor_702_MahjongSendPlayerChoice.SwitchCard)
  return switchcard_;
}
inline ::google_public::protobuf::RepeatedField<int>*
Processor_702_MahjongSendPlayerChoice::mutable_switchcard() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_702_MahjongSendPlayerChoice.SwitchCard)
  return &switchcard_;
}

// optional .msg.MahjongSuit Suit = 5;
inline bool Processor_702_MahjongSendPlayerChoice::has_suit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_702_MahjongSendPlayerChoice::set_has_suit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_has_suit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_suit() {
  suit_ = 0;
  clear_has_suit();
}
inline ::msg::MahjongSuit Processor_702_MahjongSendPlayerChoice::suit() const {
  // @@protoc_insertion_point(field_get:msg.Processor_702_MahjongSendPlayerChoice.Suit)
  return static_cast< ::msg::MahjongSuit >(suit_);
}
inline void Processor_702_MahjongSendPlayerChoice::set_suit(::msg::MahjongSuit value) {
  assert(::msg::MahjongSuit_IsValid(value));
  set_has_suit();
  suit_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_702_MahjongSendPlayerChoice.Suit)
}

// optional .msg.MahjongCard GangCard = 6;
inline bool Processor_702_MahjongSendPlayerChoice::has_gangcard() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Processor_702_MahjongSendPlayerChoice::set_has_gangcard() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_has_gangcard() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Processor_702_MahjongSendPlayerChoice::clear_gangcard() {
  gangcard_ = 0;
  clear_has_gangcard();
}
inline ::msg::MahjongCard Processor_702_MahjongSendPlayerChoice::gangcard() const {
  // @@protoc_insertion_point(field_get:msg.Processor_702_MahjongSendPlayerChoice.GangCard)
  return static_cast< ::msg::MahjongCard >(gangcard_);
}
inline void Processor_702_MahjongSendPlayerChoice::set_gangcard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_gangcard();
  gangcard_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_702_MahjongSendPlayerChoice.GangCard)
}

// -------------------------------------------------------------------

// MahjongAction

// optional int32 UserId = 1;
inline bool MahjongAction::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MahjongAction::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MahjongAction::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MahjongAction::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 MahjongAction::userid() const {
  // @@protoc_insertion_point(field_get:msg.MahjongAction.UserId)
  return userid_;
}
inline void MahjongAction::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongAction.UserId)
}

// optional .msg.MahjongActionChoice Choice = 2;
inline bool MahjongAction::has_choice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MahjongAction::set_has_choice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MahjongAction::clear_has_choice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MahjongAction::clear_choice() {
  choice_ = 1;
  clear_has_choice();
}
inline ::msg::MahjongActionChoice MahjongAction::choice() const {
  // @@protoc_insertion_point(field_get:msg.MahjongAction.Choice)
  return static_cast< ::msg::MahjongActionChoice >(choice_);
}
inline void MahjongAction::set_choice(::msg::MahjongActionChoice value) {
  assert(::msg::MahjongActionChoice_IsValid(value));
  set_has_choice();
  choice_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongAction.Choice)
}

// optional int32 ScoreChange = 3;
inline bool MahjongAction::has_scorechange() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MahjongAction::set_has_scorechange() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MahjongAction::clear_has_scorechange() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MahjongAction::clear_scorechange() {
  scorechange_ = 0;
  clear_has_scorechange();
}
inline ::google_public::protobuf::int32 MahjongAction::scorechange() const {
  // @@protoc_insertion_point(field_get:msg.MahjongAction.ScoreChange)
  return scorechange_;
}
inline void MahjongAction::set_scorechange(::google_public::protobuf::int32 value) {
  set_has_scorechange();
  scorechange_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongAction.ScoreChange)
}

// -------------------------------------------------------------------

// MahjongTestAllWinCardAndType

// optional .msg.MahjongSuit quemen = 1;
inline bool MahjongTestAllWinCardAndType::has_quemen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MahjongTestAllWinCardAndType::set_has_quemen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MahjongTestAllWinCardAndType::clear_has_quemen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MahjongTestAllWinCardAndType::clear_quemen() {
  quemen_ = 0;
  clear_has_quemen();
}
inline ::msg::MahjongSuit MahjongTestAllWinCardAndType::quemen() const {
  // @@protoc_insertion_point(field_get:msg.MahjongTestAllWinCardAndType.quemen)
  return static_cast< ::msg::MahjongSuit >(quemen_);
}
inline void MahjongTestAllWinCardAndType::set_quemen(::msg::MahjongSuit value) {
  assert(::msg::MahjongSuit_IsValid(value));
  set_has_quemen();
  quemen_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongTestAllWinCardAndType.quemen)
}

// repeated .msg.MahjongWinCardAndType CardAndType = 2;
inline int MahjongTestAllWinCardAndType::cardandtype_size() const {
  return cardandtype_.size();
}
inline void MahjongTestAllWinCardAndType::clear_cardandtype() {
  cardandtype_.Clear();
}
inline const ::msg::MahjongWinCardAndType& MahjongTestAllWinCardAndType::cardandtype(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongTestAllWinCardAndType.CardAndType)
  return cardandtype_.Get(index);
}
inline ::msg::MahjongWinCardAndType* MahjongTestAllWinCardAndType::mutable_cardandtype(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MahjongTestAllWinCardAndType.CardAndType)
  return cardandtype_.Mutable(index);
}
inline ::msg::MahjongWinCardAndType* MahjongTestAllWinCardAndType::add_cardandtype() {
  // @@protoc_insertion_point(field_add:msg.MahjongTestAllWinCardAndType.CardAndType)
  return cardandtype_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongWinCardAndType >&
MahjongTestAllWinCardAndType::cardandtype() const {
  // @@protoc_insertion_point(field_list:msg.MahjongTestAllWinCardAndType.CardAndType)
  return cardandtype_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongWinCardAndType >*
MahjongTestAllWinCardAndType::mutable_cardandtype() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongTestAllWinCardAndType.CardAndType)
  return &cardandtype_;
}

// -------------------------------------------------------------------

// MahjongWinCardAndType

// repeated .msg.SiChuanMahjongWinType wintype = 1;
inline int MahjongWinCardAndType::wintype_size() const {
  return wintype_.size();
}
inline void MahjongWinCardAndType::clear_wintype() {
  wintype_.Clear();
}
inline ::msg::SiChuanMahjongWinType MahjongWinCardAndType::wintype(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongWinCardAndType.wintype)
  return static_cast< ::msg::SiChuanMahjongWinType >(wintype_.Get(index));
}
inline void MahjongWinCardAndType::set_wintype(int index, ::msg::SiChuanMahjongWinType value) {
  assert(::msg::SiChuanMahjongWinType_IsValid(value));
  wintype_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongWinCardAndType.wintype)
}
inline void MahjongWinCardAndType::add_wintype(::msg::SiChuanMahjongWinType value) {
  assert(::msg::SiChuanMahjongWinType_IsValid(value));
  wintype_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongWinCardAndType.wintype)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongWinCardAndType::wintype() const {
  // @@protoc_insertion_point(field_list:msg.MahjongWinCardAndType.wintype)
  return wintype_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongWinCardAndType::mutable_wintype() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongWinCardAndType.wintype)
  return &wintype_;
}

// repeated .msg.MahjongCard handCard = 2;
inline int MahjongWinCardAndType::handcard_size() const {
  return handcard_.size();
}
inline void MahjongWinCardAndType::clear_handcard() {
  handcard_.Clear();
}
inline ::msg::MahjongCard MahjongWinCardAndType::handcard(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongWinCardAndType.handCard)
  return static_cast< ::msg::MahjongCard >(handcard_.Get(index));
}
inline void MahjongWinCardAndType::set_handcard(int index, ::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  handcard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongWinCardAndType.handCard)
}
inline void MahjongWinCardAndType::add_handcard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  handcard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongWinCardAndType.handCard)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongWinCardAndType::handcard() const {
  // @@protoc_insertion_point(field_list:msg.MahjongWinCardAndType.handCard)
  return handcard_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongWinCardAndType::mutable_handcard() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongWinCardAndType.handCard)
  return &handcard_;
}

// repeated .msg.MahjongFu fuPai = 3;
inline int MahjongWinCardAndType::fupai_size() const {
  return fupai_.size();
}
inline void MahjongWinCardAndType::clear_fupai() {
  fupai_.Clear();
}
inline const ::msg::MahjongFu& MahjongWinCardAndType::fupai(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongWinCardAndType.fuPai)
  return fupai_.Get(index);
}
inline ::msg::MahjongFu* MahjongWinCardAndType::mutable_fupai(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MahjongWinCardAndType.fuPai)
  return fupai_.Mutable(index);
}
inline ::msg::MahjongFu* MahjongWinCardAndType::add_fupai() {
  // @@protoc_insertion_point(field_add:msg.MahjongWinCardAndType.fuPai)
  return fupai_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >&
MahjongWinCardAndType::fupai() const {
  // @@protoc_insertion_point(field_list:msg.MahjongWinCardAndType.fuPai)
  return fupai_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongFu >*
MahjongWinCardAndType::mutable_fupai() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongWinCardAndType.fuPai)
  return &fupai_;
}

// optional .msg.MahjongCard ziMoPai = 4;
inline bool MahjongWinCardAndType::has_zimopai() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MahjongWinCardAndType::set_has_zimopai() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MahjongWinCardAndType::clear_has_zimopai() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MahjongWinCardAndType::clear_zimopai() {
  zimopai_ = 0;
  clear_has_zimopai();
}
inline ::msg::MahjongCard MahjongWinCardAndType::zimopai() const {
  // @@protoc_insertion_point(field_get:msg.MahjongWinCardAndType.ziMoPai)
  return static_cast< ::msg::MahjongCard >(zimopai_);
}
inline void MahjongWinCardAndType::set_zimopai(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_zimopai();
  zimopai_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongWinCardAndType.ziMoPai)
}

// optional .msg.MahjongCard dianPaoPai = 5;
inline bool MahjongWinCardAndType::has_dianpaopai() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MahjongWinCardAndType::set_has_dianpaopai() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MahjongWinCardAndType::clear_has_dianpaopai() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MahjongWinCardAndType::clear_dianpaopai() {
  dianpaopai_ = 0;
  clear_has_dianpaopai();
}
inline ::msg::MahjongCard MahjongWinCardAndType::dianpaopai() const {
  // @@protoc_insertion_point(field_get:msg.MahjongWinCardAndType.dianPaoPai)
  return static_cast< ::msg::MahjongCard >(dianpaopai_);
}
inline void MahjongWinCardAndType::set_dianpaopai(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_dianpaopai();
  dianpaopai_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongWinCardAndType.dianPaoPai)
}

// -------------------------------------------------------------------

// Processor_703_MahjongReceivePlayerAction

// optional int32 RoomId = 1;
inline bool Processor_703_MahjongReceivePlayerAction::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_703_MahjongReceivePlayerAction::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_703_MahjongReceivePlayerAction::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_703_MahjongReceivePlayerAction::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_703_MahjongReceivePlayerAction::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_703_MahjongReceivePlayerAction.RoomId)
  return roomid_;
}
inline void Processor_703_MahjongReceivePlayerAction::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_703_MahjongReceivePlayerAction.RoomId)
}

// repeated .msg.MahjongAction Action = 2;
inline int Processor_703_MahjongReceivePlayerAction::action_size() const {
  return action_.size();
}
inline void Processor_703_MahjongReceivePlayerAction::clear_action() {
  action_.Clear();
}
inline const ::msg::MahjongAction& Processor_703_MahjongReceivePlayerAction::action(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_703_MahjongReceivePlayerAction.Action)
  return action_.Get(index);
}
inline ::msg::MahjongAction* Processor_703_MahjongReceivePlayerAction::mutable_action(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_703_MahjongReceivePlayerAction.Action)
  return action_.Mutable(index);
}
inline ::msg::MahjongAction* Processor_703_MahjongReceivePlayerAction::add_action() {
  // @@protoc_insertion_point(field_add:msg.Processor_703_MahjongReceivePlayerAction.Action)
  return action_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongAction >&
Processor_703_MahjongReceivePlayerAction::action() const {
  // @@protoc_insertion_point(field_list:msg.Processor_703_MahjongReceivePlayerAction.Action)
  return action_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::MahjongAction >*
Processor_703_MahjongReceivePlayerAction::mutable_action() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_703_MahjongReceivePlayerAction.Action)
  return &action_;
}

// optional .msg.MahjongCardSwitchType SwitchType = 3;
inline bool Processor_703_MahjongReceivePlayerAction::has_switchtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_703_MahjongReceivePlayerAction::set_has_switchtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_703_MahjongReceivePlayerAction::clear_has_switchtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_703_MahjongReceivePlayerAction::clear_switchtype() {
  switchtype_ = 1;
  clear_has_switchtype();
}
inline ::msg::MahjongCardSwitchType Processor_703_MahjongReceivePlayerAction::switchtype() const {
  // @@protoc_insertion_point(field_get:msg.Processor_703_MahjongReceivePlayerAction.SwitchType)
  return static_cast< ::msg::MahjongCardSwitchType >(switchtype_);
}
inline void Processor_703_MahjongReceivePlayerAction::set_switchtype(::msg::MahjongCardSwitchType value) {
  assert(::msg::MahjongCardSwitchType_IsValid(value));
  set_has_switchtype();
  switchtype_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_703_MahjongReceivePlayerAction.SwitchType)
}

// -------------------------------------------------------------------

// Processor_715_MahjongSendSetting

// optional int32 RoomId = 1;
inline bool Processor_715_MahjongSendSetting::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_715_MahjongSendSetting::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_715_MahjongSendSetting::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_715_MahjongSendSetting::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_715_MahjongSendSetting::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_715_MahjongSendSetting.RoomId)
  return roomid_;
}
inline void Processor_715_MahjongSendSetting::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_715_MahjongSendSetting.RoomId)
}

// optional .msg.MahjongPlayerSetting Settings = 2;
inline bool Processor_715_MahjongSendSetting::has_settings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_715_MahjongSendSetting::set_has_settings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_715_MahjongSendSetting::clear_has_settings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_715_MahjongSendSetting::clear_settings() {
  if (settings_ != NULL) settings_->::msg::MahjongPlayerSetting::Clear();
  clear_has_settings();
}
inline const ::msg::MahjongPlayerSetting& Processor_715_MahjongSendSetting::settings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_715_MahjongSendSetting.Settings)
  return settings_ != NULL ? *settings_ : *default_instance_->settings_;
}
inline ::msg::MahjongPlayerSetting* Processor_715_MahjongSendSetting::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) settings_ = new ::msg::MahjongPlayerSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_715_MahjongSendSetting.Settings)
  return settings_;
}
inline ::msg::MahjongPlayerSetting* Processor_715_MahjongSendSetting::release_settings() {
  clear_has_settings();
  ::msg::MahjongPlayerSetting* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void Processor_715_MahjongSendSetting::set_allocated_settings(::msg::MahjongPlayerSetting* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_715_MahjongSendSetting.Settings)
}

// -------------------------------------------------------------------

// Processor_716_MahjongReceiveSettingChange

// optional int32 RoomId = 1;
inline bool Processor_716_MahjongReceiveSettingChange::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_716_MahjongReceiveSettingChange::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_716_MahjongReceiveSettingChange::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_716_MahjongReceiveSettingChange::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_716_MahjongReceiveSettingChange::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_716_MahjongReceiveSettingChange.RoomId)
  return roomid_;
}
inline void Processor_716_MahjongReceiveSettingChange::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_716_MahjongReceiveSettingChange.RoomId)
}

// optional .msg.MahjongPlayerSetting Settings = 2;
inline bool Processor_716_MahjongReceiveSettingChange::has_settings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_716_MahjongReceiveSettingChange::set_has_settings() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_716_MahjongReceiveSettingChange::clear_has_settings() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_716_MahjongReceiveSettingChange::clear_settings() {
  if (settings_ != NULL) settings_->::msg::MahjongPlayerSetting::Clear();
  clear_has_settings();
}
inline const ::msg::MahjongPlayerSetting& Processor_716_MahjongReceiveSettingChange::settings() const {
  // @@protoc_insertion_point(field_get:msg.Processor_716_MahjongReceiveSettingChange.Settings)
  return settings_ != NULL ? *settings_ : *default_instance_->settings_;
}
inline ::msg::MahjongPlayerSetting* Processor_716_MahjongReceiveSettingChange::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) settings_ = new ::msg::MahjongPlayerSetting;
  // @@protoc_insertion_point(field_mutable:msg.Processor_716_MahjongReceiveSettingChange.Settings)
  return settings_;
}
inline ::msg::MahjongPlayerSetting* Processor_716_MahjongReceiveSettingChange::release_settings() {
  clear_has_settings();
  ::msg::MahjongPlayerSetting* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void Processor_716_MahjongReceiveSettingChange::set_allocated_settings(::msg::MahjongPlayerSetting* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_716_MahjongReceiveSettingChange.Settings)
}

// -------------------------------------------------------------------

// Processor_300_PokerGetHandHistory_UP

// optional int32 HandId = 1;
inline bool Processor_300_PokerGetHandHistory_UP::has_handid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_300_PokerGetHandHistory_UP::set_has_handid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_300_PokerGetHandHistory_UP::clear_has_handid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_300_PokerGetHandHistory_UP::clear_handid() {
  handid_ = 0;
  clear_has_handid();
}
inline ::google_public::protobuf::int32 Processor_300_PokerGetHandHistory_UP::handid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_UP.HandId)
  return handid_;
}
inline void Processor_300_PokerGetHandHistory_UP::set_handid(::google_public::protobuf::int32 value) {
  set_has_handid();
  handid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_300_PokerGetHandHistory_UP.HandId)
}

// optional bool isPoker = 2;
inline bool Processor_300_PokerGetHandHistory_UP::has_ispoker() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_300_PokerGetHandHistory_UP::set_has_ispoker() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_300_PokerGetHandHistory_UP::clear_has_ispoker() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_300_PokerGetHandHistory_UP::clear_ispoker() {
  ispoker_ = false;
  clear_has_ispoker();
}
inline bool Processor_300_PokerGetHandHistory_UP::ispoker() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_UP.isPoker)
  return ispoker_;
}
inline void Processor_300_PokerGetHandHistory_UP::set_ispoker(bool value) {
  set_has_ispoker();
  ispoker_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_300_PokerGetHandHistory_UP.isPoker)
}

// -------------------------------------------------------------------

// PokerStep

// optional .msg.PokerStepType Type = 1;
inline bool PokerStep::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PokerStep::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PokerStep::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PokerStep::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg::PokerStepType PokerStep::type() const {
  // @@protoc_insertion_point(field_get:msg.PokerStep.Type)
  return static_cast< ::msg::PokerStepType >(type_);
}
inline void PokerStep::set_type(::msg::PokerStepType value) {
  assert(::msg::PokerStepType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerStep.Type)
}

// optional string Text = 2;
inline bool PokerStep::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PokerStep::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PokerStep::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PokerStep::clear_text() {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& PokerStep::text() const {
  // @@protoc_insertion_point(field_get:msg.PokerStep.Text)
  return *text_;
}
inline void PokerStep::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:msg.PokerStep.Text)
}
inline void PokerStep::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.PokerStep.Text)
}
inline void PokerStep::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.PokerStep.Text)
}
inline ::std::string* PokerStep::mutable_text() {
  set_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.PokerStep.Text)
  return text_;
}
inline ::std::string* PokerStep::release_text() {
  clear_has_text();
  if (text_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PokerStep::set_allocated_text(::std::string* text) {
  if (text_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerStep.Text)
}

// optional .msg.PokerRoundType Round = 3;
inline bool PokerStep::has_round() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PokerStep::set_has_round() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PokerStep::clear_has_round() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PokerStep::clear_round() {
  round_ = 0;
  clear_has_round();
}
inline ::msg::PokerRoundType PokerStep::round() const {
  // @@protoc_insertion_point(field_get:msg.PokerStep.Round)
  return static_cast< ::msg::PokerRoundType >(round_);
}
inline void PokerStep::set_round(::msg::PokerRoundType value) {
  assert(::msg::PokerRoundType_IsValid(value));
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerStep.Round)
}

// optional .msg.PokerPlayerActionInfo PlayerAction = 4;
inline bool PokerStep::has_playeraction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PokerStep::set_has_playeraction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PokerStep::clear_has_playeraction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PokerStep::clear_playeraction() {
  if (playeraction_ != NULL) playeraction_->::msg::PokerPlayerActionInfo::Clear();
  clear_has_playeraction();
}
inline const ::msg::PokerPlayerActionInfo& PokerStep::playeraction() const {
  // @@protoc_insertion_point(field_get:msg.PokerStep.PlayerAction)
  return playeraction_ != NULL ? *playeraction_ : *default_instance_->playeraction_;
}
inline ::msg::PokerPlayerActionInfo* PokerStep::mutable_playeraction() {
  set_has_playeraction();
  if (playeraction_ == NULL) playeraction_ = new ::msg::PokerPlayerActionInfo;
  // @@protoc_insertion_point(field_mutable:msg.PokerStep.PlayerAction)
  return playeraction_;
}
inline ::msg::PokerPlayerActionInfo* PokerStep::release_playeraction() {
  clear_has_playeraction();
  ::msg::PokerPlayerActionInfo* temp = playeraction_;
  playeraction_ = NULL;
  return temp;
}
inline void PokerStep::set_allocated_playeraction(::msg::PokerPlayerActionInfo* playeraction) {
  delete playeraction_;
  playeraction_ = playeraction;
  if (playeraction) {
    set_has_playeraction();
  } else {
    clear_has_playeraction();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerStep.PlayerAction)
}

// optional .msg.TableInfo CommunityChange = 5;
inline bool PokerStep::has_communitychange() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PokerStep::set_has_communitychange() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PokerStep::clear_has_communitychange() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PokerStep::clear_communitychange() {
  if (communitychange_ != NULL) communitychange_->::msg::TableInfo::Clear();
  clear_has_communitychange();
}
inline const ::msg::TableInfo& PokerStep::communitychange() const {
  // @@protoc_insertion_point(field_get:msg.PokerStep.CommunityChange)
  return communitychange_ != NULL ? *communitychange_ : *default_instance_->communitychange_;
}
inline ::msg::TableInfo* PokerStep::mutable_communitychange() {
  set_has_communitychange();
  if (communitychange_ == NULL) communitychange_ = new ::msg::TableInfo;
  // @@protoc_insertion_point(field_mutable:msg.PokerStep.CommunityChange)
  return communitychange_;
}
inline ::msg::TableInfo* PokerStep::release_communitychange() {
  clear_has_communitychange();
  ::msg::TableInfo* temp = communitychange_;
  communitychange_ = NULL;
  return temp;
}
inline void PokerStep::set_allocated_communitychange(::msg::TableInfo* communitychange) {
  delete communitychange_;
  communitychange_ = communitychange;
  if (communitychange) {
    set_has_communitychange();
  } else {
    clear_has_communitychange();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerStep.CommunityChange)
}

// optional .msg.PokerBlinds Blinds = 6;
inline bool PokerStep::has_blinds() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PokerStep::set_has_blinds() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PokerStep::clear_has_blinds() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PokerStep::clear_blinds() {
  if (blinds_ != NULL) blinds_->::msg::PokerBlinds::Clear();
  clear_has_blinds();
}
inline const ::msg::PokerBlinds& PokerStep::blinds() const {
  // @@protoc_insertion_point(field_get:msg.PokerStep.Blinds)
  return blinds_ != NULL ? *blinds_ : *default_instance_->blinds_;
}
inline ::msg::PokerBlinds* PokerStep::mutable_blinds() {
  set_has_blinds();
  if (blinds_ == NULL) blinds_ = new ::msg::PokerBlinds;
  // @@protoc_insertion_point(field_mutable:msg.PokerStep.Blinds)
  return blinds_;
}
inline ::msg::PokerBlinds* PokerStep::release_blinds() {
  clear_has_blinds();
  ::msg::PokerBlinds* temp = blinds_;
  blinds_ = NULL;
  return temp;
}
inline void PokerStep::set_allocated_blinds(::msg::PokerBlinds* blinds) {
  delete blinds_;
  blinds_ = blinds;
  if (blinds) {
    set_has_blinds();
  } else {
    clear_has_blinds();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.PokerStep.Blinds)
}

// -------------------------------------------------------------------

// PokerBlinds

// repeated .msg.PokerBlind Blind = 1;
inline int PokerBlinds::blind_size() const {
  return blind_.size();
}
inline void PokerBlinds::clear_blind() {
  blind_.Clear();
}
inline const ::msg::PokerBlind& PokerBlinds::blind(int index) const {
  // @@protoc_insertion_point(field_get:msg.PokerBlinds.Blind)
  return blind_.Get(index);
}
inline ::msg::PokerBlind* PokerBlinds::mutable_blind(int index) {
  // @@protoc_insertion_point(field_mutable:msg.PokerBlinds.Blind)
  return blind_.Mutable(index);
}
inline ::msg::PokerBlind* PokerBlinds::add_blind() {
  // @@protoc_insertion_point(field_add:msg.PokerBlinds.Blind)
  return blind_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::PokerBlind >&
PokerBlinds::blind() const {
  // @@protoc_insertion_point(field_list:msg.PokerBlinds.Blind)
  return blind_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::PokerBlind >*
PokerBlinds::mutable_blind() {
  // @@protoc_insertion_point(field_mutable_list:msg.PokerBlinds.Blind)
  return &blind_;
}

// -------------------------------------------------------------------

// PokerBlind

// optional int32 UserID = 1;
inline bool PokerBlind::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PokerBlind::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PokerBlind::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PokerBlind::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 PokerBlind::userid() const {
  // @@protoc_insertion_point(field_get:msg.PokerBlind.UserID)
  return userid_;
}
inline void PokerBlind::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerBlind.UserID)
}

// optional .msg.BlindType Type = 2;
inline bool PokerBlind::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PokerBlind::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PokerBlind::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PokerBlind::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg::BlindType PokerBlind::type() const {
  // @@protoc_insertion_point(field_get:msg.PokerBlind.Type)
  return static_cast< ::msg::BlindType >(type_);
}
inline void PokerBlind::set_type(::msg::BlindType value) {
  assert(::msg::BlindType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerBlind.Type)
}

// optional int32 Amount = 3;
inline bool PokerBlind::has_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PokerBlind::set_has_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PokerBlind::clear_has_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PokerBlind::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google_public::protobuf::int32 PokerBlind::amount() const {
  // @@protoc_insertion_point(field_get:msg.PokerBlind.Amount)
  return amount_;
}
inline void PokerBlind::set_amount(::google_public::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerBlind.Amount)
}

// -------------------------------------------------------------------

// PokerPlayerActionInfo

// optional int32 UserID = 1;
inline bool PokerPlayerActionInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PokerPlayerActionInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PokerPlayerActionInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PokerPlayerActionInfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 PokerPlayerActionInfo::userid() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerActionInfo.UserID)
  return userid_;
}
inline void PokerPlayerActionInfo::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerActionInfo.UserID)
}

// optional .msg.ActionStatus Action = 2;
inline bool PokerPlayerActionInfo::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PokerPlayerActionInfo::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PokerPlayerActionInfo::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PokerPlayerActionInfo::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::msg::ActionStatus PokerPlayerActionInfo::action() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerActionInfo.Action)
  return static_cast< ::msg::ActionStatus >(action_);
}
inline void PokerPlayerActionInfo::set_action(::msg::ActionStatus value) {
  assert(::msg::ActionStatus_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerActionInfo.Action)
}

// optional int32 Amount = 3;
inline bool PokerPlayerActionInfo::has_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PokerPlayerActionInfo::set_has_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PokerPlayerActionInfo::clear_has_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PokerPlayerActionInfo::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google_public::protobuf::int32 PokerPlayerActionInfo::amount() const {
  // @@protoc_insertion_point(field_get:msg.PokerPlayerActionInfo.Amount)
  return amount_;
}
inline void PokerPlayerActionInfo::set_amount(::google_public::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:msg.PokerPlayerActionInfo.Amount)
}

// -------------------------------------------------------------------

// OFCStep

// optional .msg.OFCStepType Type = 1;
inline bool OFCStep::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OFCStep::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OFCStep::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OFCStep::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg::OFCStepType OFCStep::type() const {
  // @@protoc_insertion_point(field_get:msg.OFCStep.Type)
  return static_cast< ::msg::OFCStepType >(type_);
}
inline void OFCStep::set_type(::msg::OFCStepType value) {
  assert(::msg::OFCStepType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCStep.Type)
}

// optional .msg.OFCPlayerActionInfo Action = 2;
inline bool OFCStep::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OFCStep::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OFCStep::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OFCStep::clear_action() {
  if (action_ != NULL) action_->::msg::OFCPlayerActionInfo::Clear();
  clear_has_action();
}
inline const ::msg::OFCPlayerActionInfo& OFCStep::action() const {
  // @@protoc_insertion_point(field_get:msg.OFCStep.Action)
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::msg::OFCPlayerActionInfo* OFCStep::mutable_action() {
  set_has_action();
  if (action_ == NULL) action_ = new ::msg::OFCPlayerActionInfo;
  // @@protoc_insertion_point(field_mutable:msg.OFCStep.Action)
  return action_;
}
inline ::msg::OFCPlayerActionInfo* OFCStep::release_action() {
  clear_has_action();
  ::msg::OFCPlayerActionInfo* temp = action_;
  action_ = NULL;
  return temp;
}
inline void OFCStep::set_allocated_action(::msg::OFCPlayerActionInfo* action) {
  delete action_;
  action_ = action;
  if (action) {
    set_has_action();
  } else {
    clear_has_action();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.OFCStep.Action)
}

// -------------------------------------------------------------------

// OFCPlayerActionInfo

// optional int32 UserID = 1;
inline bool OFCPlayerActionInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OFCPlayerActionInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OFCPlayerActionInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OFCPlayerActionInfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 OFCPlayerActionInfo::userid() const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerActionInfo.UserID)
  return userid_;
}
inline void OFCPlayerActionInfo::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.OFCPlayerActionInfo.UserID)
}

// repeated .msg.OFCPlayerCard PlayerCard = 2;
inline int OFCPlayerActionInfo::playercard_size() const {
  return playercard_.size();
}
inline void OFCPlayerActionInfo::clear_playercard() {
  playercard_.Clear();
}
inline const ::msg::OFCPlayerCard& OFCPlayerActionInfo::playercard(int index) const {
  // @@protoc_insertion_point(field_get:msg.OFCPlayerActionInfo.PlayerCard)
  return playercard_.Get(index);
}
inline ::msg::OFCPlayerCard* OFCPlayerActionInfo::mutable_playercard(int index) {
  // @@protoc_insertion_point(field_mutable:msg.OFCPlayerActionInfo.PlayerCard)
  return playercard_.Mutable(index);
}
inline ::msg::OFCPlayerCard* OFCPlayerActionInfo::add_playercard() {
  // @@protoc_insertion_point(field_add:msg.OFCPlayerActionInfo.PlayerCard)
  return playercard_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard >&
OFCPlayerActionInfo::playercard() const {
  // @@protoc_insertion_point(field_list:msg.OFCPlayerActionInfo.PlayerCard)
  return playercard_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::OFCPlayerCard >*
OFCPlayerActionInfo::mutable_playercard() {
  // @@protoc_insertion_point(field_mutable_list:msg.OFCPlayerActionInfo.PlayerCard)
  return &playercard_;
}

// -------------------------------------------------------------------

// MahjongStep

// optional .msg.MahjongRequestType Type = 1;
inline bool MahjongStep::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MahjongStep::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MahjongStep::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MahjongStep::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg::MahjongRequestType MahjongStep::type() const {
  // @@protoc_insertion_point(field_get:msg.MahjongStep.Type)
  return static_cast< ::msg::MahjongRequestType >(type_);
}
inline void MahjongStep::set_type(::msg::MahjongRequestType value) {
  assert(::msg::MahjongRequestType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongStep.Type)
}

// optional .msg.MahjongActionChoice ActionType = 2;
inline bool MahjongStep::has_actiontype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MahjongStep::set_has_actiontype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MahjongStep::clear_has_actiontype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MahjongStep::clear_actiontype() {
  actiontype_ = 1;
  clear_has_actiontype();
}
inline ::msg::MahjongActionChoice MahjongStep::actiontype() const {
  // @@protoc_insertion_point(field_get:msg.MahjongStep.ActionType)
  return static_cast< ::msg::MahjongActionChoice >(actiontype_);
}
inline void MahjongStep::set_actiontype(::msg::MahjongActionChoice value) {
  assert(::msg::MahjongActionChoice_IsValid(value));
  set_has_actiontype();
  actiontype_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongStep.ActionType)
}

// optional .msg.MahjongCard Card = 3;
inline bool MahjongStep::has_card() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MahjongStep::set_has_card() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MahjongStep::clear_has_card() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MahjongStep::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::msg::MahjongCard MahjongStep::card() const {
  // @@protoc_insertion_point(field_get:msg.MahjongStep.Card)
  return static_cast< ::msg::MahjongCard >(card_);
}
inline void MahjongStep::set_card(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  set_has_card();
  card_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongStep.Card)
}

// optional int32 UserID = 4;
inline bool MahjongStep::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MahjongStep::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MahjongStep::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MahjongStep::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 MahjongStep::userid() const {
  // @@protoc_insertion_point(field_get:msg.MahjongStep.UserID)
  return userid_;
}
inline void MahjongStep::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongStep.UserID)
}

// repeated .msg.MahjongCard SwitchCard = 5;
inline int MahjongStep::switchcard_size() const {
  return switchcard_.size();
}
inline void MahjongStep::clear_switchcard() {
  switchcard_.Clear();
}
inline ::msg::MahjongCard MahjongStep::switchcard(int index) const {
  // @@protoc_insertion_point(field_get:msg.MahjongStep.SwitchCard)
  return static_cast< ::msg::MahjongCard >(switchcard_.Get(index));
}
inline void MahjongStep::set_switchcard(int index, ::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  switchcard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MahjongStep.SwitchCard)
}
inline void MahjongStep::add_switchcard(::msg::MahjongCard value) {
  assert(::msg::MahjongCard_IsValid(value));
  switchcard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.MahjongStep.SwitchCard)
}
inline const ::google_public::protobuf::RepeatedField<int>&
MahjongStep::switchcard() const {
  // @@protoc_insertion_point(field_list:msg.MahjongStep.SwitchCard)
  return switchcard_;
}
inline ::google_public::protobuf::RepeatedField<int>*
MahjongStep::mutable_switchcard() {
  // @@protoc_insertion_point(field_mutable_list:msg.MahjongStep.SwitchCard)
  return &switchcard_;
}

// optional .msg.MahjongSuit Suit = 6;
inline bool MahjongStep::has_suit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MahjongStep::set_has_suit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MahjongStep::clear_has_suit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MahjongStep::clear_suit() {
  suit_ = 0;
  clear_has_suit();
}
inline ::msg::MahjongSuit MahjongStep::suit() const {
  // @@protoc_insertion_point(field_get:msg.MahjongStep.Suit)
  return static_cast< ::msg::MahjongSuit >(suit_);
}
inline void MahjongStep::set_suit(::msg::MahjongSuit value) {
  assert(::msg::MahjongSuit_IsValid(value));
  set_has_suit();
  suit_ = value;
  // @@protoc_insertion_point(field_set:msg.MahjongStep.Suit)
}

// -------------------------------------------------------------------

// ReplayStep

// optional int32 StepId = 1;
inline bool ReplayStep::has_stepid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplayStep::set_has_stepid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplayStep::clear_has_stepid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplayStep::clear_stepid() {
  stepid_ = 0;
  clear_has_stepid();
}
inline ::google_public::protobuf::int32 ReplayStep::stepid() const {
  // @@protoc_insertion_point(field_get:msg.ReplayStep.StepId)
  return stepid_;
}
inline void ReplayStep::set_stepid(::google_public::protobuf::int32 value) {
  set_has_stepid();
  stepid_ = value;
  // @@protoc_insertion_point(field_set:msg.ReplayStep.StepId)
}

// optional .msg.TableAndUserUpdate PropUpdate = 2;
inline bool ReplayStep::has_propupdate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplayStep::set_has_propupdate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplayStep::clear_has_propupdate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplayStep::clear_propupdate() {
  if (propupdate_ != NULL) propupdate_->::msg::TableAndUserUpdate::Clear();
  clear_has_propupdate();
}
inline const ::msg::TableAndUserUpdate& ReplayStep::propupdate() const {
  // @@protoc_insertion_point(field_get:msg.ReplayStep.PropUpdate)
  return propupdate_ != NULL ? *propupdate_ : *default_instance_->propupdate_;
}
inline ::msg::TableAndUserUpdate* ReplayStep::mutable_propupdate() {
  set_has_propupdate();
  if (propupdate_ == NULL) propupdate_ = new ::msg::TableAndUserUpdate;
  // @@protoc_insertion_point(field_mutable:msg.ReplayStep.PropUpdate)
  return propupdate_;
}
inline ::msg::TableAndUserUpdate* ReplayStep::release_propupdate() {
  clear_has_propupdate();
  ::msg::TableAndUserUpdate* temp = propupdate_;
  propupdate_ = NULL;
  return temp;
}
inline void ReplayStep::set_allocated_propupdate(::msg::TableAndUserUpdate* propupdate) {
  delete propupdate_;
  propupdate_ = propupdate;
  if (propupdate) {
    set_has_propupdate();
  } else {
    clear_has_propupdate();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ReplayStep.PropUpdate)
}

// optional .msg.OFCPropUpdate OFCPropUpdate = 3;
inline bool ReplayStep::has_ofcpropupdate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplayStep::set_has_ofcpropupdate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplayStep::clear_has_ofcpropupdate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplayStep::clear_ofcpropupdate() {
  if (ofcpropupdate_ != NULL) ofcpropupdate_->::msg::OFCPropUpdate::Clear();
  clear_has_ofcpropupdate();
}
inline const ::msg::OFCPropUpdate& ReplayStep::ofcpropupdate() const {
  // @@protoc_insertion_point(field_get:msg.ReplayStep.OFCPropUpdate)
  return ofcpropupdate_ != NULL ? *ofcpropupdate_ : *default_instance_->ofcpropupdate_;
}
inline ::msg::OFCPropUpdate* ReplayStep::mutable_ofcpropupdate() {
  set_has_ofcpropupdate();
  if (ofcpropupdate_ == NULL) ofcpropupdate_ = new ::msg::OFCPropUpdate;
  // @@protoc_insertion_point(field_mutable:msg.ReplayStep.OFCPropUpdate)
  return ofcpropupdate_;
}
inline ::msg::OFCPropUpdate* ReplayStep::release_ofcpropupdate() {
  clear_has_ofcpropupdate();
  ::msg::OFCPropUpdate* temp = ofcpropupdate_;
  ofcpropupdate_ = NULL;
  return temp;
}
inline void ReplayStep::set_allocated_ofcpropupdate(::msg::OFCPropUpdate* ofcpropupdate) {
  delete ofcpropupdate_;
  ofcpropupdate_ = ofcpropupdate;
  if (ofcpropupdate) {
    set_has_ofcpropupdate();
  } else {
    clear_has_ofcpropupdate();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ReplayStep.OFCPropUpdate)
}

// optional .msg.PokerStep PokerStep = 4;
inline bool ReplayStep::has_pokerstep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplayStep::set_has_pokerstep() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplayStep::clear_has_pokerstep() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplayStep::clear_pokerstep() {
  if (pokerstep_ != NULL) pokerstep_->::msg::PokerStep::Clear();
  clear_has_pokerstep();
}
inline const ::msg::PokerStep& ReplayStep::pokerstep() const {
  // @@protoc_insertion_point(field_get:msg.ReplayStep.PokerStep)
  return pokerstep_ != NULL ? *pokerstep_ : *default_instance_->pokerstep_;
}
inline ::msg::PokerStep* ReplayStep::mutable_pokerstep() {
  set_has_pokerstep();
  if (pokerstep_ == NULL) pokerstep_ = new ::msg::PokerStep;
  // @@protoc_insertion_point(field_mutable:msg.ReplayStep.PokerStep)
  return pokerstep_;
}
inline ::msg::PokerStep* ReplayStep::release_pokerstep() {
  clear_has_pokerstep();
  ::msg::PokerStep* temp = pokerstep_;
  pokerstep_ = NULL;
  return temp;
}
inline void ReplayStep::set_allocated_pokerstep(::msg::PokerStep* pokerstep) {
  delete pokerstep_;
  pokerstep_ = pokerstep;
  if (pokerstep) {
    set_has_pokerstep();
  } else {
    clear_has_pokerstep();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ReplayStep.PokerStep)
}

// optional .msg.OFCStep OFCStep = 5;
inline bool ReplayStep::has_ofcstep() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReplayStep::set_has_ofcstep() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReplayStep::clear_has_ofcstep() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReplayStep::clear_ofcstep() {
  if (ofcstep_ != NULL) ofcstep_->::msg::OFCStep::Clear();
  clear_has_ofcstep();
}
inline const ::msg::OFCStep& ReplayStep::ofcstep() const {
  // @@protoc_insertion_point(field_get:msg.ReplayStep.OFCStep)
  return ofcstep_ != NULL ? *ofcstep_ : *default_instance_->ofcstep_;
}
inline ::msg::OFCStep* ReplayStep::mutable_ofcstep() {
  set_has_ofcstep();
  if (ofcstep_ == NULL) ofcstep_ = new ::msg::OFCStep;
  // @@protoc_insertion_point(field_mutable:msg.ReplayStep.OFCStep)
  return ofcstep_;
}
inline ::msg::OFCStep* ReplayStep::release_ofcstep() {
  clear_has_ofcstep();
  ::msg::OFCStep* temp = ofcstep_;
  ofcstep_ = NULL;
  return temp;
}
inline void ReplayStep::set_allocated_ofcstep(::msg::OFCStep* ofcstep) {
  delete ofcstep_;
  ofcstep_ = ofcstep;
  if (ofcstep) {
    set_has_ofcstep();
  } else {
    clear_has_ofcstep();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ReplayStep.OFCStep)
}

// optional .msg.MahjongPropUpdate MahjongUpdate = 6;
inline bool ReplayStep::has_mahjongupdate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReplayStep::set_has_mahjongupdate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReplayStep::clear_has_mahjongupdate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReplayStep::clear_mahjongupdate() {
  if (mahjongupdate_ != NULL) mahjongupdate_->::msg::MahjongPropUpdate::Clear();
  clear_has_mahjongupdate();
}
inline const ::msg::MahjongPropUpdate& ReplayStep::mahjongupdate() const {
  // @@protoc_insertion_point(field_get:msg.ReplayStep.MahjongUpdate)
  return mahjongupdate_ != NULL ? *mahjongupdate_ : *default_instance_->mahjongupdate_;
}
inline ::msg::MahjongPropUpdate* ReplayStep::mutable_mahjongupdate() {
  set_has_mahjongupdate();
  if (mahjongupdate_ == NULL) mahjongupdate_ = new ::msg::MahjongPropUpdate;
  // @@protoc_insertion_point(field_mutable:msg.ReplayStep.MahjongUpdate)
  return mahjongupdate_;
}
inline ::msg::MahjongPropUpdate* ReplayStep::release_mahjongupdate() {
  clear_has_mahjongupdate();
  ::msg::MahjongPropUpdate* temp = mahjongupdate_;
  mahjongupdate_ = NULL;
  return temp;
}
inline void ReplayStep::set_allocated_mahjongupdate(::msg::MahjongPropUpdate* mahjongupdate) {
  delete mahjongupdate_;
  mahjongupdate_ = mahjongupdate;
  if (mahjongupdate) {
    set_has_mahjongupdate();
  } else {
    clear_has_mahjongupdate();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ReplayStep.MahjongUpdate)
}

// optional .msg.MahjongStep MahjongStep = 7;
inline bool ReplayStep::has_mahjongstep() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReplayStep::set_has_mahjongstep() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReplayStep::clear_has_mahjongstep() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReplayStep::clear_mahjongstep() {
  if (mahjongstep_ != NULL) mahjongstep_->::msg::MahjongStep::Clear();
  clear_has_mahjongstep();
}
inline const ::msg::MahjongStep& ReplayStep::mahjongstep() const {
  // @@protoc_insertion_point(field_get:msg.ReplayStep.MahjongStep)
  return mahjongstep_ != NULL ? *mahjongstep_ : *default_instance_->mahjongstep_;
}
inline ::msg::MahjongStep* ReplayStep::mutable_mahjongstep() {
  set_has_mahjongstep();
  if (mahjongstep_ == NULL) mahjongstep_ = new ::msg::MahjongStep;
  // @@protoc_insertion_point(field_mutable:msg.ReplayStep.MahjongStep)
  return mahjongstep_;
}
inline ::msg::MahjongStep* ReplayStep::release_mahjongstep() {
  clear_has_mahjongstep();
  ::msg::MahjongStep* temp = mahjongstep_;
  mahjongstep_ = NULL;
  return temp;
}
inline void ReplayStep::set_allocated_mahjongstep(::msg::MahjongStep* mahjongstep) {
  delete mahjongstep_;
  mahjongstep_ = mahjongstep;
  if (mahjongstep) {
    set_has_mahjongstep();
  } else {
    clear_has_mahjongstep();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ReplayStep.MahjongStep)
}

// -------------------------------------------------------------------

// ReplaySteps

// repeated .msg.ReplayStep ReplayStep = 1;
inline int ReplaySteps::replaystep_size() const {
  return replaystep_.size();
}
inline void ReplaySteps::clear_replaystep() {
  replaystep_.Clear();
}
inline const ::msg::ReplayStep& ReplaySteps::replaystep(int index) const {
  // @@protoc_insertion_point(field_get:msg.ReplaySteps.ReplayStep)
  return replaystep_.Get(index);
}
inline ::msg::ReplayStep* ReplaySteps::mutable_replaystep(int index) {
  // @@protoc_insertion_point(field_mutable:msg.ReplaySteps.ReplayStep)
  return replaystep_.Mutable(index);
}
inline ::msg::ReplayStep* ReplaySteps::add_replaystep() {
  // @@protoc_insertion_point(field_add:msg.ReplaySteps.ReplayStep)
  return replaystep_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayStep >&
ReplaySteps::replaystep() const {
  // @@protoc_insertion_point(field_list:msg.ReplaySteps.ReplayStep)
  return replaystep_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayStep >*
ReplaySteps::mutable_replaystep() {
  // @@protoc_insertion_point(field_mutable_list:msg.ReplaySteps.ReplayStep)
  return &replaystep_;
}

// -------------------------------------------------------------------

// ReplayPlayers

// repeated .msg.ReplayPlayer ReplayPlayer = 1;
inline int ReplayPlayers::replayplayer_size() const {
  return replayplayer_.size();
}
inline void ReplayPlayers::clear_replayplayer() {
  replayplayer_.Clear();
}
inline const ::msg::ReplayPlayer& ReplayPlayers::replayplayer(int index) const {
  // @@protoc_insertion_point(field_get:msg.ReplayPlayers.ReplayPlayer)
  return replayplayer_.Get(index);
}
inline ::msg::ReplayPlayer* ReplayPlayers::mutable_replayplayer(int index) {
  // @@protoc_insertion_point(field_mutable:msg.ReplayPlayers.ReplayPlayer)
  return replayplayer_.Mutable(index);
}
inline ::msg::ReplayPlayer* ReplayPlayers::add_replayplayer() {
  // @@protoc_insertion_point(field_add:msg.ReplayPlayers.ReplayPlayer)
  return replayplayer_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayPlayer >&
ReplayPlayers::replayplayer() const {
  // @@protoc_insertion_point(field_list:msg.ReplayPlayers.ReplayPlayer)
  return replayplayer_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::ReplayPlayer >*
ReplayPlayers::mutable_replayplayer() {
  // @@protoc_insertion_point(field_mutable_list:msg.ReplayPlayers.ReplayPlayer)
  return &replayplayer_;
}

// -------------------------------------------------------------------

// ReplayPlayer

// optional .msg.UserDetailInfo UserDetailInfo = 1;
inline bool ReplayPlayer::has_userdetailinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplayPlayer::set_has_userdetailinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplayPlayer::clear_has_userdetailinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplayPlayer::clear_userdetailinfo() {
  if (userdetailinfo_ != NULL) userdetailinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userdetailinfo();
}
inline const ::msg::UserDetailInfo& ReplayPlayer::userdetailinfo() const {
  // @@protoc_insertion_point(field_get:msg.ReplayPlayer.UserDetailInfo)
  return userdetailinfo_ != NULL ? *userdetailinfo_ : *default_instance_->userdetailinfo_;
}
inline ::msg::UserDetailInfo* ReplayPlayer::mutable_userdetailinfo() {
  set_has_userdetailinfo();
  if (userdetailinfo_ == NULL) userdetailinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.ReplayPlayer.UserDetailInfo)
  return userdetailinfo_;
}
inline ::msg::UserDetailInfo* ReplayPlayer::release_userdetailinfo() {
  clear_has_userdetailinfo();
  ::msg::UserDetailInfo* temp = userdetailinfo_;
  userdetailinfo_ = NULL;
  return temp;
}
inline void ReplayPlayer::set_allocated_userdetailinfo(::msg::UserDetailInfo* userdetailinfo) {
  delete userdetailinfo_;
  userdetailinfo_ = userdetailinfo;
  if (userdetailinfo) {
    set_has_userdetailinfo();
  } else {
    clear_has_userdetailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ReplayPlayer.UserDetailInfo)
}

// optional int32 SitNum = 2;
inline bool ReplayPlayer::has_sitnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplayPlayer::set_has_sitnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplayPlayer::clear_has_sitnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplayPlayer::clear_sitnum() {
  sitnum_ = 0;
  clear_has_sitnum();
}
inline ::google_public::protobuf::int32 ReplayPlayer::sitnum() const {
  // @@protoc_insertion_point(field_get:msg.ReplayPlayer.SitNum)
  return sitnum_;
}
inline void ReplayPlayer::set_sitnum(::google_public::protobuf::int32 value) {
  set_has_sitnum();
  sitnum_ = value;
  // @@protoc_insertion_point(field_set:msg.ReplayPlayer.SitNum)
}

// repeated bool IsVisible = 3;
inline int ReplayPlayer::isvisible_size() const {
  return isvisible_.size();
}
inline void ReplayPlayer::clear_isvisible() {
  isvisible_.Clear();
}
inline bool ReplayPlayer::isvisible(int index) const {
  // @@protoc_insertion_point(field_get:msg.ReplayPlayer.IsVisible)
  return isvisible_.Get(index);
}
inline void ReplayPlayer::set_isvisible(int index, bool value) {
  isvisible_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.ReplayPlayer.IsVisible)
}
inline void ReplayPlayer::add_isvisible(bool value) {
  isvisible_.Add(value);
  // @@protoc_insertion_point(field_add:msg.ReplayPlayer.IsVisible)
}
inline const ::google_public::protobuf::RepeatedField< bool >&
ReplayPlayer::isvisible() const {
  // @@protoc_insertion_point(field_list:msg.ReplayPlayer.IsVisible)
  return isvisible_;
}
inline ::google_public::protobuf::RepeatedField< bool >*
ReplayPlayer::mutable_isvisible() {
  // @@protoc_insertion_point(field_mutable_list:msg.ReplayPlayer.IsVisible)
  return &isvisible_;
}

// -------------------------------------------------------------------

// HandBaseInfo

// optional string RoomName = 1;
inline bool HandBaseInfo::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandBaseInfo::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandBaseInfo::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandBaseInfo::clear_roomname() {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_->clear();
  }
  clear_has_roomname();
}
inline const ::std::string& HandBaseInfo::roomname() const {
  // @@protoc_insertion_point(field_get:msg.HandBaseInfo.RoomName)
  return *roomname_;
}
inline void HandBaseInfo::set_roomname(const ::std::string& value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.HandBaseInfo.RoomName)
}
inline void HandBaseInfo::set_roomname(const char* value) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.HandBaseInfo.RoomName)
}
inline void HandBaseInfo::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.HandBaseInfo.RoomName)
}
inline ::std::string* HandBaseInfo::mutable_roomname() {
  set_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    roomname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.HandBaseInfo.RoomName)
  return roomname_;
}
inline ::std::string* HandBaseInfo::release_roomname() {
  clear_has_roomname();
  if (roomname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = roomname_;
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HandBaseInfo::set_allocated_roomname(::std::string* roomname) {
  if (roomname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomname_;
  }
  if (roomname) {
    set_has_roomname();
    roomname_ = roomname;
  } else {
    clear_has_roomname();
    roomname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.HandBaseInfo.RoomName)
}

// optional int32 TotalSeatNum = 2;
inline bool HandBaseInfo::has_totalseatnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandBaseInfo::set_has_totalseatnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandBaseInfo::clear_has_totalseatnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandBaseInfo::clear_totalseatnum() {
  totalseatnum_ = 0;
  clear_has_totalseatnum();
}
inline ::google_public::protobuf::int32 HandBaseInfo::totalseatnum() const {
  // @@protoc_insertion_point(field_get:msg.HandBaseInfo.TotalSeatNum)
  return totalseatnum_;
}
inline void HandBaseInfo::set_totalseatnum(::google_public::protobuf::int32 value) {
  set_has_totalseatnum();
  totalseatnum_ = value;
  // @@protoc_insertion_point(field_set:msg.HandBaseInfo.TotalSeatNum)
}

// optional string TableRemark = 3;
inline bool HandBaseInfo::has_tableremark() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandBaseInfo::set_has_tableremark() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandBaseInfo::clear_has_tableremark() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandBaseInfo::clear_tableremark() {
  if (tableremark_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tableremark_->clear();
  }
  clear_has_tableremark();
}
inline const ::std::string& HandBaseInfo::tableremark() const {
  // @@protoc_insertion_point(field_get:msg.HandBaseInfo.TableRemark)
  return *tableremark_;
}
inline void HandBaseInfo::set_tableremark(const ::std::string& value) {
  set_has_tableremark();
  if (tableremark_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tableremark_ = new ::std::string;
  }
  tableremark_->assign(value);
  // @@protoc_insertion_point(field_set:msg.HandBaseInfo.TableRemark)
}
inline void HandBaseInfo::set_tableremark(const char* value) {
  set_has_tableremark();
  if (tableremark_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tableremark_ = new ::std::string;
  }
  tableremark_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.HandBaseInfo.TableRemark)
}
inline void HandBaseInfo::set_tableremark(const char* value, size_t size) {
  set_has_tableremark();
  if (tableremark_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tableremark_ = new ::std::string;
  }
  tableremark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.HandBaseInfo.TableRemark)
}
inline ::std::string* HandBaseInfo::mutable_tableremark() {
  set_has_tableremark();
  if (tableremark_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tableremark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.HandBaseInfo.TableRemark)
  return tableremark_;
}
inline ::std::string* HandBaseInfo::release_tableremark() {
  clear_has_tableremark();
  if (tableremark_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tableremark_;
    tableremark_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HandBaseInfo::set_allocated_tableremark(::std::string* tableremark) {
  if (tableremark_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tableremark_;
  }
  if (tableremark) {
    set_has_tableremark();
    tableremark_ = tableremark;
  } else {
    clear_has_tableremark();
    tableremark_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.HandBaseInfo.TableRemark)
}

// optional string HandTxt = 4;
inline bool HandBaseInfo::has_handtxt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HandBaseInfo::set_has_handtxt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HandBaseInfo::clear_has_handtxt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HandBaseInfo::clear_handtxt() {
  if (handtxt_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handtxt_->clear();
  }
  clear_has_handtxt();
}
inline const ::std::string& HandBaseInfo::handtxt() const {
  // @@protoc_insertion_point(field_get:msg.HandBaseInfo.HandTxt)
  return *handtxt_;
}
inline void HandBaseInfo::set_handtxt(const ::std::string& value) {
  set_has_handtxt();
  if (handtxt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handtxt_ = new ::std::string;
  }
  handtxt_->assign(value);
  // @@protoc_insertion_point(field_set:msg.HandBaseInfo.HandTxt)
}
inline void HandBaseInfo::set_handtxt(const char* value) {
  set_has_handtxt();
  if (handtxt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handtxt_ = new ::std::string;
  }
  handtxt_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.HandBaseInfo.HandTxt)
}
inline void HandBaseInfo::set_handtxt(const char* value, size_t size) {
  set_has_handtxt();
  if (handtxt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handtxt_ = new ::std::string;
  }
  handtxt_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.HandBaseInfo.HandTxt)
}
inline ::std::string* HandBaseInfo::mutable_handtxt() {
  set_has_handtxt();
  if (handtxt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handtxt_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.HandBaseInfo.HandTxt)
  return handtxt_;
}
inline ::std::string* HandBaseInfo::release_handtxt() {
  clear_has_handtxt();
  if (handtxt_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = handtxt_;
    handtxt_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HandBaseInfo::set_allocated_handtxt(::std::string* handtxt) {
  if (handtxt_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete handtxt_;
  }
  if (handtxt) {
    set_has_handtxt();
    handtxt_ = handtxt;
  } else {
    clear_has_handtxt();
    handtxt_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.HandBaseInfo.HandTxt)
}

// optional int32 DealerPos = 5;
inline bool HandBaseInfo::has_dealerpos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HandBaseInfo::set_has_dealerpos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HandBaseInfo::clear_has_dealerpos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HandBaseInfo::clear_dealerpos() {
  dealerpos_ = 0;
  clear_has_dealerpos();
}
inline ::google_public::protobuf::int32 HandBaseInfo::dealerpos() const {
  // @@protoc_insertion_point(field_get:msg.HandBaseInfo.DealerPos)
  return dealerpos_;
}
inline void HandBaseInfo::set_dealerpos(::google_public::protobuf::int32 value) {
  set_has_dealerpos();
  dealerpos_ = value;
  // @@protoc_insertion_point(field_set:msg.HandBaseInfo.DealerPos)
}

// -------------------------------------------------------------------

// Processor_300_PokerGetHandHistory_DOWN

// optional .msg.Response Response = 1;
inline bool Processor_300_PokerGetHandHistory_DOWN::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_response() {
  if (response_ != NULL) response_->::msg::Response::Clear();
  clear_has_response();
}
inline const ::msg::Response& Processor_300_PokerGetHandHistory_DOWN::response() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_DOWN.Response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::msg::Response* Processor_300_PokerGetHandHistory_DOWN::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::msg::Response;
  // @@protoc_insertion_point(field_mutable:msg.Processor_300_PokerGetHandHistory_DOWN.Response)
  return response_;
}
inline ::msg::Response* Processor_300_PokerGetHandHistory_DOWN::release_response() {
  clear_has_response();
  ::msg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_allocated_response(::msg::Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_300_PokerGetHandHistory_DOWN.Response)
}

// optional int32 HandId = 2;
inline bool Processor_300_PokerGetHandHistory_DOWN::has_handid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_has_handid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_has_handid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_handid() {
  handid_ = 0;
  clear_has_handid();
}
inline ::google_public::protobuf::int32 Processor_300_PokerGetHandHistory_DOWN::handid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_DOWN.HandId)
  return handid_;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_handid(::google_public::protobuf::int32 value) {
  set_has_handid();
  handid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_300_PokerGetHandHistory_DOWN.HandId)
}

// optional .msg.HandType HandType = 3;
inline bool Processor_300_PokerGetHandHistory_DOWN::has_handtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_has_handtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_has_handtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_handtype() {
  handtype_ = 1;
  clear_has_handtype();
}
inline ::msg::HandType Processor_300_PokerGetHandHistory_DOWN::handtype() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_DOWN.HandType)
  return static_cast< ::msg::HandType >(handtype_);
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_handtype(::msg::HandType value) {
  assert(::msg::HandType_IsValid(value));
  set_has_handtype();
  handtype_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_300_PokerGetHandHistory_DOWN.HandType)
}

// optional .msg.HandBaseInfo BaseInfo = 4;
inline bool Processor_300_PokerGetHandHistory_DOWN::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::msg::HandBaseInfo::Clear();
  clear_has_baseinfo();
}
inline const ::msg::HandBaseInfo& Processor_300_PokerGetHandHistory_DOWN::baseinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_DOWN.BaseInfo)
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::msg::HandBaseInfo* Processor_300_PokerGetHandHistory_DOWN::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::msg::HandBaseInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_300_PokerGetHandHistory_DOWN.BaseInfo)
  return baseinfo_;
}
inline ::msg::HandBaseInfo* Processor_300_PokerGetHandHistory_DOWN::release_baseinfo() {
  clear_has_baseinfo();
  ::msg::HandBaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_allocated_baseinfo(::msg::HandBaseInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_300_PokerGetHandHistory_DOWN.BaseInfo)
}

// optional .msg.ReplayPlayers Players = 5;
inline bool Processor_300_PokerGetHandHistory_DOWN::has_players() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_has_players() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_has_players() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_players() {
  if (players_ != NULL) players_->::msg::ReplayPlayers::Clear();
  clear_has_players();
}
inline const ::msg::ReplayPlayers& Processor_300_PokerGetHandHistory_DOWN::players() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_DOWN.Players)
  return players_ != NULL ? *players_ : *default_instance_->players_;
}
inline ::msg::ReplayPlayers* Processor_300_PokerGetHandHistory_DOWN::mutable_players() {
  set_has_players();
  if (players_ == NULL) players_ = new ::msg::ReplayPlayers;
  // @@protoc_insertion_point(field_mutable:msg.Processor_300_PokerGetHandHistory_DOWN.Players)
  return players_;
}
inline ::msg::ReplayPlayers* Processor_300_PokerGetHandHistory_DOWN::release_players() {
  clear_has_players();
  ::msg::ReplayPlayers* temp = players_;
  players_ = NULL;
  return temp;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_allocated_players(::msg::ReplayPlayers* players) {
  delete players_;
  players_ = players;
  if (players) {
    set_has_players();
  } else {
    clear_has_players();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_300_PokerGetHandHistory_DOWN.Players)
}

// optional .msg.ReplaySteps Steps = 6;
inline bool Processor_300_PokerGetHandHistory_DOWN::has_steps() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_has_steps() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_has_steps() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_steps() {
  if (steps_ != NULL) steps_->::msg::ReplaySteps::Clear();
  clear_has_steps();
}
inline const ::msg::ReplaySteps& Processor_300_PokerGetHandHistory_DOWN::steps() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_DOWN.Steps)
  return steps_ != NULL ? *steps_ : *default_instance_->steps_;
}
inline ::msg::ReplaySteps* Processor_300_PokerGetHandHistory_DOWN::mutable_steps() {
  set_has_steps();
  if (steps_ == NULL) steps_ = new ::msg::ReplaySteps;
  // @@protoc_insertion_point(field_mutable:msg.Processor_300_PokerGetHandHistory_DOWN.Steps)
  return steps_;
}
inline ::msg::ReplaySteps* Processor_300_PokerGetHandHistory_DOWN::release_steps() {
  clear_has_steps();
  ::msg::ReplaySteps* temp = steps_;
  steps_ = NULL;
  return temp;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_allocated_steps(::msg::ReplaySteps* steps) {
  delete steps_;
  steps_ = steps;
  if (steps) {
    set_has_steps();
  } else {
    clear_has_steps();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_300_PokerGetHandHistory_DOWN.Steps)
}

// optional .msg.HandResultInfo HandResultInfo = 7;
inline bool Processor_300_PokerGetHandHistory_DOWN::has_handresultinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_has_handresultinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_has_handresultinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_handresultinfo() {
  if (handresultinfo_ != NULL) handresultinfo_->::msg::HandResultInfo::Clear();
  clear_has_handresultinfo();
}
inline const ::msg::HandResultInfo& Processor_300_PokerGetHandHistory_DOWN::handresultinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_DOWN.HandResultInfo)
  return handresultinfo_ != NULL ? *handresultinfo_ : *default_instance_->handresultinfo_;
}
inline ::msg::HandResultInfo* Processor_300_PokerGetHandHistory_DOWN::mutable_handresultinfo() {
  set_has_handresultinfo();
  if (handresultinfo_ == NULL) handresultinfo_ = new ::msg::HandResultInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_300_PokerGetHandHistory_DOWN.HandResultInfo)
  return handresultinfo_;
}
inline ::msg::HandResultInfo* Processor_300_PokerGetHandHistory_DOWN::release_handresultinfo() {
  clear_has_handresultinfo();
  ::msg::HandResultInfo* temp = handresultinfo_;
  handresultinfo_ = NULL;
  return temp;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_allocated_handresultinfo(::msg::HandResultInfo* handresultinfo) {
  delete handresultinfo_;
  handresultinfo_ = handresultinfo;
  if (handresultinfo) {
    set_has_handresultinfo();
  } else {
    clear_has_handresultinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_300_PokerGetHandHistory_DOWN.HandResultInfo)
}

// optional .msg.OFCResult OFCResult = 8;
inline bool Processor_300_PokerGetHandHistory_DOWN::has_ofcresult() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_has_ofcresult() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_has_ofcresult() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Processor_300_PokerGetHandHistory_DOWN::clear_ofcresult() {
  if (ofcresult_ != NULL) ofcresult_->::msg::OFCResult::Clear();
  clear_has_ofcresult();
}
inline const ::msg::OFCResult& Processor_300_PokerGetHandHistory_DOWN::ofcresult() const {
  // @@protoc_insertion_point(field_get:msg.Processor_300_PokerGetHandHistory_DOWN.OFCResult)
  return ofcresult_ != NULL ? *ofcresult_ : *default_instance_->ofcresult_;
}
inline ::msg::OFCResult* Processor_300_PokerGetHandHistory_DOWN::mutable_ofcresult() {
  set_has_ofcresult();
  if (ofcresult_ == NULL) ofcresult_ = new ::msg::OFCResult;
  // @@protoc_insertion_point(field_mutable:msg.Processor_300_PokerGetHandHistory_DOWN.OFCResult)
  return ofcresult_;
}
inline ::msg::OFCResult* Processor_300_PokerGetHandHistory_DOWN::release_ofcresult() {
  clear_has_ofcresult();
  ::msg::OFCResult* temp = ofcresult_;
  ofcresult_ = NULL;
  return temp;
}
inline void Processor_300_PokerGetHandHistory_DOWN::set_allocated_ofcresult(::msg::OFCResult* ofcresult) {
  delete ofcresult_;
  ofcresult_ = ofcresult;
  if (ofcresult) {
    set_has_ofcresult();
  } else {
    clear_has_ofcresult();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_300_PokerGetHandHistory_DOWN.OFCResult)
}

// -------------------------------------------------------------------

// Processor_1000_RegisterServer_OtherToCore

// optional .msg.ServerType Type = 1;
inline bool Processor_1000_RegisterServer_OtherToCore::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1000_RegisterServer_OtherToCore::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1000_RegisterServer_OtherToCore::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1000_RegisterServer_OtherToCore::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::msg::ServerType Processor_1000_RegisterServer_OtherToCore::type() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1000_RegisterServer_OtherToCore.Type)
  return static_cast< ::msg::ServerType >(type_);
}
inline void Processor_1000_RegisterServer_OtherToCore::set_type(::msg::ServerType value) {
  assert(::msg::ServerType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1000_RegisterServer_OtherToCore.Type)
}

// optional string IP = 2;
inline bool Processor_1000_RegisterServer_OtherToCore::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_1000_RegisterServer_OtherToCore::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_1000_RegisterServer_OtherToCore::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_1000_RegisterServer_OtherToCore::clear_ip() {
  if (ip_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& Processor_1000_RegisterServer_OtherToCore::ip() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1000_RegisterServer_OtherToCore.IP)
  return *ip_;
}
inline void Processor_1000_RegisterServer_OtherToCore::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_1000_RegisterServer_OtherToCore.IP)
}
inline void Processor_1000_RegisterServer_OtherToCore::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_1000_RegisterServer_OtherToCore.IP)
}
inline void Processor_1000_RegisterServer_OtherToCore::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_1000_RegisterServer_OtherToCore.IP)
}
inline ::std::string* Processor_1000_RegisterServer_OtherToCore::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_1000_RegisterServer_OtherToCore.IP)
  return ip_;
}
inline ::std::string* Processor_1000_RegisterServer_OtherToCore::release_ip() {
  clear_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_1000_RegisterServer_OtherToCore::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_1000_RegisterServer_OtherToCore.IP)
}

// optional int32 ServerPort = 3;
inline bool Processor_1000_RegisterServer_OtherToCore::has_serverport() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_1000_RegisterServer_OtherToCore::set_has_serverport() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_1000_RegisterServer_OtherToCore::clear_has_serverport() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_1000_RegisterServer_OtherToCore::clear_serverport() {
  serverport_ = 0;
  clear_has_serverport();
}
inline ::google_public::protobuf::int32 Processor_1000_RegisterServer_OtherToCore::serverport() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1000_RegisterServer_OtherToCore.ServerPort)
  return serverport_;
}
inline void Processor_1000_RegisterServer_OtherToCore::set_serverport(::google_public::protobuf::int32 value) {
  set_has_serverport();
  serverport_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1000_RegisterServer_OtherToCore.ServerPort)
}

// optional int32 ClientPort = 4;
inline bool Processor_1000_RegisterServer_OtherToCore::has_clientport() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_1000_RegisterServer_OtherToCore::set_has_clientport() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_1000_RegisterServer_OtherToCore::clear_has_clientport() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_1000_RegisterServer_OtherToCore::clear_clientport() {
  clientport_ = 0;
  clear_has_clientport();
}
inline ::google_public::protobuf::int32 Processor_1000_RegisterServer_OtherToCore::clientport() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1000_RegisterServer_OtherToCore.ClientPort)
  return clientport_;
}
inline void Processor_1000_RegisterServer_OtherToCore::set_clientport(::google_public::protobuf::int32 value) {
  set_has_clientport();
  clientport_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1000_RegisterServer_OtherToCore.ClientPort)
}

// -------------------------------------------------------------------

// Processor_1000_RegisterServer_CoreToOther

// optional int32 NewServerID = 1;
inline bool Processor_1000_RegisterServer_CoreToOther::has_newserverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1000_RegisterServer_CoreToOther::set_has_newserverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1000_RegisterServer_CoreToOther::clear_has_newserverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1000_RegisterServer_CoreToOther::clear_newserverid() {
  newserverid_ = 0;
  clear_has_newserverid();
}
inline ::google_public::protobuf::int32 Processor_1000_RegisterServer_CoreToOther::newserverid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1000_RegisterServer_CoreToOther.NewServerID)
  return newserverid_;
}
inline void Processor_1000_RegisterServer_CoreToOther::set_newserverid(::google_public::protobuf::int32 value) {
  set_has_newserverid();
  newserverid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1000_RegisterServer_CoreToOther.NewServerID)
}

// -------------------------------------------------------------------

// ServerInfo

// optional string IP = 1;
inline bool ServerInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerInfo::clear_ip() {
  if (ip_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& ServerInfo::ip() const {
  // @@protoc_insertion_point(field_get:msg.ServerInfo.IP)
  return *ip_;
}
inline void ServerInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ServerInfo.IP)
}
inline void ServerInfo::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ServerInfo.IP)
}
inline void ServerInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ServerInfo.IP)
}
inline ::std::string* ServerInfo::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ServerInfo.IP)
  return ip_;
}
inline ::std::string* ServerInfo::release_ip() {
  clear_has_ip();
  if (ip_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerInfo::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ServerInfo.IP)
}

// optional int32 Port = 2;
inline bool ServerInfo::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerInfo::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerInfo::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerInfo::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google_public::protobuf::int32 ServerInfo::port() const {
  // @@protoc_insertion_point(field_get:msg.ServerInfo.Port)
  return port_;
}
inline void ServerInfo::set_port(::google_public::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:msg.ServerInfo.Port)
}

// optional string IPv6 = 3;
inline bool ServerInfo::has_ipv6() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerInfo::set_has_ipv6() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerInfo::clear_has_ipv6() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerInfo::clear_ipv6() {
  if (ipv6_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipv6_->clear();
  }
  clear_has_ipv6();
}
inline const ::std::string& ServerInfo::ipv6() const {
  // @@protoc_insertion_point(field_get:msg.ServerInfo.IPv6)
  return *ipv6_;
}
inline void ServerInfo::set_ipv6(const ::std::string& value) {
  set_has_ipv6();
  if (ipv6_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipv6_ = new ::std::string;
  }
  ipv6_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ServerInfo.IPv6)
}
inline void ServerInfo::set_ipv6(const char* value) {
  set_has_ipv6();
  if (ipv6_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipv6_ = new ::std::string;
  }
  ipv6_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ServerInfo.IPv6)
}
inline void ServerInfo::set_ipv6(const char* value, size_t size) {
  set_has_ipv6();
  if (ipv6_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipv6_ = new ::std::string;
  }
  ipv6_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ServerInfo.IPv6)
}
inline ::std::string* ServerInfo::mutable_ipv6() {
  set_has_ipv6();
  if (ipv6_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipv6_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ServerInfo.IPv6)
  return ipv6_;
}
inline ::std::string* ServerInfo::release_ipv6() {
  clear_has_ipv6();
  if (ipv6_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ipv6_;
    ipv6_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerInfo::set_allocated_ipv6(::std::string* ipv6) {
  if (ipv6_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ipv6_;
  }
  if (ipv6) {
    set_has_ipv6();
    ipv6_ = ipv6;
  } else {
    clear_has_ipv6();
    ipv6_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ServerInfo.IPv6)
}

// -------------------------------------------------------------------

// ServerInfos

// repeated .msg.ServerInfo ServerInfo = 1;
inline int ServerInfos::serverinfo_size() const {
  return serverinfo_.size();
}
inline void ServerInfos::clear_serverinfo() {
  serverinfo_.Clear();
}
inline const ::msg::ServerInfo& ServerInfos::serverinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.ServerInfos.ServerInfo)
  return serverinfo_.Get(index);
}
inline ::msg::ServerInfo* ServerInfos::mutable_serverinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.ServerInfos.ServerInfo)
  return serverinfo_.Mutable(index);
}
inline ::msg::ServerInfo* ServerInfos::add_serverinfo() {
  // @@protoc_insertion_point(field_add:msg.ServerInfos.ServerInfo)
  return serverinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ServerInfo >&
ServerInfos::serverinfo() const {
  // @@protoc_insertion_point(field_list:msg.ServerInfos.ServerInfo)
  return serverinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::ServerInfo >*
ServerInfos::mutable_serverinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.ServerInfos.ServerInfo)
  return &serverinfo_;
}

// -------------------------------------------------------------------

// Processor_HTMLRegister

// optional .msg.UserLoginInfo LoginInfo = 1;
inline bool Processor_HTMLRegister::has_logininfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_HTMLRegister::set_has_logininfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_HTMLRegister::clear_has_logininfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_HTMLRegister::clear_logininfo() {
  if (logininfo_ != NULL) logininfo_->::msg::UserLoginInfo::Clear();
  clear_has_logininfo();
}
inline const ::msg::UserLoginInfo& Processor_HTMLRegister::logininfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_HTMLRegister.LoginInfo)
  return logininfo_ != NULL ? *logininfo_ : *default_instance_->logininfo_;
}
inline ::msg::UserLoginInfo* Processor_HTMLRegister::mutable_logininfo() {
  set_has_logininfo();
  if (logininfo_ == NULL) logininfo_ = new ::msg::UserLoginInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_HTMLRegister.LoginInfo)
  return logininfo_;
}
inline ::msg::UserLoginInfo* Processor_HTMLRegister::release_logininfo() {
  clear_has_logininfo();
  ::msg::UserLoginInfo* temp = logininfo_;
  logininfo_ = NULL;
  return temp;
}
inline void Processor_HTMLRegister::set_allocated_logininfo(::msg::UserLoginInfo* logininfo) {
  delete logininfo_;
  logininfo_ = logininfo;
  if (logininfo) {
    set_has_logininfo();
  } else {
    clear_has_logininfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_HTMLRegister.LoginInfo)
}

// optional int32 RefereeUserID = 2;
inline bool Processor_HTMLRegister::has_refereeuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_HTMLRegister::set_has_refereeuserid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_HTMLRegister::clear_has_refereeuserid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_HTMLRegister::clear_refereeuserid() {
  refereeuserid_ = 0;
  clear_has_refereeuserid();
}
inline ::google_public::protobuf::int32 Processor_HTMLRegister::refereeuserid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_HTMLRegister.RefereeUserID)
  return refereeuserid_;
}
inline void Processor_HTMLRegister::set_refereeuserid(::google_public::protobuf::int32 value) {
  set_has_refereeuserid();
  refereeuserid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_HTMLRegister.RefereeUserID)
}

// optional int32 RefereeGroupID = 3;
inline bool Processor_HTMLRegister::has_refereegroupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_HTMLRegister::set_has_refereegroupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_HTMLRegister::clear_has_refereegroupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_HTMLRegister::clear_refereegroupid() {
  refereegroupid_ = 0;
  clear_has_refereegroupid();
}
inline ::google_public::protobuf::int32 Processor_HTMLRegister::refereegroupid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_HTMLRegister.RefereeGroupID)
  return refereegroupid_;
}
inline void Processor_HTMLRegister::set_refereegroupid(::google_public::protobuf::int32 value) {
  set_has_refereegroupid();
  refereegroupid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_HTMLRegister.RefereeGroupID)
}

// optional int32 RefereeRoomID = 4;
inline bool Processor_HTMLRegister::has_refereeroomid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_HTMLRegister::set_has_refereeroomid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_HTMLRegister::clear_has_refereeroomid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_HTMLRegister::clear_refereeroomid() {
  refereeroomid_ = 0;
  clear_has_refereeroomid();
}
inline ::google_public::protobuf::int32 Processor_HTMLRegister::refereeroomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_HTMLRegister.RefereeRoomID)
  return refereeroomid_;
}
inline void Processor_HTMLRegister::set_refereeroomid(::google_public::protobuf::int32 value) {
  set_has_refereeroomid();
  refereeroomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_HTMLRegister.RefereeRoomID)
}

// optional string PhoneNumber = 5;
inline bool Processor_HTMLRegister::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Processor_HTMLRegister::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Processor_HTMLRegister::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Processor_HTMLRegister::clear_phonenumber() {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_->clear();
  }
  clear_has_phonenumber();
}
inline const ::std::string& Processor_HTMLRegister::phonenumber() const {
  // @@protoc_insertion_point(field_get:msg.Processor_HTMLRegister.PhoneNumber)
  return *phonenumber_;
}
inline void Processor_HTMLRegister::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_HTMLRegister.PhoneNumber)
}
inline void Processor_HTMLRegister::set_phonenumber(const char* value) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_HTMLRegister.PhoneNumber)
}
inline void Processor_HTMLRegister::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  phonenumber_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_HTMLRegister.PhoneNumber)
}
inline ::std::string* Processor_HTMLRegister::mutable_phonenumber() {
  set_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenumber_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_HTMLRegister.PhoneNumber)
  return phonenumber_;
}
inline ::std::string* Processor_HTMLRegister::release_phonenumber() {
  clear_has_phonenumber();
  if (phonenumber_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phonenumber_;
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_HTMLRegister::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonenumber_;
  }
  if (phonenumber) {
    set_has_phonenumber();
    phonenumber_ = phonenumber;
  } else {
    clear_has_phonenumber();
    phonenumber_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_HTMLRegister.PhoneNumber)
}

// optional string Verification = 6;
inline bool Processor_HTMLRegister::has_verification() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Processor_HTMLRegister::set_has_verification() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Processor_HTMLRegister::clear_has_verification() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Processor_HTMLRegister::clear_verification() {
  if (verification_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_->clear();
  }
  clear_has_verification();
}
inline const ::std::string& Processor_HTMLRegister::verification() const {
  // @@protoc_insertion_point(field_get:msg.Processor_HTMLRegister.Verification)
  return *verification_;
}
inline void Processor_HTMLRegister::set_verification(const ::std::string& value) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_HTMLRegister.Verification)
}
inline void Processor_HTMLRegister::set_verification(const char* value) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_HTMLRegister.Verification)
}
inline void Processor_HTMLRegister::set_verification(const char* value, size_t size) {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  verification_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_HTMLRegister.Verification)
}
inline ::std::string* Processor_HTMLRegister::mutable_verification() {
  set_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verification_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_HTMLRegister.Verification)
  return verification_;
}
inline ::std::string* Processor_HTMLRegister::release_verification() {
  clear_has_verification();
  if (verification_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = verification_;
    verification_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_HTMLRegister::set_allocated_verification(::std::string* verification) {
  if (verification_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete verification_;
  }
  if (verification) {
    set_has_verification();
    verification_ = verification;
  } else {
    clear_has_verification();
    verification_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_HTMLRegister.Verification)
}

// -------------------------------------------------------------------

// Processor_HTMLRegisterEnterRoom

// optional int32 UserID = 1;
inline bool Processor_HTMLRegisterEnterRoom::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_HTMLRegisterEnterRoom::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_HTMLRegisterEnterRoom::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_HTMLRegisterEnterRoom::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_HTMLRegisterEnterRoom::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_HTMLRegisterEnterRoom.UserID)
  return userid_;
}
inline void Processor_HTMLRegisterEnterRoom::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_HTMLRegisterEnterRoom.UserID)
}

// optional int32 RoomID = 2;
inline bool Processor_HTMLRegisterEnterRoom::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_HTMLRegisterEnterRoom::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_HTMLRegisterEnterRoom::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_HTMLRegisterEnterRoom::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_HTMLRegisterEnterRoom::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_HTMLRegisterEnterRoom.RoomID)
  return roomid_;
}
inline void Processor_HTMLRegisterEnterRoom::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_HTMLRegisterEnterRoom.RoomID)
}

// -------------------------------------------------------------------

// Processor_1003_ChangeUserInfo_ResToCore

// optional int32 UserID = 1;
inline bool Processor_1003_ChangeUserInfo_ResToCore::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1003_ChangeUserInfo_ResToCore::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1003_ChangeUserInfo_ResToCore::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1003_ChangeUserInfo_ResToCore::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_1003_ChangeUserInfo_ResToCore::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1003_ChangeUserInfo_ResToCore.UserID)
  return userid_;
}
inline void Processor_1003_ChangeUserInfo_ResToCore::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1003_ChangeUserInfo_ResToCore.UserID)
}

// -------------------------------------------------------------------

// Processor_1004_ChangeUserInfo_CoreToOther

// optional int32 UserID = 1;
inline bool Processor_1004_ChangeUserInfo_CoreToOther::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1004_ChangeUserInfo_CoreToOther::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1004_ChangeUserInfo_CoreToOther::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1004_ChangeUserInfo_CoreToOther::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 Processor_1004_ChangeUserInfo_CoreToOther::userid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1004_ChangeUserInfo_CoreToOther.UserID)
  return userid_;
}
inline void Processor_1004_ChangeUserInfo_CoreToOther::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1004_ChangeUserInfo_CoreToOther.UserID)
}

// -------------------------------------------------------------------

// Processor_1005_OnlineInfo_OtherToCore

// optional int32 OnlineCount = 1;
inline bool Processor_1005_OnlineInfo_OtherToCore::has_onlinecount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1005_OnlineInfo_OtherToCore::set_has_onlinecount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1005_OnlineInfo_OtherToCore::clear_has_onlinecount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1005_OnlineInfo_OtherToCore::clear_onlinecount() {
  onlinecount_ = 0;
  clear_has_onlinecount();
}
inline ::google_public::protobuf::int32 Processor_1005_OnlineInfo_OtherToCore::onlinecount() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1005_OnlineInfo_OtherToCore.OnlineCount)
  return onlinecount_;
}
inline void Processor_1005_OnlineInfo_OtherToCore::set_onlinecount(::google_public::protobuf::int32 value) {
  set_has_onlinecount();
  onlinecount_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1005_OnlineInfo_OtherToCore.OnlineCount)
}

// repeated int32 ID = 2;
inline int Processor_1005_OnlineInfo_OtherToCore::id_size() const {
  return id_.size();
}
inline void Processor_1005_OnlineInfo_OtherToCore::clear_id() {
  id_.Clear();
}
inline ::google_public::protobuf::int32 Processor_1005_OnlineInfo_OtherToCore::id(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_1005_OnlineInfo_OtherToCore.ID)
  return id_.Get(index);
}
inline void Processor_1005_OnlineInfo_OtherToCore::set_id(int index, ::google_public::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.Processor_1005_OnlineInfo_OtherToCore.ID)
}
inline void Processor_1005_OnlineInfo_OtherToCore::add_id(::google_public::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:msg.Processor_1005_OnlineInfo_OtherToCore.ID)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
Processor_1005_OnlineInfo_OtherToCore::id() const {
  // @@protoc_insertion_point(field_list:msg.Processor_1005_OnlineInfo_OtherToCore.ID)
  return id_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
Processor_1005_OnlineInfo_OtherToCore::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_1005_OnlineInfo_OtherToCore.ID)
  return &id_;
}

// -------------------------------------------------------------------

// ServerRoomInfo

// optional int32 RoomID = 1;
inline bool ServerRoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerRoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerRoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerRoomInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 ServerRoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:msg.ServerRoomInfo.RoomID)
  return roomid_;
}
inline void ServerRoomInfo::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.ServerRoomInfo.RoomID)
}

// optional int32 PlayerCount = 2;
inline bool ServerRoomInfo::has_playercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerRoomInfo::set_has_playercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerRoomInfo::clear_has_playercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerRoomInfo::clear_playercount() {
  playercount_ = 0;
  clear_has_playercount();
}
inline ::google_public::protobuf::int32 ServerRoomInfo::playercount() const {
  // @@protoc_insertion_point(field_get:msg.ServerRoomInfo.PlayerCount)
  return playercount_;
}
inline void ServerRoomInfo::set_playercount(::google_public::protobuf::int32 value) {
  set_has_playercount();
  playercount_ = value;
  // @@protoc_insertion_point(field_set:msg.ServerRoomInfo.PlayerCount)
}

// optional .msg.RoomStatus Status = 3;
inline bool ServerRoomInfo::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerRoomInfo::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerRoomInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerRoomInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::msg::RoomStatus ServerRoomInfo::status() const {
  // @@protoc_insertion_point(field_get:msg.ServerRoomInfo.Status)
  return static_cast< ::msg::RoomStatus >(status_);
}
inline void ServerRoomInfo::set_status(::msg::RoomStatus value) {
  assert(::msg::RoomStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg.ServerRoomInfo.Status)
}

// optional string note = 4;
inline bool ServerRoomInfo::has_note() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerRoomInfo::set_has_note() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerRoomInfo::clear_has_note() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerRoomInfo::clear_note() {
  if (note_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_->clear();
  }
  clear_has_note();
}
inline const ::std::string& ServerRoomInfo::note() const {
  // @@protoc_insertion_point(field_get:msg.ServerRoomInfo.note)
  return *note_;
}
inline void ServerRoomInfo::set_note(const ::std::string& value) {
  set_has_note();
  if (note_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  note_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ServerRoomInfo.note)
}
inline void ServerRoomInfo::set_note(const char* value) {
  set_has_note();
  if (note_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  note_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ServerRoomInfo.note)
}
inline void ServerRoomInfo::set_note(const char* value, size_t size) {
  set_has_note();
  if (note_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  note_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ServerRoomInfo.note)
}
inline ::std::string* ServerRoomInfo::mutable_note() {
  set_has_note();
  if (note_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    note_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ServerRoomInfo.note)
  return note_;
}
inline ::std::string* ServerRoomInfo::release_note() {
  clear_has_note();
  if (note_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = note_;
    note_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerRoomInfo::set_allocated_note(::std::string* note) {
  if (note_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete note_;
  }
  if (note) {
    set_has_note();
    note_ = note;
  } else {
    clear_has_note();
    note_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ServerRoomInfo.note)
}

// -------------------------------------------------------------------

// Processor_1006_RoomInfo

// repeated .msg.ServerRoomInfo RoomInfo = 1;
inline int Processor_1006_RoomInfo::roominfo_size() const {
  return roominfo_.size();
}
inline void Processor_1006_RoomInfo::clear_roominfo() {
  roominfo_.Clear();
}
inline const ::msg::ServerRoomInfo& Processor_1006_RoomInfo::roominfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_1006_RoomInfo.RoomInfo)
  return roominfo_.Get(index);
}
inline ::msg::ServerRoomInfo* Processor_1006_RoomInfo::mutable_roominfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_1006_RoomInfo.RoomInfo)
  return roominfo_.Mutable(index);
}
inline ::msg::ServerRoomInfo* Processor_1006_RoomInfo::add_roominfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_1006_RoomInfo.RoomInfo)
  return roominfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ServerRoomInfo >&
Processor_1006_RoomInfo::roominfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_1006_RoomInfo.RoomInfo)
  return roominfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::ServerRoomInfo >*
Processor_1006_RoomInfo::mutable_roominfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_1006_RoomInfo.RoomInfo)
  return &roominfo_;
}

// optional .msg.ServerInfo RoomServerInfo = 2;
inline bool Processor_1006_RoomInfo::has_roomserverinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_1006_RoomInfo::set_has_roomserverinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_1006_RoomInfo::clear_has_roomserverinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_1006_RoomInfo::clear_roomserverinfo() {
  if (roomserverinfo_ != NULL) roomserverinfo_->::msg::ServerInfo::Clear();
  clear_has_roomserverinfo();
}
inline const ::msg::ServerInfo& Processor_1006_RoomInfo::roomserverinfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1006_RoomInfo.RoomServerInfo)
  return roomserverinfo_ != NULL ? *roomserverinfo_ : *default_instance_->roomserverinfo_;
}
inline ::msg::ServerInfo* Processor_1006_RoomInfo::mutable_roomserverinfo() {
  set_has_roomserverinfo();
  if (roomserverinfo_ == NULL) roomserverinfo_ = new ::msg::ServerInfo;
  // @@protoc_insertion_point(field_mutable:msg.Processor_1006_RoomInfo.RoomServerInfo)
  return roomserverinfo_;
}
inline ::msg::ServerInfo* Processor_1006_RoomInfo::release_roomserverinfo() {
  clear_has_roomserverinfo();
  ::msg::ServerInfo* temp = roomserverinfo_;
  roomserverinfo_ = NULL;
  return temp;
}
inline void Processor_1006_RoomInfo::set_allocated_roomserverinfo(::msg::ServerInfo* roomserverinfo) {
  delete roomserverinfo_;
  roomserverinfo_ = roomserverinfo;
  if (roomserverinfo) {
    set_has_roomserverinfo();
  } else {
    clear_has_roomserverinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_1006_RoomInfo.RoomServerInfo)
}

// -------------------------------------------------------------------

// Processor_1009_CreateRoom_ResToCore

// optional int32 RoomID = 1;
inline bool Processor_1009_CreateRoom_ResToCore::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1009_CreateRoom_ResToCore::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1009_CreateRoom_ResToCore::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1009_CreateRoom_ResToCore::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_1009_CreateRoom_ResToCore::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1009_CreateRoom_ResToCore.RoomID)
  return roomid_;
}
inline void Processor_1009_CreateRoom_ResToCore::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1009_CreateRoom_ResToCore.RoomID)
}

// -------------------------------------------------------------------

// Processor_1010_CreateRoom_CoreToRoom

// optional int32 RoomID = 1;
inline bool Processor_1010_CreateRoom_CoreToRoom::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1010_CreateRoom_CoreToRoom::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1010_CreateRoom_CoreToRoom::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1010_CreateRoom_CoreToRoom::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 Processor_1010_CreateRoom_CoreToRoom::roomid() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1010_CreateRoom_CoreToRoom.RoomID)
  return roomid_;
}
inline void Processor_1010_CreateRoom_CoreToRoom::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1010_CreateRoom_CoreToRoom.RoomID)
}

// -------------------------------------------------------------------

// Processor_1011_ChangeServerProp

// optional .msg.Property prop = 1;
inline bool Processor_1011_ChangeServerProp::has_prop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1011_ChangeServerProp::set_has_prop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1011_ChangeServerProp::clear_has_prop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1011_ChangeServerProp::clear_prop() {
  if (prop_ != NULL) prop_->::msg::Property::Clear();
  clear_has_prop();
}
inline const ::msg::Property& Processor_1011_ChangeServerProp::prop() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1011_ChangeServerProp.prop)
  return prop_ != NULL ? *prop_ : *default_instance_->prop_;
}
inline ::msg::Property* Processor_1011_ChangeServerProp::mutable_prop() {
  set_has_prop();
  if (prop_ == NULL) prop_ = new ::msg::Property;
  // @@protoc_insertion_point(field_mutable:msg.Processor_1011_ChangeServerProp.prop)
  return prop_;
}
inline ::msg::Property* Processor_1011_ChangeServerProp::release_prop() {
  clear_has_prop();
  ::msg::Property* temp = prop_;
  prop_ = NULL;
  return temp;
}
inline void Processor_1011_ChangeServerProp::set_allocated_prop(::msg::Property* prop) {
  delete prop_;
  prop_ = prop;
  if (prop) {
    set_has_prop();
  } else {
    clear_has_prop();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_1011_ChangeServerProp.prop)
}

// -------------------------------------------------------------------

// Parameter

// optional string ParameterName = 1;
inline bool Parameter::has_parametername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Parameter::set_has_parametername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Parameter::clear_has_parametername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Parameter::clear_parametername() {
  if (parametername_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametername_->clear();
  }
  clear_has_parametername();
}
inline const ::std::string& Parameter::parametername() const {
  // @@protoc_insertion_point(field_get:msg.Parameter.ParameterName)
  return *parametername_;
}
inline void Parameter::set_parametername(const ::std::string& value) {
  set_has_parametername();
  if (parametername_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametername_ = new ::std::string;
  }
  parametername_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Parameter.ParameterName)
}
inline void Parameter::set_parametername(const char* value) {
  set_has_parametername();
  if (parametername_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametername_ = new ::std::string;
  }
  parametername_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Parameter.ParameterName)
}
inline void Parameter::set_parametername(const char* value, size_t size) {
  set_has_parametername();
  if (parametername_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametername_ = new ::std::string;
  }
  parametername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Parameter.ParameterName)
}
inline ::std::string* Parameter::mutable_parametername() {
  set_has_parametername();
  if (parametername_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Parameter.ParameterName)
  return parametername_;
}
inline ::std::string* Parameter::release_parametername() {
  clear_has_parametername();
  if (parametername_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = parametername_;
    parametername_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Parameter::set_allocated_parametername(::std::string* parametername) {
  if (parametername_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete parametername_;
  }
  if (parametername) {
    set_has_parametername();
    parametername_ = parametername;
  } else {
    clear_has_parametername();
    parametername_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Parameter.ParameterName)
}

// optional string ParameterValue = 2;
inline bool Parameter::has_parametervalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Parameter::set_has_parametervalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Parameter::clear_has_parametervalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Parameter::clear_parametervalue() {
  if (parametervalue_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametervalue_->clear();
  }
  clear_has_parametervalue();
}
inline const ::std::string& Parameter::parametervalue() const {
  // @@protoc_insertion_point(field_get:msg.Parameter.ParameterValue)
  return *parametervalue_;
}
inline void Parameter::set_parametervalue(const ::std::string& value) {
  set_has_parametervalue();
  if (parametervalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametervalue_ = new ::std::string;
  }
  parametervalue_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Parameter.ParameterValue)
}
inline void Parameter::set_parametervalue(const char* value) {
  set_has_parametervalue();
  if (parametervalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametervalue_ = new ::std::string;
  }
  parametervalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Parameter.ParameterValue)
}
inline void Parameter::set_parametervalue(const char* value, size_t size) {
  set_has_parametervalue();
  if (parametervalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametervalue_ = new ::std::string;
  }
  parametervalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Parameter.ParameterValue)
}
inline ::std::string* Parameter::mutable_parametervalue() {
  set_has_parametervalue();
  if (parametervalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parametervalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Parameter.ParameterValue)
  return parametervalue_;
}
inline ::std::string* Parameter::release_parametervalue() {
  clear_has_parametervalue();
  if (parametervalue_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = parametervalue_;
    parametervalue_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Parameter::set_allocated_parametervalue(::std::string* parametervalue) {
  if (parametervalue_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete parametervalue_;
  }
  if (parametervalue) {
    set_has_parametervalue();
    parametervalue_ = parametervalue;
  } else {
    clear_has_parametervalue();
    parametervalue_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Parameter.ParameterValue)
}

// -------------------------------------------------------------------

// Processor_1012_WXPayMsg

// repeated .msg.Parameter parameter = 1;
inline int Processor_1012_WXPayMsg::parameter_size() const {
  return parameter_.size();
}
inline void Processor_1012_WXPayMsg::clear_parameter() {
  parameter_.Clear();
}
inline const ::msg::Parameter& Processor_1012_WXPayMsg::parameter(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_1012_WXPayMsg.parameter)
  return parameter_.Get(index);
}
inline ::msg::Parameter* Processor_1012_WXPayMsg::mutable_parameter(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_1012_WXPayMsg.parameter)
  return parameter_.Mutable(index);
}
inline ::msg::Parameter* Processor_1012_WXPayMsg::add_parameter() {
  // @@protoc_insertion_point(field_add:msg.Processor_1012_WXPayMsg.parameter)
  return parameter_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Parameter >&
Processor_1012_WXPayMsg::parameter() const {
  // @@protoc_insertion_point(field_list:msg.Processor_1012_WXPayMsg.parameter)
  return parameter_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::Parameter >*
Processor_1012_WXPayMsg::mutable_parameter() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_1012_WXPayMsg.parameter)
  return &parameter_;
}

// -------------------------------------------------------------------

// Processor_1100_ShutDown_ConsoleToCore

// optional int32 TimeBeforeClose = 1;
inline bool Processor_1100_ShutDown_ConsoleToCore::has_timebeforeclose() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1100_ShutDown_ConsoleToCore::set_has_timebeforeclose() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1100_ShutDown_ConsoleToCore::clear_has_timebeforeclose() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1100_ShutDown_ConsoleToCore::clear_timebeforeclose() {
  timebeforeclose_ = 0;
  clear_has_timebeforeclose();
}
inline ::google_public::protobuf::int32 Processor_1100_ShutDown_ConsoleToCore::timebeforeclose() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1100_ShutDown_ConsoleToCore.TimeBeforeClose)
  return timebeforeclose_;
}
inline void Processor_1100_ShutDown_ConsoleToCore::set_timebeforeclose(::google_public::protobuf::int32 value) {
  set_has_timebeforeclose();
  timebeforeclose_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1100_ShutDown_ConsoleToCore.TimeBeforeClose)
}

// -------------------------------------------------------------------

// Processor_1101_ShutDown_CoreToOther

// optional int32 TimeBeforeClose = 1;
inline bool Processor_1101_ShutDown_CoreToOther::has_timebeforeclose() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1101_ShutDown_CoreToOther::set_has_timebeforeclose() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1101_ShutDown_CoreToOther::clear_has_timebeforeclose() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1101_ShutDown_CoreToOther::clear_timebeforeclose() {
  timebeforeclose_ = 0;
  clear_has_timebeforeclose();
}
inline ::google_public::protobuf::int32 Processor_1101_ShutDown_CoreToOther::timebeforeclose() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1101_ShutDown_CoreToOther.TimeBeforeClose)
  return timebeforeclose_;
}
inline void Processor_1101_ShutDown_CoreToOther::set_timebeforeclose(::google_public::protobuf::int32 value) {
  set_has_timebeforeclose();
  timebeforeclose_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1101_ShutDown_CoreToOther.TimeBeforeClose)
}

// -------------------------------------------------------------------

// Processor_1105_ServerInformation_CoreToConsole

// optional int32 OnlineSize = 1;
inline bool Processor_1105_ServerInformation_CoreToConsole::has_onlinesize() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1105_ServerInformation_CoreToConsole::set_has_onlinesize() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1105_ServerInformation_CoreToConsole::clear_has_onlinesize() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1105_ServerInformation_CoreToConsole::clear_onlinesize() {
  onlinesize_ = 0;
  clear_has_onlinesize();
}
inline ::google_public::protobuf::int32 Processor_1105_ServerInformation_CoreToConsole::onlinesize() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1105_ServerInformation_CoreToConsole.OnlineSize)
  return onlinesize_;
}
inline void Processor_1105_ServerInformation_CoreToConsole::set_onlinesize(::google_public::protobuf::int32 value) {
  set_has_onlinesize();
  onlinesize_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1105_ServerInformation_CoreToConsole.OnlineSize)
}

// optional int32 OpenRoom = 2;
inline bool Processor_1105_ServerInformation_CoreToConsole::has_openroom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Processor_1105_ServerInformation_CoreToConsole::set_has_openroom() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Processor_1105_ServerInformation_CoreToConsole::clear_has_openroom() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Processor_1105_ServerInformation_CoreToConsole::clear_openroom() {
  openroom_ = 0;
  clear_has_openroom();
}
inline ::google_public::protobuf::int32 Processor_1105_ServerInformation_CoreToConsole::openroom() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1105_ServerInformation_CoreToConsole.OpenRoom)
  return openroom_;
}
inline void Processor_1105_ServerInformation_CoreToConsole::set_openroom(::google_public::protobuf::int32 value) {
  set_has_openroom();
  openroom_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1105_ServerInformation_CoreToConsole.OpenRoom)
}

// optional int32 CloseRoom = 3;
inline bool Processor_1105_ServerInformation_CoreToConsole::has_closeroom() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_1105_ServerInformation_CoreToConsole::set_has_closeroom() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_1105_ServerInformation_CoreToConsole::clear_has_closeroom() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_1105_ServerInformation_CoreToConsole::clear_closeroom() {
  closeroom_ = 0;
  clear_has_closeroom();
}
inline ::google_public::protobuf::int32 Processor_1105_ServerInformation_CoreToConsole::closeroom() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1105_ServerInformation_CoreToConsole.CloseRoom)
  return closeroom_;
}
inline void Processor_1105_ServerInformation_CoreToConsole::set_closeroom(::google_public::protobuf::int32 value) {
  set_has_closeroom();
  closeroom_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1105_ServerInformation_CoreToConsole.CloseRoom)
}

// -------------------------------------------------------------------

// Processor_1107_SERVER_RESET_TOURMENT_CREDIT

// optional int32 Credit = 1;
inline bool Processor_1107_SERVER_RESET_TOURMENT_CREDIT::has_credit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1107_SERVER_RESET_TOURMENT_CREDIT::set_has_credit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1107_SERVER_RESET_TOURMENT_CREDIT::clear_has_credit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1107_SERVER_RESET_TOURMENT_CREDIT::clear_credit() {
  credit_ = 0;
  clear_has_credit();
}
inline ::google_public::protobuf::int32 Processor_1107_SERVER_RESET_TOURMENT_CREDIT::credit() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1107_SERVER_RESET_TOURMENT_CREDIT.Credit)
  return credit_;
}
inline void Processor_1107_SERVER_RESET_TOURMENT_CREDIT::set_credit(::google_public::protobuf::int32 value) {
  set_has_credit();
  credit_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1107_SERVER_RESET_TOURMENT_CREDIT.Credit)
}

// -------------------------------------------------------------------

// Processor_1108_SEARCH_CREDIT_RANK_UP

// optional int32 ranknum = 1;
inline bool Processor_1108_SEARCH_CREDIT_RANK_UP::has_ranknum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1108_SEARCH_CREDIT_RANK_UP::set_has_ranknum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1108_SEARCH_CREDIT_RANK_UP::clear_has_ranknum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1108_SEARCH_CREDIT_RANK_UP::clear_ranknum() {
  ranknum_ = 0;
  clear_has_ranknum();
}
inline ::google_public::protobuf::int32 Processor_1108_SEARCH_CREDIT_RANK_UP::ranknum() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1108_SEARCH_CREDIT_RANK_UP.ranknum)
  return ranknum_;
}
inline void Processor_1108_SEARCH_CREDIT_RANK_UP::set_ranknum(::google_public::protobuf::int32 value) {
  set_has_ranknum();
  ranknum_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1108_SEARCH_CREDIT_RANK_UP.ranknum)
}

// -------------------------------------------------------------------

// Processor_1108_SEARCH_CREDIT_RANK_DOWN

// repeated .msg.UserTourCreditInfo UserTourCreditInfo = 1;
inline int Processor_1108_SEARCH_CREDIT_RANK_DOWN::usertourcreditinfo_size() const {
  return usertourcreditinfo_.size();
}
inline void Processor_1108_SEARCH_CREDIT_RANK_DOWN::clear_usertourcreditinfo() {
  usertourcreditinfo_.Clear();
}
inline const ::msg::UserTourCreditInfo& Processor_1108_SEARCH_CREDIT_RANK_DOWN::usertourcreditinfo(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_1108_SEARCH_CREDIT_RANK_DOWN.UserTourCreditInfo)
  return usertourcreditinfo_.Get(index);
}
inline ::msg::UserTourCreditInfo* Processor_1108_SEARCH_CREDIT_RANK_DOWN::mutable_usertourcreditinfo(int index) {
  // @@protoc_insertion_point(field_mutable:msg.Processor_1108_SEARCH_CREDIT_RANK_DOWN.UserTourCreditInfo)
  return usertourcreditinfo_.Mutable(index);
}
inline ::msg::UserTourCreditInfo* Processor_1108_SEARCH_CREDIT_RANK_DOWN::add_usertourcreditinfo() {
  // @@protoc_insertion_point(field_add:msg.Processor_1108_SEARCH_CREDIT_RANK_DOWN.UserTourCreditInfo)
  return usertourcreditinfo_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::UserTourCreditInfo >&
Processor_1108_SEARCH_CREDIT_RANK_DOWN::usertourcreditinfo() const {
  // @@protoc_insertion_point(field_list:msg.Processor_1108_SEARCH_CREDIT_RANK_DOWN.UserTourCreditInfo)
  return usertourcreditinfo_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::UserTourCreditInfo >*
Processor_1108_SEARCH_CREDIT_RANK_DOWN::mutable_usertourcreditinfo() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_1108_SEARCH_CREDIT_RANK_DOWN.UserTourCreditInfo)
  return &usertourcreditinfo_;
}

// -------------------------------------------------------------------

// Processor_1109_PUBLISH_SYS_MESSAGE

// optional string SYSMessage = 1;
inline bool Processor_1109_PUBLISH_SYS_MESSAGE::has_sysmessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Processor_1109_PUBLISH_SYS_MESSAGE::set_has_sysmessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Processor_1109_PUBLISH_SYS_MESSAGE::clear_has_sysmessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Processor_1109_PUBLISH_SYS_MESSAGE::clear_sysmessage() {
  if (sysmessage_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sysmessage_->clear();
  }
  clear_has_sysmessage();
}
inline const ::std::string& Processor_1109_PUBLISH_SYS_MESSAGE::sysmessage() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1109_PUBLISH_SYS_MESSAGE.SYSMessage)
  return *sysmessage_;
}
inline void Processor_1109_PUBLISH_SYS_MESSAGE::set_sysmessage(const ::std::string& value) {
  set_has_sysmessage();
  if (sysmessage_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sysmessage_ = new ::std::string;
  }
  sysmessage_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_1109_PUBLISH_SYS_MESSAGE.SYSMessage)
}
inline void Processor_1109_PUBLISH_SYS_MESSAGE::set_sysmessage(const char* value) {
  set_has_sysmessage();
  if (sysmessage_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sysmessage_ = new ::std::string;
  }
  sysmessage_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_1109_PUBLISH_SYS_MESSAGE.SYSMessage)
}
inline void Processor_1109_PUBLISH_SYS_MESSAGE::set_sysmessage(const char* value, size_t size) {
  set_has_sysmessage();
  if (sysmessage_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sysmessage_ = new ::std::string;
  }
  sysmessage_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_1109_PUBLISH_SYS_MESSAGE.SYSMessage)
}
inline ::std::string* Processor_1109_PUBLISH_SYS_MESSAGE::mutable_sysmessage() {
  set_has_sysmessage();
  if (sysmessage_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sysmessage_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_1109_PUBLISH_SYS_MESSAGE.SYSMessage)
  return sysmessage_;
}
inline ::std::string* Processor_1109_PUBLISH_SYS_MESSAGE::release_sysmessage() {
  clear_has_sysmessage();
  if (sysmessage_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sysmessage_;
    sysmessage_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_1109_PUBLISH_SYS_MESSAGE::set_allocated_sysmessage(::std::string* sysmessage) {
  if (sysmessage_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sysmessage_;
  }
  if (sysmessage) {
    set_has_sysmessage();
    sysmessage_ = sysmessage;
  } else {
    clear_has_sysmessage();
    sysmessage_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_1109_PUBLISH_SYS_MESSAGE.SYSMessage)
}

// -------------------------------------------------------------------

// Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE

// repeated int32 groupid = 1;
inline int Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::groupid_size() const {
  return groupid_.size();
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::clear_groupid() {
  groupid_.Clear();
}
inline ::google_public::protobuf::int32 Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::groupid(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.groupid)
  return groupid_.Get(index);
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::set_groupid(int index, ::google_public::protobuf::int32 value) {
  groupid_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.groupid)
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::add_groupid(::google_public::protobuf::int32 value) {
  groupid_.Add(value);
  // @@protoc_insertion_point(field_add:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.groupid)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::groupid() const {
  // @@protoc_insertion_point(field_list:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.groupid)
  return groupid_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::mutable_groupid() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.groupid)
  return &groupid_;
}

// repeated int32 userid = 2;
inline int Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::userid_size() const {
  return userid_.size();
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::clear_userid() {
  userid_.Clear();
}
inline ::google_public::protobuf::int32 Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::userid(int index) const {
  // @@protoc_insertion_point(field_get:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.userid)
  return userid_.Get(index);
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::set_userid(int index, ::google_public::protobuf::int32 value) {
  userid_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.userid)
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::add_userid(::google_public::protobuf::int32 value) {
  userid_.Add(value);
  // @@protoc_insertion_point(field_add:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.userid)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::userid() const {
  // @@protoc_insertion_point(field_list:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.userid)
  return userid_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.userid)
  return &userid_;
}

// optional string msginfo = 3;
inline bool Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::has_msginfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::set_has_msginfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::clear_has_msginfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::clear_msginfo() {
  if (msginfo_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msginfo_->clear();
  }
  clear_has_msginfo();
}
inline const ::std::string& Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::msginfo() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.msginfo)
  return *msginfo_;
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::set_msginfo(const ::std::string& value) {
  set_has_msginfo();
  if (msginfo_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msginfo_ = new ::std::string;
  }
  msginfo_->assign(value);
  // @@protoc_insertion_point(field_set:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.msginfo)
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::set_msginfo(const char* value) {
  set_has_msginfo();
  if (msginfo_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msginfo_ = new ::std::string;
  }
  msginfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.msginfo)
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::set_msginfo(const char* value, size_t size) {
  set_has_msginfo();
  if (msginfo_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msginfo_ = new ::std::string;
  }
  msginfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.msginfo)
}
inline ::std::string* Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::mutable_msginfo() {
  set_has_msginfo();
  if (msginfo_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msginfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.msginfo)
  return msginfo_;
}
inline ::std::string* Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::release_msginfo() {
  clear_has_msginfo();
  if (msginfo_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msginfo_;
    msginfo_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::set_allocated_msginfo(::std::string* msginfo) {
  if (msginfo_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msginfo_;
  }
  if (msginfo) {
    set_has_msginfo();
    msginfo_ = msginfo;
  } else {
    clear_has_msginfo();
    msginfo_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.msginfo)
}

// optional int32 num = 4;
inline bool Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google_public::protobuf::int32 Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::num() const {
  // @@protoc_insertion_point(field_get:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.num)
  return num_;
}
inline void Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE::set_num(::google_public::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:msg.Processor_1110_PUBLISH_CONSOLE_SYS_MESSAGE.num)
}

// -------------------------------------------------------------------

// UserTourCreditInfo

// optional .msg.UserDetailInfo userinfo = 1;
inline bool UserTourCreditInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserTourCreditInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserTourCreditInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserTourCreditInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::msg::UserDetailInfo::Clear();
  clear_has_userinfo();
}
inline const ::msg::UserDetailInfo& UserTourCreditInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:msg.UserTourCreditInfo.userinfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::msg::UserDetailInfo* UserTourCreditInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::msg::UserDetailInfo;
  // @@protoc_insertion_point(field_mutable:msg.UserTourCreditInfo.userinfo)
  return userinfo_;
}
inline ::msg::UserDetailInfo* UserTourCreditInfo::release_userinfo() {
  clear_has_userinfo();
  ::msg::UserDetailInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void UserTourCreditInfo::set_allocated_userinfo(::msg::UserDetailInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.UserTourCreditInfo.userinfo)
}

// optional int32 rank = 2;
inline bool UserTourCreditInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserTourCreditInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserTourCreditInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserTourCreditInfo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google_public::protobuf::int32 UserTourCreditInfo::rank() const {
  // @@protoc_insertion_point(field_get:msg.UserTourCreditInfo.rank)
  return rank_;
}
inline void UserTourCreditInfo::set_rank(::google_public::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:msg.UserTourCreditInfo.rank)
}

// optional int32 Credit = 3;
inline bool UserTourCreditInfo::has_credit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserTourCreditInfo::set_has_credit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserTourCreditInfo::clear_has_credit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserTourCreditInfo::clear_credit() {
  credit_ = 0;
  clear_has_credit();
}
inline ::google_public::protobuf::int32 UserTourCreditInfo::credit() const {
  // @@protoc_insertion_point(field_get:msg.UserTourCreditInfo.Credit)
  return credit_;
}
inline void UserTourCreditInfo::set_credit(::google_public::protobuf::int32 value) {
  set_has_credit();
  credit_ = value;
  // @@protoc_insertion_point(field_set:msg.UserTourCreditInfo.Credit)
}

// -------------------------------------------------------------------

// ChatMessages

// repeated .msg.ChatMessage Message = 1;
inline int ChatMessages::message_size() const {
  return message_.size();
}
inline void ChatMessages::clear_message() {
  message_.Clear();
}
inline const ::msg::ChatMessage& ChatMessages::message(int index) const {
  // @@protoc_insertion_point(field_get:msg.ChatMessages.Message)
  return message_.Get(index);
}
inline ::msg::ChatMessage* ChatMessages::mutable_message(int index) {
  // @@protoc_insertion_point(field_mutable:msg.ChatMessages.Message)
  return message_.Mutable(index);
}
inline ::msg::ChatMessage* ChatMessages::add_message() {
  // @@protoc_insertion_point(field_add:msg.ChatMessages.Message)
  return message_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage >&
ChatMessages::message() const {
  // @@protoc_insertion_point(field_list:msg.ChatMessages.Message)
  return message_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessage >*
ChatMessages::mutable_message() {
  // @@protoc_insertion_point(field_mutable_list:msg.ChatMessages.Message)
  return &message_;
}

// optional int32 ID = 2;
inline bool ChatMessages::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatMessages::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatMessages::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatMessages::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google_public::protobuf::int32 ChatMessages::id() const {
  // @@protoc_insertion_point(field_get:msg.ChatMessages.ID)
  return id_;
}
inline void ChatMessages::set_id(::google_public::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.ChatMessages.ID)
}

// optional int32 Count = 3;
inline bool ChatMessages::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatMessages::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatMessages::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatMessages::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google_public::protobuf::int32 ChatMessages::count() const {
  // @@protoc_insertion_point(field_get:msg.ChatMessages.Count)
  return count_;
}
inline void ChatMessages::set_count(::google_public::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:msg.ChatMessages.Count)
}

// -------------------------------------------------------------------

// InvitationsForSave

// repeated .msg.Invitation Invitations = 1;
inline int InvitationsForSave::invitations_size() const {
  return invitations_.size();
}
inline void InvitationsForSave::clear_invitations() {
  invitations_.Clear();
}
inline const ::msg::Invitation& InvitationsForSave::invitations(int index) const {
  // @@protoc_insertion_point(field_get:msg.InvitationsForSave.Invitations)
  return invitations_.Get(index);
}
inline ::msg::Invitation* InvitationsForSave::mutable_invitations(int index) {
  // @@protoc_insertion_point(field_mutable:msg.InvitationsForSave.Invitations)
  return invitations_.Mutable(index);
}
inline ::msg::Invitation* InvitationsForSave::add_invitations() {
  // @@protoc_insertion_point(field_add:msg.InvitationsForSave.Invitations)
  return invitations_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::Invitation >&
InvitationsForSave::invitations() const {
  // @@protoc_insertion_point(field_list:msg.InvitationsForSave.Invitations)
  return invitations_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::Invitation >*
InvitationsForSave::mutable_invitations() {
  // @@protoc_insertion_point(field_mutable_list:msg.InvitationsForSave.Invitations)
  return &invitations_;
}

// -------------------------------------------------------------------

// ChatMessageForSave

// repeated .msg.ChatMessages FriendMessage = 1;
inline int ChatMessageForSave::friendmessage_size() const {
  return friendmessage_.size();
}
inline void ChatMessageForSave::clear_friendmessage() {
  friendmessage_.Clear();
}
inline const ::msg::ChatMessages& ChatMessageForSave::friendmessage(int index) const {
  // @@protoc_insertion_point(field_get:msg.ChatMessageForSave.FriendMessage)
  return friendmessage_.Get(index);
}
inline ::msg::ChatMessages* ChatMessageForSave::mutable_friendmessage(int index) {
  // @@protoc_insertion_point(field_mutable:msg.ChatMessageForSave.FriendMessage)
  return friendmessage_.Mutable(index);
}
inline ::msg::ChatMessages* ChatMessageForSave::add_friendmessage() {
  // @@protoc_insertion_point(field_add:msg.ChatMessageForSave.FriendMessage)
  return friendmessage_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages >&
ChatMessageForSave::friendmessage() const {
  // @@protoc_insertion_point(field_list:msg.ChatMessageForSave.FriendMessage)
  return friendmessage_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages >*
ChatMessageForSave::mutable_friendmessage() {
  // @@protoc_insertion_point(field_mutable_list:msg.ChatMessageForSave.FriendMessage)
  return &friendmessage_;
}

// repeated .msg.ChatMessages GroupMessage = 2;
inline int ChatMessageForSave::groupmessage_size() const {
  return groupmessage_.size();
}
inline void ChatMessageForSave::clear_groupmessage() {
  groupmessage_.Clear();
}
inline const ::msg::ChatMessages& ChatMessageForSave::groupmessage(int index) const {
  // @@protoc_insertion_point(field_get:msg.ChatMessageForSave.GroupMessage)
  return groupmessage_.Get(index);
}
inline ::msg::ChatMessages* ChatMessageForSave::mutable_groupmessage(int index) {
  // @@protoc_insertion_point(field_mutable:msg.ChatMessageForSave.GroupMessage)
  return groupmessage_.Mutable(index);
}
inline ::msg::ChatMessages* ChatMessageForSave::add_groupmessage() {
  // @@protoc_insertion_point(field_add:msg.ChatMessageForSave.GroupMessage)
  return groupmessage_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages >&
ChatMessageForSave::groupmessage() const {
  // @@protoc_insertion_point(field_list:msg.ChatMessageForSave.GroupMessage)
  return groupmessage_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::ChatMessages >*
ChatMessageForSave::mutable_groupmessage() {
  // @@protoc_insertion_point(field_mutable_list:msg.ChatMessageForSave.GroupMessage)
  return &groupmessage_;
}

// -------------------------------------------------------------------

// OldChatMessageForSave

// optional .msg.ChatMessages FriendMessage = 1;
inline bool OldChatMessageForSave::has_friendmessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OldChatMessageForSave::set_has_friendmessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OldChatMessageForSave::clear_has_friendmessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OldChatMessageForSave::clear_friendmessage() {
  if (friendmessage_ != NULL) friendmessage_->::msg::ChatMessages::Clear();
  clear_has_friendmessage();
}
inline const ::msg::ChatMessages& OldChatMessageForSave::friendmessage() const {
  // @@protoc_insertion_point(field_get:msg.OldChatMessageForSave.FriendMessage)
  return friendmessage_ != NULL ? *friendmessage_ : *default_instance_->friendmessage_;
}
inline ::msg::ChatMessages* OldChatMessageForSave::mutable_friendmessage() {
  set_has_friendmessage();
  if (friendmessage_ == NULL) friendmessage_ = new ::msg::ChatMessages;
  // @@protoc_insertion_point(field_mutable:msg.OldChatMessageForSave.FriendMessage)
  return friendmessage_;
}
inline ::msg::ChatMessages* OldChatMessageForSave::release_friendmessage() {
  clear_has_friendmessage();
  ::msg::ChatMessages* temp = friendmessage_;
  friendmessage_ = NULL;
  return temp;
}
inline void OldChatMessageForSave::set_allocated_friendmessage(::msg::ChatMessages* friendmessage) {
  delete friendmessage_;
  friendmessage_ = friendmessage;
  if (friendmessage) {
    set_has_friendmessage();
  } else {
    clear_has_friendmessage();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.OldChatMessageForSave.FriendMessage)
}

// optional .msg.ChatMessages GroupMessage = 2;
inline bool OldChatMessageForSave::has_groupmessage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OldChatMessageForSave::set_has_groupmessage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OldChatMessageForSave::clear_has_groupmessage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OldChatMessageForSave::clear_groupmessage() {
  if (groupmessage_ != NULL) groupmessage_->::msg::ChatMessages::Clear();
  clear_has_groupmessage();
}
inline const ::msg::ChatMessages& OldChatMessageForSave::groupmessage() const {
  // @@protoc_insertion_point(field_get:msg.OldChatMessageForSave.GroupMessage)
  return groupmessage_ != NULL ? *groupmessage_ : *default_instance_->groupmessage_;
}
inline ::msg::ChatMessages* OldChatMessageForSave::mutable_groupmessage() {
  set_has_groupmessage();
  if (groupmessage_ == NULL) groupmessage_ = new ::msg::ChatMessages;
  // @@protoc_insertion_point(field_mutable:msg.OldChatMessageForSave.GroupMessage)
  return groupmessage_;
}
inline ::msg::ChatMessages* OldChatMessageForSave::release_groupmessage() {
  clear_has_groupmessage();
  ::msg::ChatMessages* temp = groupmessage_;
  groupmessage_ = NULL;
  return temp;
}
inline void OldChatMessageForSave::set_allocated_groupmessage(::msg::ChatMessages* groupmessage) {
  delete groupmessage_;
  groupmessage_ = groupmessage;
  if (groupmessage) {
    set_has_groupmessage();
  } else {
    clear_has_groupmessage();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.OldChatMessageForSave.GroupMessage)
}

// -------------------------------------------------------------------

// GameRecord

// optional int32 HandID = 1;
inline bool GameRecord::has_handid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameRecord::set_has_handid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameRecord::clear_has_handid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameRecord::clear_handid() {
  handid_ = 0;
  clear_has_handid();
}
inline ::google_public::protobuf::int32 GameRecord::handid() const {
  // @@protoc_insertion_point(field_get:msg.GameRecord.HandID)
  return handid_;
}
inline void GameRecord::set_handid(::google_public::protobuf::int32 value) {
  set_has_handid();
  handid_ = value;
  // @@protoc_insertion_point(field_set:msg.GameRecord.HandID)
}

// optional int32 RoomID = 2;
inline bool GameRecord::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameRecord::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameRecord::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameRecord::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google_public::protobuf::int32 GameRecord::roomid() const {
  // @@protoc_insertion_point(field_get:msg.GameRecord.RoomID)
  return roomid_;
}
inline void GameRecord::set_roomid(::google_public::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:msg.GameRecord.RoomID)
}

// optional int32 PoolSize = 3;
inline bool GameRecord::has_poolsize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameRecord::set_has_poolsize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameRecord::clear_has_poolsize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameRecord::clear_poolsize() {
  poolsize_ = 0;
  clear_has_poolsize();
}
inline ::google_public::protobuf::int32 GameRecord::poolsize() const {
  // @@protoc_insertion_point(field_get:msg.GameRecord.PoolSize)
  return poolsize_;
}
inline void GameRecord::set_poolsize(::google_public::protobuf::int32 value) {
  set_has_poolsize();
  poolsize_ = value;
  // @@protoc_insertion_point(field_set:msg.GameRecord.PoolSize)
}

// repeated string WinnerName = 4;
inline int GameRecord::winnername_size() const {
  return winnername_.size();
}
inline void GameRecord::clear_winnername() {
  winnername_.Clear();
}
inline const ::std::string& GameRecord::winnername(int index) const {
  // @@protoc_insertion_point(field_get:msg.GameRecord.WinnerName)
  return winnername_.Get(index);
}
inline ::std::string* GameRecord::mutable_winnername(int index) {
  // @@protoc_insertion_point(field_mutable:msg.GameRecord.WinnerName)
  return winnername_.Mutable(index);
}
inline void GameRecord::set_winnername(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:msg.GameRecord.WinnerName)
  winnername_.Mutable(index)->assign(value);
}
inline void GameRecord::set_winnername(int index, const char* value) {
  winnername_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GameRecord.WinnerName)
}
inline void GameRecord::set_winnername(int index, const char* value, size_t size) {
  winnername_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GameRecord.WinnerName)
}
inline ::std::string* GameRecord::add_winnername() {
  return winnername_.Add();
}
inline void GameRecord::add_winnername(const ::std::string& value) {
  winnername_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:msg.GameRecord.WinnerName)
}
inline void GameRecord::add_winnername(const char* value) {
  winnername_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:msg.GameRecord.WinnerName)
}
inline void GameRecord::add_winnername(const char* value, size_t size) {
  winnername_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:msg.GameRecord.WinnerName)
}
inline const ::google_public::protobuf::RepeatedPtrField< ::std::string>&
GameRecord::winnername() const {
  // @@protoc_insertion_point(field_list:msg.GameRecord.WinnerName)
  return winnername_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::std::string>*
GameRecord::mutable_winnername() {
  // @@protoc_insertion_point(field_mutable_list:msg.GameRecord.WinnerName)
  return &winnername_;
}

// repeated int32 HoleCard = 5;
inline int GameRecord::holecard_size() const {
  return holecard_.size();
}
inline void GameRecord::clear_holecard() {
  holecard_.Clear();
}
inline ::google_public::protobuf::int32 GameRecord::holecard(int index) const {
  // @@protoc_insertion_point(field_get:msg.GameRecord.HoleCard)
  return holecard_.Get(index);
}
inline void GameRecord::set_holecard(int index, ::google_public::protobuf::int32 value) {
  holecard_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.GameRecord.HoleCard)
}
inline void GameRecord::add_holecard(::google_public::protobuf::int32 value) {
  holecard_.Add(value);
  // @@protoc_insertion_point(field_add:msg.GameRecord.HoleCard)
}
inline const ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >&
GameRecord::holecard() const {
  // @@protoc_insertion_point(field_list:msg.GameRecord.HoleCard)
  return holecard_;
}
inline ::google_public::protobuf::RepeatedField< ::google_public::protobuf::int32 >*
GameRecord::mutable_holecard() {
  // @@protoc_insertion_point(field_mutable_list:msg.GameRecord.HoleCard)
  return &holecard_;
}

// -------------------------------------------------------------------

// GameRecordForSave

// repeated .msg.GameRecord Record = 1;
inline int GameRecordForSave::record_size() const {
  return record_.size();
}
inline void GameRecordForSave::clear_record() {
  record_.Clear();
}
inline const ::msg::GameRecord& GameRecordForSave::record(int index) const {
  // @@protoc_insertion_point(field_get:msg.GameRecordForSave.Record)
  return record_.Get(index);
}
inline ::msg::GameRecord* GameRecordForSave::mutable_record(int index) {
  // @@protoc_insertion_point(field_mutable:msg.GameRecordForSave.Record)
  return record_.Mutable(index);
}
inline ::msg::GameRecord* GameRecordForSave::add_record() {
  // @@protoc_insertion_point(field_add:msg.GameRecordForSave.Record)
  return record_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::GameRecord >&
GameRecordForSave::record() const {
  // @@protoc_insertion_point(field_list:msg.GameRecordForSave.Record)
  return record_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::GameRecord >*
GameRecordForSave::mutable_record() {
  // @@protoc_insertion_point(field_mutable_list:msg.GameRecordForSave.Record)
  return &record_;
}

// optional int32 UserID = 2;
inline bool GameRecordForSave::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameRecordForSave::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameRecordForSave::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameRecordForSave::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google_public::protobuf::int32 GameRecordForSave::userid() const {
  // @@protoc_insertion_point(field_get:msg.GameRecordForSave.UserID)
  return userid_;
}
inline void GameRecordForSave::set_userid(::google_public::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:msg.GameRecordForSave.UserID)
}

// -------------------------------------------------------------------

// CreateRoomInfoForSave

// optional .msg.RoomType RoomType = 1;
inline bool CreateRoomInfoForSave::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomInfoForSave::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomInfoForSave::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomInfoForSave::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::msg::RoomType CreateRoomInfoForSave::roomtype() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfoForSave.RoomType)
  return static_cast< ::msg::RoomType >(roomtype_);
}
inline void CreateRoomInfoForSave::set_roomtype(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:msg.CreateRoomInfoForSave.RoomType)
}

// optional bool IsTournament = 2;
inline bool CreateRoomInfoForSave::has_istournament() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoomInfoForSave::set_has_istournament() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoomInfoForSave::clear_has_istournament() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoomInfoForSave::clear_istournament() {
  istournament_ = false;
  clear_has_istournament();
}
inline bool CreateRoomInfoForSave::istournament() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfoForSave.IsTournament)
  return istournament_;
}
inline void CreateRoomInfoForSave::set_istournament(bool value) {
  set_has_istournament();
  istournament_ = value;
  // @@protoc_insertion_point(field_set:msg.CreateRoomInfoForSave.IsTournament)
}

// optional .msg.RoomInfo RoomInfo = 3;
inline bool CreateRoomInfoForSave::has_roominfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoomInfoForSave::set_has_roominfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoomInfoForSave::clear_has_roominfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoomInfoForSave::clear_roominfo() {
  if (roominfo_ != NULL) roominfo_->::msg::RoomInfo::Clear();
  clear_has_roominfo();
}
inline const ::msg::RoomInfo& CreateRoomInfoForSave::roominfo() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfoForSave.RoomInfo)
  return roominfo_ != NULL ? *roominfo_ : *default_instance_->roominfo_;
}
inline ::msg::RoomInfo* CreateRoomInfoForSave::mutable_roominfo() {
  set_has_roominfo();
  if (roominfo_ == NULL) roominfo_ = new ::msg::RoomInfo;
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomInfoForSave.RoomInfo)
  return roominfo_;
}
inline ::msg::RoomInfo* CreateRoomInfoForSave::release_roominfo() {
  clear_has_roominfo();
  ::msg::RoomInfo* temp = roominfo_;
  roominfo_ = NULL;
  return temp;
}
inline void CreateRoomInfoForSave::set_allocated_roominfo(::msg::RoomInfo* roominfo) {
  delete roominfo_;
  roominfo_ = roominfo;
  if (roominfo) {
    set_has_roominfo();
  } else {
    clear_has_roominfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomInfoForSave.RoomInfo)
}

// optional .msg.RoomProp RoomProp = 4;
inline bool CreateRoomInfoForSave::has_roomprop() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateRoomInfoForSave::set_has_roomprop() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateRoomInfoForSave::clear_has_roomprop() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateRoomInfoForSave::clear_roomprop() {
  if (roomprop_ != NULL) roomprop_->::msg::RoomProp::Clear();
  clear_has_roomprop();
}
inline const ::msg::RoomProp& CreateRoomInfoForSave::roomprop() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfoForSave.RoomProp)
  return roomprop_ != NULL ? *roomprop_ : *default_instance_->roomprop_;
}
inline ::msg::RoomProp* CreateRoomInfoForSave::mutable_roomprop() {
  set_has_roomprop();
  if (roomprop_ == NULL) roomprop_ = new ::msg::RoomProp;
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomInfoForSave.RoomProp)
  return roomprop_;
}
inline ::msg::RoomProp* CreateRoomInfoForSave::release_roomprop() {
  clear_has_roomprop();
  ::msg::RoomProp* temp = roomprop_;
  roomprop_ = NULL;
  return temp;
}
inline void CreateRoomInfoForSave::set_allocated_roomprop(::msg::RoomProp* roomprop) {
  delete roomprop_;
  roomprop_ = roomprop;
  if (roomprop) {
    set_has_roomprop();
  } else {
    clear_has_roomprop();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomInfoForSave.RoomProp)
}

// optional string TemplateSizeName = 5;
inline bool CreateRoomInfoForSave::has_templatesizename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateRoomInfoForSave::set_has_templatesizename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateRoomInfoForSave::clear_has_templatesizename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateRoomInfoForSave::clear_templatesizename() {
  if (templatesizename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatesizename_->clear();
  }
  clear_has_templatesizename();
}
inline const ::std::string& CreateRoomInfoForSave::templatesizename() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfoForSave.TemplateSizeName)
  return *templatesizename_;
}
inline void CreateRoomInfoForSave::set_templatesizename(const ::std::string& value) {
  set_has_templatesizename();
  if (templatesizename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatesizename_ = new ::std::string;
  }
  templatesizename_->assign(value);
  // @@protoc_insertion_point(field_set:msg.CreateRoomInfoForSave.TemplateSizeName)
}
inline void CreateRoomInfoForSave::set_templatesizename(const char* value) {
  set_has_templatesizename();
  if (templatesizename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatesizename_ = new ::std::string;
  }
  templatesizename_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.CreateRoomInfoForSave.TemplateSizeName)
}
inline void CreateRoomInfoForSave::set_templatesizename(const char* value, size_t size) {
  set_has_templatesizename();
  if (templatesizename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatesizename_ = new ::std::string;
  }
  templatesizename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.CreateRoomInfoForSave.TemplateSizeName)
}
inline ::std::string* CreateRoomInfoForSave::mutable_templatesizename() {
  set_has_templatesizename();
  if (templatesizename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatesizename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomInfoForSave.TemplateSizeName)
  return templatesizename_;
}
inline ::std::string* CreateRoomInfoForSave::release_templatesizename() {
  clear_has_templatesizename();
  if (templatesizename_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = templatesizename_;
    templatesizename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateRoomInfoForSave::set_allocated_templatesizename(::std::string* templatesizename) {
  if (templatesizename_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete templatesizename_;
  }
  if (templatesizename) {
    set_has_templatesizename();
    templatesizename_ = templatesizename;
  } else {
    clear_has_templatesizename();
    templatesizename_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomInfoForSave.TemplateSizeName)
}

// optional string TemplateSpeedName = 6;
inline bool CreateRoomInfoForSave::has_templatespeedname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateRoomInfoForSave::set_has_templatespeedname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateRoomInfoForSave::clear_has_templatespeedname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateRoomInfoForSave::clear_templatespeedname() {
  if (templatespeedname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatespeedname_->clear();
  }
  clear_has_templatespeedname();
}
inline const ::std::string& CreateRoomInfoForSave::templatespeedname() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfoForSave.TemplateSpeedName)
  return *templatespeedname_;
}
inline void CreateRoomInfoForSave::set_templatespeedname(const ::std::string& value) {
  set_has_templatespeedname();
  if (templatespeedname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatespeedname_ = new ::std::string;
  }
  templatespeedname_->assign(value);
  // @@protoc_insertion_point(field_set:msg.CreateRoomInfoForSave.TemplateSpeedName)
}
inline void CreateRoomInfoForSave::set_templatespeedname(const char* value) {
  set_has_templatespeedname();
  if (templatespeedname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatespeedname_ = new ::std::string;
  }
  templatespeedname_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.CreateRoomInfoForSave.TemplateSpeedName)
}
inline void CreateRoomInfoForSave::set_templatespeedname(const char* value, size_t size) {
  set_has_templatespeedname();
  if (templatespeedname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatespeedname_ = new ::std::string;
  }
  templatespeedname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.CreateRoomInfoForSave.TemplateSpeedName)
}
inline ::std::string* CreateRoomInfoForSave::mutable_templatespeedname() {
  set_has_templatespeedname();
  if (templatespeedname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    templatespeedname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomInfoForSave.TemplateSpeedName)
  return templatespeedname_;
}
inline ::std::string* CreateRoomInfoForSave::release_templatespeedname() {
  clear_has_templatespeedname();
  if (templatespeedname_ == &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = templatespeedname_;
    templatespeedname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateRoomInfoForSave::set_allocated_templatespeedname(::std::string* templatespeedname) {
  if (templatespeedname_ != &::google_public::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete templatespeedname_;
  }
  if (templatespeedname) {
    set_has_templatespeedname();
    templatespeedname_ = templatespeedname;
  } else {
    clear_has_templatespeedname();
    templatespeedname_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomInfoForSave.TemplateSpeedName)
}

// optional .msg.TournamentInfo TournamentInfo = 7;
inline bool CreateRoomInfoForSave::has_tournamentinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateRoomInfoForSave::set_has_tournamentinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateRoomInfoForSave::clear_has_tournamentinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateRoomInfoForSave::clear_tournamentinfo() {
  if (tournamentinfo_ != NULL) tournamentinfo_->::msg::TournamentInfo::Clear();
  clear_has_tournamentinfo();
}
inline const ::msg::TournamentInfo& CreateRoomInfoForSave::tournamentinfo() const {
  // @@protoc_insertion_point(field_get:msg.CreateRoomInfoForSave.TournamentInfo)
  return tournamentinfo_ != NULL ? *tournamentinfo_ : *default_instance_->tournamentinfo_;
}
inline ::msg::TournamentInfo* CreateRoomInfoForSave::mutable_tournamentinfo() {
  set_has_tournamentinfo();
  if (tournamentinfo_ == NULL) tournamentinfo_ = new ::msg::TournamentInfo;
  // @@protoc_insertion_point(field_mutable:msg.CreateRoomInfoForSave.TournamentInfo)
  return tournamentinfo_;
}
inline ::msg::TournamentInfo* CreateRoomInfoForSave::release_tournamentinfo() {
  clear_has_tournamentinfo();
  ::msg::TournamentInfo* temp = tournamentinfo_;
  tournamentinfo_ = NULL;
  return temp;
}
inline void CreateRoomInfoForSave::set_allocated_tournamentinfo(::msg::TournamentInfo* tournamentinfo) {
  delete tournamentinfo_;
  tournamentinfo_ = tournamentinfo;
  if (tournamentinfo) {
    set_has_tournamentinfo();
  } else {
    clear_has_tournamentinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.CreateRoomInfoForSave.TournamentInfo)
}

// -------------------------------------------------------------------

// ClientUserSetting

// optional int32 LastGroupID = 1;
inline bool ClientUserSetting::has_lastgroupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientUserSetting::set_has_lastgroupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientUserSetting::clear_has_lastgroupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientUserSetting::clear_lastgroupid() {
  lastgroupid_ = 0;
  clear_has_lastgroupid();
}
inline ::google_public::protobuf::int32 ClientUserSetting::lastgroupid() const {
  // @@protoc_insertion_point(field_get:msg.ClientUserSetting.LastGroupID)
  return lastgroupid_;
}
inline void ClientUserSetting::set_lastgroupid(::google_public::protobuf::int32 value) {
  set_has_lastgroupid();
  lastgroupid_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientUserSetting.LastGroupID)
}

// optional .msg.RoomType LastRoomType = 2;
inline bool ClientUserSetting::has_lastroomtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientUserSetting::set_has_lastroomtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientUserSetting::clear_has_lastroomtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientUserSetting::clear_lastroomtype() {
  lastroomtype_ = 0;
  clear_has_lastroomtype();
}
inline ::msg::RoomType ClientUserSetting::lastroomtype() const {
  // @@protoc_insertion_point(field_get:msg.ClientUserSetting.LastRoomType)
  return static_cast< ::msg::RoomType >(lastroomtype_);
}
inline void ClientUserSetting::set_lastroomtype(::msg::RoomType value) {
  assert(::msg::RoomType_IsValid(value));
  set_has_lastroomtype();
  lastroomtype_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientUserSetting.LastRoomType)
}

// optional bool LastIsTournament = 3;
inline bool ClientUserSetting::has_lastistournament() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientUserSetting::set_has_lastistournament() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientUserSetting::clear_has_lastistournament() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientUserSetting::clear_lastistournament() {
  lastistournament_ = false;
  clear_has_lastistournament();
}
inline bool ClientUserSetting::lastistournament() const {
  // @@protoc_insertion_point(field_get:msg.ClientUserSetting.LastIsTournament)
  return lastistournament_;
}
inline void ClientUserSetting::set_lastistournament(bool value) {
  set_has_lastistournament();
  lastistournament_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientUserSetting.LastIsTournament)
}

// optional int32 LastRoomID = 4;
inline bool ClientUserSetting::has_lastroomid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientUserSetting::set_has_lastroomid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientUserSetting::clear_has_lastroomid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientUserSetting::clear_lastroomid() {
  lastroomid_ = 0;
  clear_has_lastroomid();
}
inline ::google_public::protobuf::int32 ClientUserSetting::lastroomid() const {
  // @@protoc_insertion_point(field_get:msg.ClientUserSetting.LastRoomID)
  return lastroomid_;
}
inline void ClientUserSetting::set_lastroomid(::google_public::protobuf::int32 value) {
  set_has_lastroomid();
  lastroomid_ = value;
  // @@protoc_insertion_point(field_set:msg.ClientUserSetting.LastRoomID)
}

// repeated .msg.CreateRoomInfoForSave CreateRoomInfoForSave = 5;
inline int ClientUserSetting::createroominfoforsave_size() const {
  return createroominfoforsave_.size();
}
inline void ClientUserSetting::clear_createroominfoforsave() {
  createroominfoforsave_.Clear();
}
inline const ::msg::CreateRoomInfoForSave& ClientUserSetting::createroominfoforsave(int index) const {
  // @@protoc_insertion_point(field_get:msg.ClientUserSetting.CreateRoomInfoForSave)
  return createroominfoforsave_.Get(index);
}
inline ::msg::CreateRoomInfoForSave* ClientUserSetting::mutable_createroominfoforsave(int index) {
  // @@protoc_insertion_point(field_mutable:msg.ClientUserSetting.CreateRoomInfoForSave)
  return createroominfoforsave_.Mutable(index);
}
inline ::msg::CreateRoomInfoForSave* ClientUserSetting::add_createroominfoforsave() {
  // @@protoc_insertion_point(field_add:msg.ClientUserSetting.CreateRoomInfoForSave)
  return createroominfoforsave_.Add();
}
inline const ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfoForSave >&
ClientUserSetting::createroominfoforsave() const {
  // @@protoc_insertion_point(field_list:msg.ClientUserSetting.CreateRoomInfoForSave)
  return createroominfoforsave_;
}
inline ::google_public::protobuf::RepeatedPtrField< ::msg::CreateRoomInfoForSave >*
ClientUserSetting::mutable_createroominfoforsave() {
  // @@protoc_insertion_point(field_mutable_list:msg.ClientUserSetting.CreateRoomInfoForSave)
  return &createroominfoforsave_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

#ifndef SWIG
namespace google_public {
namespace protobuf {

template <> struct is_proto_enum< ::msg::Language> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::Language>() {
  return ::msg::Language_descriptor();
}
template <> struct is_proto_enum< ::msg::Platform> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::Platform>() {
  return ::msg::Platform_descriptor();
}
template <> struct is_proto_enum< ::msg::Game_Tool_Type> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::Game_Tool_Type>() {
  return ::msg::Game_Tool_Type_descriptor();
}
template <> struct is_proto_enum< ::msg::Status> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::Status>() {
  return ::msg::Status_descriptor();
}
template <> struct is_proto_enum< ::msg::Sex> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::Sex>() {
  return ::msg::Sex_descriptor();
}
template <> struct is_proto_enum< ::msg::VersionStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::VersionStatus>() {
  return ::msg::VersionStatus_descriptor();
}
template <> struct is_proto_enum< ::msg::PropertyType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::PropertyType>() {
  return ::msg::PropertyType_descriptor();
}
template <> struct is_proto_enum< ::msg::VerificationType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::VerificationType>() {
  return ::msg::VerificationType_descriptor();
}
template <> struct is_proto_enum< ::msg::RequestType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::RequestType>() {
  return ::msg::RequestType_descriptor();
}
template <> struct is_proto_enum< ::msg::MessageType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MessageType>() {
  return ::msg::MessageType_descriptor();
}
template <> struct is_proto_enum< ::msg::MessageStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MessageStatus>() {
  return ::msg::MessageStatus_descriptor();
}
template <> struct is_proto_enum< ::msg::InvitationStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::InvitationStatus>() {
  return ::msg::InvitationStatus_descriptor();
}
template <> struct is_proto_enum< ::msg::GroupType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::GroupType>() {
  return ::msg::GroupType_descriptor();
}
template <> struct is_proto_enum< ::msg::GroupUserStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::GroupUserStatus>() {
  return ::msg::GroupUserStatus_descriptor();
}
template <> struct is_proto_enum< ::msg::GroupSearchType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::GroupSearchType>() {
  return ::msg::GroupSearchType_descriptor();
}
template <> struct is_proto_enum< ::msg::RoomType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::RoomType>() {
  return ::msg::RoomType_descriptor();
}
template <> struct is_proto_enum< ::msg::MomentDisplayType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MomentDisplayType>() {
  return ::msg::MomentDisplayType_descriptor();
}
template <> struct is_proto_enum< ::msg::CommentType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::CommentType>() {
  return ::msg::CommentType_descriptor();
}
template <> struct is_proto_enum< ::msg::SittingStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::SittingStatus>() {
  return ::msg::SittingStatus_descriptor();
}
template <> struct is_proto_enum< ::msg::GameStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::GameStatus>() {
  return ::msg::GameStatus_descriptor();
}
template <> struct is_proto_enum< ::msg::ActionChoice> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::ActionChoice>() {
  return ::msg::ActionChoice_descriptor();
}
template <> struct is_proto_enum< ::msg::ActionStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::ActionStatus>() {
  return ::msg::ActionStatus_descriptor();
}
template <> struct is_proto_enum< ::msg::ChoiceType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::ChoiceType>() {
  return ::msg::ChoiceType_descriptor();
}
template <> struct is_proto_enum< ::msg::TournamentStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::TournamentStatus>() {
  return ::msg::TournamentStatus_descriptor();
}
template <> struct is_proto_enum< ::msg::OFCRule> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::OFCRule>() {
  return ::msg::OFCRule_descriptor();
}
template <> struct is_proto_enum< ::msg::OFCCardType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::OFCCardType>() {
  return ::msg::OFCCardType_descriptor();
}
template <> struct is_proto_enum< ::msg::OFCActionStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::OFCActionStatus>() {
  return ::msg::OFCActionStatus_descriptor();
}
template <> struct is_proto_enum< ::msg::OFCCardLocation> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::OFCCardLocation>() {
  return ::msg::OFCCardLocation_descriptor();
}
template <> struct is_proto_enum< ::msg::MahjongFuType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MahjongFuType>() {
  return ::msg::MahjongFuType_descriptor();
}
template <> struct is_proto_enum< ::msg::MahjongPosition> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MahjongPosition>() {
  return ::msg::MahjongPosition_descriptor();
}
template <> struct is_proto_enum< ::msg::MahjongCard> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MahjongCard>() {
  return ::msg::MahjongCard_descriptor();
}
template <> struct is_proto_enum< ::msg::SiChuanMahjongRule> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::SiChuanMahjongRule>() {
  return ::msg::SiChuanMahjongRule_descriptor();
}
template <> struct is_proto_enum< ::msg::SiChuanMahjongWinType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::SiChuanMahjongWinType>() {
  return ::msg::SiChuanMahjongWinType_descriptor();
}
template <> struct is_proto_enum< ::msg::MahjongCardSwitchType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MahjongCardSwitchType>() {
  return ::msg::MahjongCardSwitchType_descriptor();
}
template <> struct is_proto_enum< ::msg::MahjongCardZone> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MahjongCardZone>() {
  return ::msg::MahjongCardZone_descriptor();
}
template <> struct is_proto_enum< ::msg::MahjongRequestType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MahjongRequestType>() {
  return ::msg::MahjongRequestType_descriptor();
}
template <> struct is_proto_enum< ::msg::MahjongActionChoice> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MahjongActionChoice>() {
  return ::msg::MahjongActionChoice_descriptor();
}
template <> struct is_proto_enum< ::msg::MahjongSuit> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MahjongSuit>() {
  return ::msg::MahjongSuit_descriptor();
}
template <> struct is_proto_enum< ::msg::PokerStepType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::PokerStepType>() {
  return ::msg::PokerStepType_descriptor();
}
template <> struct is_proto_enum< ::msg::PokerRoundType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::PokerRoundType>() {
  return ::msg::PokerRoundType_descriptor();
}
template <> struct is_proto_enum< ::msg::BlindType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::BlindType>() {
  return ::msg::BlindType_descriptor();
}
template <> struct is_proto_enum< ::msg::OFCStepType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::OFCStepType>() {
  return ::msg::OFCStepType_descriptor();
}
template <> struct is_proto_enum< ::msg::HandType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::HandType>() {
  return ::msg::HandType_descriptor();
}
template <> struct is_proto_enum< ::msg::ServerType> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::ServerType>() {
  return ::msg::ServerType_descriptor();
}
template <> struct is_proto_enum< ::msg::RoomStatus> : ::google_public::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::RoomStatus>() {
  return ::msg::RoomStatus_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_2eproto__INCLUDED
